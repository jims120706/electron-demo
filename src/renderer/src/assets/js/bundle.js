var __reflect =
    (this && this.__reflect) ||
    function (t, e, i) {
      (t.__class__ = e),
        i ? i.push(e) : (i = [e]),
        (t.__types__ = t.__types__ ? i.concat(t.__types__) : i);
    },
  __extends =
    (this && this.__extends) ||
    function (t, e) {
      function i() {
        this.constructor = t;
      }
      for (var a in e) e.hasOwnProperty(a) && (t[a] = e[a]);
      (i.prototype = e.prototype), (t.prototype = new i());
    },
  __awaiter =
    (this && this.__awaiter) ||
    function (t, e, i, a) {
      return new (i || (i = Promise))(function (n, s) {
        function r(t) {
          try {
            h(a.next(t));
          } catch (e) {
            s(e);
          }
        }
        function o(t) {
          try {
            h(a["throw"](t));
          } catch (e) {
            s(e);
          }
        }
        function h(t) {
          t.done
            ? n(t.value)
            : new i(function (e) {
                e(t.value);
              }).then(r, o);
        }
        h((a = a.apply(t, e || [])).next());
      });
    },
  __generator =
    (this && this.__generator) ||
    function (t, e) {
      function i(t) {
        return function (e) {
          return a([t, e]);
        };
      }
      function a(i) {
        if (n) throw new TypeError("Generator is already executing.");
        for (; h; )
          try {
            if (
              ((n = 1),
              s &&
                (r = s[2 & i[0] ? "return" : i[0] ? "throw" : "next"]) &&
                !(r = r.call(s, i[1])).done)
            )
              return r;
            switch (((s = 0), r && (i = [0, r.value]), i[0])) {
              case 0:
              case 1:
                r = i;
                break;
              case 4:
                return (
                  h.label++,
                  {
                    value: i[1],
                    done: !1,
                  }
                );
              case 5:
                h.label++, (s = i[1]), (i = [0]);
                continue;
              case 7:
                (i = h.ops.pop()), h.trys.pop();
                continue;
              default:
                if (
                  ((r = h.trys),
                  !(r = r.length > 0 && r[r.length - 1]) &&
                    (6 === i[0] || 2 === i[0]))
                ) {
                  h = 0;
                  continue;
                }
                if (3 === i[0] && (!r || (i[1] > r[0] && i[1] < r[3]))) {
                  h.label = i[1];
                  break;
                }
                if (6 === i[0] && h.label < r[1]) {
                  (h.label = r[1]), (r = i);
                  break;
                }
                if (r && h.label < r[2]) {
                  (h.label = r[2]), h.ops.push(i);
                  break;
                }
                r[2] && h.ops.pop(), h.trys.pop();
                continue;
            }
            i = e.call(t, h);
          } catch (a) {
            (i = [6, a]), (s = 0);
          } finally {
            n = r = 0;
          }
        if (5 & i[0]) throw i[1];
        return {
          value: i[0] ? i[1] : void 0,
          done: !0,
        };
      }
      var n,
        s,
        r,
        o,
        h = {
          label: 0,
          sent: function () {
            if (1 & r[0]) throw r[1];
            return r[1];
          },
          trys: [],
          ops: [],
        };
      return (
        (o = {
          next: i(0),
          throw: i(1),
          return: i(2),
        }),
        "function" == typeof Symbol &&
          (o[Symbol.iterator] = function () {
            return this;
          }),
        o
      );
    },
  Message = (function () {
    function t() {}
    return (
      Object.defineProperty(t.prototype, "type", {
        get: function () {
          return this.iType;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(t.prototype, "messageID", {
        get: function () {
          return this.lMessageID;
        },
        set: function (t) {
          this.lMessageID = t;
        },
        enumerable: !0,
        configurable: !0,
      }),
      (t.prototype.bytesToMessage = function (t) {}),
      (t.prototype.messageToBytes = function () {
        return null;
      }),
      (t.prototype.createMessageId = function () {
        return 1e4 * TimerUtils.getTime() + Math.ceil(1e4 * Math.random());
      }),
      (t.prototype.send = function (t) {
        var e = this.messageToBytes();
        (e.position = 0), t.writeBytes(e, 0, e.bytesAvailable);
      }),
      (t.prototype.toString = function () {
        return null;
      }),
      t
    );
  })();
__reflect(Message.prototype, "Message");
var UserMessage = (function (t) {
  function e(e) {
    void 0 === e && (e = 0);
    var i = t.call(this) || this;
    return (
      (i.iType = MessageUtils.USER_MESSAGE),
      (i.userid = e),
      (i.lMessageID = i.createMessageId()),
      i
    );
  }
  return (
    __extends(e, t),
    (e.prototype.toString = function () {
      return "UserMessage<userid:" + this.userid + ">";
    }),
    (e.EVENT_NAME = "USER_MESSAGE"),
    e
  );
})(Message);
__reflect(UserMessage.prototype, "UserMessage");
var MiCardSet = (function () {
  function t(t, e, i, a, n, s) {
    this.update(t, e, i, a, n, s);
  }
  return (
    (t.prototype.update = function (t, e, i, a, n, s) {
      (this.ismiCard = t),
        (this.anyway = e),
        (this.banker = i),
        (this.bankerAnd = a),
        (this.isPasswd = n),
        (this.passwd = s);
    }),
    (t.OK = 1),
    (t.NO = 0),
    t
  );
})();
__reflect(MiCardSet.prototype, "MiCardSet");
var dzxx;
!(function (t) {
  var e = (function (t) {
    function e() {
      return t.call(this) || this;
    }
    return (
      __extends(e, t),
      (e.prototype.obupdata = function () {}),
      (e.prototype.resize = function () {}),
      (e.prototype.initConfig = function () {}),
      (e.prototype.show = function (t) {
        this.m_infoAny = t;
      }),
      (e.prototype.getData = function () {
        return this.m_infoAny;
      }),
      (e.prototype.getcol = function () {
        return this.m_col;
      }),
      (e.prototype.getrow = function () {
        return this.m_row;
      }),
      (e.prototype.setcol = function (t) {
        this.m_col = t;
      }),
      (e.prototype.setrow = function (t) {
        this.m_row = t;
      }),
      (e.prototype.updata = function (t) {}),
      (e.prototype.destroy = function () {}),
      e
    );
  })(egret.Sprite);
  (t.ScreenAbstract = e),
    __reflect(e.prototype, "dzxx.ScreenAbstract", [
      "dzxx.Iscreen",
      "dzxx.Iobserver",
      "dzxx.Iresize",
    ]);
})(dzxx || (dzxx = {}));
var BetMessage = (function (t) {
  function e(e, i, a, n, s, r, o, h) {
    void 0 === e && (e = 0),
      void 0 === i && (i = 0),
      void 0 === a && (a = null),
      void 0 === n && (n = null),
      void 0 === s && (s = 0),
      void 0 === r && (r = 0),
      void 0 === o && (o = -1),
      void 0 === h && (h = -1);
    var l = t.call(this) || this;
    return (
      (l.tableid = 0),
      (l.sbanker = 0),
      (l.gamblingnum = 0),
      (l.xAxis = -1),
      (l.yAxis = -1),
      (l.iType = MessageUtils.BET_MESSAGE),
      (l.userid = e),
      (l.tableid = i),
      (l.option = a),
      (l.amount = n),
      (l.sbanker = s),
      (l.gamblingnum = r),
      (l.lMessageID = l.createMessageId()),
      (l.xAxis = o),
      (l.yAxis = h),
      l
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      var e = 0,
        i = 0,
        a = 0;
      for (
        this.userid = MessageUtils.readLong(t),
          this.tableid = MessageUtils.readLong(t),
          i = t.readInt(),
          this.option = 0 == i ? null : new Array(),
          a = 0;
        i > a;
        a++
      )
        (e = t.readInt()), (this.option[a] = t.readUTFBytes(e));
      for (
        i = t.readInt(), this.amount = 0 == i ? null : new Array(), a = 0;
        i > a;
        a++
      )
        this.amount[a] = t.readDouble();
      (this.sbanker = t.readInt()),
        (this.gamblingnum = t.readInt()),
        (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.messageToBytes = function () {
      var t = new egret.ByteArray(),
        e =
          28 +
          (this.option.join("").length + 4 * this.option.length) +
          4 +
          8 * this.amount.length +
          4 +
          4 +
          8 +
          8 +
          8,
        i = 0;
      for (
        t.writeInt(this.iType),
          t.writeInt(e),
          MessageUtils.writeLong(t, this.userid),
          MessageUtils.writeLong(t, this.tableid),
          t.writeInt(this.option.length),
          i = 0;
        null != this.option && i < this.option.length;
        i++
      )
        null != this.option[i] &&
          this.option[i].length > 0 &&
          (t.writeInt(this.option[i].length), t.writeUTFBytes(this.option[i]));
      for (
        t.writeInt(this.amount.length), i = 0;
        null != this.amount && i < this.amount.length;
        i++
      )
        t.writeDouble(this.amount[i]);
      return (
        t.writeInt(this.sbanker),
        t.writeInt(this.gamblingnum),
        MessageUtils.writeLong(t, this.lMessageID),
        t.writeDouble(new Date().getMinutes()),
        t.writeDouble(new Date().getSeconds()),
        (t.position = 0),
        t
      );
    }),
    (e.prototype.toString = function () {
      return (
        "BetMessage<userid:" +
        this.userid +
        ", tableid:" +
        this.tableid +
        ", option:" +
        this.option +
        ", amount:" +
        this.amount +
        ", sbanker:" +
        this.sbanker +
        ", gamblingnum:" +
        this.gamblingnum +
        ">"
      );
    }),
    (e.EVENT_NAME_static_net_BetMessage = "BET_MESSAGE"),
    e
  );
})(UserMessage);
__reflect(BetMessage.prototype, "BetMessage");
var TableMessage = (function (t) {
  function e(e) {
    void 0 === e && (e = 0);
    var i = t.call(this) || this;
    return (
      (i.iType = MessageUtils.TABLE_MESSAGE),
      (i.tableid = e),
      (i.lMessageID = i.createMessageId()),
      i
    );
  }
  return (
    __extends(e, t),
    (e.prototype.toString = function () {
      return "TableMessage<tableid:" + this.tableid + ">";
    }),
    (e.EVENT_NAME = "TABLE_MESSAGE"),
    e
  );
})(Message);
__reflect(TableMessage.prototype, "TableMessage");
var route;
!(function (t) {
  var e = (function (e) {
    function i(t, i) {
      void 0 === t && (t = !0), void 0 === i && (i = 0);
      var a = e.call(this) || this;
      return (
        (a.col = 0),
        (a.row = 0),
        (a.w = 0),
        (a.h = 0),
        (a.span = 0),
        (a.offX = 0),
        (a.offY = 0),
        (a.outerColor = 0),
        (a.innerColor = 0),
        (a.gridLayer = new egret.Sprite()),
        (a.showNumText = !0),
        (a._typeIndex = 0),
        (a.nTmpWinner = 0),
        (a.spriteContainer = new egret.Sprite()),
        (a.canDraw = !1),
        (a.firstShow = !0),
        (a.showNumText = t),
        (a._typeIndex = i),
        a
      );
    }
    return (
      __extends(i, e),
      (i.prototype.init = function (t, e, i, a, n, s, r, o, h, l, g, u, c, d) {
        void 0 === g && (g = 0.5),
          void 0 === u && (u = 0.5),
          void 0 === c && (c = 13421772),
          void 0 === d && (d = 13421772),
          (this.col = t),
          (this.row = e),
          (this.w = i),
          (this.h = a),
          (this.span = n),
          (this.checkerClass = s),
          (this.checkerWidth = r),
          (this.checkerHeight = o),
          (this.offX = h),
          (this.offY = l),
          (this.cellWidth = this.w / t),
          (this.cellHeight = this.h / e),
          (this.outerThickness = g),
          (this.innerThickness = u),
          (this.outerColor = c),
          (this.innerColor = d),
          (this.checkers = new Array());
        for (var p = 0; t > p; ++p) this.initCol(p);
        (this.gridLayer.touchChildren = !1),
          (this.gridLayer.touchEnabled = !1),
          this.initSpriteContainer();
      }),
      (i.prototype.initSpriteContainer = function () {
        this.spriteContainer || (this.spriteContainer = new egret.Sprite()),
          this.canDraw &&
            ((this.spriteContainer.touchChildren = !1),
            (this.spriteContainer.touchEnabled = !0)),
          this.addChild(this.spriteContainer);
      }),
      (i.prototype.initCol = function (t) {
        (t = t), (this.checkers[t] = new Array(this.row, !0));
        for (var e = 0; e < this.row; ++e) {
          var i = new this.checkerClass();
          isNaN(this.checkerWidth) ||
            isNaN(this.checkerHeight) ||
            ((i.width = this.checkerWidth), (i.height = this.checkerHeight)),
            (this.checkers[t][e] = i);
        }
      }),
      (i.prototype.dispose = function () {
        this.clearCheckers(!0),
          (this.routeDatum = null),
          this.checkers && ((this.checkers.length = 0), (this.checkers = null)),
          this.gridLayer.parent &&
            this.gridLayer.parent.removeChild(this.gridLayer),
          DScrollMouseDownMove.getInstance().remove(this.spriteContainer),
          this.removeChildren(),
          (this.checkerClass = null),
          (this.gridLayer = null),
          this.tween && (this.tween.kill(), (this.tween = null)),
          this.timer &&
            (this.timer.removeEventListener(
              egret.TimerEvent.TIMER,
              this.onTimer,
              this,
            ),
            this.timer.stop(),
            (this.timer = null)),
          (this.spriteContainer = null);
      }),
      (i.prototype.drawGrids = function () {
        this.gridLayer.graphics.clear(),
          this.gridLayer.graphics.beginFill(16711680, 1);
        var t;
        for (t = 0; t <= this.row; t += this.span)
          0 == t || t == this.row
            ? this.gridLayer.graphics.lineStyle(
                this.outerThickness,
                this.outerColor,
              )
            : this.gridLayer.graphics.lineStyle(
                this.innerThickness,
                this.innerColor,
              ),
            this.gridLayer.graphics.moveTo(0, t * this.cellHeight),
            this.gridLayer.graphics.lineTo(this.w, t * this.cellHeight);
        for (t = 0; t <= this.col; t += this.span)
          0 == t || t == this.col
            ? this.gridLayer.graphics.lineStyle(
                this.outerThickness,
                this.outerColor,
              )
            : this.gridLayer.graphics.lineStyle(
                this.innerThickness,
                this.innerColor,
              ),
            this.gridLayer.graphics.moveTo(t * this.cellWidth, 0),
            this.gridLayer.graphics.lineTo(t * this.cellWidth, this.h);
        this.gridLayer.graphics.endFill();
      }),
      (i.prototype.clearCheckers = function (t) {
        if ((void 0 === t && (t = !1), this.checkers)) {
          for (var e = void 0, i = 0; i < this.checkers.length; ++i)
            for (var a = 0; a < this.row; ++a)
              null != this.checkers &&
                null != this.checkers[i] &&
                null != this.checkers[i][a] &&
                ((e = this.checkers[i][a]),
                e.parent && this.spriteContainer.removeChild(e),
                (e.attached = null),
                t && ((e = null), (this.checkers[i][a] = null)));
          (e = null),
            this.checkers.splice(0, this.checkers.length - this.col),
            t && (this.checkers = null);
        }
        this.spriteContainer &&
          (DScrollMouseDownMove.getInstance().remove(this.spriteContainer),
          this.spriteContainer.removeChildren(),
          (this.spriteContainer.mask = null),
          this.spriteContainer.parent &&
            this.spriteContainer.parent.removeChild(this.spriteContainer)),
          (this.spriteContainer = null),
          t || this.initSpriteContainer();
      }),
      (i.prototype.draw = function (e, i) {
        if ((this.clearCheckers(), this.checkers)) {
          var a = this.routeDatum ? this.routeDatum.length : 0;
          a > this.col &&
            this.canDraw &&
            (this.routeDatum.splice(0, a - this.col), (a = this.col));
          var n,
            s,
            r = 0,
            o = 0;
          new t.NewRoad().updateRoad(
            this.routeDatum,
            this.checkers,
            !this.showNumText,
            this.row,
            this.col,
            {
              checkerClass: this.checkerClass,
              checkerWidth: this.checkerWidth,
              checkerHeight: this.checkerHeight,
              canDraw: this.canDraw,
            },
          ),
            null != this.checkers &&
              this.checkers.length > this.col &&
              this.canDraw &&
              this.checkers.splice(0, this.checkers.length - this.col);
          var h = null;
          for (r = 0; r < this.checkers.length; ++r)
            for (o = 0; o < this.row; ++o) {
              if (((n = this.checkers[r][o]), (h = n.attached))) {
                (n.x = r * this.cellWidth + this.offX),
                  (n.y = o * this.cellHeight + this.offY);
                try {
                  if (null != h.text && this.showNumText) {
                    var l = new egret.TextField();
                    (l.textColor =
                      1 == h.winner ? 16711680 : 2 == h.winner ? 255 : 218174),
                      i &&
                        (l.textColor =
                          1 == h.winner
                            ? 255
                            : 2 == h.winner
                              ? 16711680
                              : 218174),
                      (l.text = h.text),
                      (l.size = 18),
                      (l.x = n.x - (parseInt(h.text) > 9 ? 3 : 0)),
                      (l.y = n.y - 2),
                      (l.touchEnabled = !1),
                      this.isSmall() && ((l.x -= 0.5), (l.y += 0.5)),
                      this.spriteContainer.addChildAt(l, 0);
                  } else
                    n.show(
                      h.winner,
                      h.playerPair,
                      h.bankerPair,
                      h.isLucky6,
                      h.tileCount,
                      h.tileCountBefore,
                      DataManager.LANG_TYPE,
                      i ? "DT" : "",
                    ),
                      (n.visible = h.winner > 0),
                      n.x >= 0 && this.spriteContainer.addChildAt(n, 0);
                } catch (g) {
                  DebugText.appendText("routepanelerror: " + g);
                }
              }
              (h = null), (n = null);
            }
          this.onTimer(null),
            e &&
              this.routeDatum.length > 0 &&
              !this.firstShow &&
              ((s = this.routeDatum[this.routeDatum.length - 1]),
              s &&
                s.length > 0 &&
                s[s.length - 1].checker &&
                (this.tween ||
                  ((this.tween = TweenMax.to(s[s.length - 1].checker)),
                  (this.timer = new egret.Timer(3e3, 1)),
                  this.timer.addEventListener(
                    egret.TimerEvent.TIMER,
                    this.onTimer,
                    this,
                  ),
                  this.timer.start()))),
            this.routeDatum.length > 0
              ? ((s = this.routeDatum[this.routeDatum.length - 1]),
                s && s.length > 0
                  ? (this.nTmpWinner = s[s.length - 1].winner)
                  : (this.nTmpWinner = 0))
              : (this.nTmpWinner = 0),
            this.canDraw && this.checkers.length > this.col
              ? ((this.spriteContainer.x =
                  this.w - this.cellWidth * this.checkers.length - this.offX),
                this.spriteContainer.graphics.clear(),
                this.spriteContainer.graphics.beginFill(16711680, 0),
                this.spriteContainer.graphics.drawRect(
                  0,
                  0,
                  this.cellWidth * this.checkers.length,
                  this.h,
                ),
                this.spriteContainer.graphics.endFill(),
                (this.spriteContainer.name =
                  "spriteContainer_road_" + this.cellWidth),
                DScrollMouseDownMove.getInstance().add(
                  this.spriteContainer,
                  !0,
                  !1,
                ))
              : (this.spriteContainer.x = 0),
            (s = null),
            (this.firstShow = !1);
        }
      }),
      (i.prototype.isSmall = function () {
        return (
          2 == this._typeIndex || 3 == this._typeIndex || 4 == this._typeIndex
        );
      }),
      (i.prototype.onTimer = function (t) {
        this.timer &&
          (this.timer.removeEventListener(
            egret.TimerEvent.TIMER,
            this.onTimer,
            this,
          ),
          this.timer.stop(),
          (this.timer = null)),
          this.tween &&
            (this.tween.target && (this.tween.target.alpha = 1),
            this.tween.kill(),
            (this.tween = null));
      }),
      (i.prototype.seekRoute = function (t, e, i, a) {
        if (((t = t), (e = e), (i = i), (a = a), 0 > t || 3 > e)) return !1;
        var n,
          s,
          r = this.checkers[t][e].attached;
        if (
          (r ||
            ((r = this.checkers[t][e - 1].attached),
            r && r.winner != i && (r = null)),
          r)
        ) {
          var o = this.routeDatum[r.colIndex],
            h = e - (r.winner == i ? 1 : 0),
            l = o.length - h;
          if (2 >= e + 1) return !1;
          if (!this.seekRoute(t - 1, h - 1, r.winner, l)) return !1;
          for (var g = 0; l > g; ++g)
            o[h + g] &&
              o[h + g].checker &&
              ((o[h + g].checker.attached = null),
              (n = this.checkers[t - 1 - g][h - 1]),
              (o[h + g].checker = n),
              (n.attached = o[h + g]),
              t - 1 - g - 2 >= 0 &&
                ((s = this.checkers[t - 1 - g - 2][h - 1]),
                s.attached &&
                  s.attached.winner == n.attached.winner &&
                  ((o[h + g].text = l - g + ""), (n.attached = o[h + g]))),
              t - 1 - g - 1 >= 0 &&
                ((s = this.checkers[t - 1 - g - 1][h - 1]),
                s.attached &&
                  s.attached.winner == n.attached.winner &&
                  (n.attached = null)));
        }
        return 0 == --a ? !0 : this.seekRoute(t - 1, e, i, a);
      }),
      (i.prototype.getArrayLength = function (t) {
        for (var e = 0, i = 0; i < t.length; i++) {
          if (null == t[i]) return e;
          null != t[i].text ? (e += parseInt(t[i].text)) : e++;
        }
        return e;
      }),
      i
    );
  })(egret.Sprite);
  (t.AbstractRoutePane = e), __reflect(e.prototype, "route.AbstractRoutePane");
})(route || (route = {}));
var route;
!(function (t) {
  var e = (function (e) {
    function i(i, a, n, s, r, o, h, l) {
      void 0 === i && (i = !0),
        void 0 === a && (a = 1),
        void 0 === n && (n = !0),
        void 0 === s && (s = !0),
        void 0 === r && (r = !1),
        void 0 === o && (o = 6),
        void 0 === h && (h = 6),
        void 0 === l && (l = 0);
      var g = e.call(this) || this;
      return (
        (g.route0 = new t.AbstractRoutePane(!1)),
        (g.route1 = new t.AbstractRoutePane(!0, 1)),
        (g.route2 = new t.Route2Pane()),
        (g.route3 = new t.Route3Pane()),
        (g.route4 = new t.Route4Pane()),
        (g.gridLayer = new egret.Shape()),
        (g.bigFlag = !1),
        (g.lobbyFlag = !1),
        (g.lastData = new Array()),
        (g._isBlink = !1),
        (g._dragonTiger = !1),
        (g.showGood = !1),
        (g.lobbyid = 0),
        (g.cur_col = 6),
        (g.cur_row = 6),
        (g.cur_type = 0),
        (g.is_change = !1),
        (g.lobbyid = a),
        (g.bigFlag = i),
        (g.lobbyFlag = n),
        (g.touchEnabled = !1),
        r
          ? g
          : ((g.showGood = !1),
            (g.route0.canDraw = s),
            (g.route1.canDraw = s),
            (g.route2.canDraw = s),
            (g.route3.canDraw = s),
            (g.route4.canDraw = s),
            (g.cur_col = o),
            (g.cur_row = h),
            (g.cur_type = l),
            LangUtils.addEventListener(g.changeLang, g),
            g)
      );
    }
    return (
      __extends(i, e),
      (i.prototype.changeRoteType = function (t) {
        void 0 === t && (t = 0),
          t != this.cur_type &&
            ((this.is_change = !0),
            (this.cur_type = t),
            this.clearAllLines(),
            this.removeChildren(),
            this.lobbyBacc(),
            this.parseDatum(
              this.lastData,
              this._isBlink,
              this._dragonTiger,
              !0,
            ));
      }),
      Object.defineProperty(i.prototype, "roteType", {
        get: function () {
          return this.cur_type;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "pw", {
        get: function () {
          return this.parent ? this.parent.width : 200;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "ph", {
        get: function () {
          return this.parent ? this.parent.height : 100;
        },
        enumerable: !0,
        configurable: !0,
      }),
      (i.prototype.lobbyBacc = function () {
        0 == this.cur_type;
        var t = GameUtils.routeSize,
          e = Math.ceil((this.pw - 6 * t) / (t / 2)),
          i = GameUtils.getRouteCol(this.pw, 0) - 6,
          a = [6, 2 * i, 4 * i, 2 * i, 2 * i];
        this.is_change &&
          1 == this.cur_type &&
          (a = [6, 3 * i + 2, 6 * i, 3 * i, 4 * i]),
          this.is_change ||
            1 != this.cur_type ||
            (a = [6, 3 * i + 4, 6 * i, 3 * i, 4 * i]),
          3 == this.cur_type && (a = [6, 3 * i + 4, 6 * i, 3 * i, 4 * i]),
          this.addChild(this.gridLayer),
          1 == this.cur_type ||
            3 == this.cur_type ||
            (0 == this.cur_type &&
              (this.route0.init(
                a[0],
                6,
                a[0] * t,
                6 * t,
                0,
                com.fontana.route.RsltCheckerS,
                t - 2,
                t - 2,
                1,
                1,
              ),
              this.addChild(this.route0))),
          1 == this.cur_type || 3 == this.cur_type
            ? (this.route1.init(
                a[1],
                6,
                a[1] * (t / 2),
                3 * t,
                0,
                com.fontana.route.Rt1CheckerS,
                t / 2 - 2,
                t / 2 - 2,
                1,
                1,
              ),
              (this.route1.x = 0),
              (this.route1.y = 0),
              this.addChild(this.route1))
            : (this.route1.init(
                a[1],
                6,
                a[1] * (t / 2),
                3 * t,
                0,
                com.fontana.route.Rt1CheckerS,
                t / 2 - 2,
                t / 2 - 2,
                1,
                1,
              ),
              (this.route1.x = this.route0.w - 1),
              (this.route1.y = 0),
              this.addChild(this.route1)),
          1 == this.cur_type
            ? (this.route2.init(
                a[2],
                6,
                a[2] * (t / 2 / 2),
                (3 * t) / 2,
                0,
                com.fontana.route.Rt2CheckerS,
                t / 2 / 2,
                t / 2 / 2,
                0,
                0,
              ),
              (this.route2.x = 0),
              (this.route2.y = this.route1.h),
              this.addChild(this.route2))
            : 3 == this.cur_type
              ? (this.route2.init(
                  a[2],
                  6,
                  a[2] * (t / 2 / 2),
                  (3 * t) / 2,
                  0,
                  com.fontana.route.Rt2CheckerS,
                  t / 2 / 2,
                  t / 2 / 2,
                  0,
                  0,
                ),
                (this.route2.x = 0),
                (this.route2.y = this.route1.h + this.route2.h),
                this.addChild(this.route2))
              : (this.route2.init(
                  a[2],
                  6,
                  a[2] * (t / 2 / 2),
                  (3 * t) / 2,
                  0,
                  com.fontana.route.Rt2CheckerS,
                  t / 2 / 2,
                  t / 2 / 2,
                  0,
                  0,
                ),
                (this.route2.x = this.route0.w),
                (this.route2.y = this.route1.h),
                this.addChild(this.route2)),
          1 == this.cur_type
            ? (this.route3.init(
                a[3],
                6,
                a[3] * (t / 2 / 2),
                (3 * t) / 2,
                0,
                com.fontana.route.Rt3CheckerS,
                t / 2 / 2,
                t / 2 / 2,
                0,
                0,
              ),
              (this.route3.x = 0),
              (this.route3.y = this.route1.h + this.route2.h),
              this.addChild(this.route3))
            : 3 == this.cur_type
              ? (this.route3.init(
                  a[3],
                  6,
                  a[3] * (t / 2 / 2),
                  (3 * t) / 2,
                  0,
                  com.fontana.route.Rt3CheckerS,
                  t / 2 / 2,
                  t / 2 / 2,
                  0,
                  0,
                ),
                (this.route3.x = 0),
                (this.route3.y = this.route1.h),
                this.addChild(this.route3))
              : (this.route3.init(
                  a[3],
                  6,
                  a[3] * (t / 2 / 2),
                  (3 * t) / 2,
                  0,
                  com.fontana.route.Rt3CheckerS,
                  t / 2 / 2,
                  t / 2 / 2,
                  0,
                  0,
                ),
                (this.route3.x = this.route0.w),
                (this.route3.y = this.route1.h + this.route2.h),
                this.addChild(this.route3)),
          1 == this.cur_type
            ? (this.route4.init(
                a[4],
                6,
                a[4] * (t / 2 / 2),
                (3 * t) / 2,
                0,
                com.fontana.route.Rt4CheckerS,
                t / 2 / 2,
                t / 2 / 2,
                0,
                0,
              ),
              (this.route4.x = this.route3.w),
              (this.route4.y = this.route1.h + this.route2.h),
              this.addChild(this.route4))
            : 3 == this.cur_type
              ? (this.route4.init(
                  a[4],
                  6,
                  a[4] * (t / 2 / 2),
                  (3 * t) / 2,
                  0,
                  com.fontana.route.Rt4CheckerS,
                  t / 2 / 2,
                  t / 2 / 2,
                  0,
                  0,
                ),
                (this.route4.x = this.route3.w),
                (this.route4.y = this.route1.h),
                this.addChild(this.route4))
              : (this.route4.init(
                  a[4],
                  6,
                  a[4] * (t / 2 / 2),
                  (3 * t) / 2,
                  0,
                  com.fontana.route.Rt4CheckerS,
                  t / 2 / 2,
                  t / 2 / 2,
                  0,
                  0,
                ),
                (this.route4.x = this.route0.w + this.route3.w),
                (this.route4.y = this.route1.h + this.route2.h),
                this.addChild(this.route4)),
          this.clearAllLines(),
          1 == this.cur_type || 3 == this.cur_type
            ? this.drawSmallGrids(
                Math.ceil(this.pw / (t / 2)),
                2 * a[0],
                t / 2,
                t / 2,
                11118503,
              )
            : this.drawGrids(a[0], Math.ceil(this.ph / t), t, t, e, 11118503),
          this.graphics.beginFill(16777215),
          this.graphics.drawRect(0, 0, this.pw, this.ph),
          this.graphics.endFill(),
          1 == this.cur_type
            ? this.drawBlackLine2(a[0] * t, 6 * t, this.pw, !0)
            : 3 == this.cur_type
              ? this.drawBlackLine3(a[0] * t, 6 * t, this.pw, !0)
              : this.drawBlackLine(a[0] * t, 6 * t, this.pw, !0),
          (this.gridLayer.scrollRect = new egret.Rectangle(
            0,
            0,
            this.pw,
            this.ph,
          ));
      }),
      (i.prototype.changeLang = function (t) {
        this.update();
      }),
      (i.prototype.update = function () {
        (this.lobbyid == DataManager.LOBBY_ID_FLAGSHIP ||
          this.lobbyid == DataManager.LOBBY_ID_BACOM) &&
          this.lobbyBacc(),
          this.parseDatum(this.lastData, this._isBlink, this._dragonTiger, !0);
      }),
      (i.prototype.removeGrids = function () {
        this.gridLayer.visible = !1;
      }),
      (i.prototype.drawBlackLine2 = function (t, e, i, a, n) {
        void 0 === n && (n = 180),
          this.gridLayer.graphics.beginFill(0, 1),
          this.gridLayer.graphics.lineStyle(1, 0),
          this.gridLayer.graphics.moveTo(0, e / 2),
          this.gridLayer.graphics.lineTo(i, e / 2),
          a &&
            (this.gridLayer.graphics.moveTo(0, e / 2 + e / 2 / 2),
            this.gridLayer.graphics.lineStyle(1, 0),
            this.gridLayer.graphics.lineTo(i, e / 2 + e / 2 / 2),
            this.gridLayer.graphics.moveTo(this.route3.w, e - e / 2 / 2),
            this.gridLayer.graphics.lineStyle(1, 0),
            this.gridLayer.graphics.lineTo(
              this.route3.w,
              Math.max(this.ph, e),
            )),
          this.gridLayer.graphics.endFill();
      }),
      (i.prototype.drawBlackLine3 = function (t, e, i, a, n) {
        void 0 === n && (n = 180),
          this.gridLayer.graphics.beginFill(0, 1),
          this.gridLayer.graphics.lineStyle(1, 0),
          this.gridLayer.graphics.moveTo(0, e / 2),
          this.gridLayer.graphics.lineTo(i, e / 2),
          a &&
            (this.gridLayer.graphics.moveTo(0, e / 2 + e / 2 / 2),
            this.gridLayer.graphics.lineStyle(1, 0),
            this.gridLayer.graphics.lineTo(i, e / 2 + e / 2 / 2),
            this.gridLayer.graphics.moveTo(this.route3.w, e - e / 2 / 2),
            this.gridLayer.graphics.lineStyle(1, 0),
            this.gridLayer.graphics.lineTo(this.route3.w, e - e / 2)),
          this.gridLayer.graphics.endFill();
      }),
      (i.prototype.drawBlackLine = function (t, e, i, a, n) {
        void 0 === n && (n = 180),
          this.gridLayer.graphics.beginFill(0, 1),
          this.gridLayer.graphics.lineStyle(1, 0),
          this.gridLayer.graphics.moveTo(t, 0),
          this.gridLayer.graphics.lineTo(t, Math.max(this.ph, e)),
          this.gridLayer.graphics.moveTo(t, e / 2),
          this.gridLayer.graphics.lineTo(i, e / 2),
          a &&
            (this.gridLayer.graphics.moveTo(t, e / 2 + e / 2 / 2 + 1),
            this.gridLayer.graphics.lineStyle(1, 0),
            this.gridLayer.graphics.lineTo(i, e / 2 + e / 2 / 2 + 1),
            this.gridLayer.graphics.moveTo(
              this.route0.w + this.route3.w,
              e - e / 2 / 2,
            ),
            this.gridLayer.graphics.lineStyle(1, 0),
            this.gridLayer.graphics.lineTo(
              this.route0.w + this.route3.w,
              Math.max(this.ph, e),
            )),
          this.gridLayer.graphics.endFill();
      }),
      (i.prototype.dispose = function () {
        this.parent && this.parent.removeChild(this),
          this.route0 && this.route0.dispose(),
          this.route1 && this.route1.dispose(),
          this.route2 && this.route2.dispose(),
          this.route3 && this.route3.dispose(),
          this.route4 && this.route4.dispose(),
          LangUtils.removeEventListener(this.changeLang, this),
          this.clearAllLines(),
          this.removeChildren(),
          (this.route0 = null),
          (this.route1 = null),
          (this.route2 = null),
          (this.route3 = null),
          (this.route4 = null),
          (this.lastData = null);
      }),
      (i.prototype.clearAllLines = function () {
        this.graphics.clear(), this.gridLayer.graphics.clear();
      }),
      (i.prototype.drawSmallGrids = function (t, e, i, a, n, s, r) {
        void 0 === s && (s = 0.5),
          void 0 === r && (r = 0.5),
          this.graphics.clear(),
          this.graphics.beginFill(n, 1),
          this.graphics.lineStyle(s, n);
        var o = 0;
        for (o = 0; t >= o; o++)
          this.graphics.moveTo(o * i, 0), this.graphics.lineTo(o * i, e * a);
        for (o = 0; e >= o; o++)
          this.graphics.moveTo(0, o * a), this.graphics.lineTo(t * i, o * a);
        this.graphics.endFill();
      }),
      (i.prototype.drawGrids2 = function (t, e, i, a, n, s, r, o) {
        void 0 === r && (r = 0.5),
          void 0 === o && (o = 0.5),
          this.gridLayer.graphics.clear(),
          this.gridLayer.graphics.beginFill(s, 1);
        var h = 2 * e,
          l = t + n,
          g = t * i + 10 * n,
          u = t * i,
          c = 0,
          d = 0;
        for (d = 0; h >= d; d++)
          0 == d || d == h
            ? this.gridLayer.graphics.lineStyle(r, s)
            : this.gridLayer.graphics.lineStyle(o, s),
            d % 2 == 0
              ? this.gridLayer.graphics.moveTo(0, (d * a) / 2)
              : this.gridLayer.graphics.moveTo(u, (d * a) / 2),
            this.gridLayer.graphics.lineTo(g, (d * a) / 2);
        for (d = 0; t >= d; d++)
          0 == d || d == l
            ? this.gridLayer.graphics.lineStyle(r, s)
            : this.gridLayer.graphics.lineStyle(o, s),
            (c = d * i),
            this.gridLayer.graphics.moveTo(c, 0),
            this.gridLayer.graphics.lineTo(c, e * a);
        for (d = 1; n >= d; d++)
          this.gridLayer.graphics.lineStyle(o, s),
            (c = t * i + 10 * d),
            this.gridLayer.graphics.moveTo(c, 0),
            this.gridLayer.graphics.lineTo(c, e * a);
        this.gridLayer.graphics.endFill();
      }),
      (i.prototype.drawGrids = function (t, e, i, a, n, s, r, o) {
        void 0 === r && (r = 0.5),
          void 0 === o && (o = 0.5),
          this.gridLayer.graphics.clear(),
          this.gridLayer.graphics.beginFill(s, 1);
        var h = 2 * e,
          l = t + n,
          g = t * i + (n * i) / 2,
          u = t * i,
          c = 0,
          d = 0;
        for (d = 0; h >= d; d++)
          0 == d || d == h
            ? this.gridLayer.graphics.lineStyle(r, s)
            : this.gridLayer.graphics.lineStyle(o, s),
            d % 2 == 0
              ? this.gridLayer.graphics.moveTo(0, (d * a) / 2)
              : this.gridLayer.graphics.moveTo(u, (d * a) / 2),
            this.gridLayer.graphics.lineTo(g, (d * a) / 2);
        for (d = 0; l >= d; d++)
          0 == d || d == l
            ? this.gridLayer.graphics.lineStyle(r, s)
            : this.gridLayer.graphics.lineStyle(o, s),
            (c = t >= d ? d * i : (d * i) / 2 + (t * i) / 2),
            this.gridLayer.graphics.moveTo(c, 0),
            this.gridLayer.graphics.lineTo(c, e * a);
        this.gridLayer.graphics.endFill();
      }),
      (i.prototype.parseDatum = function (t, e, i, a, n) {
        if (
          (void 0 === e && (e = !1),
          void 0 === i && (i = !1),
          void 0 === a && (a = !1),
          void 0 === n && (n = !1),
          null != t && null != this.route0 && (a || null == this.lastData, !0))
        ) {
          (this.lastData = t),
            (this._isBlink = e),
            (this._dragonTiger = i),
            (this.route0.routeDatum = new Array()),
            (this.route1.routeDatum = new Array());
          var s,
            r,
            o = null,
            h = null;
          for (var l in t) {
            var g = t[l];
            if (
              ((o = new GameData(g)),
              (h = new GameData(g)),
              s && s.length >= this.route0.row && (s = null),
              s || ((s = new Array()), this.route0.routeDatum.push(s)),
              s.push(o),
              r)
            ) {
              var u = r[r.length - 1];
              if (h.winner == GameData.WINNER_TILE) {
                u.tileCount++,
                  u.winner == GameData.WINNER_TILE && u.tileCountBefore++;
                continue;
              }
              if (u.winner == GameData.WINNER_TILE) {
                (u.winner = h.winner),
                  (u.bankerPair = h.bankerPair),
                  (u.playerPair = h.playerPair);
                continue;
              }
              u && u.winner != o.winner && (r = null);
            }
            r || ((r = new Array()), this.route1.routeDatum.push(r)),
              h.winner == GameData.WINNER_TILE && (h.tileCountBefore = 1),
              r.push(h),
              (o = null),
              (h = null);
          }
          if (this.bigFlag) {
            if (
              (this.route2.parse(this.route1.routeDatum),
              this.route3.parse(this.route1.routeDatum),
              this.route4.parse(this.route1.routeDatum),
              n)
            )
              return;
            this.route0.draw(e, i),
              this.route1.draw(e, i),
              this.route2.draw(e, i),
              this.route3.draw(e, i),
              this.route4.draw(e, i);
          } else this.route1.draw(e, i);
        }
      }),
      i
    );
  })(egret.Sprite);
  (t.RouteContainer = e), __reflect(e.prototype, "route.RouteContainer");
})(route || (route = {}));
var ViewAbstract = (function (t) {
  function e() {
    return (null !== t && t.apply(this, arguments)) || this;
  }
  return (
    __extends(e, t),
    (e.prototype.init = function () {}),
    (e.prototype.onchat = function (t) {}),
    (e.prototype.change_size = function (t, e) {
      if (DZUtils.sPlatform == DEVICE_APP.APP) {
        var i = window.innerWidth,
          a = window.innerHeight,
          n = Math.min(i / 750),
          s = Math.min(a / 1334),
          r = Math.min(a / i);
        t &&
          ((t.width = t.width * n),
          (t.height = t.height * s),
          s > 0.6
            ? r > 1.8
              ? (t.top = e.y + e.height + 48 * s * r)
              : 1.4 > r
                ? ((t.scaleY = 0.74),
                  (t.scaleX = 0.74),
                  (t.top = e.y + e.height - 120 * s * r))
                : ((t.scaleY = 0.74),
                  (t.scaleX = 0.74),
                  (t.top = e.y + e.height - 48 * s * r))
            : 1.8 > r
              ? 1.4 > r
                ? ((t.scaleY = 0.72),
                  (t.scaleX = 0.72),
                  (t.top = e.y + e.height - 144 * s * r))
                : ((t.scaleY = 0.97),
                  (t.scaleX = 0.97),
                  (t.top = e.y + e.height))
              : r > 2.3
                ? (t.top = e.y + e.height + 96 * s * r)
                : (t.top = e.y + e.height + 96 * s));
      }
    }),
    (e.prototype.dispose = function () {}),
    e
  );
})(eui.Component);
__reflect(ViewAbstract.prototype, "ViewAbstract");
var sound;
!(function (t) {
  var e = (function () {
    function t() {}
    return (
      (t.getInstance = function () {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        var i = this;
        if (!i._instance) {
          var a = t.length;
          0 == a
            ? (i._instance = new i())
            : 1 == a
              ? (i._instance = new i(t[0]))
              : 2 == a
                ? (i._instance = new i(t[0], t[1]))
                : 3 == a
                  ? (i._instance = new i(t[0], t[1], t[2]))
                  : 4 == a
                    ? (i._instance = new i(t[0], t[1], t[2], t[3]))
                    : 5 == a &&
                      (i._instance = new i(t[0], t[1], t[2], t[3], t[4]));
        }
        return i._instance;
      }),
      t
    );
  })();
  (t.BaseClass = e), __reflect(e.prototype, "sound.BaseClass");
})(sound || (sound = {}));
var sound;
!(function (t) {
  var e = (function () {
    function e() {
      (this._cache = {}), (this._loadingCache = new Array());
    }
    return (
      (e.prototype.dealSoundTimer = function () {
        for (
          var e = egret.getTimer(),
            i = Object.keys(this._cache),
            a = 0,
            n = i.length;
          n > a;
          a++
        ) {
          var s = i[a];
          this.checkCanClear(s) &&
            e - this._cache[s] >= t.SoundManager.CLEAR_TIME &&
            (delete this._cache[s], RES.destroyRes(s));
        }
      }),
      (e.prototype.getSound = function (t) {
        var e = RES.getRes(t);
        if (e) this._cache[t] && (this._cache[t] = egret.getTimer());
        else {
          if (-1 != this._loadingCache.indexOf(t)) return null;
          this._loadingCache.push(t),
            RES.getResAsync(t, this.onResourceLoadComplete, this);
        }
        return e;
      }),
      (e.prototype.onResourceLoadComplete = function (t, e) {
        var i = this._loadingCache.indexOf(e);
        -1 != i &&
          (this._loadingCache.splice(i, 1),
          (this._cache[e] = egret.getTimer()),
          this.loadedPlay(e));
      }),
      (e.prototype.loadedPlay = function (t) {}),
      (e.prototype.checkCanClear = function (t) {
        return !0;
      }),
      e
    );
  })();
  (t.BaseSound = e), __reflect(e.prototype, "sound.BaseSound");
})(sound || (sound = {}));
var dzxx;
!(function (t) {
  var e = (function (t) {
    function e() {
      return t.call(this) || this;
    }
    return (
      __extends(e, t),
      (e.prototype.partAdded = function (e, i) {
        t.prototype.partAdded.call(this, e, i);
      }),
      (e.prototype.childrenCreated = function () {
        t.prototype.childrenCreated.call(this);
      }),
      (e.prototype.ontouchstage = function (t) {
        this.hitTestPoint(t.stageX, t.stageY) || this.hide();
      }),
      (e.prototype.show = function (t) {
        t.addChild(this),
          ShareUtils.game_stage.addEventListener(
            egret.TouchEvent.TOUCH_BEGIN,
            this.ontouchstage,
            this,
          );
      }),
      (e.prototype.hide = function () {
        this.parent && this.parent.removeChild(this),
          ShareUtils.game_stage.removeEventListener(
            egret.TouchEvent.TOUCH_BEGIN,
            this.ontouchstage,
            this,
          );
      }),
      (e.prototype.dispose = function () {
        this.hide();
      }),
      e
    );
  })(eui.Component);
  (t.DZAutoHidePanel = e),
    __reflect(e.prototype, "dzxx.DZAutoHidePanel", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(dzxx || (dzxx = {}));
var AssetAdapter = (function () {
  function t() {}
  return (
    (t.prototype.getAsset = function (t, e, i) {
      function a(a) {
        e.call(i, a, t);
      }
      if (RES.hasRes(t)) {
        var n = RES.getRes(t);
        n ? a(n) : RES.getResAsync(t, a, this);
      } else RES.getResByUrl(t, a, this, RES.ResourceItem.TYPE_IMAGE);
    }),
    t
  );
})();
__reflect(AssetAdapter.prototype, "AssetAdapter", ["eui.IAssetAdapter"]);
var LoadingLagUI = (function (t) {
  function e() {
    return t.call(this) || this;
  }
  return (
    __extends(e, t),
    (e.prototype.createView = function () {
      (this.imgbg = new eui.Image()),
        (this.imgbg.source = "shixun_bg3_png"),
        this.addChild(this.imgbg),
        (this.imgLogo = new eui.Image());
      var t = document.URL;
      t = t.toLocaleUpperCase();
      var e = !0;
      t.indexOf(StringUtils.Decode64Strig(DataManager.L0NROS8)) > -1 &&
        document.URL.indexOf("token") > -1 &&
        ((this.imgLogo.source = "logo_png"), (e = !1)),
        t.indexOf("/168API/") > -1 &&
          document.URL.indexOf("token") > -1 &&
          ((this.imgLogo.source = "168APILogo_png"), (e = !1)),
        t.indexOf("/VG/") > -1 &&
          ((this.imgLogo.source = "vgLogo_png"), (e = !1)),
        t.indexOf("/GT/") > -1 &&
          ((this.imgLogo.source = "gtLogo_png"), (e = !1)),
        e && (this.imgLogo.source = "logo_png"),
        this.addChild(this.imgLogo),
        (this.touchEnabled = !1),
        (this.touchChildren = !1),
        (this.sprProgress = new egret.Sprite()),
        (this.sprProgress.width = 600),
        (this.sprProgress.height = 60),
        this.addChild(this.sprProgress),
        (this.bmpProgress = new eui.Image()),
        (this.bmpProgress.source = "screen_112_png"),
        this.sprProgress.addChild(this.bmpProgress),
        (this.bmpProgress.y = 55),
        (this.bmpProgress.x = 0),
        (this.lbProgress = new eui.Label()),
        this.sprProgress.addChild(this.lbProgress),
        (this.lbProgress.text = "90%"),
        (this.lbProgress.size = 30),
        (this.lbProgress.textColor = 16504717),
        (this.lbProgress.height = 32),
        (this.lbProgress.width = 280),
        (this.lbProgress.fontFamily = "Microsoft YaHei"),
        (this.lbProgress.textAlign = "center"),
        this.onResize(),
        this.stage.addEventListener(egret.Event.RESIZE, this.onResize, this);
    }),
    (e.prototype.onResize = function () {
      (this.width = egret.MainContext.instance.stage.stageWidth),
        (this.height = egret.MainContext.instance.stage.stageHeight),
        (this.imgbg.width = egret.MainContext.instance.stage.stageWidth),
        (this.imgbg.height = egret.MainContext.instance.stage.stageHeight);
      var t = document.URL;
      t = t.toLocaleUpperCase();
      var e = !0;
      t.indexOf(StringUtils.Decode64Strig(DataManager.L0NROS8)) > -1 &&
        document.URL.indexOf("token") > -1 &&
        ((this.imgLogo.x =
          (egret.MainContext.instance.stage.stageWidth - 309) / 2),
        (e = !1)),
        t.indexOf("/168API/") > -1 &&
          document.URL.indexOf("token") > -1 &&
          ((this.imgLogo.x =
            (egret.MainContext.instance.stage.stageWidth - 469) / 2),
          (e = !1)),
        t.indexOf("/VG/") > -1 &&
          ((this.imgLogo.x =
            (egret.MainContext.instance.stage.stageWidth - 223) / 2),
          (e = !1)),
        t.indexOf("/GT/") > -1 &&
          ((this.imgLogo.x =
            (egret.MainContext.instance.stage.stageWidth - 469) / 2),
          (e = !1)),
        e &&
          (this.imgLogo.x =
            (egret.MainContext.instance.stage.stageWidth - 309) / 2),
        (this.imgLogo.y = 0.3 * egret.MainContext.instance.stage.stageHeight),
        (this.sprProgress.x =
          (egret.MainContext.instance.stage.stageWidth - 600) / 2),
        (this.sprProgress.y =
          0.5 * egret.MainContext.instance.stage.stageHeight),
        (this.lbProgress.x = (600 - this.lbProgress.width) / 2),
        (this.lbProgress.y = 0);
    }),
    (e.prototype.dispose = function () {
      for (
        this.stage &&
        this.stage.removeEventListener(egret.Event.RESIZE, this.onResize, this);
        this.numChildren > 0;

      ) {
        var t = this.getChildAt(0);
        t.parent.removeChild(t), (t = null);
      }
      this.parent && this.parent.removeChild(this);
    }),
    e
  );
})(egret.Sprite);
__reflect(LoadingLagUI.prototype, "LoadingLagUI");
var LoadingUI = (function (t) {
  function e() {
    return t.call(this) || this;
  }
  return (
    __extends(e, t),
    (e.prototype.createView = function () {
      (this.imgbg = new eui.Image()),
        (this.imgbg.source = "loading_png"),
        (this.imgbg.visible =
          1 == window.game_login_type || DataManager.showYaXing),
        (this.imgLogo = new eui.Image());
      var t = document.URL;
      t = t.toLocaleUpperCase();
      var e = !0;
      t.indexOf(StringUtils.Decode64Strig(DataManager.L0NROS8)) > -1 &&
        document.URL.indexOf("token") > -1 &&
        ((this.imgLogo.source = "logo_png"), (e = !1)),
        t.indexOf("/168API/") > -1 &&
          document.URL.indexOf("token") > -1 &&
          ((this.imgLogo.source = "168APILogo_png"), (e = !1)),
        t.indexOf("/VG/") > -1 &&
          ((this.imgLogo.source = "vgLogo_png"), (e = !1)),
        t.indexOf("/GT/") > -1 &&
          ((this.imgLogo.source = "gtLogo_png"), (e = !1)),
        e && (this.imgLogo.source = "logo_png"),
        this.addChild(this.imgbg),
        this.addChild(this.imgLogo),
        (this.touchEnabled = !1),
        (this.touchChildren = !1),
        (this.sprProgress = new egret.Sprite()),
        (this.sprProgress.width = 527),
        (this.sprProgress.height = 12),
        this.addChild(this.sprProgress);
      var i = new eui.Image();
      (i.source = "loadPrebg_png"),
        this.sprProgress.addChild(i),
        (this.bmpProgress = new eui.Image()),
        (this.bmpProgress.source = "loadPregress_png"),
        this.sprProgress.addChild(this.bmpProgress),
        (this.lbProgress = new eui.Label()),
        this.sprProgress.addChild(this.lbProgress),
        (this.lbProgress.text = this.loadTextInfo()),
        (this.lbProgress.size = 24),
        (this.lbProgress.textColor = 16777215),
        (this.lbProgress.height = 24),
        (this.lbProgress.width = 280),
        (this.lbProgress.textAlign = "center"),
        this.onResize(),
        this.stage.addEventListener(egret.Event.RESIZE, this.onResize, this);
    }),
    (e.prototype.onResize = function () {
      (this.width = egret.MainContext.instance.stage.stageWidth),
        (this.height = egret.MainContext.instance.stage.stageHeight),
        (this.imgbg.width = egret.MainContext.instance.stage.stageWidth),
        (this.imgbg.height = egret.MainContext.instance.stage.stageHeight);
      var t = document.URL;
      t = t.toLocaleUpperCase();
      var e = !0;
      t.indexOf(StringUtils.Decode64Strig(DataManager.L0NROS8)) > -1 &&
        document.URL.indexOf("token") > -1 &&
        ((this.imgLogo.x =
          (egret.MainContext.instance.stage.stageWidth - 309) / 2),
        (this.imgLogo.width = 309),
        (this.imgLogo.height = 198),
        (e = !1)),
        t.indexOf("/168API/") > -1 &&
          document.URL.indexOf("token") > -1 &&
          ((this.imgLogo.x =
            (egret.MainContext.instance.stage.stageWidth - 469) / 2),
          (this.imgLogo.width = 469),
          (this.imgLogo.height = 173),
          (e = !1)),
        t.indexOf("/VG/") > -1 &&
          ((this.imgLogo.x =
            (egret.MainContext.instance.stage.stageWidth - 223) / 2),
          (this.imgLogo.width = 223),
          (this.imgLogo.height = 173),
          (e = !1)),
        t.indexOf("/GT/") > -1 &&
          ((this.imgLogo.x =
            (egret.MainContext.instance.stage.stageWidth - 469) / 2),
          (this.imgLogo.width = 469),
          (this.imgLogo.height = 161),
          (e = !1)),
        e &&
          ((this.imgLogo.x =
            (egret.MainContext.instance.stage.stageWidth - 309) / 2),
          (this.imgLogo.width = 309),
          (this.imgLogo.height = 198)),
        (this.imgLogo.y = 0.3 * egret.MainContext.instance.stage.stageHeight),
        (this.sprProgress.x =
          (egret.MainContext.instance.stage.stageWidth - 527) / 2),
        (this.sprProgress.y =
          0.75 * egret.MainContext.instance.stage.stageHeight),
        (this.lbProgress.x = (527 - this.lbProgress.width) / 2),
        (this.lbProgress.y = 40);
    }),
    (e.prototype.onProgress = function (t, e) {
      var i = Math.ceil((t / e) * 100);
      i > 100 && (i = 100),
        (this.bmpProgress.width = (527 * i) / 100),
        (this.lbProgress.text = this.loadTextInfo() + i + "%");
    }),
    (e.prototype.loadTextInfo = function () {
      return DataManager.API168_login
        ? DataManager.LANG_TYPE == DataManager.LANG_TC
          ? "遊戲載入中..."
          : "游戏加载中..."
        : DataManager.LANG_TYPE == DataManager.LANG_SC
          ? "游戏加载中..."
          : "loading...";
    }),
    (e.prototype.dispose = function () {
      for (
        this.stage &&
        this.stage.removeEventListener(egret.Event.RESIZE, this.onResize, this);
        this.numChildren > 0;

      ) {
        var t = this.getChildAt(0);
        t.parent.removeChild(t), (t = null);
      }
      this.parent && this.parent.removeChild(this);
    }),
    e
  );
})(egret.Sprite);
__reflect(LoadingUI.prototype, "LoadingUI", ["RES.PromiseTaskReporter"]);
var hex_md5,
  Main = (function (t) {
    function e() {
      var e = (null !== t && t.apply(this, arguments)) || this;
      return (
        (e.isfirstvisibleset = !1),
        (e.isClick_bg = !1),
        (e.isThemeLoadEnd = !1),
        (e.isResourceLoadEnd = !1),
        (e.checkWindowSizeIntervalID = 0),
        (e.updateSizeTimeoutID = 0),
        (e.lastWindowW = 0),
        (e.lastWindowH = 0),
        e
      );
    }
    return (
      __extends(e, t),
      (e.prototype.startCreateScene = function () {
        var t = this;
        if (
          (DebugText.appendText("userAgent: " + navigator.userAgent),
          (this.visible = !0),
          this.styleSet(),
          (DataManager.game_login_type = window.game_login_type),
          DZUtils.setPlatform(getPlatform()),
          1 == DataManager.game_login_type)
        ) {
          (DataManager.RES_HTTP = ""),
            (egret.ImageLoader.crossOrigin = "anonymous"),
            (DataManager.HTTP_HOST = DZUtils.getRootURL()),
            (DataManager.HTTP_HOST_PF = DZUtils.getRootURL()),
            DataManager.initDuotaiIDarray(!0);
          var e = document.URL;
          e = e.toLocaleUpperCase();
          var i = !0;
          e.indexOf(StringUtils.Decode64Strig(DataManager.L0NROS8)) > -1 &&
            document.URL.indexOf("token") > -1 &&
            ((document.title = "游戏"), (i = !1)),
            e.indexOf("/168API/") > -1 &&
              document.URL.indexOf("token") > -1 &&
              ((document.title = "168API"), (i = !1)),
            e.indexOf("/VG/") > -1 && ((document.title = "VG"), (i = !1)),
            e.indexOf("/GT/") > -1 && ((document.title = "GT"), (i = !1)),
            i && (document.title = "【YX游戏】");
        } else if (2 == DataManager.game_login_type) {
          (DataManager.RES_HTTP = ""),
            (egret.ImageLoader.crossOrigin = "anonymous"),
            (DataManager.HTTP_HOST = DZUtils.getRootURL()),
            (DataManager.HTTP_HOST_PF = DZUtils.getRootURL()),
            DataManager.initDuotaiIDarray(!1);
          var e = document.URL;
          e = e.toLocaleUpperCase();
          var i = !0;
          e.indexOf(StringUtils.Decode64Strig(DataManager.L0NROS8)) > -1 &&
            document.URL.indexOf("token") > -1 &&
            ((document.title = "游戏"), (i = !1)),
            e.indexOf("/168API/") > -1 &&
              document.URL.indexOf("token") > -1 &&
              ((document.title = "168API"), (i = !1)),
            e.indexOf("/VG/") > -1 && ((document.title = "VG"), (i = !1)),
            e.indexOf("/GT/") > -1 && ((document.title = "GT"), (i = !1)),
            i && (document.title = "游戏");
        } else if (3 == DataManager.game_login_type) {
          (DataManager.RES_HTTP = ""),
            (DataManager.USER_NAME = window.USER_NAME),
            (DataManager.HOST = window.HOST),
            (DataManager.PORT = window.PORT),
            (DataManager.HTTP_HOST_PF = DataManager.HTTP_HOST =
              window.HTTP_HOST_PF),
            (DataManager.CODE = window.CODE),
            (DataManager.apiUserToken = window.apiUserToken),
            DataManager.initDuotaiIDarray(!1);
          var e = document.URL;
          e = e.toLocaleUpperCase();
          var i = !0;
          e.indexOf(StringUtils.Decode64Strig(DataManager.L0NROS8)) > -1 &&
            document.URL.indexOf("token") > -1 &&
            ((document.title = "游戏"), (i = !1)),
            e.indexOf("/168API/") > -1 &&
              document.URL.indexOf("token") > -1 &&
              ((document.title = "168API"), (i = !1)),
            e.indexOf("/VG/") > -1 && ((document.title = "VG"), (i = !1)),
            e.indexOf("/GT/") > -1 && ((document.title = "GT"), (i = !1)),
            i && (document.title = "游戏"),
            DataManager.initCookieHaolu();
        } else
          (DataManager.RES_HTTP = ""),
            (egret.ImageLoader.crossOrigin = "anonymous"),
            (DataManager.HTTP_HOST = DZUtils.getRootURL()),
            (DataManager.HTTP_HOST_PF = DZUtils.getRootURL()),
            DataManager.initDuotaiIDarray(!0);
        DataManager.init(),
          (DataManager.fast_login ||
            DataManager.Q1E5_login ||
            DataManager.API168_login ||
            DataManager.VG_login ||
            DataManager.GT_login) &&
            (this.loadingLagView ||
              ((this.loadingLagView = new LoadingLagUI()),
              this.stage.addChild(this.loadingLagView),
              this.loadingLagView.createView())),
          LocalData.load(),
          LangUtils.addEventListener(this.changeLang, this),
          LangUtils.getInstance().loadLang(
            DataManager.langKey2[DataManager.LANG_TYPE],
          ),
          EventManager.getIns().addEventListener(
            GotoViewEvent.GOTO_VIEW,
            this.gotoView,
            this,
          ),
          this.autoCheckWinSize(),
          window.addEventListener("onbeforeunload", function () {
            t.onWindowBeforeUnload();
          }),
          this.stage.addEventListener(
            egret.FocusEvent.FOCUS_IN,
            this.onEgretStageFocusChange,
            this,
          ),
          this.stage.addEventListener(
            egret.FocusEvent.FOCUS_OUT,
            this.onEgretStageFocusChange,
            this,
          ),
          (this.stage.scaleMode =
            DZUtils.sPlatform == DEVICE_APP.APP
              ? egret.StageScaleMode.FIXED_WIDTH
              : egret.StageScaleMode.FIXED_HEIGHT),
          DebugText.appendText(
            "==this.stage.scaleMode==>" + this.stage.scaleMode,
          ),
          this.SetOnorientationChange(),
          Connector.addHighProtectHost();
      }),
      (e.prototype.styleSet = function () {
        (egret.TextField.default_fontFamily = window.dz_defaultFontFamily),
          (egret.TextField.default_size = window.dz_defaultFontSize);
      }),
      (e.prototype.changeLang = function (t) {
        this.loadingLagView &&
          (this.loadingLagView.dispose(), (this.loadingLagView = null)),
          LangUtils.removeEventListener(this.changeLang, this),
          DataManager.CODE
            ? MessageHandler.getIns().connect()
            : this.gotoView(
                new GotoViewEvent(GotoViewEvent.GOTO_VIEW, View.LOGIN_VIEW),
              );
      }),
      (e.prototype.onWindowBeforeUnload = function () {
        MessageHandler.close();
      }),
      (e.prototype.gotoView = function (t) {
        switch ((this.removeAllView(), t.view)) {
          case View.LOGIN_VIEW:
            if (
              ((DataManager.is_goto_duotai = !1),
              (DataManager.regular_login = !1),
              DataManager.fast_login || DataManager.GT_login)
            )
              Alert.loading(LangUtils.LANG_MAP.CONNECT_LOGIN, !0, !0),
                new HttpPostHandle(
                  DataManager.HTTP_HOST_PF +
                    "/client/api/loginbytoken?token=" +
                    DataManager.fast_login_token +
                    "&clientType=1",
                  null,
                  Login.result,
                  this,
                  "get",
                );
            else if (DataManager.Q1E5_login)
              new HttpPostHandle(
                DataManager.HTTP_HOST_PF +
                  "/client/api/" +
                  StringUtils.Decode64Strig(DataManager.Y3E5) +
                  "/login?token=" +
                  DataManager.Q1E5_login_token +
                  "&clientType=1",
                null,
                Login.result,
                this,
                "get",
              );
            else if (DataManager.API168_login)
              new HttpPostHandle(
                DataManager.HTTP_HOST_PF +
                  "/client/api/168api/login?token=" +
                  DataManager.API168_login_token +
                  "&clientType=1",
                null,
                Login.result,
                this,
                "get",
              );
            else if (DataManager.VG_login)
              new HttpPostHandle(
                DataManager.HTTP_HOST_PF +
                  "/client/api/vg/login?token=" +
                  DataManager.VG_login_token +
                  "&clientType=0",
                null,
                Login.result,
                this,
                "get",
              );
            else if (DataManager.channel_login)
              DataManager.channel_name
                ? new HttpPostHandle(
                    DataManager.HTTP_HOST_PF +
                      "/client/api/loginbytoken?channel=" +
                      DataManager.channel_name +
                      "&clientType=1&token=" +
                      DataManager.channel_login_token,
                    null,
                    Login.result,
                    this,
                    "get",
                  )
                : new HttpPostHandle(
                    DataManager.HTTP_HOST_PF +
                      "/client/api/loginbytoken?clientType=1&token=" +
                      DataManager.channel_login_token,
                    null,
                    Login.result,
                    this,
                    "get",
                  );
            else if (DataManager.ccData) {
              DataManager.regular_login = !0;
              var e = atob(DataManager.ccData);
              Login.setLoginData(JSON.parse(e));
            } else {
              DataManager.regular_login = !0;
              var i = new Login();
              this.viewGroup.addChild(i);
            }
            break;
          case View.LOBBY_VIEW:
            this.isClick_bg ||
              this.stage.addEventListener(
                egret.TouchEvent.TOUCH_TAP,
                this.onFirstTouch,
                this,
              ),
              (DataManager.is_goto_duotai = !1),
              dzxx.LiveVideo.ifStopVideo(),
              this.lobbyView || (this.lobbyView = new LobbyView()),
              (this.lobbyView.visible = !0),
              (DataManager.thisView = View.LOBBY_VIEW),
              (DataManager.curTableState = null),
              (DataManager.curTable = null),
              this.viewGroup.addChild(this.lobbyView),
              this.lobbyView.initConfig();
            break;
          case View.BACC_GAME_VIEW:
            (DataManager.is_goto_duotai = !1),
              dzxx.LiveVideo.ifStopVideo(),
              this.lobbyView && (this.lobbyView.visible = !1),
              this.gameView || (this.gameView = new GameView()),
              this.viewGroup.addChild(this.gameView),
              (DataManager.thisView = View.BACC_GAME_VIEW);
            break;
          case View.DRAGON_TIGER_GAME_VIEW:
            (DataManager.is_goto_duotai = !1),
              dzxx.LiveVideo.ifStopVideo(),
              this.gameView || (this.gameView = new GameLHView()),
              this.viewGroup.addChild(this.gameView),
              (DataManager.thisView = View.DRAGON_TIGER_GAME_VIEW);
            break;
          case View.SICBO_GAME_VIEW:
            (DataManager.is_goto_duotai = !1),
              dzxx.LiveVideo.ifStopVideo(),
              this.gameView || (this.gameView = new ShaiBaoView()),
              this.viewGroup.addChild(this.gameView),
              (DataManager.thisView = View.SICBO_GAME_VIEW);
            break;
          case View.DUO_TAI_GAME_VIEW:
            dzxx.LiveVideo.ifStopVideo(),
              this.gameView || (this.gameView = new game.DuotaiView()),
              this.gameView.updataView(),
              this.viewGroup.addChild(this.gameView),
              (DataManager.thisView = View.DUO_TAI_GAME_VIEW),
              (DataManager.thisduotaiView = this.gameView);
            break;
          case View.LUN_PAN_GAME_VIEW:
            (DataManager.is_goto_duotai = !1),
              dzxx.LiveVideo.ifStopVideo(),
              this.gameView || (this.gameView = new game.LunpanView()),
              this.gameView.updataView(),
              this.viewGroup.addChild(this.gameView),
              (DataManager.thisView = View.LUN_PAN_GAME_VIEW);
            break;
          case View.NIU_NIU_GAME_VIEW:
            (DataManager.is_goto_duotai = !1),
              dzxx.LiveVideo.ifStopVideo(),
              this.gameView || (this.gameView = new NiuniuView()),
              this.viewGroup.addChild(this.gameView),
              (DataManager.thisView = View.NIU_NIU_GAME_VIEW);
            break;
          case View.CHOOSE_TABLE_VIEW:
            ChooseTableView.inst.show(DataManager.cur_lobby_id);
        }
      }),
      (e.prototype.removeAllView = function () {
        for (; this.viewGroup.numChildren > 0; ) {
          var t = this.viewGroup.removeChildAt(0);
          t.dispose &&
            (t.dispose(),
            t != this.lobbyView &&
              t != ChooseTableView.inst &&
              ((t = null), (this.gameView = null)));
        }
        this.deleteloadView();
      }),
      (e.prototype.deleteloadView = function () {
        this.loadingView &&
          (this.loadingView.dispose(), (this.loadingView = null));
      }),
      (e.prototype.createChildren = function () {
        var e = this;
        t.prototype.createChildren.call(this),
          (egret.ImageLoader.crossOrigin = "anonymous"),
          (ShareUtils.main = this),
          (ShareUtils.VERSION = window.version),
          (ShareUtils.HEIGHT = this.stage.stageHeight),
          (ShareUtils.WIDTH = this.stage.stageWidth);
        var i = DZUtils.getQueryString("language"),
          a = LangUtils.cocosParamsMap[i],
          n = window.dz_langArr;
        -1 == n.indexOf(a) && i && (i = "en"), this.setDefaultLobby();
        var s = document.URL;
        (s = s.toLocaleUpperCase()),
          s.indexOf("/168API/") > -1
            ? (DataManager.LANG_TYPE = DataManager.LANG_TC)
            : s.indexOf(StringUtils.Decode64Strig(DataManager.L0NROS8)) > -1
              ? "en" == i
                ? (DataManager.LANG_TYPE = DataManager.LANG_EN)
                : (DataManager.LANG_TYPE = DataManager.LANG_SC)
              : "zh-cn" == i
                ? (DataManager.LANG_TYPE = DataManager.LANG_SC)
                : "en" == i
                  ? (DataManager.LANG_TYPE = DataManager.LANG_EN)
                  : "th" == i
                    ? (DataManager.LANG_TYPE = DataManager.LANG_KN)
                    : "vn" == i
                      ? (DataManager.LANG_TYPE = DataManager.LANG_VL)
                      : "zh-tw" == i
                        ? (DataManager.LANG_TYPE = DataManager.LANG_TC)
                        : "jpn" == i
                          ? (DataManager.LANG_TYPE = DataManager.LANG_JPN)
                          : "kr" == i
                            ? (DataManager.LANG_TYPE = DataManager.LANG_KR)
                            : "hn" == i &&
                              (DataManager.LANG_TYPE = DataManager.LANG_HN),
          s.indexOf(StringUtils.Decode64Strig(DataManager.L0NROS8)) > -1
            ? ((DataManager.Q1E5_login_token = DZUtils.getQueryString("token")),
              (DataManager.Q1E5_login =
                null != DataManager.Q1E5_login_token &&
                "" != DataManager.Q1E5_login_token &&
                void 0 != DataManager.Q1E5_login_token))
            : s.indexOf("/168API/") > -1
              ? ((DataManager.LANG_TYPE = DataManager.LANG_TC),
                (DataManager.API168_login_token =
                  DZUtils.getQueryString("token")),
                (DataManager.API168_login =
                  null != DataManager.API168_login_token &&
                  "" != DataManager.API168_login_token &&
                  void 0 != DataManager.API168_login_token))
              : s.indexOf("/VG/") > -1
                ? ((DataManager.VG_login_token =
                    DZUtils.getQueryString("token")),
                  (DataManager.VG_login =
                    null != DataManager.VG_login_token &&
                    "" != DataManager.VG_login_token &&
                    void 0 != DataManager.VG_login_token))
                : s.indexOf("/GT/") > -1
                  ? ((DataManager.fast_login_token =
                      DZUtils.getQueryString("token")),
                    (DataManager.GT_login =
                      null != DataManager.fast_login_token &&
                      "" != DataManager.fast_login_token &&
                      void 0 != DataManager.fast_login_token))
                  : s.indexOf("/THIRD-API/") > -1
                    ? ((DataManager.channel_login_token =
                        DZUtils.getQueryString("token")),
                      (DataManager.channel_login =
                        null != DataManager.channel_login_token &&
                        "" != DataManager.channel_login_token &&
                        void 0 != DataManager.channel_login_token),
                      (DataManager.channel_name = DZUtils.getString(
                        s,
                        "/THIRD-API/",
                      )))
                    : ((DataManager.fast_login_token =
                        DZUtils.getQueryString("token")),
                      (DataManager.fast_login =
                        null != DataManager.fast_login_token &&
                        "" != DataManager.fast_login_token &&
                        void 0 != DataManager.fast_login_token),
                      (DataManager.ccData = DZUtils.getQueryString("ccData")));
        var r = new AssetAdapter();
        egret.registerImplementation("eui.IAssetAdapter", r),
          egret.registerImplementation("eui.IThemeAdapter", new ThemeAdapter()),
          ShareUtils.setStage(this.stage),
          (RES.getVirtualUrl = function (t) {
            return t.indexOf("mp3") > 0 ? t : t + "?v=" + ShareUtils.VERSION;
          }),
          RES.addEventListener(
            RES.ResourceEvent.CONFIG_COMPLETE,
            this.onConfigComplete,
            this,
          ),
          RES.loadConfig(
            this.getResHttp2() + "default.res.json",
            this.getResHttp(),
          ),
          (this.viewGroup = new eui.Group()),
          (this.viewGroup.left =
            this.viewGroup.right =
            this.viewGroup.bottom =
            this.viewGroup.top =
              0),
          this.addChild(this.viewGroup),
          (this.moduleGroup = new eui.Group()),
          (this.moduleGroup.left =
            this.moduleGroup.right =
            this.moduleGroup.bottom =
            this.moduleGroup.top =
              0),
          (this.moduleGroup.touchEnabled = !1),
          this.addChild(this.moduleGroup),
          (this.effGroup = new eui.Group()),
          (this.effGroup.touchEnabled = this.effGroup.touchChildren = !1),
          (this.effGroup.left =
            this.effGroup.right =
            this.effGroup.top =
            this.effGroup.bottom =
              0),
          this.addChild(this.effGroup),
          this.stage.addEventListener(
            egret.Event.ACTIVATE,
            this.onActivityChange,
            this,
          ),
          this.stage.addEventListener(
            egret.Event.DEACTIVATE,
            this.onActivityChange,
            this,
          ),
          (window.dz_onAppDeactive = function () {
            e.onActivityChange(new egret.Event(egret.Event.DEACTIVATE));
          }),
          (window.dz_onAppActive = function () {
            e.onActivityChange(new egret.Event(egret.Event.ACTIVATE));
          });
      }),
      (e.prototype.setDefaultLobby = function () {
        var t = DZUtils.getQueryString("lobbyid");
        if (null != t) {
          var e = [
            DataManager.LOBBY_ID_FLAGSHIP,
            DataManager.LOBBY_ID_BACOM,
            DataManager.LOBBY_ID_VIP,
            DataManager.LOBBY_ID_MI,
            DataManager.LOBBY_ID_GUOJI,
            DataManager.LOBBY_ID_EGAMES,
            DataManager.LOBBY_ID_LUNPAN,
            DataManager.LOBBY_ID_SHAIBAO,
            DataManager.LOBBY_ID_DUOTAI,
            DataManager.LOBBY_ID_YAZHOU,
            DataManager.LOBBY_ID_EUROPE,
            DataManager.LOBBY_ID_MIPAI,
          ];
          e.forEach(function (e) {
            t == "" + e && (DataManager.ax_lobbyid = e);
          });
          var i = DZUtils.getQueryString("tableid");
          null != i && (DataManager.ax_tableid = Number(i));
        }
      }),
      (e.prototype.getResHttp = function () {
        if (window.game_login_type < 3) {
          var t = window.resoyrce_http;
          if (null != t && void 0 != t && "" != t) return t + "/resource/";
        }
        return "resource/";
      }),
      (e.prototype.getResHttp2 = function () {
        if (window.game_login_type < 3) {
          var t = window.resoyrce_http;
          if (null != t && void 0 != t && "" != t) return "";
        }
        return "resource/";
      }),
      (e.prototype.onActivityChange = function (t) {
        void 0 === t && (t = null),
          (e.isOnActivity = t.type == egret.Event.ACTIVATE),
          e.isOnActivity && DataManager.userName
            ? sound.SoundManager.getInstance().playBg("bgmusic_mp3")
            : sound.SoundManager.getInstance().stopBg();
      }),
      (e.prototype.onFirstTouch = function (t) {
        return __awaiter(this, void 0, void 0, function () {
          return __generator(this, function (e) {
            return (
              (this.isClick_bg = !0),
              this.stage.removeEventListener(t.type, this.onFirstTouch, this),
              dzxx.SoundManager.onTouchInit(),
              1 == sound.SoundManager.getInstance().getBgOn() &&
                sound.SoundManager.getInstance().playBg("bgmusic_mp3"),
              [2]
            );
          });
        });
      }),
      (e.prototype.onSECONDTouch = function (t) {
        void 0 === t && (t = null),
          this.stage.removeEventListener(t.type, this.onSECONDTouch, this),
          e.isOnActivity;
      }),
      (e.prototype.onConfigComplete = function (t) {
        Preloadingfun("关闭转圈"),
          RES.removeEventListener(
            RES.ResourceEvent.CONFIG_COMPLETE,
            this.onConfigComplete,
            this,
          );
        var e = new eui.Theme("resource/default.thm.json", this.stage);
        e.addEventListener(
          eui.UIEvent.COMPLETE,
          this.onThemeLoadComplete,
          this,
        ),
          RES.addEventListener(
            RES.ResourceEvent.GROUP_COMPLETE,
            this.onResourceLoadComplete,
            this,
          ),
          RES.addEventListener(
            RES.ResourceEvent.GROUP_LOAD_ERROR,
            this.onResourceLoadError,
            this,
          ),
          RES.addEventListener(
            RES.ResourceEvent.GROUP_PROGRESS,
            this.onResourceProgress,
            this,
          ),
          RES.addEventListener(
            RES.ResourceEvent.ITEM_LOAD_ERROR,
            this.onItemLoadError,
            this,
          ),
          this.loadingView ||
            ((this.loadingView = new LoadingUI()),
            this.stage.addChild(this.loadingView),
            this.loadingView.createView());
        var i = document.URL;
        (i = i.toLocaleUpperCase()),
          i.indexOf("/168API/") > -1
            ? RES.loadGroup("preload168", 0, this.loadingView)
            : RES.loadGroup("preload", 0, this.loadingView);
      }),
      (e.prototype.onThemeLoadComplete = function () {
        (this.isThemeLoadEnd = !0), this.createScene();
      }),
      (e.prototype.onResourceLoadComplete = function (t) {
        ("preload" == t.groupName || "preload168" == t.groupName) &&
          (RES.removeEventListener(
            RES.ResourceEvent.GROUP_COMPLETE,
            this.onResourceLoadComplete,
            this,
          ),
          RES.removeEventListener(
            RES.ResourceEvent.GROUP_LOAD_ERROR,
            this.onResourceLoadError,
            this,
          ),
          RES.removeEventListener(
            RES.ResourceEvent.GROUP_PROGRESS,
            this.onResourceProgress,
            this,
          ),
          RES.removeEventListener(
            RES.ResourceEvent.ITEM_LOAD_ERROR,
            this.onItemLoadError,
            this,
          ),
          (this.isResourceLoadEnd = !0),
          this.createScene());
      }),
      (e.prototype.createScene = function () {
        this.isThemeLoadEnd &&
          this.isResourceLoadEnd &&
          this.startCreateScene();
      }),
      (e.prototype.onItemLoadError = function (t) {
        console.warn("Url:" + t.resItem.url + " has failed to load");
      }),
      (e.prototype.onResourceLoadError = function (t) {
        console.warn("Group:" + t.groupName + " has failed to load"),
          this.onResourceLoadComplete(t);
      }),
      (e.prototype.onResourceProgress = function (t) {
        "preload" == t.groupName;
      }),
      (e.prototype.onEgretStageFocusChange = function (t) {
        t.type == egret.FocusEvent.FOCUS_IN
          ? ((this.currentStageFocusTarget = t.target),
            (e.currentStageFocusTargetIsTextField = egret.is(
              this.currentStageFocusTarget,
              egret.getQualifiedClassName(egret.TextField),
            )))
          : t.type == egret.FocusEvent.FOCUS_OUT &&
            ((this.currentStageFocusTarget = null),
            (e.currentStageFocusTargetIsTextField = !1));
      }),
      (e.prototype.autoCheckWinSize = function () {
        var t = this;
        this.checkWindowSizeIntervalID = setInterval(function () {
          if (!e.currentStageFocusTargetIsTextField) {
            var i = window.innerWidth,
              a = window.innerHeight;
            (i != t.lastWindowW || a != t.lastWindowH) &&
              ((t.lastWindowW = i),
              (t.lastWindowH = a),
              clearTimeout(t.updateSizeTimeoutID),
              t.updateSizeNow());
          }
        }, 100);
      }),
      Object.defineProperty(e.prototype, "egret_playerDiv", {
        get: function () {
          var t = document.body.getElementsByClassName("egret-player")[0];
          return t;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(e.prototype, "egret_playerCanvas", {
        get: function () {
          for (
            var t = this.egret_playerDiv, e = 0;
            e < t.childNodes.length;
            e++
          ) {
            var i = t.childNodes[e];
            if (i instanceof HTMLCanvasElement) return i;
          }
          return null;
        },
        enumerable: !0,
        configurable: !0,
      }),
      (e.prototype.updateSizeNow = function () {
        if (!e.currentStageFocusTargetIsTextField) {
          var t = window.innerWidth,
            i = window.innerHeight,
            a = t + "px",
            n = i + "px";
          (this.egret_playerDiv.style.width = a),
            (this.egret_playerDiv.style.height = n);
          var s = this.egret_playerDiv["egret-player"];
          s && s.updateScreenSize && s.updateScreenSize(),
            this.lobbyView && this.lobbyView.updateSize(),
            SelectTable.onResize(),
            game.GameChangeDuotaiTab.onResize(),
            Alert.waitUI && Alert.waitUI.onResize(),
            Alert.pingUI && Alert.pingUI.onResize(),
            this.isfirstvisibleset ||
              ((this.visible = !0), (this.isfirstvisibleset = !0));
        }
      }),
      (e.prototype.SetOnorientationChange = function () {
        (window.onorientationchange = this.onorientationChangeFun),
          this.onorientationChangeFun();
      }),
      (e.prototype.onorientationChangeFun = function () {
        if (90 == window.orientation || -90 == window.orientation)
          Alert.showScreenWait(LangUtils.LANG_MAP.dzg_main_10017);
        else {
          Alert.hideScreenWait();
          var t = this.egret_playerDiv["egret-player"];
          t && t.updateScreenSize && t.updateScreenSize();
        }
      }),
      (e.isOnActivity = !0),
      (e.currentStageFocusTargetIsTextField = !1),
      e
    );
  })(eui.UILayer);
__reflect(Main.prototype, "Main");
var DebugPlatform = (function () {
  function t() {}
  return (
    (t.prototype.getUserInfo = function () {
      return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (t) {
          return [
            2,
            {
              nickName: "username",
            },
          ];
        });
      });
    }),
    (t.prototype.login = function () {
      return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (t) {
          return [2];
        });
      });
    }),
    t
  );
})();
__reflect(DebugPlatform.prototype, "DebugPlatform", ["Platform"]);
var DEVICE_APP;
!(function (t) {
  (t[(t.BROWSER = 0)] = "BROWSER"), (t[(t.APP = 1)] = "APP");
})(DEVICE_APP || (DEVICE_APP = {})),
  window.platform || (window.platform = new DebugPlatform());
var ThemeAdapter = (function () {
  function t() {}
  return (
    (t.prototype.getTheme = function (t, e, i, a) {
      function n(t) {
        e.call(a, t);
      }
      function s(e) {
        e.resItem.url == t &&
          (RES.removeEventListener(RES.ResourceEvent.ITEM_LOAD_ERROR, s, null),
          i.call(a));
      }
      var r = this;
      if ("undefined" != typeof generateEUI)
        egret.callLater(function () {
          e.call(a, generateEUI);
        }, this);
      else if ("undefined" != typeof generateEUI2)
        RES.getResByUrl(
          "resource/gameEui.json",
          function (t, i) {
            window.JSONParseClass.setData(t),
              egret.callLater(function () {
                e.call(a, generateEUI2);
              }, r);
          },
          this,
          RES.ResourceItem.TYPE_JSON,
        );
      else if ("undefined" != typeof generateJSON)
        if (t.indexOf(".exml") > -1) {
          var o = t.split("/");
          o.pop();
          var h = o.join("/") + "_EUI.json";
          generateJSON.paths[t]
            ? egret.callLater(function () {
                e.call(a, generateJSON.paths[t]);
              }, this)
            : RES.getResByUrl(
                h,
                function (i) {
                  window.JSONParseClass.setData(i),
                    egret.callLater(function () {
                      e.call(a, generateJSON.paths[t]);
                    }, r);
                },
                this,
                RES.ResourceItem.TYPE_JSON,
              );
        } else
          egret.callLater(function () {
            e.call(a, generateJSON);
          }, this);
      else
        RES.addEventListener(RES.ResourceEvent.ITEM_LOAD_ERROR, s, null),
          RES.getResByUrl(t, n, this, RES.ResourceItem.TYPE_TEXT);
    }),
    t
  );
})();
__reflect(ThemeAdapter.prototype, "ThemeAdapter", ["eui.IThemeAdapter"]);
var BetLimitAction = (function () {
  function t() {
    (this.NO_DATA = -1), (this.NO_POINT = -2);
  }
  return (
    (t.getIns = function () {
      return t.ints || (t.ints = new t()), t.ints;
    }),
    (t.prototype.check = function (t, e) {
      return (
        void 0 === e && (e = null),
        null == this.gameLimit
          ? !1
          : null == this.gameLimit[t]
            ? !1
            : null == this.gameLimit[t][e]
              ? !1
              : !0
      );
    }),
    (t.prototype.setGameLimit = function (t, e, i) {
      void 0 === i && (i = null),
        null == this.gameLimit && (this.gameLimit = {}),
        null == this.gameLimit[t] && (this.gameLimit[t] = {}),
        (this.gameLimit[t][i] = this.setLimit(e));
    }),
    (t.prototype.setMultiTableLimit = function (t, e) {
      (t = t),
        null == this.gameLimit && (this.gameLimit = {}),
        null == this.gameLimit[t] && (this.gameLimit[t] = {}),
        (this.gameLimit[t][DataManager.currentLimitKey] = this.setLimit(e));
    }),
    (t.prototype.getGameLimit = function (t, e, i, a, n, s) {
      return (
        void 0 === a && (a = null),
        void 0 === n && (n = 0 / 0),
        void 0 === s && (s = null),
        (s = s ? s : DataManager.currentLimitKey),
        null == this.gameLimit
          ? this.NO_DATA
          : null == this.gameLimit[t]
            ? this.NO_DATA
            : null == a
              ? this.getLimit(this.gameLimit[t][s], e, i)
              : this.getLimitOppo(this.gameLimit[t][s], e, i, a, n)
      );
    }),
    (t.prototype.getGameLimits = function (t, e) {
      return (
        (t = t),
        null == this.gameLimit
          ? null
          : null == this.gameLimit[t]
            ? null
            : null == this.gameLimit[t][DataManager.currentLimitKey]
              ? null
              : this.gameLimit[t][DataManager.currentLimitKey][e]
      );
    }),
    (t.prototype.getTableAllLimits = function (t) {
      return null == this.gameLimit
        ? null
        : null == this.gameLimit[t]
          ? null
          : null == this.gameLimit[t][DataManager.currentLimitKey]
            ? null
            : this.gameLimit[t][DataManager.currentLimitKey];
    }),
    (t.prototype.checkGameLimit = function (t, e, i, a, n, s) {
      return (
        void 0 === a && (a = null),
        void 0 === n && (n = 0 / 0),
        void 0 === s && (s = null),
        (s = s ? s : DataManager.currentLimitKey),
        null == this.gameLimit
          ? !1
          : null == this.gameLimit[t]
            ? !1
            : null == a
              ? this.checkLimit(this.gameLimit[t][s], e, i)
              : this.checkLimitOppo(this.gameLimit[t][s], e, i, a, n)
      );
    }),
    (t.prototype.clearGameLimit = function () {}),
    (t.prototype.getMultiTableLimit = function (t, e, i, a, n) {
      return (
        void 0 === a && (a = null),
        void 0 === n && (n = 0 / 0),
        null == this.gameLimit
          ? this.NO_DATA
          : null == this.gameLimit[t]
            ? this.NO_DATA
            : null == a
              ? this.getLimit(
                  this.gameLimit[t][DataManager.currentLimitKey],
                  e,
                  i,
                )
              : this.getLimitOppo(
                  this.gameLimit[t][DataManager.currentLimitKey],
                  e,
                  i,
                  a,
                  n,
                )
      );
    }),
    (t.prototype.getMultiTableLimits = function (t, e) {
      return (
        (t = t),
        null == this.gameLimit
          ? null
          : null == this.gameLimit[t]
            ? null
            : null == this.gameLimit[t][DataManager.currentLimitKey]
              ? null
              : this.gameLimit[t][DataManager.currentLimitKey][e]
      );
    }),
    (t.prototype.checkMultiTableLimit = function (t, e, i, a, n) {
      return (
        void 0 === a && (a = null),
        void 0 === n && (n = 0 / 0),
        null == this.gameLimit
          ? !1
          : null == this.gameLimit[t]
            ? !1
            : null == a
              ? this.checkLimit(
                  this.gameLimit[t][DataManager.currentLimitKey],
                  e,
                  i,
                )
              : this.checkLimitOppo(
                  this.gameLimit[t][DataManager.currentLimitKey],
                  e,
                  i,
                  a,
                  n,
                )
      );
    }),
    (t.prototype.clearMultiTableLimit = function () {}),
    (t.prototype.setLimit = function (t) {
      if (null == t) return null;
      var e = {};
      for (var i in t)
        (e[i] = String(t[i]).split("-")),
          (e[i][0] = parseInt(e[i][0])),
          (e[i][1] = parseInt(e[i][1]));
      return e;
    }),
    (t.prototype.getLimit = function (t, e, i) {
      return null == t
        ? this.NO_DATA
        : null == t[e]
          ? this.NO_POINT
          : i <= t[e][1]
            ? i
            : t[e][1];
    }),
    (t.prototype.getLimitOppo = function (t, e, i, a, n) {
      return null == t
        ? this.NO_DATA
        : null == t[e]
          ? this.NO_POINT
          : i <= n + t[e][1]
            ? i
            : n + t[e][1];
    }),
    (t.prototype.checkLimit = function (t, e, i) {
      return null != t[e] && i >= t[e][0] && i <= t[e][1] ? !0 : !1;
    }),
    (t.prototype.checkLimitOppo = function (t, e, i, a, n) {
      return null != t[e] && i >= t[e][0] ? !0 : !1;
    }),
    t
  );
})();
__reflect(BetLimitAction.prototype, "BetLimitAction");
var BetLimitLoadAction = (function () {
  function t(t, e) {
    (this.tableid = 0),
      (this.count = 0),
      (this.tableid = t.tableid),
      (this.key = e),
      this.loadStart();
  }
  return (
    Object.defineProperty(t.prototype, "url", {
      get: function () {
        return DataManager.HTTP_HOST + "/client/ClientBetPoint.jsp";
      },
      enumerable: !0,
      configurable: !0,
    }),
    (t.prototype.loadStart = function () {
      new HttpPostHandle(
        this.url + this.queryUrl,
        null,
        this.onComplete,
        this,
        "get",
        !1,
      );
    }),
    (t.prototype.onComplete = function (t) {
      t &&
        0 == t.Result &&
        BetLimitAction.getIns().setGameLimit(this.tableid, t.Point, this.key),
        this.dispose();
    }),
    (t.prototype.onIoError = function (t) {
      0 == this.count
        ? (ShareUtils.callLater(1e3, this.loadStart, this), this.count++)
        : this.dispose();
    }),
    (t.prototype.dispose = function () {
      this.key = null;
    }),
    Object.defineProperty(t.prototype, "queryUrl", {
      get: function () {
        var t = "?UserId=" + DataManager.userid;
        return (
          (t += "&TableId=" + this.tableid),
          (t += "&LimitKey=" + this.key),
          (t += "&t=" + new Date().getTime()),
          (t += "&currencyId=" + MultiCurrencyManager.currencyType)
        );
      },
      enumerable: !0,
      configurable: !0,
    }),
    t
  );
})();
__reflect(BetLimitLoadAction.prototype, "BetLimitLoadAction");
var ButtonAction = (function () {
  function t() {}
  return (
    (t.addEvent = function (t, e, i) {
      for (var a in t) {
        var n = t[a];
        n && n.addEventListener(egret.TouchEvent.TOUCH_TAP, e, i);
      }
    }),
    (t.addtap = function (e, i, a) {
      e.addEventListener(egret.TouchEvent.TOUCH_BEGIN, t.onTB, null),
        e.addEventListener(egret.TouchEvent.TOUCH_TAP, i, a);
    }),
    (t.onTB = function (e) {
      var i = e.currentTarget;
      (t.touchobj = i),
        ShareUtils.game_stage.addEventListener(
          egret.TouchEvent.TOUCH_CANCEL,
          t.onTU,
          null,
          !0,
        ),
        ShareUtils.game_stage.addEventListener(
          egret.TouchEvent.TOUCH_END,
          t.onTU,
          null,
          !0,
        );
    }),
    (t.onTU = function (e) {
      var i = t.touchobj;
      i && (t.touchobj = null),
        ShareUtils.game_stage.removeEventListener(
          egret.TouchEvent.TOUCH_CANCEL,
          t.onTU,
          null,
          !0,
        ),
        ShareUtils.game_stage.removeEventListener(
          egret.TouchEvent.TOUCH_END,
          t.onTU,
          null,
          !0,
        );
    }),
    (t.removetap = function (e, i, a) {
      e &&
        (e.removeEventListener(egret.TouchEvent.TOUCH_BEGIN, t.onTB, null),
        e.removeEventListener(egret.TouchEvent.TOUCH_TAP, i, a));
    }),
    (t.removeEvent = function (t, e, i) {
      for (var a in t) {
        var n = t[a];
        n && n.removeEventListener(egret.TouchEvent.TOUCH_TAP, e, i);
      }
    }),
    (t.setBtnEnable = function (t, e) {
      t.touchEnabled != e && (t.touchEnabled = e);
    }),
    t
  );
})();
__reflect(ButtonAction.prototype, "ButtonAction");
var GameBetAction = (function () {
  function t(t, e, i, a, n) {
    void 0 === a && (a = !1),
      void 0 === n && (n = null),
      (this.tempbetlist = {}),
      (this.countStopAtTime = 0),
      (this.timer = new egret.Timer(200)),
      (this.startTime = 0),
      (this._canBet = !1),
      (this.save_state_bool = !1),
      (this.bet_length = 0),
      (this.notBetCount = 0),
      (this.state = -1),
      (this.isLonghu = !1),
      (this.isClickBet = !1),
      (this.alreadyFinishedFlag = !1),
      (this.counttipstxt_bg_dis = 20),
      (this.bet_allWidthHeight_hash = {}),
      (this.oldTime_VALUE = 0),
      (this.hastouchedandbet = !1),
      (this.alladdedcoindisplays = []),
      (this.alltempcoindisplays = []),
      (this.DUI = t),
      (this.betList = e),
      (this._repeatList = []),
      (this._responseList = []),
      (this.tableState = i),
      (this.isLonghu = a),
      (this.bet_allWidthHeight_hash = n),
      (this.showAnimate = new GameBetShowAnimate()),
      this.initUI(),
      this.addEvent();
  }
  return (
    (t.prototype.clearBigSmallRepeat = function () {
      for (var t in this._repeatList)
        (null != this._repeatList[t].BIG ||
          null != this._repeatList[t].SMALL) &&
          delete this._repeatList[t];
    }),
    (t.prototype.clearSuper6Repeat = function () {
      if (DataManager.curTable.gameType == DataManager.GAME_TYPE_NIUNIU)
        return this.clearNiuniuRepeat();
      var t = [];
      for (var e in this._repeatList)
        (null == this._repeatList[e].SS || 0 != DataManager.isNOCOM) &&
          ((null == this._repeatList[e].BANKER &&
            this._repeatList[e].BANKER <= 0) ||
            (null == this._repeatList[e].PLAYER &&
              this._repeatList[e].PLAYER <= 0) ||
            (null == this._repeatList[e].TILE &&
              this._repeatList[e].TILE <= 0) ||
            (null == this._repeatList[e].BP && this._repeatList[e].BP <= 0) ||
            (null == this._repeatList[e].PP && this._repeatList[e].PP <= 0) ||
            t.push(this._repeatList[e]));
      return t;
    }),
    (t.prototype.clearNiuniuRepeat = function () {
      var t = [];
      for (var e in this._repeatList)
        (null != this._repeatList[e].FAN_PLAYER1 &&
          this._repeatList[e].FAN_PLAYER1 > 0 &&
          this._repeatList[e].FAN_PLAYER1 > DataManager.curTable.maxlimit) ||
          this._repeatList[e].FAN_PLAYER1 < DataManager.curTable.minlimit ||
          (null != this._repeatList[e].PLAYER1 &&
            this._repeatList[e].PLAYER1 > 0 &&
            this._repeatList[e].PLAYER1 > DataManager.curTable.maxlimit) ||
          this._repeatList[e].PLAYER1 < DataManager.curTable.minlimit ||
          (null != this._repeatList[e].FAN_PLAYER2 &&
            this._repeatList[e].FAN_PLAYER2 > 0 &&
            this._repeatList[e].FAN_PLAYER2 > DataManager.curTable.maxlimit) ||
          this._repeatList[e].FAN_PLAYER2 < DataManager.curTable.minlimit ||
          (null != this._repeatList[e].PLAYER2 &&
            this._repeatList[e].PLAYER2 > 0 &&
            this._repeatList[e].PLAYER2 > DataManager.curTable.maxlimit) ||
          this._repeatList[e].PLAYER2 < DataManager.curTable.minlimit ||
          (null != this._repeatList[e].FAN_PLAYER3 &&
            this._repeatList[e].FAN_PLAYER3 > 0 &&
            this._repeatList[e].FAN_PLAYER3 > DataManager.curTable.maxlimit) ||
          this._repeatList[e].FAN_PLAYER3 < DataManager.curTable.minlimit ||
          (null != this._repeatList[e].PLAYER3 &&
            this._repeatList[e].PLAYER3 > 0 &&
            this._repeatList[e].PLAYER3 > DataManager.curTable.maxlimit) ||
          this._repeatList[e].PLAYER3 < DataManager.curTable.minlimit ||
          t.push(this._repeatList[e]);
      return t;
    }),
    Object.defineProperty(t.prototype, "curList", {
      get: function () {
        return null == this._curList && (this._curList = {}), this._curList;
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t.prototype, "joinResponseList", {
      get: function () {
        return this.joinList(this._responseList);
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t.prototype, "btnRepeat", {
      get: function () {
        return this.DUI.btnRepet;
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t.prototype, "btnSure", {
      get: function () {
        return this.DUI.btnSure;
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t.prototype, "btnCancel", {
      get: function () {
        return this.DUI.btnCancel;
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t.prototype, "btnX2", {
      get: function () {
        return this.DUI.btnX2;
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t.prototype, "coinsAlpha", {
      get: function () {
        return 0.5;
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t.prototype, "counter", {
      get: function () {
        return this.DUI.counter;
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t.prototype, "micounter", {
      get: function () {
        return this.DUI.micounter;
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t.prototype, "counttipstxt", {
      get: function () {
        return this.DUI.counttipstxt;
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t.prototype, "txttotalbet", {
      get: function () {
        return this.DUI.txttotalbet;
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t.prototype, "counttipstxt_bg", {
      get: function () {
        return this.DUI.counttipstxt_bg;
      },
      enumerable: !0,
      configurable: !0,
    }),
    (t.prototype.initUI = function () {
      (this.txttotalbet.text = "0"),
        this.betEnd(!1),
        this.setBtnState(1, !1),
        this.setBtnState(2, !1),
        this.setBtnState(100, !1),
        dzxx.DZEff.loadeff(dzxx.DZEff.winflash);
    }),
    (t.prototype.showTime = function (t) {
      var e = EnterFrameRunner.getInstance().getStartTime(this.countStopAtTime);
      5 >= e && e > 0
        ? this.counter &&
          ((this.counter.timeTextColor = 16711680),
          (this.counter.isCirRed = !0))
        : this.counter &&
          ((this.counter.timeTextColor = 16777215),
          (this.counter.isCirRed = !1)),
        e >= 1
          ? this.counter && (this.counter.time = e)
          : this.counter &&
            ((this.counter.timeTextColor = 16711680),
            (this.counter.isCirRed = !0),
            (this.counter.time = 0));
    }),
    (t.prototype.reSet = function (t, e) {
      (this.DUI = t),
        (this.betList = e),
        this.betEnd(),
        ButtonAction.removeEvent(e, this.betClick, this),
        ButtonAction.addEvent(e, this.betClick, this),
        this.showAnimate.reSet(),
        this.checkBtnRepeat();
    }),
    (t.prototype.isBeting = function () {
      return this.counter ? this.counter.time > 0 : !1;
    }),
    (t.prototype.addEvent = function () {
      LangUtils.addEventListener(this.langChange, this),
        ButtonAction.addEvent(
          [this.btnRepeat, this.btnSure, this.btnCancel, this.btnX2],
          this.btnClick,
          this,
        ),
        ButtonAction.addEvent(this.betList, this.betClick, this);
    }),
    (t.prototype.gotoView = function (t) {
      switch (t.view) {
        case View.LOGIN_VIEW:
          break;
        case View.LOBBY_VIEW:
          this._responseList = [];
          break;
        case View.BACC_GAME_VIEW:
      }
    }),
    (t.prototype.setCounttipstxtWidth = function () {
      (this.counttipstxt_bg.width =
        this.counttipstxt.width + this.counttipstxt_bg_dis),
        this.counttipstxt_bg.width < 110 && (this.counttipstxt_bg.width = 110);
    }),
    (t.prototype.tableInfo = function (t) {
      "S" == t.tablestate || "RP" == t.tablestate
        ? ((this.countStopAtTime = 0),
          (this.TXT_STATE =
            "RP" == t.tablestate
              ? "Maintaining_Table_Card"
              : "M_Clear_Table_Card"),
          "S" == t.tablestate &&
            ((this.txttotalbet.text = "0"),
            (this._responseList = []),
            this.clearCoins(!0),
            (this._curList_send = null),
            this.updatebetnumgroups(),
            this.DUI.betAmountConfig()),
          this.counter &&
            ((this.counttipstxt.text = LangUtils.get(this.TXT_STATE)),
            this.setCounttipstxtWidth()))
        : "Maintaining_Table_Card" == this.TXT_STATE
          ? this.counter &&
            ((this.counter.timeTextColor = 16711680),
            (this.counter.isCirRed = !0),
            (this.counter.time = 0),
            (this.counttipstxt.text = ""),
            this.setCounttipstxtWidth())
          : "D" == t.tablestate
            ? (this.timerStop(),
              this.d_state_ui(),
              this.counter &&
                ((this.counter.timeTextColor = 16711680),
                (this.counter.isCirRed = !0),
                (this.counter.time = 0)))
            : "WOP" == t.tablestate &&
              ((this.counttipstxt.text = LangUtils.get("SB0")),
              (this.counttipstxt.textColor = 16777215),
              this.setCounttipstxtWidth()),
        this.updatebetnumgroups();
    }),
    (t.prototype.betStart = function (t) {
      (this.alreadyFinishedFlag = !1),
        3 == t.bettype
          ? (this.counter &&
              ((this.counttipstxt.textColor = 16267834),
              (this.counttipstxt.text = LangUtils.get("SB2")),
              this.setCounttipstxtWidth()),
            this.DUI.setResultTip(16243228, "BET_STOP"),
            dzxx.SoundManager.inst.playBetting(dzxx.SoundManager.bettingStop))
          : ((this.txttotalbet.text = "0"),
            (this._responseList = []),
            this.clearCoins(!0),
            (this._curList_send = null),
            this.setBetStartTimeCount(t),
            this.updatebetnumgroups());
    }),
    (t.prototype.setBetStartTimeCount = function (e) {
      this.timerStop(),
        (this.state = t.STATE_ACCEPT_BET),
        this.checkBtnRepeat(),
        (this.betStartData = e),
        (this.countStopAtTime = new Date().getTime() + e.countdown),
        this.counter &&
          ((this.counter.visible = !0),
          (this.counttipstxt.textColor = 16777215),
          (this.counttipstxt.text = LangUtils.get("SB0")),
          this.setCounttipstxtWidth(),
          (this.counter.countStopAtTime = this.countStopAtTime),
          (this.counter.maxTime =
            DataManager.getCountMaxTime(e.shoeSeq, e.gameSeq) / 1e3)),
        this.betEnabledTrue();
      var i = EnterFrameRunner.getTimeTickNumber(e.countdown, e.messageID);
      return 0 > i
        ? (this.counter &&
            ((this.counter.timeTextColor = 16711680),
            (this.counter.isCirRed = !0),
            (this.counter.time = 0)),
          this.betEnd(),
          void this.DUI.setResultTip(16243228, "BET_STOP"))
        : ((this.TXT_STATE = "Start"),
          this.timer.start(),
          this.timer.addEventListener(
            egret.TimerEvent.TIMER,
            this.timer_tick,
            this,
          ),
          (this.startTime = new Date().getTime() - i),
          void (this.canBet = !0));
    }),
    (t.prototype.setMiTimeCount = function (t) {
      this.timerStop();
      var e = t.countdown,
        i = Math.floor(e / 1e3);
      (this.countStopAtTime = new Date().getTime() + e),
        this.micounter &&
          ((this.micounter.visible = !0),
          (this.micounter.countStopAtTime = this.countStopAtTime),
          (this.micounter.maxTime = i),
          (this.micounter.time = i),
          (this.micounter.tipsTextEnabled = !0),
          this.timer.addEventListener(
            egret.TimerEvent.TIMER,
            this.onmipaitimer,
            this,
          ),
          this.timer.start());
    }),
    (t.prototype.onmipaitimer = function (t) {
      this.micounter.tick(this.micounter.maxTime, this.countStopAtTime);
    }),
    (t.prototype.timer_tick = function (e) {
      var i = Math.ceil((this.countStopAtTime - new Date().getTime()) / 1e3);
      if (
        ((i = Math.max(0, i)),
        this.counter,
        10 >= i && this.countStopAtTime > 0)
      ) {
        var a = egret.getTimer();
        a - this.oldTime_VALUE > 1e3 &&
          (this.palyTimeSound(), (this.oldTime_VALUE = a));
      }
      10 >= i && this.countStopAtTime > 0
        ? this.counter &&
          ((this.counter.timeTextColor = 16711680),
          (this.counter.isCirRed = !0))
        : this.counter &&
          ((this.counter.timeTextColor = 16777215),
          (this.counter.isCirRed = !1)),
        i >= 1
          ? this.counter && (this.counter.time = i)
          : ((this.state = t.STATE_DEALING),
            this.counter &&
              ((this.counter.timeTextColor = 16711680),
              (this.counter.isCirRed = !0),
              (this.counter.time = 0)),
            this.betEnd(),
            DataManager.curLobbyidIsMi
              ? this.checkBtnSure()
              : this.cleartempcoins(),
            this.checkBetCount());
    }),
    (t.prototype.palyTimeSound = function () {
      dzxx.SoundManager.inst.playSound(dzxx.SoundManager.time_alert);
    }),
    (t.prototype.seatBetting = function (t) {
      if (
        t.option &&
        "" != t.option &&
        0 != t.amount &&
        (DataManager.GAME_TYPE_NIUNIU != DataManager.curTable.gameType ||
          -1 == t.option.indexOf("YAJIN"))
      ) {
        var e = t.option,
          i = {};
        (i[e] = t.amount),
          this._responseList.push(i),
          this.hastouchedandbet || this.updateCoins(this._responseList, 1),
          (this.txttotalbet.text = ShareUtils.toMoney2_oo(
            this.responseTotalBet,
          ));
        this.joinResponseList;
        if (this.alltempcoindisplays.length > 0)
          for (var a = 0; a < this.alltempcoindisplays.length; a++) {
            var n = this.alltempcoindisplays[a],
              s = n.name.split("_")[0];
            s == t.option &&
              ((n.alpha = 1),
              delete this.tempbetlist[t.option],
              this.alltempcoindisplays.splice(a, 1),
              this.alladdedcoindisplays.push(n),
              a--);
          }
        else if (this.hastouchedandbet) {
          var r = GameUtils.getCoins(t.amount);
          this.addCoins(r, t.option);
        }
        this.updatebetnumgroups(),
          this.DUI.setNOCOMbuttonState(),
          DataManager.curLobbyidIsMi &&
            "D" == this.tableState.tableInfo.tablestate &&
            this.d_state_ui(),
          this.checkBtnX2();
      }
    }),
    (t.prototype.d_state_ui = function () {
      this.cleartempcoins(),
        this.setBtnState(1, !1),
        this.setBtnState(2, !1),
        this.setBtnState(3, !1),
        this.setBtnState(5, !1),
        this.setBtnState(100, !1),
        this.setBetListEnable(!1),
        (this.TXT_STATE = "M_Started"),
        (this.counttipstxt.text = LangUtils.get(this.TXT_STATE)),
        (this.counttipstxt.textColor = DataManager.BANKER_COLOR),
        this.setCounttipstxtWidth();
    }),
    (t.prototype.updatebetnumgroups = function () {
      this.DUI.updatebetnumgroups();
    }),
    (t.prototype.betResponse = function (t) {
      1 == t.result
        ? ((this._repeatList = this._responseList),
          this.cleartempcoins(),
          this.ok_curList_send(t),
          (this.notBetCount = 0),
          dzxx.SoundManager.inst.playSound(dzxx.SoundManager.Bet_success))
        : (this.cleartempcoins(),
          (this._curList_send = null),
          this.betEnabledTrue()),
        (this._curList = null),
        ShareUtils.callLater(
          1e3,
          function () {
            (this.canBet = !0), (this.isClickBet = !1);
          },
          this,
        );
    }),
    (t.prototype.seatDeal = function () {
      var t = "M_Started" == this.TXT_STATE || "M_Settling" == this.TXT_STATE;
      if ((this.d_state_ui(), 0 == t)) {
        (this.TXT_STATE =
          "Maintaining_Table_Card" == this.TXT_STATE
            ? "Maintaining_Table_Card"
            : "M_Started"),
          -1 != LangUtils.saveUrl.indexOf("EN"),
          this.counter &&
            ((this.counttipstxt.textColor = DataManager.BANKER_COLOR),
            (this.counttipstxt.text = LangUtils.get(this.TXT_STATE)),
            this.setCounttipstxtWidth());
        try {
          this.DUI.setNOCOMbuttonState();
        } catch (e) {}
      }
      this._curList &&
        !t &&
        ((this._curList = null), (this._curList_send = null));
    }),
    (t.prototype.betResult = function (e) {
      if (
        (this._responseList.length && (this._repeatList = this._responseList),
        (this._responseList = []),
        this.state != t.STATE_RESULT && (this.notBetCount += 1),
        (this.state = t.STATE_RESULT),
        this.showAnimate.show(this.DUI, e.winOptions),
        (this.TXT_STATE = "M_Settling"),
        this.counter &&
          ((this.counttipstxt.text = LangUtils.get(this.TXT_STATE)),
          this.setCounttipstxtWidth()),
        this.betEnd(!1),
        this.clearCoins(!0),
        this.updatebetnumgroups(),
        0 != e.winAmount)
      )
        if (e.winAmount > 0) {
          var i = t.gamewintips || new GameWinTips();
          (t.gamewintips = i),
            (i.text = LangUtils.get("dzg_game_longhu_11") + e.winAmount),
            (i.textcolor = 16243228),
            i.show();
          dzxx.DZEff.playwinflasheff();
          dzxx.SoundManager.inst.playSound(dzxx.SoundManager.Win_Game);
        } else
          e.winAmount < 0 &&
            this.DUI.setResultTip(
              DataManager.BANKER_COLOR,
              LangUtils.get("dzg_game_longhu_12") + e.winAmount,
            );
    }),
    (t.prototype.langChange = function (t) {
      void 0 === t && (t = null),
        this.counter &&
          ((this.counttipstxt.text =
            LangUtils.LANG_MAP[this.TXT_STATE] || LangUtils.get("SB0") || ""),
          this.setCounttipstxtWidth()),
        -1 != LangUtils.saveUrl.indexOf("EN") && "M_Started" == this.TXT_STATE;
    }),
    (t.prototype.betEnabledTrue = function () {
      this.setBetListEnable(!0), this.checkBtnRepeat(), this.checkBtnSure();
    }),
    (t.prototype.betEnd = function (t) {
      void 0 === t && (t = !0),
        this.timerStop(),
        DataManager.curLobbyidIsMi
          ? this.tableState &&
            "WOP" == this.tableState.tableInfo.tablestate &&
            (this._canBet = !0)
          : (this.setBtnState(1, !1),
            this.setBtnState(2, !1),
            this.setBetListEnable(!1),
            this.setBtnState(100, !1)),
        this.setBtnState(3, !1),
        this.setBtnState(5, !1);
    }),
    (t.prototype.checkBtnSure = function () {
      this.setBtnState(2, this.curTotalBet > 0), this.checkBtnX2();
    }),
    (t.prototype.checkBtnX2 = function () {
      this.setBtnState(100, this.responseTotalBet > 0 || this.curTotalBet > 0);
    }),
    (t.prototype.checkBtnRepeat = function () {
      this._tempList = this.clearSuper6Repeat();
      for (var e = 0, i = 0; i < this._tempList.length; i++) {
        var a = this._tempList[i],
          n = Object.keys(a)[0];
        e += a[n];
      }
      return this._responseList.length > 0 || DataManager.sumAmount < e
        ? void this.setBtnState(1, !1)
        : void (
            this._tempList.length > 0 &&
            this.state == t.STATE_ACCEPT_BET &&
            DataManager.sumAmount >= e &&
            this.setBtnState(1, !0)
          );
    }),
    (t.prototype.btnClick = function (t) {
      var e = this;
      this.alreadyFinishedFlag = !1;
      var i = t.target;
      switch (i) {
        case this.btnSure:
          (DataManager.xAxis = t.stageX),
            (DataManager.yAxis = t.stageY),
            this.setBtnState(2, !1),
            (this.canBet = !1),
            this.sendBet(this.join_curList_send());
          break;
        case this.btnCancel:
          this.cleartempcoins(),
            (this._curList = null),
            this.checkBtnSure(),
            this.checkBtnRepeat(),
            this.DUI.setNOCOMbuttonState();
          break;
        case this.btnRepeat:
          this._tempList = this.clearSuper6Repeat();
          for (
            var a = [], n = !1, s = !1, r = 0;
            r < this._tempList.length;
            r++
          ) {
            var o = this._tempList[r],
              h = Object.keys(o)[0];
            a.push(h);
          }
          this.tableState.tableInfo.gameSeq > 25 &&
            this.tableState.tableInfo.gameType ==
              DataManager.GAME_TYPE_BACCARAT &&
            a.forEach(function (t) {
              return "BIG" == t || "SMALL" == t
                ? (e.DUI.setResultTip(
                    DataManager.BANKER_COLOR,
                    "dzg_main_10020",
                  ),
                  void (n = !0))
                : void 0;
            }),
            this.tableState.tableInfo.gameSeq > 60 &&
              this.tableState.tableInfo.gameType ==
                DataManager.GAME_TYPE_BACCARAT &&
              a.forEach(function (t) {
                return "AP" == t || "PFP" == t || "BP" == t || "PP" == t
                  ? (e.DUI.setResultTip(
                      DataManager.BANKER_COLOR,
                      "dzg_main_10021",
                    ),
                    void (s = !0))
                  : void 0;
              }),
            n ||
              s ||
              (this.updateCoins(this._tempList, this.coinsAlpha),
              (this._curList = this.joinList(this._tempList)),
              this.checkBtnSure(),
              this.setBtnState(1, !1),
              this.DUI.setNOCOMbuttonState(),
              (this._tempList = null),
              this.updatebetnumgroups());
          break;
        case this.btnX2:
          this.onBetX2();
      }
    }),
    (t.prototype.onBetX2 = function () {
      if (this.curTotalBet > 0) {
        for (var t in this._curList)
          if ((this._curList[t] || 0) > 0) {
            var e = this.bet_allWidthHeight_hash[t];
            e
              ? this.betClickFun(this._curList[t], t, e.width / 2, e.height / 2)
              : this.betClickFun(this._curList[t], t, 50, 50);
          }
      } else if (this.responseTotalBet > 0)
        for (var i in this._responseList) {
          var a = this._responseList[i];
          for (var n in a) {
            var e = this.bet_allWidthHeight_hash[n];
            e
              ? this.betClickFun(a[n], n, e.width / 2, e.height / 2)
              : this.betClickFun(a[n], n, 50, 50);
          }
        }
    }),
    (t.prototype.sendBet = function (t) {
      var e = new Array(),
        i = new Array();
      for (var a in t) {
        GameUtils.getOppoPoint(this.tableState.tableInfo.gameType, a);
        e.push(a), i.push(Math.floor(t[a]));
      }
      if (0 == e.length) {
        var n = new BetResponseMessage(
          0,
          this.tableState.tableid,
          null,
          null,
          0,
        );
        return this.betResponse(n), void (this.bet_length = 0);
      }
      (this.bet_length = e.length),
        MessageHandler.bet(
          this.tableState.tableid,
          e,
          i,
          DataManager.isNOCOM ? 1 : 0,
          this.tableState.tableInfo.gameSeq,
        );
    }),
    (t.prototype.join_curList_send = function () {
      (this.isClickBet = !0), this._curList_send || (this._curList_send = {});
      var t = {},
        e = 0;
      for (var i in this._curList)
        (e = this._curList[i]),
          this._curList_send[i] &&
            (e = this._curList[i] - this._curList_send[i]),
          e > 0 && (t[i] = e),
          (this._curList_send[i] =
            (this._curList_send[i] ? this._curList_send[i] : 0) + e);
      return t;
    }),
    (t.prototype.ok_curList_send = function (t) {
      if (this._curList_send) {
        var e = 0,
          i = 0;
        for (var a in this._curList_send)
          t.option.indexOf(a) >= 0
            ? ((e = t.amount[t.option.indexOf(a)]),
              (this._curList_send[a] = this._curList_send[a] - e),
              (i = this._curList && this._curList[a] ? this._curList[a] : 0),
              i > 0 &&
                ((this._curList[a] = 0 > i - e ? 0 : i - e),
                this._curList[a] <= 0 && delete this._curList[a]),
              this._curList_send[a] <= 0 && delete this._curList_send[a])
            : (delete this._curList_send[a],
              this._curList && this._curList[a] && delete this._curList[a]);
      }
    }),
    (t.prototype.betClick = function (t) {
      this.isClickBet ||
        this.betClickFun(
          DataManager.amount,
          t.currentTarget.name,
          t.localX,
          t.localY,
        );
    }),
    (t.prototype.betClickFun = function (e, i, a, n) {
      var s = e,
        r = this.curTotalBet;
      if (DataManager.sumAmount <= r)
        return void this.DUI.setResultTip(
          DataManager.BANKER_COLOR,
          "BET_NO_BALANCE",
        );
      if (DataManager.sumAmount < 1)
        return void this.DUI.setResultTip(
          DataManager.BANKER_COLOR,
          "BET_NO_BALANCE",
        );
      if (
        this.tableState.tableInfo.gameSeq > 25 &&
        this.tableState.tableInfo.gameType == DataManager.GAME_TYPE_BACCARAT &&
        ("BIG" == i || "SMALL" == i)
      )
        return void this.DUI.setResultTip(
          DataManager.BANKER_COLOR,
          "dzg_main_10020",
        );
      if (
        this.tableState.tableInfo.gameSeq > 60 &&
        this.tableState.tableInfo.gameType == DataManager.GAME_TYPE_BACCARAT &&
        ("AP" == i || "PFP" == i || "BP" == i || "PP" == i)
      )
        return void this.DUI.setResultTip(
          DataManager.BANKER_COLOR,
          "dzg_main_10021",
        );
      var o = i,
        h =
          this.tableState.tableInfo.gameType ==
            DataManager.GAME_TYPE_BACCARAT ||
          this.tableState.tableInfo.gameType ==
            DataManager.GAME_TYPE_DRAGONTIGER;
      if (
        (DataManager.Q1E5_login || DataManager.API168_login) &&
        h &&
        DataManager.Q1E5_BET_MUTEX
      )
        if ("PLAYER" == o) {
          if (this.responseHaveBetByName("BANKER"))
            return void this.DUI.setResultTip(
              DataManager.BANKER_COLOR,
              "dzg_main_59",
            );
        } else if ("BANKER" == o && this.responseHaveBetByName("PLAYER"))
          return void this.DUI.setResultTip(
            DataManager.BANKER_COLOR,
            "dzg_main_59",
          );
      null == this.curList[o] && (this._curList[o] = 0);
      var l = this.curList[o],
        g = this.responseTotalBetByName(o),
        u = s + this._curList[o] + g,
        c = Opposite.getName(DataManager.curTableState.tableInfo.gameType, o),
        d = 0;
      if (
        (c && (d = (this._curList[c] || 0) + this.responseTotalBetByName(c)),
        (u = BetLimitAction.getIns().getGameLimit(
          DataManager.curTableState.tableid,
          o,
          u,
          c,
          d,
        )),
        u > 0)
      )
        if (r - this._curList[o] + u - g > DataManager.sumAmount)
          if (
            ((u = DataManager.sumAmount - r + this._curList[o] + g),
            (u = Math.floor(u)),
            this.alreadyFinishedFlag)
          )
            this.DUI.setResultTip(DataManager.BANKER_COLOR, "BET_NO_BALANCE");
          else {
            if (
              !BetLimitAction.getIns().checkMultiTableLimit(
                DataManager.curTableState.tableid,
                o,
                u,
                c,
                d,
              )
            )
              return void this.DUI.setResultTip(
                DataManager.BANKER_COLOR,
                "BET_NO_BALANCE_TO_LIMIT",
              );
            this.DUI.setResultTip(DataManager.BANKER_COLOR, "BET_ALL_BALANCE"),
              (this.alreadyFinishedFlag = !0);
          }
        else
          s + this._curList[o] + g > u &&
            this.DUI.setResultTip(DataManager.BANKER_COLOR, "BET_TOO_MUCH");
      switch (u) {
        case -1:
          return void this.DUI.setResultTip(
            DataManager.BANKER_COLOR,
            "OPERATE_FAIL",
          );
        case -2:
          return void this.DUI.setResultTip(
            DataManager.BANKER_COLOR,
            "OPERATE_FAIL",
          );
        default:
          (this._curList[o] = u - g),
            this._curList[o] <= 0 && (this._curList[o] = 0);
      }
      if (this._curList[o] > 0) {
        var p = this._curList[o] - l;
        if (p > 0) {
          var _ = GameUtils.getCoins(p, !0);
          if (_) {
            _.alpha = this.coinsAlpha;
            var b = (Math.random() > 0.5 ? 1 : -1) * Math.random() * 10,
              m = (Math.random() > 0.5 ? 1 : -1) * Math.random() * 10;
            (t.touchcoinspos[this.tableState.tableid + "_" + o] =
              new egret.Point(
                a - t.betcoinsize / 2 + b,
                a - t.betcoinsize / 2 + m,
              )),
              (this.hastouchedandbet = !0),
              this.addCoins(_, o, !0),
              this.DUI.setNOCOMbuttonState(),
              this.updatebetnumgroups(),
              dzxx.SoundManager.inst.playSound(dzxx.SoundManager.Click_CoinBtn);
          } else;
        }
      }
      this.checkBtnSure(), this.checkBtnRepeat();
    }),
    (t.prototype.getAllTotalByName = function (t) {
      var e = 0;
      for (var i in this._responseList) {
        var a = this._responseList[i];
        e += a[t] || 0;
      }
      return (e += this.curList[t] || 0);
    }),
    Object.defineProperty(t.prototype, "curTotalBet", {
      get: function () {
        var t = 0;
        for (var e in this._curList) t += this._curList[e] || 0;
        return t;
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t.prototype, "responseTotalBet", {
      get: function () {
        var t = 0;
        for (var e in this._responseList) {
          var i = this._responseList[e];
          for (var a in i)
            if (DataManager.curTable.gameType == DataManager.GAME_TYPE_NIUNIU) {
              if (-1 != a.indexOf("YAJIN")) continue;
              t += i[a] || 0;
            } else t += i[a] || 0;
        }
        return t;
      },
      enumerable: !0,
      configurable: !0,
    }),
    (t.prototype.responseHaveBetByName = function (t) {
      var e = 0;
      for (var i in this._responseList) {
        var a = this._responseList[i];
        e += a[t] || 0;
      }
      return e > 0 ? !0 : this.tempbetlist[t] > 0 ? !0 : !1;
    }),
    (t.prototype.responseTotalBetByName = function (t) {
      var e = 0;
      for (var i in this._responseList)
        if (DataManager.curTable.gameType == DataManager.GAME_TYPE_NIUNIU) {
          var a = this._responseList[i];
          if (-1 != t.indexOf("YAJIN")) continue;
          e += a[t] || 0;
        } else {
          var a = this._responseList[i];
          e += a[t] || 0;
        }
      return e;
    }),
    (t.prototype.updateCoins = function (t, e) {
      void 0 === e && (e = 1), this.clearCoins(!0);
      var i = this.joinList(t);
      for (var a in i) {
        var n = GameUtils.getCoins(i[a], !0);
        (n.alpha = e), this.addCoins(n, a, 1 > e);
      }
    }),
    (t.prototype.joinList = function (t) {
      var e = {};
      for (var i in t) {
        var a = t[i];
        for (var n in a) null == e[n] && (e[n] = 0), (e[n] += a[n]);
      }
      return e;
    }),
    (t.prototype.fixbetcoinsinbetpointrect = function () {
      var t,
        e,
        i,
        a = this.alladdedcoindisplays.concat(this.alltempcoindisplays);
      for (var n in a)
        (t = a[n]),
          (i = t.name.split("_")[0]),
          (e = this.getChildByName(i)),
          this.betcoinsinbetpointrect(
            e.width,
            e.height,
            t,
            new egret.Point(t.x, t.y),
            i,
          );
    }),
    (t.prototype.betcoinsinbetpointrect = function (t, e, i, a, n) {
      void 0 === n && (n = "");
      var s = 10;
      (a.x = Math.max(s, Math.min(t - i.width - s, a.x))),
        (a.y = Math.max(s, Math.min(e - i.height - s, a.y))),
        this.tableState.tableInfo.gameType != DataManager.GAME_TYPE_BACCARAT ||
          ("SS" != n && "TILE" != n) ||
          !DataManager.isNOCOM ||
          (a.y = -10),
        (i.x = a.x),
        (i.y = a.y);
    }),
    (t.prototype.addCoins = function (e, i, a) {
      void 0 === a && (a = !1);
      var n = this.getChildByName(i);
      if (n) {
        var s = n.parent,
          r = s.getChildByName("addbetcoingroup");
        if (!r)
          throw new Error(
            "注点的容器UI内必须要有个name为“addbetcoingroup”的容器，用来放置筹码！",
          );
        var o = 120,
          h = 50;
        (e.width = e.height = 100),
          this.tableState.tableInfo.gameType == DataManager.GAME_TYPE_BACCARAT
            ? ((e.scaleX = e.scaleY = 0.6), (o = 40), (h = 20))
            : this.tableState.tableInfo.gameType == DataManager.GAME_TYPE_SICBO
              ? ((e.scaleX = e.scaleY = 0.5), (o = 15), (h = 20))
              : 1 == window.lhmulti &&
                  this.tableState.tableInfo.gameType ==
                    DataManager.GAME_TYPE_DRAGONTIGER
                ? ((e.scaleX = e.scaleY = 0.6), (o = 40), (h = 20))
                : (e.scaleX = e.scaleY = 1),
          (e.touchEnabled = !1),
          (e.name = i + "_coin");
        var l = Math.random() * o,
          g = -h + Math.random() * h,
          u = t.touchcoinspos[this.tableState.tableid + "_" + i];
        !this.hastouchedandbet && u && ((u.x += -o + l), (u.y += g));
        var c = u || new egret.Point(l, (s.height - e.height) / 2 + g);
        this.betcoinsinbetpointrect(n.width, n.height, e, c, i),
          (t.touchcoinspos[this.tableState.tableid + "_" + i] = c),
          (e.cacheAsBitmap = !0),
          r.addChild(e),
          a
            ? ((this.tempbetlist[i] = this.tempbetlist[i] || 0),
              (this.tempbetlist[i] += e.coinvalue),
              this.alltempcoindisplays.push(e))
            : this.alladdedcoindisplays.push(e),
          (this.isClickBet = !1);
      }
    }),
    (t.prototype.cleartempcoins = function () {
      for (this.tempbetlist = {}; this.alltempcoindisplays.length > 0; ) {
        var t = this.alltempcoindisplays.shift();
        t && t.parent && t.parent.removeChild(t);
      }
      this.updatebetnumgroups();
    }),
    (t.prototype.clearCoins = function (t) {
      void 0 === t && (t = !1);
      if (
        (this._curList_send && (this._curList_send = {}),
        (this._curList = null),
        t)
      )
        for (; this.alladdedcoindisplays.length > 0; ) {
          var e = this.alladdedcoindisplays.shift();
          e && e.parent && e.parent.removeChild(e);
        }
    }),
    (t.prototype.setBetListEnable = function (t) {
      for (var e in this.betList) {
        var i = this.betList[e];
        i && (i.touchEnabled = t);
      }
    }),
    (t.prototype.getChildByName = function (t) {
      return this.DUI ? this.DUI.getBetChildByName(t) : null;
    }),
    (t.prototype.resume = function () {}),
    (t.prototype.pause = function () {
      this.counter &&
        ((this.counter.timeTextColor = 16711680),
        (this.counter.isCirRed = !0),
        (this.counter.time = 0)),
        this.clearCoins(),
        (this._responseList = []),
        (this._curList = null),
        (this._curList_send = null),
        (this.save_state_bool = !1);
    }),
    (t.prototype.timerStop = function () {
      this.timer &&
        (this.timer.removeEventListener(
          egret.TimerEvent.TIMER,
          this.onmipaitimer,
          this,
        ),
        this.timer.removeEventListener(
          egret.TimerEvent.TIMER,
          this.timer_tick,
          this,
        ),
        this.timer.stop(),
        this.timer.reset(),
        this.counter && (this.counter.time = 0),
        this.micounter && (this.micounter.time = 0));
    }),
    Object.defineProperty(t.prototype, "haskaipaibtnright", {
      get: function () {
        return (
          DataManager.curTableState.enterType !=
          DataManager.ENTER_TABLE_TYPE_SIDE
        );
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t.prototype, "hasdengwobtnright", {
      get: function () {
        return (
          DataManager.curTableState.enterType !=
          DataManager.ENTER_TABLE_TYPE_SIDE
        );
      },
      enumerable: !0,
      configurable: !0,
    }),
    (t.prototype.setBtnState = function (t, e, i) {
      if (
        (void 0 === t && (t = 0),
        void 0 === e && (e = !0),
        void 0 === i && (i = !1),
        1 == t)
      )
        ButtonAction.setBtnEnable(this.btnRepeat, e);
      else if (100 == t)
        DataManager.Q1E5_login
          ? (this.btnX2.visible = e)
          : (this.btnX2.visible = e);
      else if (2 == t) {
        var a = e && this.canBet;
        i
          ? ((a = this.save_state_bool && this.canBet),
            (e = this.save_state_bool))
          : (this.save_state_bool = e),
          ButtonAction.setBtnEnable(this.btnSure, a),
          ButtonAction.setBtnEnable(this.btnCancel, e);
      } else
        3 == t && this.DUI.btnkaipai
          ? e
            ? (this.DUI.btnkaipai.touchEnabled = this.haskaipaibtnright)
            : (this.DUI.btnkaipai.touchEnabled = !1)
          : 5 == t &&
            this.DUI.btndengwo &&
            (e
              ? (this.DUI.btndengwo.touchEnabled = this.hasdengwobtnright)
              : (this.DUI.btndengwo.touchEnabled = !1));
    }),
    (t.prototype.checkBetCount = function () {
      1 != ShareUtils.inWhiteList() &&
        (3 == this.notBetCount
          ? Alert.tip(LangUtils.LANG_MAP.NULL_BET_THREE_TIMES)
          : this.notBetCount >= 5 &&
            ((this.notBetCount = 0),
            dzxx.LiveVideo.ifStopVideo(),
            EventManager.getIns().dispatchEvent(
              new GotoViewEvent(GotoViewEvent.GOTO_VIEW, View.LOBBY_VIEW),
            ),
            Alert.show(LangUtils.LANG_MAP.NULL_BET_FIVE_TIMES)));
    }),
    (t.prototype.dispose = function () {
      this.timerStop(),
        (this.timer = null),
        LangUtils.removeEventListener(this.langChange, this),
        this.DUI &&
          (ButtonAction.removeEvent(
            [this.btnRepeat, this.btnSure, this.btnCancel, this.btnX2],
            this.btnClick,
            this,
          ),
          this.showAnimate.dispose()),
        ButtonAction.removeEvent(this.betList, this.betClick, this),
        (this.showAnimate = null),
        (this.DUI = null),
        (this._curList = null),
        (this._curList_send = null),
        (this._tempList = null),
        (this.betStartData = null),
        (this._responseList = []),
        (this.tempbetlist = null);
    }),
    Object.defineProperty(t.prototype, "canBet", {
      get: function () {
        return this._canBet;
      },
      set: function (t) {
        null != this.DUI && ((this._canBet = t), this.setBtnState(2, !0, !0));
      },
      enumerable: !0,
      configurable: !0,
    }),
    (t.STATE_ACCEPT_BET = 0),
    (t.STATE_ACCEPT_ADD = 1),
    (t.STATE_DEALING = 2),
    (t.STATE_RESULT = 3),
    (t.STATE_COMP = 5),
    (t.STATE_MI = 6),
    (t.STATE_RUFFLE = 8),
    (t.STATE_WAIT = -1),
    (t.STATE_WOP = -2),
    (t.betcoinsize = 100),
    (t.touchcoinspos = {}),
    t
  );
})();
__reflect(GameBetAction.prototype, "GameBetAction");
var GameBetShowAnimate = (function () {
  function t() {
    this.timer = new egret.Timer(400, 12);
  }
  return (
    (t.prototype.show = function (t, e) {
      this.winList = new Array();
      for (var i in e) {
        var a = e[i],
          n = t.getBetChildByName(a + "_bg");
        if (
          (n
            ? this.winList.push(n)
            : DebugText.appendError("No UI: " + a + ", betpoint won't flash."),
          "BANKER" == a || "PLAYER" == a)
        ) {
          var s = t.getCardChildByName(a);
          "BANKER" == a
            ? (s.source = "hxLHbg_61_png")
            : (s.source = "hxLHbg_60_png"),
            s
              ? this.winList.push(s)
              : DebugText.appendError("No UI: " + a + ", result won't flash.");
        }
        if ("TILE" == a) {
          var s = t.getCardChildByName("BANKER");
          (s.source = "hxLHbg_62_png"),
            s
              ? this.winList.push(s)
              : DebugText.appendError("No UI: " + a + ", result won't flash.");
          var r = t.getCardChildByName("PLAYER");
          (r.source = "hxLHbg_62_png"),
            r
              ? this.winList.push(r)
              : DebugText.appendError("No UI: " + a + ", result won't flash.");
        }
      }
      this.winList.length && this.startAnimate();
    }),
    (t.prototype.startAnimate = function () {
      this.timer.reset(),
        this.timer.addEventListener(egret.TimerEvent.TIMER, this.onTimer, this),
        this.timer.addEventListener(
          egret.TimerEvent.TIMER_COMPLETE,
          this.onComplete,
          this,
        ),
        this.timer.start();
    }),
    (t.prototype.onTimer = function (t) {
      for (var e in this.winList) {
        var i = this.getTar(e);
        i.alpha = 1 == i.alpha ? 0 : 1;
      }
    }),
    (t.prototype.getTar = function (t) {
      var e = this.winList[t],
        i = e instanceof egret.DisplayObjectContainer ? e : null,
        a = (i ? i.getChildByName("bg") : null) || e;
      return a;
    }),
    (t.prototype.onComplete = function (t) {
      this.timer.removeEventListener(
        egret.TimerEvent.TIMER,
        this.onTimer,
        this,
      ),
        this.timer.removeEventListener(
          egret.TimerEvent.TIMER_COMPLETE,
          this.onComplete,
          this,
        );
      for (var e in this.winList) {
        var i = this.getTar(e);
        i.alpha = 0;
      }
      this.winList = null;
    }),
    (t.prototype.reSet = function () {
      this.onComplete(null);
    }),
    (t.prototype.dispose = function () {
      this.onComplete(null), (this.timer = null);
    }),
    t
  );
})();
__reflect(GameBetShowAnimate.prototype, "GameBetShowAnimate");
var HistoryItem = (function () {
  function t(t, e, i, a, n) {
    void 0 === a && (a = ""),
      void 0 === n && (n = ""),
      (this.label1 = t.replace(" ", "\n")),
      null != e &&
        void 0 != e &&
        "" != e &&
        (this.label2 = e.replace(" ", "\n")),
      (this.label3 = i.replace(" ", "\n")),
      (this.label4 = a),
      "" != n && (this.label5 = n.replace(" ", "\n"));
  }
  return t;
})();
__reflect(HistoryItem.prototype, "HistoryItem");
var LobbyTableData = (function () {
  function t(t, e) {
    (this.tableSeq = ""),
      (this.tableid = 0),
      (this.sbanker = 0),
      (this.gameType = 0),
      (this.dealerName = ""),
      (this.dealerIcon = ""),
      (this.lobbyid = 0),
      (this.gameStyle = 0),
      (this.tableSeqInt = ""),
      (this.tableIndex = 0),
      (this.tableLobbyid = 0);
    var i = t.split(":");
    (this.tableSeq = i[0]),
      (this.tableSeqInt = this.tableSeq.split("#")[1]),
      (this.tableid = parseInt(i[1])),
      (this.sbanker = parseInt(i[2])),
      (this.gameType = parseInt(i[3])),
      (this.dealerName = i[4]),
      (this.dealerIcon = i[5]),
      i.length > 6 &&
        (this.gameStyle =
          0 == parseInt(i[6]) ? DataManager.GAMESTYLE_normal : parseInt(i[6])),
      (this.tableIndex = parseInt(i[7])),
      (this.lobbyid = e),
      3 == e && (this.lobbyid = 1),
      (this.tableLobbyid = e);
  }
  return (
    Object.defineProperty(t.prototype, "gameName", {
      get: function () {
        return LangUtils.LANG_MAP["" + this.gameType];
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t.prototype, "lobbyName", {
      get: function () {
        return LangUtils.LANG_MAP["LOBBY_" + this.lobbyid];
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t.prototype, "icon", {
      get: function () {
        return "gameType_" + this.gameType + "_png";
      },
      enumerable: !0,
      configurable: !0,
    }),
    t
  );
})();
__reflect(LobbyTableData.prototype, "LobbyTableData");
var LocalData;
!(function (t) {
  function e() {
    var t = egret.localStorage.getItem(n);
    t &&
      ((s = JSON.parse(t)),
      (DataManager.autoShowVideo = s.autoShowVideo),
      parseInt(s.currencyType) == MultiCurrencyManager.currencyType &&
        (DataManager.amountList = s.amountList));
  }
  function i() {
    (s.autoShowVideo = DataManager.autoShowVideo),
      (s.amountList = DataManager.amountList),
      (s.currencyType = MultiCurrencyManager.currencyType);
    var t = JSON.stringify(a());
    egret.localStorage.setItem(n, t);
  }
  function a() {
    return s;
  }
  var n = "DN1H2XBDX23234ada1_BACC_Egret_202303291519",
    s = {};
  (t.load = e), (t.save = i), (t.getData = a);
})(LocalData || (LocalData = {}));
var OddsPlace = (function () {
  function t() {}
  return (
    (t.getInstance = function () {
      return null == t.instance && (t.instance = new t()), t.instance;
    }),
    t
  );
})();
__reflect(OddsPlace.prototype, "OddsPlace"),
  (OddsPlace.instance = null),
  (OddsPlace.SeatArrOne = [
    [192, 140],
    [280, 175],
    [422, 195],
    [566, 201],
    [720, 195],
    [845, 180],
    [935, 143],
  ]),
  (OddsPlace.SeatArrTwo = [
    [195, 120],
    [280, 162],
    [397, 178],
    [615, 175],
    [752, 177],
    [885, 161],
    [970, 120],
  ]),
  (OddsPlace.SeatArrThree = [
    [185.7, 123.75],
    [228, 162.05],
    [314.95, 181.3],
    [421.85, 189.65],
    [532.15, 179.9],
    [614.95, 158.7],
    [665.85, 123.75],
    [362.8, 189.65],
  ]),
  (OddsPlace.SeatWinOne = [
    [260, 136],
    [340, 168],
    [454, 180],
    [579, 185],
    [712, 180],
    [836, 168],
    [910, 136],
  ]),
  (OddsPlace.SeatWinTwo = [
    [275, 115],
    [334, 147],
    [447, 160],
    [573, 165],
    [725, 161],
    [855, 146],
    [930, 114],
  ]),
  (OddsPlace.SeatWinThree = [
    [213.65, 120.75],
    [258, 151.05],
    [335.65, 165.3],
    [424.35, 171.15],
    [511.65, 165.4],
    [593.2, 151.2],
    [638.1, 119.65],
    [378.85, 165.3],
  ]),
  (OddsPlace.coinLost = [525, -10]),
  (OddsPlace.coinLost_MI = [525, -10]),
  (OddsPlace.CoinSizeOne = 0.5),
  (OddsPlace.CoinSizeTwo = 0.6),
  (OddsPlace.CoinSizeThree = 0.7),
  (OddsPlace.BettingMultiple = {
    DRAGON: 1,
    TIGER: 1,
    DTTILE: 10,
    BANKER: 0.95,
    PLAYER: 1,
    TILE: 8,
    BIG: 0.5,
    SMALL: 1.5,
    BP: 11,
    PP: 11,
    SS: 12,
    TILE_TD: 10,
    HALF_BANKER: 0.5,
    ALL_BANKER: 1,
    BIG_BANKER: 2.85,
    DE_BANKER: 1.9,
    BIG_PLAYER: 2.85,
    DE_PLAYER: 1.9,
    SM_PLAYER: 0.95,
  });
var Opposite = (function () {
  function t() {}
  return (
    (t.getPoint = function (e, i) {
      return (e = e), t.pointList[e] ? t.pointList[e][i] : null;
    }),
    (t.getName = function (e, i) {
      return (e = e), t.pointList[e] ? t.pointList[e][i] : null;
    }),
    (t.pointList = [
      null,
      {
        BANKER: "PLAYER",
        PLAYER: "BANKER",
      },
      {
        BANKER: "PLAYER",
        PLAYER: "BANKER",
      },
      {
        RoBig: "RoSm",
        RoSm: "RoBig",
        RoRed: "RoBak",
        RoBak: "RoRed",
        RoOdd: "RoEven",
        RoEven: "RoOdd",
      },
      {
        DiBig: "DiSm",
        DiSm: "DiBig",
        DiOdd: "DiEven",
        DiEven: "DiOdd",
      },
      {
        FAN_PLAYER1: "XF_1",
        PLAYER1: "XP_1",
        FAN_PLAYER2: "XF_2",
        PLAER2: "XP_2",
        FAN_PLAYER3: "XF_3",
        PLAYER3: "XP_3",
      },
    ]),
    (t.nameList = [
      null,
      {
        banker: "player",
        player: "banker",
      },
      {
        dragon: "tiger",
        tiger: "dragon",
      },
      {
        big: "small",
        small: "big",
        red: "black",
        black: "red",
        odd: "even",
        even: "odd",
      },
      {
        big: "small",
        small: "big",
        odd: "even",
        even: "odd",
      },
    ]),
    t
  );
})();
__reflect(Opposite.prototype, "Opposite");
var TableState = (function () {
  function t(t) {
    (this.betzfbTime = 0),
      (this.totalUser = 0),
      (this.totalBet = 0),
      (this.seats = ""),
      (this.realseats = ""),
      (this.userTotalChips = 0),
      (this.firstSeat = !0),
      (this.sortID = 0),
      (this.sortID_client = 0),
      (this.mi_player = -1),
      (this.mi_banker = -1),
      (this.save_miseat_time = 0),
      (this.bankerBets = 0),
      (this.playerBets = 0),
      this.update(t),
      this.clearTablePool();
  }
  return (
    Object.defineProperty(t.prototype, "tableid", {
      get: function () {
        return this.tableInfo.tableid;
      },
      enumerable: !0,
      configurable: !0,
    }),
    (t.prototype.update = function (t) {
      this.tableInfo &&
        ((null == t.limitKeys || 0 == t.limitKeys.length) &&
          ((t.limitKeys = this.tableInfo.limitKeys),
          (t.minlimit = this.tableInfo.minlimit),
          (t.maxlimit = this.tableInfo.maxlimit)),
        (null == t.alimitKeys || 0 == t.alimitKeys.length) &&
          ((t.alimitKeys = this.tableInfo.alimitKeys),
          (t.aminlimit = this.tableInfo.aminlimit),
          (t.amaxlimit = this.tableInfo.amaxlimit)),
        (null == t.history || 0 == t.history.length) &&
          this.tableInfo.gameSeq <= t.gameSeq &&
          this.tableInfo.history &&
          this.tableInfo.history.length > 0 &&
          (t.history = this.tableInfo.history),
        (null == t.history2 || 0 == t.history2.length) &&
          this.tableInfo.gameSeq <= t.gameSeq &&
          this.tableInfo.history2 &&
          this.tableInfo.history2.length > 0 &&
          (t.history2 = this.tableInfo.history2)),
        (this.gameStyle = t.gamestyle),
        1 != t.gameType && (this.gameStyle = 1),
        (this.tableInfo = t);
    }),
    Object.defineProperty(t.prototype, "hasBet", {
      get: function () {
        return this._hasBet;
      },
      set: function (t) {
        this._hasBet = t;
      },
      enumerable: !0,
      configurable: !0,
    }),
    (t.prototype.clearTablePool = function (e) {
      void 0 === e && (e = !0),
        e && (this.hasBet = !1),
        (this.hasBet_B_S = !1),
        (this.totalBet = 0),
        (this.bankerBets = 0),
        (this.playerBets = 0),
        (this.betData = null),
        (this.mi_banker = -1),
        (this.mi_player = -1);
      var i = t.tablePool_null != this.tablePool;
      (this.tablePool = t.tablePool_null),
        i &&
          EventManager.getIns().dispatchEvent(
            new DataChangeEvent(
              DataChangeEvent.BET_AMOUNT,
              this.tableInfo.tableid,
            ),
          );
    }),
    Object.defineProperty(t.prototype, "tablePool", {
      get: function () {
        return this._tablePool;
      },
      set: function (t) {
        this._tablePool = t;
      },
      enumerable: !0,
      configurable: !0,
    }),
    (t.prototype.updateMi = function (t) {
      var e = this.mi_player,
        i = this.mi_banker,
        a = t.miseat ? t.miseat.split(",") : [];
      2 == a.length &&
        ShareUtils.timeByMessageID(t.messageID) >
          ShareUtils.timeByMessageID(this.save_miseat_time) &&
        ((this.mi_player = parseInt(a[0])),
        (this.mi_banker = parseInt(a[1])),
        (this.save_miseat_time = t.messageID)),
        t.seatid == this.seatno &&
          ("BANKER" == t.option && t.amount > 0
            ? (this.bankerBets += t.amount)
            : "PLAYER" == t.option &&
              t.amount > 0 &&
              (this.playerBets += t.amount)),
        (e != this.mi_player || i != this.mi_banker) &&
          EventManager.getIns().dispatchEvent(
            new DataChangeEvent(DataChangeEvent.MI_CHANGE),
          );
    }),
    (t.prototype.GetKeyAmount = function (t, e) {
      if ((void 0 === e && (e = 0), null != this.betData)) {
        var i = void 0;
        if (((i = this.betData[t]), !(i && i instanceof dzxx.BetAmount))) {
          var a = this.betData[t];
          for (
            null == a && ((a = new Array()), (this.betData[t] = a));
            a.length < e + 1;

          )
            a.push(null);
          (i = a[e]), null == i && ((i = new dzxx.BetAmount(t, e)), (a[e] = i));
        }
        return i;
      }
      return null;
    }),
    (t.tablePool_null = {
      BANKER: "0/0",
      PLAYER: "0/0",
      TILE: "0/0",
      BP: "0/0",
      PP: "0/0",
      SUM: "0/0",
      BIG: "0/0",
      SMALL: "0/0",
      DiBig: "0/0",
      DiOne6: "0/0",
      DiOne5: "0/0",
      DiSm: "0/0",
      DiOne4: "0/0",
      DiOne3: "0/0",
      DiOne2: "0/0",
      DiOne1: "0/0",
      DiOdd: "0/0",
      DiTri0: "0/0",
      DiEven: "0/0",
      RoBig: "0/0",
      RoSm: "0/0",
      RoOdd: "0/0",
      RoEven: "0/0",
      RoRed: "0/0",
      RoBak: "0/0",
      SS: "0/0",
      LS: "0/0",
    }),
    t
  );
})();
__reflect(TableState.prototype, "TableState");
var View = (function () {
  function t() {}
  return (
    (t.LOGIN_VIEW = "LOGIN_VIEW"),
    (t.LOBBY_VIEW = "LOBBY_VIEW"),
    (t.CHOOSE_TABLE_VIEW = "CHOOSE_TABLE_VIEW"),
    (t.BACC_GAME_VIEW = "BACC_GAME_VIEW"),
    (t.DRAGON_TIGER_GAME_VIEW = "DRAGON_TIGER_GAME_VIEW"),
    (t.SICBO_GAME_VIEW = "SICBO_GAME_VIEW"),
    (t.LUN_PAN_GAME_VIEW = "LUN_PAN_GAME_VIEW"),
    (t.NIU_NIU_GAME_VIEW = "NIU_NIU_GAME_VIEW"),
    (t.DUO_TAI_GAME_VIEW = "DUO_TAI_GAME_VIEW"),
    (t.SET_VIEW = "SET_VIEW"),
    (t.HISTORY_VIEW = "HISTORY_VIEW"),
    t
  );
})();
__reflect(View.prototype, "View");
var DataChangeEvent = (function (t) {
  function e(e, i) {
    void 0 === i && (i = null);
    var a = t.call(this, e, !1) || this;
    return (a.data = i), a;
  }
  return (
    __extends(e, t),
    (e.LOBBY = "DataChangeEvent_LOBBY"),
    (e.TABLE_INFO = "DataChangeEvent_TABLE_INFO"),
    (e.User_INFO = "DataChangeEvent_USER_INFO"),
    (e.BET_START = "DataChangeEvent_BET_START"),
    (e.SEAT_DEAL = "DataChangeEvent_SEAT_DEAL"),
    (e.BET_RESPONSE = "DataChangeEvent_BET_RESPONSE"),
    (e.BET_RESULT = "DataChangeEvent_BET_RESULT"),
    (e.BET_AMOUNT = "DataChangeEvent_BET_AMOUNT"),
    (e.SEAT_BETTING = "DataChangeEvent_SEAT_BETTING"),
    (e.SET_CIONS = "DataChangeEvent_SET_CIONS"),
    (e.RESET = "DataChangeEvent_RESET"),
    (e.MICARD_ACTION_MESSAGE = "DataChangeEvent_MICARD_ACTION_MESSAGE"),
    (e.MI_CHANGE = "DataChangeEvent_michange"),
    (e.DUOTAI_TABLE_INFO = "DUOTAI_TABLE_INFO"),
    (e.DUOTAI_SELECT_TABLE_INFO = "DUOTAI_SELECT_TABLE_INFO"),
    (e.DUOTAI_SELECT_TABLE_UI = "DUOTAI_SELECT_TABLE_UI"),
    (e.DUOTAI_TAB_INDEX_CHANGE = "DUOTAI_TAB_INDEX_CHANGE"),
    (e.GOOD_ROAD_CHANGE = "GOOD_ROAD_CHANGE"),
    (e.NOTICE_MESSAGE = "NOTICE_MESSAGE"),
    (e.CHECK_YANZHENG_MESSAGE = "CHECK_YANZHENG_MESSAGE"),
    (e.CHECK_USER_HAVE_BET = "CHECK_USER_HAVE_BET"),
    (e.CHECK_USER_BIZHONG_CHANGE = "CHECK_USER_BIZHONG_CHANGE"),
    (e.LUNBO_CHANGE = "LUNBO_CHANGE"),
    e
  );
})(egret.Event);
__reflect(DataChangeEvent.prototype, "DataChangeEvent");
var GotoViewEvent = (function (t) {
  function e(e, i) {
    void 0 === i && (i = "");
    var a = t.call(this, e, !1) || this;
    return (a.view = i), a;
  }
  return __extends(e, t), (e.GOTO_VIEW = "GOTO_VIEW"), e;
})(egret.Event);
__reflect(GotoViewEvent.prototype, "GotoViewEvent");
var LoadingTipEvent = (function (t) {
  function e(e, i) {
    void 0 === i && (i = "");
    var a = t.call(this, e, !1, !1) || this;
    return (a.msg = i), a;
  }
  return __extends(e, t), (e.TEXT = "LoadingTipEvent_Text"), e;
})(egret.Event);
__reflect(LoadingTipEvent.prototype, "LoadingTipEvent");
var TimerGameEvent = (function (t) {
  function e(e, i, a) {
    return (
      void 0 === i && (i = !1),
      void 0 === a && (a = !1),
      t.call(this, e, i, a) || this
    );
  }
  return __extends(e, t), (e.TICK = "TimerGameEvent_TICK"), e;
})(egret.Event);
__reflect(TimerGameEvent.prototype, "TimerGameEvent");
var dzxx;
!(function (t) {
  var e = (function () {
    function t() {}
    return (
      (t.loadeff = function (t) {
        var e = this,
          i = "resource/anim/" + t + ".json",
          a = "resource/anim/" + t + ".png";
        RES.getResByUrl(
          i,
          function (i, a) {
            e.effdict[t + "_json"] = i;
          },
          this,
          RES.ResourceItem.TYPE_JSON,
        ),
          RES.getResByUrl(
            a,
            function (i, a) {
              e.effdict[t + "_png"] = i;
            },
            this,
            RES.ResourceItem.TYPE_IMAGE,
          );
      }),
      (t.geteffmc = function (t, e) {
        void 0 === e && (e = "main");
        var i = this.effdict[t + "_json"],
          a = this.effdict[t + "_png"];
        if (i && a) {
          var n = new egret.MovieClipDataFactory(i, a),
            s = new egret.MovieClip(n.generateMovieClipData(e));
          return s;
        }
        return null;
      }),
      (t.playeffmc = function (t, e, i) {
        void 0 === e && (e = null), void 0 === i && (i = null);
        var a = this.geteffmc(t, i);
        return a
          ? (e && ((a.x = e.x), (a.y = e.y)), this.showeff(a, !0), a.play(), a)
          : null;
      }),
      (t.onplayend = function (t) {
        var e = t.currentTarget;
        e.removeEventListener(t.type, this.onplayend, this),
          e.parent && e.parent.removeChild(e);
      }),
      (t.showeff = function (t, e) {
        void 0 === e && (e = !0),
          ShareUtils.main.effGroup.addChild(t),
          e && t.addEventListener(egret.Event.COMPLETE, this.onplayend, this);
      }),
      (t.playwinflasheff = function () {
        var t = 1.2,
          e = -300 * t,
          i = -300 * t,
          a = new egret.Point(
            ShareUtils.game_stage.stageWidth / 2 + e,
            ShareUtils.game_stage.stageHeight / 2 + i,
          ),
          n = this.wineff || this.geteffmc(this.winflash);
        return (
          (this.wineff = n),
          n
            ? ((n.x = a.x),
              (n.y = a.y),
              n.gotoAndPlay(0),
              (n.scaleX = n.scaleY = t),
              this.showeff(n),
              n)
            : null
        );
      }),
      (t.winflash = "winflash"),
      (t.effdict = {}),
      t
    );
  })();
  (t.DZEff = e), __reflect(e.prototype, "dzxx.DZEff");
})(dzxx || (dzxx = {}));
var DataManager = (function () {
  function t() {
    (this.supportedH5GameTypeDict = {}),
      (this.gameTypeToViewNameDict = {}),
      (this.gameTypeSaveNameDict = {}),
      this.initDicts();
  }
  return (
    Object.defineProperty(t, "lobbyList", {
      get: function () {
        var e = new Array();
        for (var i in t.lobbyDict) e.push(t.lobbyDict[i]);
        return e;
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t, "amount", {
      get: function () {
        if (-1 == t._amount)
          try {
            t._amount = parseInt(
              window.localStorage.getItem(t.key_dzcoinselectedcoinvalue),
            );
          } catch (e) {
            DebugText.appendText(e);
          }
        return t._amount;
      },
      set: function (e) {
        t._amount = e;
        try {
          window.localStorage.setItem(
            t.key_dzcoinselectedcoinvalue,
            e.toString(),
          );
        } catch (i) {
          DebugText.appendText(i);
        }
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t, "inst", {
      get: function () {
        return t._inst;
      },
      enumerable: !0,
      configurable: !0,
    }),
    (t.init = function () {
      t._inst = new t();
    }),
    (t.getCoinIndexInCoinAmountsByValue = function (t) {
      var e = MultiCurrencyManager.coinsArray;
      for (var i in e) if (e[i] == t) return parseInt(i);
      return 0;
    }),
    (t.prototype.initDicts = function () {
      var e = this.supportedH5GameTypeDict;
      (e[t.GAME_TYPE_BACCARAT] = !0),
        (e[t.GAME_TYPE_DRAGONTIGER] = !0),
        (e[t.GAME_TYPE_SICBO] = !0),
        (e[t.GAME_TYPE_LUNPAGAME] = !0);
      var i = this.gameTypeToViewNameDict;
      (i[t.GAME_TYPE_BACCARAT] = View.BACC_GAME_VIEW),
        (i[t.GAME_TYPE_DRAGONTIGER] = View.DRAGON_TIGER_GAME_VIEW),
        (i[t.GAME_TYPE_SICBO] = View.SICBO_GAME_VIEW),
        (i[t.GAME_TYPE_LUNPAGAME] = View.LUN_PAN_GAME_VIEW),
        (i[t.GAME_TYPE_NIUNIU] = View.NIU_NIU_GAME_VIEW);
    }),
    (t.getTabArrByLabid = function (t) {
      3 == t && (t = 1);
      var e = this.allTab_OKID_ahash[t];
      return null == e && (this.allTab_OKID_ahash[t] = e = []), e;
    }),
    (t.getTabArrHaveByLabid = function (t) {
      var e = !1;
      for (var i in this.allTab_OKID_ahash) {
        var a = this.allTab_OKID_ahash[i];
        if (a.indexOf(t) > -1) return !0;
      }
      return e;
    }),
    (t.isH5SupportedGameType = function (t, e, i) {
      return void 0 === i && (i = 0), !0;
    }),
    (t.isH5SupportedGameSaveType = function (e) {
      return t.inst.gameTypeSaveNameDict[e];
    }),
    (t.saveSupportedGameSaveType = function (e) {
      t.inst.gameTypeSaveNameDict[e] = !0;
    }),
    (t.delSupportedGameSaveType = function () {
      t.inst.gameTypeSaveNameDict = {};
    }),
    (t.gameTypeToViewName = function (e) {
      return t.inst.gameTypeToViewNameDict[e];
    }),
    (t.isJingMiTable = function (t) {
      var e = this.getLobbyTableData(t),
        i = e.lobbyid == this.LOBBY_ID_MI;
      if (!i) {
        var a = this.getTableStates(t);
        i = a.gameStyle == this.GAMESTYLE_mi;
      }
      return i;
    }),
    (t.enterLobby = function () {
      MessageHandler.enterLobby(t.cur_lobby_id);
    }),
    (t.enterLobbys = function () {
      for (var e in t.supportedlobbys)
        MessageHandler.enterLobby(t.supportedlobbys[e]);
    }),
    (t.lobbyMessage = function (e) {
      var i = t.lobbyDict[e.lobbyid];
      if (i) {
        if (
          ((t.lobbyDict[e.lobbyid] = e),
          i.gameList &&
            e.gameList &&
            i.gameList.toString() == e.gameList.toString())
        )
          return;
      } else t.lobbyDict[e.lobbyid] = e;
      EventManager.getIns().dispatchEvent(
        new DataChangeEvent(DataChangeEvent.LOBBY, e),
      );
    }),
    (t.getLobbyTableData = function (e, i) {
      void 0 === i && (i = t.cur_lobby_id);
      var a = t.lobbyTableDataList[e + "_" + i];
      if (a) return a;
      for (var n = 0, s = t.lobbyList; n < s.length; n++) {
        var r = s[n];
        if (r.gameList)
          for (var o = 0; o < r.gameList.length; o++)
            if (
              ((a = new LobbyTableData(r.gameList[o], r.lobbyid)),
              (t.lobbyTableDataList[a.tableid + "_" + a.lobbyid] = a),
              a.tableid == e && i == a.lobbyid)
            )
              return a;
      }
      return null;
    }),
    (t.tableInfoMessage = function (e) {
      var i = t.getTableStates(e.tableid);
      i && !i && (i.betData = []),
        (e.history = e.history ? e.history : new Array()),
        (e.history2 = e.history2 ? e.history2 : new Array()),
        (e.history3 = e.history3
          ? 12 == e.history3.length
            ? e.history3
            : e.history3.concat(new Array(12 - e.history3.length))
          : new Array(12)),
        i
          ? ((("A" != i.tableInfo.tablestate &&
              "AA" != i.tableInfo.tablestate) ||
              ("A" != e.tablestate && "AA" != e.tablestate)) &&
              ((i.hasBet_B_S = !1),
              ("D" == e.tablestate ||
                "R" == e.tablestate ||
                "S" == e.tablestate ||
                "RP" == e.tablestate) &&
                4 == i.gameStyle &&
                "R" == e.tablestate &&
                (i.hasBet = !1)),
            i.update(e),
            t.tableStatesAC.itemUpdated(i))
          : ((i = new TableState(e)),
            t.tableStates.push(i),
            t.tableStatesAC.addItem(i)),
        (e.gamestyle = e.gamestyle ? e.gamestyle : i.gameStyle),
        (e.gamestyle == t.GAMESTYLE_mi || e.gamestyle == t.GAMESTYLE_vip) &&
          e.seatno >= 0 &&
          i.firstSeat &&
          ((i.hasBet = e.seatno >= 0),
          (i.enterType = e.entertype),
          (i.seatno = e.seatno),
          (i.lastlimitKey = e.lastlimitKey),
          (i.firstSeat = !1)),
        EventManager.getIns().dispatchEvent(
          new DataChangeEvent(DataChangeEvent.TABLE_INFO, e),
        );
    }),
    (t.enterTableMessage = function (e) {
      if (((t.goingTable = !1), Alert.hideLoading(), t.is_goto_duotai))
        t.curTable ||
          ((t.lobbyID = t.getLobbyTableData(e.tableid).lobbyid),
          (t.curTable = e),
          (t.curTableState = t.getTableStates(e.tableid)),
          t.curTableState && (t.curTableState.betData = []),
          EventManager.getIns().dispatchEvent(
            new GotoViewEvent(GotoViewEvent.GOTO_VIEW, View.DUO_TAI_GAME_VIEW),
          )),
          EventManager.getIns().dispatchEvent(
            new DataChangeEvent(DataChangeEvent.DUOTAI_TABLE_INFO, e),
          );
      else {
        if (t.curTableState && e.tableid == t.curTableState.tableid)
          return void EventManager.getIns().dispatchEvent(
            new DataChangeEvent(DataChangeEvent.RESET),
          );
        (t.lobbyID = t.getLobbyTableData(e.tableid).lobbyid),
          (t.curTable = e),
          (t.curTableState = t.getTableStates(e.tableid)),
          t.curTableState && (t.curTableState.betData = []),
          EventManager.getIns().dispatchEvent(
            new GotoViewEvent(
              GotoViewEvent.GOTO_VIEW,
              t.gameTypeToViewName(e.gameType),
            ),
          );
      }
    }),
    (t.leaveTable = function () {
      t.curTableState &&
        (0 == t.isReconnect &&
          MessageHandler.leaveTable(t.curTableState.tableid),
        (t.isReconnect = !1),
        (t.curTableState = null));
    }),
    (t.getGameNameWithGameStyle = function (t, e) {
      var i = LangUtils.LANG_MAP["dzg_game_type_" + t];
      return i;
    }),
    (t.getTableStr = function (t) {
      var e = this.getLobbyTableData(t);
      if (!e) return "";
      var i =
        LangUtils.LANG_MAP["dzg_game_type_" + e.gameType] +
        this.getTableStr1(t);
      return i;
    }),
    (t.getTableStr1 = function (t) {
      var e = this.getLobbyTableData(t);
      return e ? e.tableSeqInt : "";
    }),
    (t.getTableStrIndex = function (t) {
      var e = this.getLobbyTableData(t);
      return e ? e.tableIndex : 0;
    }),
    (t.errorMessage = function (e) {
      var i,
        a = LangUtils.LANG_MAP["ERROR_TIP_" + e.errorid],
        n = null != t.thisView;
      switch (e.errorid) {
        case -98:
        case -99:
        case -100:
        case -101:
        case -103:
        case -105:
        case -97:
        case -141:
          (i = t.callReferrer),
            MessageHandler.close(),
            EnterFrameRunner.getInstance().dispose(),
            (-103 == e.errorid || -141 == e.errorid) && (n = !0);
          break;
        case -102:
        case -107:
        case -130:
          i = t.gotoLobby;
          break;
        case -132:
          t.is_goto_duotai ? (n = !1) : (i = t.gotoLobby);
          break;
        case -131:
        case -134:
          (i = t.callReferrer),
            MessageHandler.close(),
            EnterFrameRunner.getInstance().dispose();
          break;
        case -33:
          t.Q1E5_login &&
            ((n = !0),
            (i = t.callReferrer),
            MessageHandler.close(),
            EnterFrameRunner.getInstance().dispose());
          break;
        case -116:
          t.is_goto_duotai ? ((n = !1), (i = null)) : (i = t.gotoLobby);
          break;
        case -4:
          n = !1;
      }
      n && Alert.show(a || e.desc, "", i),
        Alert.hideLoading(),
        (t.goingTable = !1);
    }),
    (t.gotoLogin = function () {
      EventManager.getIns().dispatchEvent(
        new GotoViewEvent(GotoViewEvent.GOTO_VIEW, View.LOGIN_VIEW),
      );
    }),
    (t.gotoLobby = function () {
      EventManager.getIns().dispatchEvent(
        new GotoViewEvent(GotoViewEvent.GOTO_VIEW, View.LOBBY_VIEW),
      );
    }),
    (t.subcountBalanceMessage = function (e) {
      (t.sumAmount = e.account),
        EventManager.getIns().dispatchEvent(
          new DataChangeEvent(DataChangeEvent.User_INFO),
        );
    }),
    (t.currencyMessage = function (t) {
      var e = MultiCurrencyManager.exchanges_string != t.currencyList;
      if (e) {
        (MultiCurrencyManager.currencyType = t.userCurrencyId),
          (MultiCurrencyManager.currencyType_system = t.sysCurrencyId),
          (MultiCurrencyManager.exchanges_string = t.currencyList);
        for (
          var i,
            a = t.currencyList ? t.currencyList.split(",") : [],
            n = 0,
            s = a;
          n < s.length;
          n++
        ) {
          var r = s[n];
          (i = r.split("-")),
            i.length > 2
              ? ((MultiCurrencyManager.exchanges[parseInt(i[0])] = Number(
                  i[2],
                )),
                t.userCurrencyId == parseInt(i[0]) &&
                  (MultiCurrencyManager.exchanges_icon = i[1]))
              : ((MultiCurrencyManager.exchanges[parseInt(i[0])] = Number(
                  i[1],
                )),
                t.userCurrencyId == parseInt(i[0]) &&
                  (MultiCurrencyManager.exchanges_icon = "")),
            (i = null);
        }
        (a = null),
          (MultiCurrencyManager.exchangeRate =
            MultiCurrencyManager.exchanges[MultiCurrencyManager.currencyType]),
          EventManager.getIns().dispatchEvent(
            new DataChangeEvent(DataChangeEvent.CHECK_USER_BIZHONG_CHANGE),
          );
      }
    }),
    (t.noticeMessage = function (e) {
      (t.curNotice = e),
        EventManager.getIns().dispatchEvent(
          new DataChangeEvent(DataChangeEvent.NOTICE_MESSAGE, e),
        );
    }),
    (t.getNoticeStr = function (e) {
      return t.curNotice
        ? e == t.NOTICE_STYPE_0
          ? this.curNotice.notice
          : e == t.NOTICE_STYPE_1
            ? this.curNotice.enotice
            : e == t.NOTICE_STYPE_2
              ? this.getNoticeStrbyLang()
              : void 0
        : [];
    }),
    (t.getNoticeStrbyLang = function () {
      return t.LANG_TYPE == t.LANG_SC
        ? this.curNotice.notice
        : t.LANG_TYPE == t.LANG_TC
          ? this.curNotice.tnotice
          : this.curNotice.enotice;
    }),
    (t.betStartMessage = function (e) {
      t.isCurTable(e.tableid) && e.countdown > 0;
      var i = t.getTableStates(e.tableid);
      if ((i && (i.betStart = e), 2 == e.bettype))
        return void EventManager.getIns().dispatchEvent(
          new DataChangeEvent(DataChangeEvent.BET_START, [e, !0]),
        );
      if (i) {
        i.betTime = e.countdown;
        var a = new Date().getTime();
        (i.betzfbTime = e.countdown + a),
          (i.isDealing = !1),
          (i.result = null),
          (i.betStart = e),
          (i.betData = {}),
          0 == e.bettype &&
            (i.clearTablePool(),
            (i.tableInfo.shoeSeq != e.shoeSeq ||
              i.tableInfo.gameSeq != e.gameSeq) &&
              ((i.tableInfo.shoeSeq = e.shoeSeq),
              (i.tableInfo.gameSeq = e.gameSeq),
              t.tableInfoMessage(i.tableInfo))),
          t.tableStatesAC.itemUpdated(i);
      } else {
        var n = t.getLobbyTableData(e.tableid);
        n &&
          ((i = new TableState(
            new TableInfoMessage(
              e.tableid,
              n.gameType,
              n.tableSeq,
              0,
              0,
              null,
              null,
              null,
              0,
              null,
              null,
              null,
              0,
              "LOAD",
              n.dealerName,
              n.dealerIcon,
              null,
              null,
              0,
              null,
              null,
              null,
              n.gameStyle,
            ),
          )),
          t.tableStates.push(i),
          t.tableStatesAC.addItem(i));
      }
      (t.betMaxTimeDict[e.shoeSeq + "_" + e.gameSeq] = Math.max(
        t.getCountMaxTime(e.shoeSeq, e.gameSeq),
        e.countdown,
      )),
        EventManager.getIns().dispatchEvent(
          new DataChangeEvent(DataChangeEvent.BET_START, [e, 0 != e.bettype]),
        );
    }),
    (t.getCountMaxTime = function (e, i) {
      var a = parseInt(t.betMaxTimeDict[e + "_" + i]);
      return isNaN(a) && (a = 0), a;
    }),
    (t.seatDealMessage = function (e) {
      var i = t.getTableStates(e.tableid);
      (i && i.tableInfo.gameSeq != e.gamblingNum) ||
        ((!i ||
          5 != i.gameStyle ||
          ("A" != i.tableInfo.tablestate && "WOP" != i.tableInfo.tablestate)) &&
          ((e.seatid = 4 == e.order ? 0 : e.seatid),
          (e.seatid = 5 == e.order ? 1 : e.seatid),
          t.is_goto_duotai
            ? EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.SEAT_DEAL, e),
              )
            : t.isCurTable(e.tableid) &&
              EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.SEAT_DEAL, e),
              ),
          i &&
            0 == i.isDealing &&
            ((i.isDealing = !0),
            (i.result = null),
            (i.betTime = 0 / 0),
            t.tableStatesAC.itemUpdated(i))));
    }),
    Object.defineProperty(t, "curLobbyidIsVip", {
      get: function () {
        if (0 == t.selectTableid) return !1;
        var e = t.curTableState || t.getTableStates(t.selectTableid);
        return e ? e.gameStyle == t.LOBBY_ID_VIP : !1;
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t, "curLobbyidIsMi", {
      get: function () {
        if (0 == t.selectTableid) return !1;
        var e = t.getTableStates(t.selectTableid);
        return e ? e.gameStyle == t.LOBBY_ID_MI : !1;
      },
      enumerable: !0,
      configurable: !0,
    }),
    (t.canMiCard = function (e) {
      void 0 === e && (e = !0);
      var i =
        (t.curLobbyidIsVip && t.miCardSet.ismiCard == MiCardSet.OK) ||
        t.curLobbyidIsMi;
      if (t.curLobbyidIsMi && t.curTable) {
        var a = t.getTableStates(t.curTable.tableid);
        -1 == a.mi_banker && -1 == a.mi_player && (i = !1);
      } else if (t.curLobbyidIsVip) {
        var n = t.getMyBetData();
        (3 == n || 4 == n) && (i = !1);
      }
      return e && (t.isMiCard = i), i;
    }),
    (t.getMyBetData = function () {
      return 3;
    }),
    (t.betAmountMessage = function (e) {
      var i = t.getTableStates(e.tableid);
      if (
        !(
          i &&
          i.messageID > 0 &&
          i.messageID > ShareUtils.timeByMessageID(e.messageID)
        )
      ) {
        for (var a = {}, n = 0, s = 0; s < e.point.length; s++)
          (e.amount[s] = MultiCurrencyManager.moneyConversion(
            e.amount[s],
            MultiCurrencyManager.currencyType_system,
          )),
            (a[e.point[s]] =
              ShareUtils.toMoney2_oo(e.amount[s]) + "/" + e.usertotal[s]),
            (n += e.amount[s]);
        i &&
          ((i.tablePool = a),
          (i.messageID = ShareUtils.timeByMessageID(e.messageID)),
          (i.totalBet = n),
          t.tableStatesAC.itemUpdated(i)),
          t.is_goto_duotai
            ? EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.BET_AMOUNT, e.tableid),
              )
            : t.isCurTable(e.tableid) &&
              EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.BET_AMOUNT, e.tableid),
              );
      }
    }),
    (t.seatBettingMessage = function (e) {
      e.amount = parseFloat(e.amount.toFixed(2));
      var i = t.getTableStates(e.tableid);
      if (
        (i.betData || (i.betData = []),
        !(e.seatid > this.seatLen && e.userid != t.userid))
      )
        if (-1 != e.seatid) {
          var a = i.GetKeyAmount(e.option, e.seatid);
          (a.amount = a.amount + e.amount), (a.isSBanker = e.sbanker);
          var n = e.seatid;
          for (n > t.seatLen && (n = t.seatList); t.userInfoData.length <= n; )
            t.userInfoData.push(null);
          if (
            ((t.userInfoData[n] = e),
            t.curLobbyidIsMi && e.seatid < t.seatList && i.updateMi(e),
            e.userid == t.userid && e.amount > 0)
          ) {
            var s = t.getTableStates(e.tableid);
            s &&
              ((s.hasBet = !0),
              t.getTableInfo(e.tableid).gameType == t.GAME_TYPE_BACCARAT &&
                s.gameStyle <= 2 &&
                ("BANKER" == e.option || "SS" == e.option) &&
                (s.hasBet_B_S = !0),
              t.tableStatesAC.itemUpdated(s));
          }
          t.is_goto_duotai
            ? EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.SEAT_BETTING, e),
              )
            : t.isCurTable(e.tableid) &&
              EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.SEAT_BETTING, e),
              );
        } else
          for (var r = t.userInfoData.length, o = 0; r > o; o++)
            t.userInfoData[o] &&
              t.userInfoData[o].userid == e.userid &&
              (t.userInfoData[o] = null);
    }),
    (t.betResponseMessage = function (e) {
      t.is_goto_duotai
        ? EventManager.getIns().dispatchEvent(
            new DataChangeEvent(DataChangeEvent.BET_RESPONSE, e),
          )
        : t.isCurTable(e.tableid) &&
          EventManager.getIns().dispatchEvent(
            new DataChangeEvent(DataChangeEvent.BET_RESPONSE, e),
          );
    }),
    (t.betResultMessage = function (e) {
      !e.winOptions ||
        0 == e.winOptions.length ||
        e.winOptions.indexOf("NULL") >= 0;
      var i = t.getTableStates(e.tableid);
      i &&
        (4 == i.gameStyle && (i.hasBet = !1),
        (i.result = e.winOptions),
        (i.isDealing = !1),
        (i.betTime = 0 / 0),
        i.clearTablePool(),
        t.tableStatesAC.itemUpdated(i)),
        t.is_goto_duotai
          ? EventManager.getIns().dispatchEvent(
              new DataChangeEvent(DataChangeEvent.BET_RESULT, e),
            )
          : t.isCurTable(e.tableid) &&
            EventManager.getIns().dispatchEvent(
              new DataChangeEvent(DataChangeEvent.BET_RESULT, e),
            );
    }),
    (t.callReferrer = function (e) {
      void 0 === e && (e = null),
        MessageHandler.close(),
        (t.ccData = null),
        (window.location.href = DZUtils.getWebURL());
    }),
    (t.isCurTable = function (e) {
      return t.curTableState && t.curTableState.tableid == e;
    }),
    (t.CardToString = function (e) {
      return (
        "order:" +
        e.order +
        " ,牌:" +
        (t.CardArray[e.color] || e.color) +
        "-" +
        (t.POINT_ARR[e.point] || e.point) +
        ", state:" +
        e.state +
        ", gamblingNum:" +
        e.gamblingNum +
        ", cardresult:" +
        e.cardresult
      );
    }),
    (t.getTableStates = function (e) {
      if (t.curTableState && t.curTableState.tableid == e)
        return t.curTableState;
      for (var i = 0, a = t.tableStates; i < a.length; i++) {
        var n = a[i];
        if (n.tableid == e) return n;
      }
      return null;
    }),
    (t.getTableStatesByLobbyID = function (e) {
      var i = [];
      for (var a in this.tableStates) {
        var n = this.tableStates[a],
          s = this.getLobbyTableData(n.tableid, e);
        s &&
          ((n.sortID = s.tableIndex),
          t.isH5SupportedGameType(s.gameType, s.gameStyle) && i.push(n));
      }
      return i;
    }),
    (t.getTableStatesByLobbyID_ignoreGameStype = function (e) {
      for (var i = [], a = 1; a < arguments.length; a++)
        i[a - 1] = arguments[a];
      for (var n = t.getTableStatesByLobbyID(e), s = 0; s < n.length; s++) {
        var r = n[s];
        (r.sortID_client = r.sortID + t.getGoodRoadSort(r.tableid)),
          (-1 == i.indexOf(r.gameStyle) &&
            t.getTabArrHaveByLabid(r.tableInfo.tableid)) ||
            (n.splice(s, 1), s--);
      }
      return n;
    }),
    (t.getTableStates_byeGameStype = function (e) {
      for (var i = [], a = 1; a < arguments.length; a++)
        i[a - 1] = arguments[a];
      var n = [];
      for (var s in this.tableStates) {
        var r = this.tableStates[s];
        r.tableInfo &&
          i.indexOf(r.tableInfo.gameType) > -1 &&
          t.getTabArrHaveByLabid(r.tableInfo.tableid) &&
          n.push(r);
      }
      return n;
    }),
    (t.getTableInfo = function (t) {
      var e = this.getTableStates(t);
      return e ? e.tableInfo : null;
    }),
    (t.getLimitByTableId = function (e, i) {
      void 0 === i && (i = null), null == i && (i = t.currentLimitKey);
      var a = t.getTableStates(e);
      if (a && null != a.tableInfo.limitKeys) {
        var n = a.tableInfo.limitKeys.indexOf(i);
        if (n >= 0) return [a.tableInfo.minlimit[n], a.tableInfo.maxlimit[n]];
      }
      return [0, 0];
    }),
    Object.defineProperty(t, "amountList", {
      get: function () {
        if (t._amountList) return t._amountList;
        for (
          var e = MultiCurrencyManager.coinsArray, i = void 0;
          i < t.coinKeys.length;
          i++
        )
          if (-1 != t.coinKeys[i].indexOf(t.currentLimitKey))
            return e.slice(t.coinLimits[i], t.coinLimits[i] + 5);
        return e.slice(0, 5);
      },
      set: function (e) {
        t._amountList = e;
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t, "isNOCOM", {
      get: function () {
        return t._isNOCOM;
      },
      set: function (e) {
        t._isNOCOM = e;
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t, "goingTable", {
      get: function () {
        return (
          egret.getTimer() - t.goingTable_Time > 15e3 && (t._goingTable = !1),
          t._goingTable
        );
      },
      set: function (e) {
        (t._goingTable = e), (t.goingTable_Time = egret.getTimer());
      },
      enumerable: !0,
      configurable: !0,
    }),
    (t.hasTableStates_B_S = function () {
      for (var e = 0, i = t.tableStates; e < i.length; e++) {
        var a = i[e];
        if (a.hasBet_B_S) return !0;
      }
      return !1;
    }),
    (t.hasTableStates_B_S_bystate = function (t) {
      return t && t.hasBet_B_S ? !0 : !1;
    }),
    (t.hasTableBeted = function () {
      for (var e = 0, i = t.tableStates; e < i.length; e++) {
        var a = i[e];
        if (a.hasBet) return !0;
      }
      return !1;
    }),
    Object.defineProperty(t, "save_card_bg", {
      get: function () {
        return t.curTableState ? t.curTableState.tableInfo.pokerStyle : 0;
      },
      set: function (e) {
        t._save_card_bg = e;
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t, "canBet", {
      get: function () {
        return t._canBet;
      },
      set: function (e) {
        t._canBet != e && ((t._canBet = e), t.curTableState);
      },
      enumerable: !0,
      configurable: !0,
    }),
    (t.tableInstant = function (e) {
      var i = t.getTableStates(e.tableid);
      i.seats = e.seats;
    }),
    (t.betTemp = function (t) {}),
    (t.userGive = function (e) {
      if (t.isCurTable(e.tableid)) {
        var i =
          e.userName +
          LangUtils.LANG_MAP.UserGive_TIP +
          e.giveamount +
          " " +
          LangUtils.LANG_MAP.doGive;
        Alert.tipGame(i), e.userid == t.userid || t.curTable;
      }
    }),
    (t.miCardAction = function (e) {
      t.isCurTable(e.tableid) &&
        EventManager.getIns().dispatchEvent(
          new DataChangeEvent(DataChangeEvent.MICARD_ACTION_MESSAGE, e),
        );
    }),
    (t.onchat = function (e) {
      if (t.curTable && t.curTable.tableid == e.tableid) {
        var i = t.getchathistorys(e.tableid);
        i.push(e),
          i.length > t.maxchathistorynum && i.shift(),
          (t.chathistorydict[e.tableid] = i),
          ShareUtils.main.gameView.onchat(e);
      }
    }),
    (t.getchathistorys = function (e) {
      return t.chathistorydict[e] || [];
    }),
    (t.ApplyHandle = function (e) {
      t.curTable &&
        e.tableid == t.curTable.tableid &&
        (1 == e.optype
          ? Alert.tip(
              e.showname +
                " " +
                LangUtils.LANG_MAP[
                  1 == e.result
                    ? "MI_SHENQING_DENGDAI_OK"
                    : "MI_SHENQING_DENGDAI"
                ],
            )
          : 5 == e.optype ||
            Alert.tip(
              e.showname +
                " " +
                LangUtils.LANG_MAP[
                  1 == e.result ? "MI_SHENQING_KAIPAI_OK" : "MI_SHENQING_KAIPAI"
                ],
            ));
    }),
    (t.openIFrameWebByURL = function (e, i) {
      void 0 === i && (i = 0);
      var a = document.createElement("div");
      (a.style.position = "absolute"),
        (a.style.width = "100%"),
        (a.style.height = "100%"),
        (a.style.backgroundColor = "rgba(0,0,0,0.85)"),
        t.egret_playerDiv.appendChild(a);
      var n = document.createElement("div");
      (n.style.position = "absolute"),
        (n.style.width = "100%"),
        (n.style.height = "100%"),
        (n.style.textAlign = "center");
      var s, r;
      if (/data:image\/png;base64/.test(e) || 1 == i);
      else {
        if (
          (n.style.setProperty("-webkit-overflow-scrolling", "touch"),
          n.style.setProperty("overflow-y", "scroll"),
          (s = document.createElement("iframe")),
          (s.width = "100%"),
          (s.height = "100%"),
          s.style.setProperty("border", "0"),
          /<body>/i.test(e))
        ) {
          var o = e.replace(/<!DOCTYPE.*>/, "");
          s.textContent = o;
        } else s.src = e;
        n.appendChild(s);
      }
      a.appendChild(n);
      var h = dzxx.SoundManager.inst.bgmusicEnabled;
      h && dzxx.SoundManager.inst.enableBGMusic(!1);
      var l = document.createElement("img");
      return (
        (l.alt = "返回"),
        (l.style.position = "absolute"),
        (l.src = "resource/assets/mobile/dzgame/dz_back.png"),
        a.appendChild(l),
        (l.onclick = function () {
          (l.onclick = null), h && dzxx.SoundManager.inst.enableBGMusic(!0);
          try {
            a.parentNode.removeChild(a);
          } catch (t) {}
        }),
        {
          div: a,
          imgdiv: n,
          iframe: s,
          base64img: r,
          backimg: l,
        }
      );
    }),
    Object.defineProperty(t, "egret_playerDiv", {
      get: function () {
        var t = document.body.getElementsByClassName("egret-player")[0];
        return t;
      },
      enumerable: !0,
      configurable: !0,
    }),
    (t.publicJsonMsg = function (e) {
      if ("" != e.jsonStr && void 0 != e.jsonStr && null != e.jsonStr) {
        var i = JSON.parse(e.jsonStr);
        if ("" != i.data && void 0 != i.data && null != i.data) {
          if ("ClientBetpoint" == i.action) {
            var a = i.data;
            0 == a.Result
              ? BetLimitAction.getIns().setGameLimit(
                  a.TableId,
                  a.Point,
                  t.currentLimitKey,
                )
              : Alert.show("限额获取失败");
          }
          if ("GoodRoad" == i.action) {
            var a = i.data;
            t.saveGoodRoadMessageHash(a);
          }
          if ("Banner" == i.action) {
            var a = i.data;
            t.saveBannerMessageHash(a);
          }
        }
      }
    }),
    (t.saveBannerMessageHash = function (t) {
      var e = 0,
        i = t.length;
      for (this.m_bannerMessageHash = {}; i > e; ++e) {
        var a = t[e],
          n = this.m_bannerMessageHash[a.language];
        n || (this.m_bannerMessageHash[a.language] = []),
          this.m_bannerMessageHash[a.language].push(a);
      }
      EventManager.getIns().dispatchEvent(
        new DataChangeEvent(DataChangeEvent.LUNBO_CHANGE),
      );
    }),
    (t.getBannerMessageArr = function (t) {
      var e = this.m_bannerMessageHash[t];
      return e ? e : [];
    }),
    (t.getBannerMessageArrLength = function (t) {
      var e = this.m_bannerMessageHash[t];
      return e ? e.length : 0;
    }),
    (t.saveGoodRoadMessageHash = function (t) {
      var e = -1;
      (e = this.m_goodRoadMessageHash[t.TableId]
        ? this.m_goodRoadMessageHash[t.TableId].RoadType
        : -1),
        (this.m_goodRoadMessageHash[t.TableId] = t),
        e != t.RoadType &&
          EventManager.getIns().dispatchEvent(
            new DataChangeEvent(DataChangeEvent.GOOD_ROAD_CHANGE, t),
          );
    }),
    (t.getGoodRoadMessage = function (t) {
      if (0 > t) return null;
      var e = this.m_goodRoadMessageHash[t];
      return e &&
        this.getTableOk(t) &&
        -1 != this.haoluConfigArr.indexOf(e.RoadType.toString())
        ? e
        : null;
    }),
    (t.getGoodRoadSort = function (e) {
      var i = t.getGoodRoadMessage(e);
      return i && i.RoadType >= 0 ? -1 * (i.RoadType + egret.getTimer()) : 0;
    }),
    (t.getGoodRoadNum = function (e) {
      var i = 0;
      for (var a in this.m_goodRoadMessageHash) {
        var n = this.m_goodRoadMessageHash[a],
          s = (t.getTableStates(n.TableId), t.getLobbyTableData(n.TableId));
        s &&
          -1 != this.haoluConfigArr.indexOf(n.RoadType.toString()) &&
          this.getTableOk(n.TableId) &&
          s.lobbyid == e &&
          i++;
      }
      return i;
    }),
    (t.getTableOk = function (e) {
      var i = t.getTableStates(e),
        a = (t.getLobbyTableData(e), i.tableInfo);
      if (i && a) {
        if ("RP" == a.tablestate) {
          var n = this.m_goodRoadMessageHash[e];
          return n && -1 != n.RoadType && (n.RoadType = -1), !1;
        }
        if ("S" == a.tablestate) {
          var n = this.m_goodRoadMessageHash[e];
          return n && -1 != n.RoadType && (n.RoadType = -1), !1;
        }
      }
      return !0;
    }),
    (t.getCookie = function (t) {
      if (document.cookie.length > 0) {
        var e = document.cookie.indexOf(t + "=");
        if (-1 != e) {
          e = e + t.length + 1;
          var i = document.cookie.indexOf(";", e);
          return (
            -1 == i && (i = document.cookie.length),
            document.cookie.substring(e, i)
          );
        }
      }
      return "";
    }),
    (t.initCookieHaolu = function () {
      var e = t.getCookie(t.userName + t.GAME_TYPE_BACCARAT.toString());
      if ("" == e || null == e || void 0 == e) {
        var i = 0;
        for (
          this.haoluConfigArr = [];
          i < dzxx.TableLuziSelectScreen.m_len;
          ++i
        )
          this.haoluConfigArr.push(i.toString());
      } else
        "-1" == e
          ? (this.haoluConfigArr = [])
          : (this.haoluConfigArr = e.split(""));
    }),
    (t.setCookie = function (t, e) {
      (document.cookie = t + "=" + e), this.initCookieHaolu();
    }),
    (t.saveCookieSound = function () {
      var e = "";
      (e = sound.SoundManager.getInstance().bgOn
        ? e + 1 + "sound"
        : e + 2 + "sound"),
        (e += dzxx.SoundManager.inst.effectsoundEnabled ? 1 : 2),
        this.setSoundCookie(t.USER_NAME + "sound", e);
    }),
    (t.configCookieSound = function () {
      var e = t.getCookie(t.USER_NAME + "sound");
      if ("" != e && null != e && void 0 != e) {
        var i = e.split("sound");
        (sound.SoundManager.getInstance().bgOn = "1" == i[0]),
          (dzxx.SoundManager.inst.effectsoundEnabled = "1" == i[1]);
      }
    }),
    (t.setSoundCookie = function (t, e) {
      document.cookie = t + "=" + e;
    }),
    (t.saveCookieLang = function () {
      var e = t.LANG_TYPE;
      this.setSoundCookie(t.USER_NAME + "lang", e);
    }),
    (t.configCookieLang = function () {
      var e = t.getCookie(t.USER_NAME + "lang");
      "" != e && null != e && void 0 != e && (t.LANG_TYPE = e);
    }),
    (t.setLangCookie = function (t, e) {
      document.cookie = t + "=" + e;
    }),
    (t.getDuotaiTabIndex = function (e) {
      var i = (t.duotai_OKID_hash, t.duotai_OKID_hash[e]);
      return i ? i.index : -1;
    }),
    (t.initDuotaiIDarray = function (e) {
      void 0 === e && (e = !1),
        (t.duotai_OKID_arr = []),
        (t.duotai_OKID_hash = {});
      var i = t.getCookie(t.userid + "duotai".toString());
      if ("" == i || null == i || void 0 == i) {
        var a = [];
        a = e ? window.duotai_arr : window.duotai_test_arr;
        for (var n = [], s = 0; s < a.length; ++s) {
          var r = {};
          (r.index = s),
            (r.t_id = a[s]),
            n.push(r),
            (t.duotai_OKID_hash[a[s]] = r);
        }
        n.sort(this.sortDuotai), this.initduotaiArr(n);
      } else {
        for (var o = i.split("#"), n = [], s = 0; s < o.length; ++s) {
          var h = o[s],
            l = h.split("_");
          if (l.length > 1) {
            var g = parseInt(l[0]),
              u = parseInt(l[1]),
              r = {};
            (r.index = g), (r.t_id = u), n.push(r), (t.duotai_OKID_hash[u] = r);
          }
        }
        n.sort(this.sortDuotai), this.initduotaiArr(n);
      }
    }),
    (t.getDuotaiIDaHashObj = function (e) {
      for (var i in t.duotai_OKID_hash) {
        var a = t.duotai_OKID_hash[i];
        if (a.index == e) return a;
      }
      return null;
    }),
    (t.initduotaiArr = function (e) {
      t.duotai_OKID_arr = [];
      for (var i = 0; i < e.length; ++i) {
        var a = e[i];
        t.duotai_OKID_arr.push(a.t_id);
      }
    }),
    (t.getDuotaiIDIndex = function (e) {
      return t.duotai_OKID_arr.indexOf(e);
    }),
    (t.sortDuotai = function (t, e) {
      return t.index - e.index;
    }),
    (t.setDuotaiCookie = function (e) {
      (document.cookie = t.userid + "duotai".toString() + "=" + e),
        this.initDuotaiIDarray();
    }),
    (t.changeDuotaiIDIndex = function (e, i) {
      var a = (t.duotai_OKID_hash, t.duotai_OKID_hash[i]);
      if (t.duotai_OKID_hash[i]) {
        var n = a.index,
          s = t.getDuotaiIDaHashObj(e);
        n != e &&
          (a && (a.index = e), s && (s.index = n), this.changeDuotaiCookie());
      } else {
        var s = t.getDuotaiIDaHashObj(e);
        s && delete t.duotai_OKID_hash[s.t_id],
          (a = {}),
          (a.index = e),
          (a.t_id = i),
          (t.duotai_OKID_hash[i] = a),
          this.changeDuotaiCookie(!0);
      }
    }),
    (t.getTableDuotaiIndex = function (e) {
      var i = t.getDuotaiIDIndex(e);
      return i > -1 ? i : 1e5;
    }),
    (t.changeDuotaiCookie = function (e) {
      void 0 === e && (e = !1);
      var i = "";
      for (var a in t.duotai_OKID_hash) {
        var n = t.duotai_OKID_hash[a];
        n && (i += n.index.toString() + "_" + n.t_id + "#");
      }
      this.setDuotaiCookie(i),
        EventManager.getIns().dispatchEvent(
          new DataChangeEvent(DataChangeEvent.DUOTAI_TAB_INDEX_CHANGE, e),
        );
    }),
    (t.addDuotaiBetCoin = function (e, i, a) {
      void 0 === i && (i = ""), void 0 === a && (a = "");
      var n = new game.GameBetItem();
      n.setItem({
        value: e,
      }),
        (n.scaleX = n.scaleY = 0.5),
        (n.alpha = 0.6),
        (n.wucha_x = -30 + 10 * Math.random() - 5),
        (n.wucha_y = -30 + 10 * Math.random() - 5),
        (n.betName = i),
        (n.tableSeq = a),
        t.addBetCoinDisHash(n),
        t.okBetCoinDisByDis(a);
    }),
    (t.addBetCoinDisHash = function (e) {
      t.clearBetCoinDisHash(),
        t.betCoinID++,
        (t.betCoinDisHash[t.betCoinID.toString()] = e);
    }),
    (t.getBetCoinDisHash = function (e) {
      var i = [];
      for (var a in t.betCoinDisHash) {
        var n = t.betCoinDisHash[a];
        n && n.tableSeq == e && i.push(n);
      }
      return i;
    }),
    (t.deletBetCoinDisByTabshid = function (e) {
      for (var i in t.betCoinDisHash) {
        var a = t.betCoinDisHash[i];
        a &&
          a.tableSeq == e &&
          (a.isSelect || ((a.visible = !1), t.deletBetCoinDisByDis(a)));
      }
    }),
    (t.selectBetCoinDisByTabshid = function (e, i) {
      if (!(e.length <= 0)) {
        var a = t.getBetCoinDisHash(i);
        if (!(a.length <= 0))
          for (var n = 0, s = e.length; s > n; ++n)
            for (var r = 0, o = a.length; o > r; ++r) {
              var h = a[r];
              h && h.betName == e[n] && (h.isSelect || h.selectItem(!0));
            }
      }
    }),
    (t.okBetCoinDisByDis = function (e) {
      for (var i in t.betCoinDisHash) {
        var a = t.betCoinDisHash[i];
        a && a.tableSeq == e && (a.isSelect || a.selectItem(!0));
      }
    }),
    (t.okBetCoinDisByPoints = function (e, i) {
      for (var a in t.betCoinDisHash) {
        var n = t.betCoinDisHash[a];
        n &&
          n.tableSeq == e &&
          (n.isSelect || i[n.betName] != n.nValue
            ? n.isTemple &&
              (n.parent.removeChild(n),
              (t.betCoinDisHash[a] = null),
              delete t.betCoinDisHash[a])
            : n.selectItem(!0));
      }
    }),
    (t.addBetCoinFromServer = function (e) {
      var i = !1;
      for (var a in t.betCoinDisHash) {
        var n = t.betCoinDisHash[a];
        n &&
          n.betName == e.betName &&
          n.nValue == e.nValue &&
          n.tableSeq == e.tableSeq &&
          ((i = !0), e.dispose());
      }
      i || (t.betCoinID++, (t.betCoinDisHash[t.betCoinID.toString()] = e));
    }),
    (t.deletBetCoinDisByDis = function (e) {
      egret.getTimer();
      for (var i in t.betCoinDisHash) {
        var a = t.betCoinDisHash[i];
        a &&
          a == e &&
          (a.parent && a.parent.removeChild(a),
          (t.betCoinDisHash[i] = null),
          delete t.betCoinDisHash[i]);
      }
    }),
    (t.clearBetCoinDisHash = function () {
      var e = egret.getTimer();
      for (var i in t.betCoinDisHash) {
        var a = t.betCoinDisHash[i];
        a &&
          e - a.createTime > 6e5 &&
          (a.parent && a.parent.removeChild(a),
          (t.betCoinDisHash[i] = null),
          delete t.betCoinDisHash[i]);
      }
    }),
    (t.getRepeatAllNum = function (t) {
      for (var e = 0, i = 0; i < t.length; i++) {
        var a = t[i];
        for (var n in a) e += a[n] || 0;
      }
      return e;
    }),
    (t.setImageColor = function (t, e) {
      var i = function (t) {
          var e = {
            r: -1,
            g: -1,
            b: -1,
          };
          return (
            (e.b = t % 256),
            (e.g = Math.floor(t / 256) % 256),
            (e.r = Math.floor(t / 256 / 256)),
            e
          );
        },
        a = i(e),
        n = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];
      (n[0] = a.r / 255), (n[6] = a.g / 255), (n[12] = a.b / 255);
      var s = new egret.ColorMatrixFilter(n);
      t.filters = [s];
    }),
    (t.verifyTable = function (e, i) {
      new HttpPostHandle(
        t.HTTP_HOST +
          "/client/api/videoVerify?gid=" +
          t.curTableState.tableInfo.tableSeq +
          "&userId=" +
          t.userid +
          "&userName=" +
          t.userName +
          "&betAmount=" +
          e,
        null,
        function (t) {
          switch (t.state) {
            case 0:
            case 100016:
              (i.touchEnabled = !1), ShareUtils.setGrayFilter(i, !0);
          }
          Alert.tip("" + LangUtils.LANG_MAP["verify_code_" + t.state]);
        },
        this,
        egret.URLRequestMethod.GET,
      );
    }),
    (t.USER_NAME = ""),
    (t.CODE = ""),
    (t.apiUserToken =
      "475AE90AC87730D414A220A51920E328751A9DB168C14E6354FB3618E54F6321"),
    (t.HOST = ""),
    (t.PORT = 0),
    (t.HTTP_HOST = ""),
    (t.HTTP_HOST_PF = ""),
    (t.API = "/api.jsp"),
    (t.PWD_API = "/client/modifypwd.jsp"),
    (t.RES_HTTP = ""),
    (t.MIN_PASS_LEN = 6),
    (t.MAX_PASS_LEN = 15),
    (t.showYaXing = !0),
    (t.LOBBY_ID_FLAGSHIP = 1),
    (t.LOBBY_ID_BACOM = 2),
    (t.LOBBY_ID_VIP = 3),
    (t.LOBBY_ID_MI = 4),
    (t.LOBBY_ID_GUOJI = 6),
    (t.LOBBY_ID_EGAMES = 7),
    (t.LOBBY_ID_LUNPAN = 8),
    (t.LOBBY_ID_DUOTAI = 88),
    (t.LOBBY_ID_YAZHOU = 101),
    (t.LOBBY_ID_EUROPE = 301),
    (t.LOBBY_ID_SHAIBAO = 9),
    (t.LOBBY_ID_MIPAI = 20),
    (t.LOBBY_ID_LANDUN = 8),
    (t.GAMESTYLE_normal = 1),
    (t.GAMESTYLE_jingdian = 2),
    (t.GAMESTYLE_vip = 3),
    (t.GAMESTYLE_mi = 4),
    (t.NOTICE_STYPE_0 = 0),
    (t.NOTICE_STYPE_1 = 1),
    (t.NOTICE_STYPE_2 = 2),
    (t.GAME_TYPE_BACCARAT = 1),
    (t.GAME_TYPE_DRAGONTIGER = 2),
    (t.GAME_TYPE_SICBO = 4),
    (t.GAME_TYPE_LUNPAGAME = 3),
    (t.GAME_TYPE_NIUNIU = 5),
    (t.LANG_SC = "sc"),
    (t.LANG_TC = "tc"),
    (t.LANG_EN = "en"),
    (t.LANG_KN = "kn"),
    (t.LANG_HN = "hn"),
    (t.LANG_VL = "vl"),
    (t.LANG_KR = "kr"),
    (t.LANG_JPN = "jpn"),
    (t.LANG_TYPE = t.LANG_SC),
    (t.langKey = {
      ch_ZN_txt: "sc",
      tw_ZN_txt: "tc",
      us_EN_txt: "en",
      kn_KN_txt: "kn",
      hn_HN_txt: "hn",
      vl_VL_txt: "vl",
      kr_KR_txt: "kr",
      jpn_JPN_txt: "jpn",
    }),
    (t.langValue = ["sc", "tc", "en"]),
    (t.langKey2 = {
      sc: "ch_ZN_txt",
      tc: "tw_ZN_txt",
      en: "us_EN_txt",
      kn: "kn_KN_txt",
      hn: "hn_HN_txt",
      vl: "vl_VL_txt",
      kr: "kr_KR_txt",
      jpn: "jpn_JPN_txt",
    }),
    (t.langCodes = {
      sc: "zh_CN",
      tc: "zh_TW",
      en: "EN",
      kn: "kn_KN",
      hn: "hn_HN",
      vl: "vl_VL",
      kr: "kr_KR",
      jpn: "jpn_JPN",
    }),
    (t.langNameHsh = {
      sc: "中文",
      tc: "繁体中文",
      en: "English",
      kn: "ภาษาไทย",
      hn: "HINDI",
      vl: "Tiếng Việt",
      kr: "Korean",
      jpn: "Japanese",
    }),
    (t.BANKER_COLOR = 16267834),
    (t.PLAYER_COLOR = 1268978),
    (t.TIE_COLOR = 2464800),
    (t.WHITE_COLOR = 16185078),
    (t.DARKWHITE_COLOR = 10066329),
    (t.RED_COLOR = 16267834),
    (t.GREEN_COLOR = 2464800),
    (t.BLUE_COLOR = 10802431),
    (t.MI_TABLE_MONEYs = {
      1: 1e4,
      2: 1500,
      3: 17e4,
      4: 17e5,
      5: 1e4,
      6: 1940,
    }),
    (t.ENTER_TABLE_TYPE_OUT = -1),
    (t.ENTER_TABLE_TYPE_OWN = 0),
    (t.ENTER_TABLE_TYPE_SIT = 1),
    (t.ENTER_TABLE_TYPE_SIDE = 2),
    (t.enterTableType = t.ENTER_TABLE_TYPE_OUT),
    (t.coinAmounts_all = [
      1, 5, 10, 20, 50, 100, 200, 500, 1e3, 2e3, 5e3, 1e4, 5e4, 1e5, 5e5, 1e6,
      2e6, 3e6,
    ]),
    (t.coinAmounts_6 = [
      1, 2, 3, 5, 10, 20, 30, 50, 100, 200, 300, 500, 1e3, 2e3,
    ]),
    (t.coinAmounts_7 = [
      1, 2, 5, 10, 20, 50, 100, 200, 500, 1e3, 2e3, 5e3, 1e4, 2e4,
    ]),
    (t.coinAmounts = [
      5, 10, 20, 50, 100, 200, 500, 1e3, 2e3, 5e3, 1e4, 5e4, 1e5, 5e5,
    ]),
    (t.coinAmounts_1 = [
      1, 5, 10, 20, 50, 100, 200, 500, 1e3, 2e3, 5e3, 1e4, 2e4, 5e4,
    ]),
    (t.coinAmounts_2 = [
      10, 20, 50, 100, 200, 500, 1e3, 2e3, 5e3, 1e4, 5e4, 1e5, 5e5, 1e6,
    ]),
    (t.coinAmounts_3 = [
      20, 50, 100, 200, 500, 1e3, 2e3, 5e3, 1e4, 5e4, 1e5, 5e5, 1e6, 2e6,
    ]),
    (t.coinAmounts_4 = [
      50, 100, 200, 500, 1e3, 2e3, 5e3, 1e4, 5e4, 1e5, 5e5, 1e6, 5e6, 1e7,
    ]),
    (t.coinAmounts_5 = [
      1e4, 2e4, 4e4, 1e5, 2e5, 4e5, 1e6, 2e6, 1e7, 2e7, 1e8, 2e8, 4e8, 6e8,
    ]),
    (t.coinKeys = [
      ["A", "B", "C"],
      ["D", "E", "F"],
      ["G", "H", "I", "O", "P", "Q"],
    ]),
    (t.coinLimits = [0, 2, 5]),
    (t.L0NROS8 = "L0NROS8="),
    (t.Q1E5 = "Q1E5"),
    (t.Y3E5 = "Y3E5"),
    (t.Q1E5_login = !1),
    (t.Q1E5_BET_MUTEX = !0),
    (t.API168_login = !1),
    (t.fast_login = !1),
    (t.VG_login = !1),
    (t.GT_login = !1),
    (t.ccData = null),
    (t.vector_login = !1),
    (t.vector_login_token = 8),
    (t.channel_login = !1),
    (t.channel_login_token = ""),
    (t.channel_name = ""),
    (t.ax_lobbyid = -1),
    (t.ax_tableid = -1),
    (t.PROMO_URL = ""),
    (t.IMAGE_URL = ""),
    (t.xAxis = 0),
    (t.yAxis = 0),
    (t.lobbyDict = {}),
    (t.dzGameNameHash = {
      3: "抢庄牛牛",
      4: "百人牛牛",
      9: "加倍斗地主",
      11: "血战到底",
      12: "炸金花",
      15: "十三水",
      17: "3D捕鱼",
      23: "二八杠",
      25: "二十一点",
      39: "跑得快",
      49: "新版斗地主",
      52: "看四张抢庄牛牛",
      994: "搏一搏",
      995: "幸运转盘",
      8: "推筒子",
      20: "通比牛牛",
      33: "经典抢庄牛牛",
      35: "森林舞会",
      42: "血流成河",
      45: "牛牛大吃小",
      53: "三公大吃小",
      55: "台湾麻将",
      56: "水果杯",
      57: "奔驰宝马",
      59: "钻石永恒",
      63: "海盗捕鱼",
      64: "波塞冬捕鱼",
      65: "神龙宝藏",
      66: "创世捕鱼",
      67: "街机捕鱼",
      68: "复古捕鱼",
      1: "斗地主",
      5: "龙王捕鱼",
      24: "广东推倒胡",
      6: "多财多福",
      26: "广东鸡平胡",
      2: "二人麻将",
      19: "开心摇摇乐",
    }),
    (t.TableENStr = ["L", "L", "C", "V", "V", "?", "?", "?", "L"]),
    (t.lobbyTableDataList = new Array()),
    (t.tableStates = new Array()),
    (t.tableStatesAC = new eui.ArrayCollection()),
    (t.selectTableid = 0),
    (t.thisView = null),
    (t.thisduotaiView = null),
    (t._isNOCOM = !1),
    (t._save_card_bg = 0),
    (t.isReconnect = !1),
    (t._canBet = !0),
    (t.regular_login = !1),
    (t.betAllname = ["BP", "PP", "SS", "PLAYER", "TILE", "BANKER"]),
    (t.isOpenDuotai = !0),
    (t.isOpenNotice = !1),
    (t.is_goto_duotai = !1),
    (t.duotai_OKID_arr = []),
    (t.cur_lobby_id = t.LOBBY_ID_GUOJI),
    (t.game_login_type = 1),
    (t.autoShowVideo = !0),
    (t._amount = -1),
    (t.key_dzcoinselectedcoinvalue = "dzcoinselectedcoinvalue"),
    (t.lunpan_OKID_arr = []),
    (t.allTab_OKID_ahash = {}),
    (t.isTrialUser = !1),
    (t.lobbyID = 0),
    (t.supportedlobbys = [
      t.LOBBY_ID_FLAGSHIP,
      t.LOBBY_ID_DUOTAI,
      t.LOBBY_ID_MIPAI,
      t.LOBBY_ID_SHAIBAO,
      t.LOBBY_ID_BACOM,
      t.LOBBY_ID_GUOJI,
      t.LOBBY_ID_YAZHOU,
      t.LOBBY_ID_EUROPE,
    ]),
    (t.supportedgamestyles = [
      t.GAMESTYLE_normal,
      t.GAMESTYLE_jingdian,
      t.GAMESTYLE_mi,
    ]),
    (t.betMaxTimeDict = {}),
    (t.miCardSet = new MiCardSet(
      MiCardSet.OK,
      MiCardSet.OK,
      MiCardSet.OK,
      MiCardSet.NO,
      MiCardSet.NO,
      null,
    )),
    (t.isMiCard = !1),
    (t.seatLen = 6),
    (t.seatList = 7),
    (t.userInfoData = []),
    (t.CardArray = ["", "黑桃", "红桃", "梅花", "方块"]),
    (t.POINT_ARR = [
      "",
      "A",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "10",
      "J",
      "Q",
      "K",
    ]),
    (t.maxchathistorynum = 30),
    (t.chathistorydict = {}),
    (t.m_bannerMessageHash = {}),
    (t.m_goodRoadMessageHash = {}),
    (t.haoluConfigArr = []),
    (t.duotai_OKID_hash = {}),
    (t.betCoinDisHash = {}),
    (t.betCoinID = 1),
    t
  );
})();
__reflect(DataManager.prototype, "DataManager");
var EnterFrameRunner = (function (t) {
  function e() {
    var i = t.call(this) || this;
    if (((i.SCEOND_TIMER = 0), (i.lasttimer = 0), null != e.instance))
      throw new Error("Singleton violation !").message;
    return (
      (e.instance = i),
      null == i.timer && (i.timer = new egret.Timer(200)),
      ShareUtils.main.addEventListener(
        egret.TouchEvent.TOUCH_TAP,
        i.onClick,
        i,
      ),
      i
    );
  }
  return (
    __extends(e, t),
    (e.getInstance = function () {
      return null == e.instance && new e(), e.instance;
    }),
    (e.prototype.stop = function () {
      this.timer.removeEventListener(
        egret.TimerEvent.TIMER,
        this.enterFrame,
        this,
      ),
        this.timer.stop(),
        this.dispatchEvent(new egret.Event(e.Stop));
    }),
    (e.prototype.start = function (t) {
      (this.SCEOND_TIMER = t),
        (e.NoOperationTime = new Date().getTime()),
        this.timer.running ||
          ((this.lasttimer = new Date().getTime()),
          this.timer.addEventListener(
            egret.TimerEvent.TIMER,
            this.enterFrame,
            this,
          ),
          this.timer.start(),
          this.dispatchEvent(new egret.Event(e.Start)));
    }),
    (e.prototype.enterFrame = function (t) {
      var e = new Date().getTime(),
        i = e - this.lasttimer;
      (this.SCEOND_TIMER += i),
        (this.lasttimer = e),
        this.dispatchEvent(new TimerGameEvent(TimerGameEvent.TICK)),
        this.check2time();
    }),
    (e.prototype.getAddTime = function (t) {
      var i = 1e3 - (t % 1e3);
      return e.instance.SCEOND_TIMER + i + (1e3 == i ? -1 : 1);
    }),
    (e.prototype.getStartTime = function (t) {
      var i =
        (e.instance.SCEOND_TIMER,
        Math.ceil((t - e.instance.SCEOND_TIMER) / 1e3));
      return i;
    }),
    Object.defineProperty(e, "ServerTime", {
      get: function () {
        return e._ServerTime;
      },
      set: function (t) {
        e._ServerTime > ShareUtils.timeByMessageID(t) ||
          ((e._ServerTime = ShareUtils.timeByMessageID(t)),
          (e.timer_num = egret.getTimer()));
      },
      enumerable: !0,
      configurable: !0,
    }),
    (e.getDifferenceTime = function (t, i) {
      var a =
        t -
        (e._ServerTime +
          (egret.getTimer() - e.timer_num) -
          ShareUtils.timeByMessageID(i));
      return (a = a > t ? t : a), (a = 0 > a ? t : a);
    }),
    (e.getTimeTickNumber = function (t, i, a) {
      void 0 === a && (a = !1);
      var n = e.getDifferenceTime(t, i),
        s = 1100,
        r = 500,
        o = s - (n % s),
        h = 300,
        l =
          Math.ceil(((o + r) / n) * 1e3) <= h
            ? Math.ceil(((o + r) / n) * 1e3)
            : h,
        g = 1e3 - l;
      return a && (g = 950), n > 0 ? (a ? n : g) : 0;
    }),
    (e.correctTimeTickNumber = function (t, i, a, n) {
      var s = e.getDifferenceTime(t, i),
        r = a - Math.ceil(s / 1e3);
      if (r >= 2) {
        var o = 1e3 / ((1e3 * a) / Math.ceil(s / 1e3) / 1e3);
        return s > 0 ? o : 0;
      }
      return n;
    }),
    (e.userRun = function () {
      e.NoOperationTime = new Date().getTime();
    }),
    (e.prototype.check2time = function () {
      new Date().getTime() - e.NoOperationTime >= 72e5 &&
        0 == ShareUtils.inWhiteList() &&
        (Alert.show(
          LangUtils.LANG_MAP.NoOperation_Close_Tip,
          "",
          DataManager.callReferrer,
        ),
        MessageHandler.close(),
        this.dispose());
    }),
    (e.prototype.onClick = function (t) {
      e.userRun();
    }),
    (e.prototype.dispose = function () {
      ShareUtils.main.removeEventListener(
        egret.TouchEvent.TOUCH_TAP,
        this.onClick,
        this,
      ),
        this.timer &&
          (this.timer.removeEventListener(
            egret.TimerEvent.TIMER,
            this.enterFrame,
            this,
          ),
          this.timer.stop());
    }),
    (e.Start = "start"),
    (e.Stop = "stop"),
    (e._ServerTime = 0),
    e
  );
})(egret.EventDispatcher);
__reflect(EnterFrameRunner.prototype, "EnterFrameRunner");
var EventManager = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (e.saveUnitDic = new Object()), e;
  }
  return (
    __extends(e, t),
    (e.getIns = function () {
      return e.instance || (e.instance = new e()), e.instance;
    }),
    (e.prototype.getArrForUniteDic = function (t) {
      return (
        this.saveUnitDic[t] || (this.saveUnitDic[t] = new Array()),
        this.saveUnitDic[t]
      );
    }),
    (e.prototype.addEvent = function (t, e, i, a) {
      (this._event_arr = this.getArrForUniteDic(t)),
        this._event_arr.forEach(function (t) {
          t[0] == e && t[1] == i && t[2] == a;
        }),
        this._event_arr.push([e, i, a, e]),
        e.addEventListener(i, a, e);
    }),
    (e.prototype.removeEvent = function (t, e, i, a) {
      this._event_arr = this.getArrForUniteDic(t);
      for (var n = 0; n < this._event_arr.length; n++)
        this._event_arr[n][0] == e &&
          this._event_arr[n][1] == i &&
          this._event_arr[n][2] == a &&
          (this._event_arr.splice(n, 1), e.removeEventListener(i, a, e));
      0 == this._event_arr.length && delete this.saveUnitDic[t];
    }),
    (e.prototype.clearUnitEvent = function (t) {
      var e = this.getArrForUniteDic(t);
      e.forEach(function (t) {
        t[0].removeEventListener(t[1], t[2], t[3]);
      }),
        (e.length = 0),
        delete this.saveUnitDic[t];
    }),
    (e.prototype.clearTargerEvent = function (t, e) {
      for (var i = this.getArrForUniteDic(t), a = 0; a < i.length; a++) {
        var n = i[a];
        n[0] == e && (this.removeEvent(t, e, n[1], n[2]), a--);
      }
    }),
    (e.prototype.clear = function () {
      for (var t in this.saveUnitDic) {
        for (var e = this.saveUnitDic[t], i = 0, a = e; i < a.length; i++) {
          var n = a[i];
          n[0].removeEventListener(n[1], n[2], n[3]), (n.length = 0);
        }
        (e.length = 0), delete this.saveUnitDic[t];
      }
      this.saveUnitDic = new Array();
    }),
    e
  );
})(egret.EventDispatcher);
__reflect(EventManager.prototype, "EventManager");
var MiCardManager = (function () {
  function t() {}
  return t;
})();
__reflect(MiCardManager.prototype, "MiCardManager");
var MultiCurrencyManager = (function () {
  function t() {}
  return (
    Object.defineProperty(t, "coinsArray", {
      get: function () {
        return 0 < t.exchangeRate && t.exchangeRate < 0.1
          ? DataManager.coinAmounts_6
          : 0.1 <= t.exchangeRate && t.exchangeRate < 0.3
            ? DataManager.coinAmounts_7
            : 0.3 <= t.exchangeRate && t.exchangeRate < 0.7
              ? DataManager.coinAmounts_1
              : 0.7 <= t.exchangeRate && t.exchangeRate < 3
                ? DataManager.coinAmounts
                : 3 <= t.exchangeRate && t.exchangeRate < 8
                  ? DataManager.coinAmounts_2
                  : 8 <= t.exchangeRate && t.exchangeRate < 12
                    ? DataManager.coinAmounts_3
                    : 12 <= t.exchangeRate && t.exchangeRate < 300
                      ? DataManager.coinAmounts_4
                      : 2e3 <= t.exchangeRate && t.exchangeRate < 4e3
                        ? DataManager.coinAmounts_5
                        : DataManager.coinAmounts;
      },
      enumerable: !0,
      configurable: !0,
    }),
    (t.moneyConversion = function (e, i) {
      return (e / t.exchanges[i]) * t.exchanges[t.currencyType];
    }),
    (t.moneyPublicConversion = function (e) {
      return e * t.exchanges[t.currencyType];
    }),
    (t.moneyConversionToSystem = function (e, i) {
      return e / t.exchanges[i];
    }),
    (t.getExchanges_icon = function (e) {
      void 0 === e && (e = 1);
      var i = "";
      if (1 == e)
        if (
          "" == t.exchanges_icon ||
          void 0 == t.exchanges_icon ||
          null == t.exchanges_icon
        )
          i = "cy_CNY_png";
        else {
          var a = t.langNameHsh[t.exchanges_icon];
          i =
            "" == a || void 0 == a || null == a
              ? "cy_CNY_png"
              : "cy_" + a + "_png";
        }
      else i = "cy_CNY_png";
      return i;
    }),
    (t.currencyType_system = 1),
    (t.currencyType = 1),
    (t.exchangeRate = 1),
    (t.exchanges = [1, 1]),
    (t.exchanges_string = ""),
    (t.exchanges_icon = ""),
    (t.langNameHsh = {
      CNY: "CNY",
      USD: "USD",
      JPY: "JPY",
      KRW: "KRW",
      HKD: "HKD",
      AUD: "AUD",
      THB: "THB",
      VND: "VND",
      "VND(K)": "VND(K)",
      IDR: "IDR",
      "IDR(K)": "IDR(K)",
      MYR: "MYR",
      INR: "INR",
      MMK: "MMK",
      KES: "KES",
      USDT: "USDT",
      mETH: "mETH",
      mBTC: "mBTC",
      BDT: "BDT",
      TWD: "TWD",
      AED: "AED",
      GBP: "GBP",
      PHP: "PHP",
      PKR: "PKR",
      YXB: "YXB",
    }),
    t
  );
})();
__reflect(MultiCurrencyManager.prototype, "MultiCurrencyManager");
var PoolManager = (function () {
  function t() {
    this._dictionary = {};
  }
  return (
    Object.defineProperty(t, "inst", {
      get: function () {
        return this._inst || (this._inst = new t()), t._inst;
      },
      enumerable: !0,
      configurable: !0,
    }),
    (t.prototype.getFromPool = function (t) {
      for (var e = [], i = 1; i < arguments.length; i++)
        e[i - 1] = arguments[i];
      var a = null;
      this._dictionary[t] || (this._dictionary[t] = []);
      var n = this._dictionary[t];
      if (n.length > 0) return n.shift();
      var s = t.split("|")[0],
        r = egret.getDefinitionByName(s),
        o = e.length;
      return (
        0 == o
          ? (a = new r())
          : 1 == o
            ? (a = new r(e[0]))
            : 2 == o
              ? (a = new r(e[0], e[1]))
              : 3 == o
                ? (a = new r(e[0], e[1], e[2]))
                : 4 == o
                  ? (a = new r(e[0], e[1], e[2], e[3]))
                  : 5 == o && (a = new r(e[0], e[1], e[2], e[3], e[4])),
        (a.className = t),
        a
      );
    }),
    (t.prototype.getObjectsByClassName = function (t) {
      return this._dictionary[t];
    }),
    (t.prototype.putInPool = function (t, e) {
      var i = this._dictionary[t];
      i || (i = []), i.push(e), (this._dictionary[t] = i);
    }),
    t
  );
})();
__reflect(PoolManager.prototype, "PoolManager");
var game;
!(function (t) {
  var e = (function () {
    function t() {
      this.betNameArr = [
        "DiTri0",
        "DiTri1",
        "DiTri2",
        "DiTri3",
        "DiTri4",
        "DiTri5",
        "DiTri6",
        "DiDou1",
        "DiDou2",
        "DiDou3",
        "DiDou4",
        "DiDou5",
        "DiDou6",
        "DiTo04",
        "DiTo05",
        "DiTo06",
        "DiTo07",
        "DiTo08",
        "DiTo09",
        "DiTo10",
        "DiTo11",
        "DiTo12",
        "DiTo13",
        "DiTo14",
        "DiTo15",
        "DiTo16",
        "DiTo17",
        "DiTw12",
        "DiTw13",
        "DiTw14",
        "DiTw15",
        "DiTw16",
        "DiTw23",
        "DiTw24",
        "DiTw25",
        "DiTw26",
        "DiTw34",
        "DiTw35",
        "DiTw36",
        "DiTw45",
        "DiTw46",
        "DiTw56",
        "DiOne1",
        "DiOne2",
        "DiOne3",
        "DiOne4",
        "DiOne5",
        "DiOne6",
        "DiEven",
        "DiOdd",
        "DiBig",
        "DiSm",
      ];
    }
    return (
      (t.instance = function () {
        return this._instance || (this._instance = new t()), this._instance;
      }),
      (t.getBetCount = function (t) {
        for (var e = 0, i = 0, a = 0, n = 0, s = 0; s < t.length; s++) {
          for (var r = t[s].split(";"), o = {}, h = 0, l = 0; l < r.length; l++)
            h += parseInt(r[l]);
          (o.value = h),
            this.isBig(o) && e++,
            this.isSmall(o) && i++,
            this.isEven(o) && n++,
            this.isOdd(o) && a++;
        }
        return [i, e, a, n];
      }),
      (t.judgeOddOrEven = function (t) {
        for (var e = t.split(";"), i = 0, a = {}, n = 0; n < e.length; n++)
          i += parseInt(e[n]);
        return (
          (a.value = i),
          e[0] == e[1] && e[0] == e[2]
            ? ((a.word = LangUtils.LANG_MAP.H_DiceWei), (a.value = e[0]), a)
            : (this.isEven(a) && (a.word = LangUtils.LANG_MAP.DiEven),
              this.isOdd(a) && (a.word = LangUtils.LANG_MAP.DiOdd),
              a)
        );
      }),
      (t.isBig = function (t) {
        return t.value > 10 && t.value < 18 ? !0 : !1;
      }),
      (t.isSmall = function (t) {
        return t.value > 3 && t.value < 11 ? !0 : !1;
      }),
      (t.isOdd = function (t) {
        return t.value > 3 && t.value < 18 && t.value % 2 != 0 ? !0 : !1;
      }),
      (t.isEven = function (t) {
        return t.value > 3 && t.value < 18 && t.value % 2 == 0 ? !0 : !1;
      }),
      (t.judgeBigOrSmall = function (t) {
        for (var e = t.split(";"), i = 0, a = {}, n = 0; n < e.length; n++)
          i += parseInt(e[n]);
        return (
          (a.value = i),
          e[0] == e[1] && e[0] == e[2]
            ? ((a.word = LangUtils.LANG_MAP.H_DiceWei), (a.value = e[0]), a)
            : (this.isSmall(a) && (a.word = LangUtils.LANG_MAP.DiSm),
              this.isBig(a) && (a.word = LangUtils.LANG_MAP.DiBig),
              a)
        );
      }),
      t
    );
  })();
  (t.ShaiBaoManager = e), __reflect(e.prototype, "game.ShaiBaoManager");
})(game || (game = {}));
var dzxx;
!(function (t) {
  var e;
  !(function (t) {
    (t[(t.MAPROTE_SHOW_TYPE_ZHUPAN = 1)] = "MAPROTE_SHOW_TYPE_ZHUPAN"),
      (t[(t.MAPROTE_SHOW_TYPE_HONGHEI = 2)] = "MAPROTE_SHOW_TYPE_HONGHEI"),
      (t[(t.MAPROTE_SHOW_TYPE_DAXIAO = 3)] = "MAPROTE_SHOW_TYPE_DAXIAO"),
      (t[(t.MAPROTE_SHOW_TYPE_DALIE = 4)] = "MAPROTE_SHOW_TYPE_DALIE"),
      (t[(t.MAPROTE_SHOW_TYPE_DANHUANG = 5)] = "MAPROTE_SHOW_TYPE_DANHUANG");
  })((e = t.MAPROTE_SHOW_TYPE || (t.MAPROTE_SHOW_TYPE = {})));
  var i = (function (i) {
    function a(t, e, a, n) {
      void 0 === n && (n = 2);
      var s = i.call(this) || this;
      return (
        (s.MapRoteSize = 40),
        (s.gridLayer = new egret.Shape()),
        (s.L_Sp = new egret.Sprite()),
        (s.R_Sp = new egret.Sprite()),
        (s.L_titleHash = {}),
        (s.R_titleHash = {}),
        (s.ALL_titleHash = {}),
        (s.show_type = 2),
        (s.red_color = 14236721),
        (s.black_color = 0),
        (s.green_color = 951122),
        (s.blue_color = 2438298),
        (s.touchEnabled = !1),
        (s.touchChildren = !1),
        (s.m_col = a),
        (s.m_row = e),
        (s.MapRoteSize = t),
        (s.show_type = n),
        s
      );
    }
    return (
      __extends(a, i),
      Object.defineProperty(a.prototype, "pw", {
        get: function () {
          return this.parent ? this.parent.width : 200;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(a.prototype, "ph", {
        get: function () {
          return this.parent ? this.parent.height : 100;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(a.prototype, "maxCol", {
        get: function () {
          return Math.floor(this.pw / this.MapRoteSize) - this.m_row;
        },
        enumerable: !0,
        configurable: !0,
      }),
      (a.prototype.changeLang = function (t) {}),
      (a.prototype.updata = function (t) {
        if ((void 0 === t && (t = -1), t > -1)) {
          if (this.show_type == t) return;
          this.show_type = t;
        }
        this.m_infoAny && this.show(this.m_infoAny);
      }),
      (a.prototype.show = function (t, a) {
        void 0 === a && (a = -1),
          i.prototype.show.call(this, t),
          a > -1 && (this.show_type = a),
          this.initConfig();
        var n, s;
        if (this.show_type == e.MAPROTE_SHOW_TYPE_ZHUPAN) {
          var r =
            (this.MapRoteSize,
            this.pw,
            Math.floor(this.pw / this.MapRoteSize) - 1);
          (n = Math.abs(r * this.m_col)), (s = r);
        } else (n = this.m_col * this.m_row), (s = this.m_row);
        var o = t.slice(-1 * n);
        this.clearMap2D();
        for (var h = 0, l = 0; s > h; ++h)
          for (var g = 0; g < this.m_col && !(l >= o.length); ++g) {
            var u = this.getInobj(parseInt(o[l]), h, g),
              c = this.getTitleScreen(u.t_x.toString() + u.t_y.toString(), "L");
            c && (c.show(u), this.L_Sp.addChild(c)), l++;
          }
        if (
          ((this.L_Sp.x = this.L_Sp.y = 0),
          this.addChild(this.L_Sp),
          this.show_type != e.MAPROTE_SHOW_TYPE_ZHUPAN)
        ) {
          for (var d = [], g = 0, p = 0, _ = 0, b = void 0; g < t.length; ++g) {
            var u = this.getInobjByType(parseInt(t[g]), this.show_type),
              m = !1;
            b && b.rote_type != u.rote_type && (m = !0),
              (_ >= this.m_col || m) && ((_ = 0), p++),
              (u.t_x = p),
              (u.t_y = _),
              d.push(u),
              (b = u),
              _++;
          }
          var T = [];
          if (b) {
            var v = b.t_x,
              r = this.maxCol - 2;
            if (r >= v) T = d;
            else
              for (var E = v - r, f = 0; f < d.length; ++f) {
                var u = d[f];
                u.t_x - E >= 0 && ((u.t_x = u.t_x - E), T.push(d[f]));
              }
          }
          if (T.length > 0)
            for (var f = 0; f < T.length; ++f) {
              var u = T[f],
                L = this.getTitleScreen(
                  u.t_x.toString() + u.t_y.toString(),
                  "R",
                );
              L && (L.show(u), this.R_Sp.addChild(L));
            }
          (this.R_Sp.x = this.m_row * this.MapRoteSize),
            (this.R_Sp.y = 0),
            this.addChild(this.R_Sp);
        }
      }),
      (a.prototype.getInobjByType = function (t, i) {
        void 0 === i && (i = e.MAPROTE_SHOW_TYPE_ZHUPAN);
        var a,
          n = {};
        switch (
          ((n.title_type = i),
          (n.title_size = this.MapRoteSize),
          (n.bg_type = "img"),
          (n.bg_color = 16777215),
          i)
        ) {
          case e.MAPROTE_SHOW_TYPE_ZHUPAN:
            break;
          case e.MAPROTE_SHOW_TYPE_HONGHEI:
            (a = game.LunpanManager.getHoneHeiRoteType(t)),
              a == game.LunpanManager.ROTE_HONG_TYPE
                ? ((n.lab_color = this.red_color), (n.lab = "红"))
                : a == game.LunpanManager.ROTE_HEI_TYPE
                  ? ((n.lab_color = this.black_color), (n.lab = "黑"))
                  : ((n.lab_color = this.green_color), (n.lab = "零"));
            break;
          case e.MAPROTE_SHOW_TYPE_DAXIAO:
            (a = game.LunpanManager.getDaXiaoRoteType(t)),
              a == game.LunpanManager.ROTE_DA_TYPE
                ? ((n.lab_color = this.red_color), (n.lab = "大"))
                : a == game.LunpanManager.ROTE_XIAO_TYPE
                  ? ((n.lab_color = this.blue_color), (n.lab = "小"))
                  : ((n.lab_color = this.green_color), (n.lab = "零"));
            break;
          case e.MAPROTE_SHOW_TYPE_DALIE:
            break;
          case e.MAPROTE_SHOW_TYPE_DANHUANG:
            (a = game.LunpanManager.getDanShuangRoteType(t)),
              a == game.LunpanManager.ROTE_DAN_TYPE
                ? ((n.lab_color = this.red_color), (n.lab = "单"))
                : a == game.LunpanManager.ROTE_SHUANG_TYPE
                  ? ((n.lab_color = this.blue_color), (n.lab = "双"))
                  : ((n.lab_color = this.green_color), (n.lab = "零"));
        }
        return (n.rote_type = a), n;
      }),
      (a.prototype.getInobj = function (t, i, a, n) {
        void 0 === n && (n = e.MAPROTE_SHOW_TYPE_ZHUPAN);
        var s = {};
        (s.title_type = n),
          (s.title_size = this.MapRoteSize),
          (s.bg_type = "img"),
          (s.lab_color = 16777215),
          (s.lab = t.toString());
        var r = game.LunpanManager.getHoneHeiRoteType(t);
        return (
          r == game.LunpanManager.ROTE_HONG_TYPE
            ? (s.bg_color = this.red_color)
            : r == game.LunpanManager.ROTE_HEI_TYPE
              ? (s.bg_color = this.black_color)
              : (s.bg_color = this.green_color),
          (s.t_x = i),
          (s.t_y = a),
          s
        );
      }),
      (a.prototype.initConfig = function () {
        this.clearAllgraphics(),
          this.clearAllTitle(),
          this.drawTitle(),
          this.addChild(this.gridLayer);
      }),
      (a.prototype.drawDalieTitle = function () {}),
      (a.prototype.drawTitle = function () {
        var t = (this.pw, this.ph, Math.floor(this.pw / this.MapRoteSize)),
          e = Math.floor(this.ph / this.MapRoteSize);
        this.graphics.beginFill(16777215),
          this.graphics.drawRect(0, 0, this.pw, this.ph),
          this.graphics.endFill();
        for (var i = 0; t >= i; ++i) {
          this.gridLayer.graphics.beginFill(16777215, 1),
            this.gridLayer.graphics.lineStyle(1, 0);
          var a = i * this.MapRoteSize;
          this.gridLayer.graphics.moveTo(a, 0),
            this.gridLayer.graphics.lineTo(a, this.ph);
        }
        for (i = 0; e >= i; ++i) {
          this.gridLayer.graphics.beginFill(16777215, 1),
            this.gridLayer.graphics.lineStyle(1, 0);
          var a = i * this.MapRoteSize;
          this.gridLayer.graphics.moveTo(0, a),
            this.gridLayer.graphics.lineTo(this.pw, a);
        }
        this.gridLayer.graphics.endFill();
      }),
      (a.prototype.clearAllgraphics = function () {
        this.graphics.clear(), this.gridLayer.graphics.clear();
      }),
      (a.prototype.clearMap2D = function () {}),
      (a.prototype.getTitleScreen = function (e, i) {
        if ((void 0 === i && (i = "L"), "L" == i)) {
          var a = this.L_titleHash[e];
          return a || (a = this.L_titleHash[e] = new t.MapRoteTitle()), a;
        }
        if ("R" == i) {
          var a = this.R_titleHash[e];
          return a || (a = this.R_titleHash[e] = new t.MapRoteTitle()), a;
        }
      }),
      (a.prototype.clearAllTitle = function () {
        for (var t in this.L_titleHash) {
          var e = this.L_titleHash[t];
          e && e.destroy();
        }
        for (var t in this.R_titleHash) {
          var e = this.R_titleHash[t];
          e && e.destroy();
        }
      }),
      (a.prototype.destroy = function () {
        this.clearAllgraphics(),
          this.clearAllTitle(),
          this.parent && this.parent.removeChild(this);
      }),
      a
    );
  })(t.ScreenAbstract);
  (t.MapRoteScreen = i), __reflect(i.prototype, "dzxx.MapRoteScreen");
})(dzxx || (dzxx = {}));
var dzxx;
!(function (t) {
  var e = (function (e) {
    function i() {
      var t = e.call(this) || this;
      return (
        (t.gridimg = new eui.Image()),
        (t.title = new eui.Label()),
        (t.title_size = 0),
        t
      );
    }
    return (
      __extends(i, e),
      (i.prototype.show = function (i) {
        if ((e.prototype.show.call(this, i), this.clearAlldis(), i))
          switch (
            ((this.title.width = i.title_size),
            (this.title.height = this.title_size = i.title_size),
            (this.title.size = Math.round(0.6 * this.title_size)),
            (this.title.bold = !0),
            (this.title.fontFamily = "Microsoft YaHei"),
            (this.title.verticalAlign = "middle"),
            (this.title.textAlign = "center"),
            (this.title.text = i.lab),
            (this.title.textColor = i.lab_color),
            (this.x = i.title_size * i.t_x),
            (this.y = i.title_size * i.t_y),
            i.title_type)
          ) {
            case t.MAPROTE_SHOW_TYPE.MAPROTE_SHOW_TYPE_ZHUPAN:
              this.graphics.beginFill(i.bg_color),
                this.graphics.drawRect(0, 0, this.title_size, this.title_size),
                this.graphics.endFill(),
                this.addChild(this.title);
              break;
            case t.MAPROTE_SHOW_TYPE.MAPROTE_SHOW_TYPE_HONGHEI:
              this.addChild(this.title);
              break;
            case t.MAPROTE_SHOW_TYPE.MAPROTE_SHOW_TYPE_DAXIAO:
              this.addChild(this.title);
              break;
            case t.MAPROTE_SHOW_TYPE.MAPROTE_SHOW_TYPE_DALIE:
              this.addChild(this.title);
              break;
            case t.MAPROTE_SHOW_TYPE.MAPROTE_SHOW_TYPE_DANHUANG:
              this.addChild(this.title);
          }
      }),
      (i.prototype.clearAlldis = function () {
        for (this.graphics.clear(); this.numChildren > 0; ) {
          var t = this.getChildAt(0);
          t.parent && t.parent.removeChild(t);
        }
      }),
      (i.prototype.destroy = function () {
        this.clearAlldis(), this.parent && this.parent.removeChild(this);
      }),
      i
    );
  })(t.ScreenAbstract);
  (t.MapRoteTitle = e), __reflect(e.prototype, "dzxx.MapRoteTitle");
})(dzxx || (dzxx = {}));
var dzxx;
!(function (t) {
  var e;
  !(function (t) {
    (t[(t.NIUROTE_SHOW_TYPE_1 = 1)] = "NIUROTE_SHOW_TYPE_1"),
      (t[(t.NIUROTE_SHOW_TYPE_2 = 2)] = "NIUROTE_SHOW_TYPE_2");
  })((e = t.NIUROTE_SHOW_TYPE || (t.NIUROTE_SHOW_TYPE = {})));
  var i = (function (i) {
    function a(t, e, a) {
      void 0 === a && (a = 0);
      var n = i.call(this) || this;
      return (
        (n.gridLayer = new egret.Shape()),
        (n.L_Sp = new egret.Sprite()),
        (n.R_Sp = new egret.Sprite()),
        (n.L_Sp_size = 60),
        (n.L_titleHash = {}),
        (n.R_titleHash = {}),
        (n.ALL_titleHash = {}),
        (n.show_type = 2),
        (n.red_color = 13909559),
        (n.black_color = 0),
        (n.green_color = 951122),
        (n.blue_color = 1867971),
        (n.white_color = 16777215),
        (n.route_flag = 0),
        (n.touchEnabled = !1),
        (n.touchChildren = !1),
        (n.m_col = e),
        (n.m_row = t),
        (n.route_flag = a),
        LangUtils.addEventListener(n.changeLang, n),
        n
      );
    }
    return (
      __extends(a, i),
      Object.defineProperty(a.prototype, "pw", {
        get: function () {
          return this.parent ? this.parent.width : 200;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(a.prototype, "ph", {
        get: function () {
          return this.parent ? this.parent.height : 100;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(a.prototype, "maxCol", {
        get: function () {
          return Math.floor(this.pw / this.MapRoteSize) - this.m_row;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(a.prototype, "MapRoteSize", {
        get: function () {
          return Math.floor(this.pw - this.L_Sp_size) / this.m_row;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(a.prototype, "MapRoteHeight", {
        get: function () {
          return Math.floor(this.ph / this.m_col);
        },
        enumerable: !0,
        configurable: !0,
      }),
      (a.prototype.changeLang = function (t) {}),
      (a.prototype.updata = function () {
        this.m_infoAny && this.show(this.m_infoAny);
      }),
      (a.prototype.show = function (t) {
        var e = [];
        i.prototype.show.call(this, t);
        for (var a = 0; a < t.length; a++)
          for (var n = JSON.parse(t[a]), s = 0; s < n.length; s++) e.push(n[s]);
        (this.L_Sp_size = Math.floor(this.pw / 12)),
          this.initConfig(),
          this.clearMap2D();
        for (var r = 1, o = 0; r > o; ++o)
          for (var h = 0; h < this.m_col; ++h) {
            var l = this.getInobj(o, h),
              g = this.getTitleScreen(l.t_x.toString() + l.t_y.toString(), "L");
            g && (g.show(l), this.L_Sp.addChild(g));
          }
        (this.L_Sp.x = this.L_Sp.y = 0), this.addChild(this.L_Sp);
        for (var u = [], c = 0, d = 0, p = 0; c < e.length; ++c) {
          var l = this.getInobjByType(e[c], d, p);
          p >= this.m_col && ((p = 0), d++),
            (l.t_x = d),
            (l.t_y = p),
            u.push(l),
            p++;
        }
        var _ = u;
        if (_.length > 0)
          for (var a = 0; a < _.length; ++a) {
            var l = _[a],
              b = this.getTitleScreen(l.t_x.toString() + l.t_y.toString(), "R");
            b && (b.show(l, this.route_flag), this.R_Sp.addChild(b));
          }
        (this.R_Sp.x = this.L_Sp_size),
          (this.R_Sp.y = 0),
          this.addChild(this.R_Sp);
      }),
      (a.prototype.getInobjByType = function (t, i, a) {
        var n = {};
        return (
          (n.title_type = e.NIUROTE_SHOW_TYPE_2),
          (n.title_width = this.MapRoteSize),
          (n.title_height = this.MapRoteHeight),
          (n.value = t),
          (n.lab_color = this.white_color),
          n
        );
      }),
      (a.prototype.getInobj = function (t, i) {
        var a = {};
        return (
          (a.title_type = e.NIUROTE_SHOW_TYPE_1),
          (a.title_width = this.L_Sp_size),
          (a.title_height = this.MapRoteHeight),
          (a.lab_color = this.white_color),
          0 == t && 0 == i
            ? (a.lab = LangUtils.LANG_MAP.M_BANKER)
            : (a.lab = LangUtils.LANG_MAP.M_PLAYER + i.toString()),
          (a.t_x = t),
          (a.t_y = i),
          a
        );
      }),
      (a.prototype.initConfig = function () {
        this.clearAllgraphics(),
          this.clearAllTitle(),
          this.drawTitle(),
          this.addChild(this.gridLayer);
      }),
      (a.prototype.drawDalieTitle = function () {}),
      (a.prototype.drawTitle = function () {
        var t = (this.pw, this.ph, this.m_row),
          e = this.m_col;
        this.graphics.beginFill(this.blue_color),
          this.graphics.drawRect(0, 0, this.L_Sp_size, this.ph),
          this.graphics.endFill(),
          this.graphics.beginFill(this.red_color),
          this.graphics.drawRect(0, 0, this.L_Sp_size, this.MapRoteHeight),
          this.graphics.endFill(),
          this.graphics.beginFill(16777215),
          this.graphics.drawRect(
            this.L_Sp_size,
            0,
            this.pw - this.L_Sp_size,
            this.ph,
          ),
          this.graphics.endFill();
        for (var i = 0; t >= i; ++i) {
          this.gridLayer.graphics.beginFill(16777215, 1),
            this.gridLayer.graphics.lineStyle(
              1 == this.route_flag ? 2 : 1,
              8289918,
            );
          var a = i * this.MapRoteSize + this.L_Sp_size;
          this.gridLayer.graphics.moveTo(a, 0),
            this.gridLayer.graphics.lineTo(a, this.ph);
        }
        for (i = 0; e >= i; ++i) {
          this.gridLayer.graphics.beginFill(16777215, 1),
            this.gridLayer.graphics.lineStyle(
              1 == this.route_flag ? 2 : 1,
              8289918,
            );
          var a = i * this.MapRoteHeight;
          this.gridLayer.graphics.moveTo(0 + this.L_Sp_size, a),
            this.gridLayer.graphics.lineTo(this.pw, a);
        }
        this.gridLayer.graphics.endFill();
      }),
      (a.prototype.clearAllgraphics = function () {
        this.graphics.clear(), this.gridLayer.graphics.clear();
      }),
      (a.prototype.clearMap2D = function () {}),
      (a.prototype.getTitleScreen = function (e, i) {
        if ((void 0 === i && (i = "L"), "L" == i)) {
          var a = this.L_titleHash[e];
          return a || (a = this.L_titleHash[e] = new t.NiuRoteTitle()), a;
        }
        if ("R" == i) {
          var a = this.R_titleHash[e];
          return a || (a = this.R_titleHash[e] = new t.NiuRoteTitle()), a;
        }
      }),
      (a.prototype.clearAllTitle = function () {
        for (var t in this.L_titleHash) {
          var e = this.L_titleHash[t];
          e && e.destroy();
        }
        for (var t in this.R_titleHash) {
          var e = this.R_titleHash[t];
          e && e.destroy();
        }
      }),
      (a.prototype.destroy = function () {
        this.clearAllgraphics(),
          this.clearAllTitle(),
          this.parent && this.parent.removeChild(this);
      }),
      (a.getMapRoteScreen = function (e, i, n) {
        var s = a.rote_hash[e];
        return s || (s = a.rote_hash[e] = new t.NiuRoteScreen(i, n)), s;
      }),
      (a.rote_hash = {}),
      a
    );
  })(t.ScreenAbstract);
  (t.NiuRoteScreen = i), __reflect(i.prototype, "dzxx.NiuRoteScreen");
})(dzxx || (dzxx = {}));
var dzxx;
!(function (t) {
  var e = (function (e) {
    function i() {
      var t = e.call(this) || this;
      return (
        (t.gridimg = new eui.Image()),
        (t.title = new eui.Label()),
        (t.title_width = 0),
        (t.title_height = 0),
        (t.title_bottm = new eui.Label()),
        t
      );
    }
    return (
      __extends(i, e),
      (i.prototype.show = function (i, a) {
        void 0 === a && (a = 0),
          e.prototype.show.call(this, i),
          this.clearAlldis(),
          i &&
            ((this.title.width = this.title_width = i.title_width),
            (this.title.height = this.title_height = i.title_height),
            (this.title.fontFamily = "Microsoft YaHei"),
            (this.title.verticalAlign = "middle"),
            (this.title.textAlign = "center"),
            (this.x = i.title_width * i.t_x),
            (this.y = i.title_height * i.t_y),
            1 == a
              ? ((this.title.size = 18),
                (this.title_bottm.width = 0.6 * i.title_width),
                (this.title_bottm.height = 14),
                (this.title_bottm.size = 12))
              : ((this.title.size = 23),
                (this.title_bottm.width = 0.8 * i.title_width),
                (this.title_bottm.height = 16),
                (this.title_bottm.size = 14)),
            (this.title_bottm.fontFamily = "Microsoft YaHei"),
            (this.title_bottm.verticalAlign = "middle"),
            (this.title_bottm.textAlign = "center"),
            (this.title_bottm.textColor = 16777215),
            (this.title_bottm.backgroundColor = 1407953),
            (this.title_bottm.background = !0),
            (this.title_bottm.x =
              (this.title_width - this.title_bottm.width) / 2),
            (this.title_bottm.y = this.title_height - this.title_bottm.height),
            i.title_type == t.NIUROTE_SHOW_TYPE.NIUROTE_SHOW_TYPE_1
              ? ((this.title.text = i.lab),
                (this.title.textColor = i.lab_color),
                (this.title_bottm.visible = !1),
                this.addChild(this.title))
              : (void 0 == i.value.win
                  ? ((this.title_bottm.visible = !1),
                    (this.title.textColor = 11808045))
                  : (i.value.win
                      ? ((this.title_bottm.visible = !0),
                        (this.title_bottm.text = "win"),
                        this.addChild(this.title_bottm))
                      : (this.title_bottm.visible = !1),
                    (this.title.textColor = 2977972)),
                this.hasNiuPoint(i.value),
                (this.title.y = -6),
                this.addChild(this.title)));
      }),
      (i.prototype.hasNiuPoint = function (t) {
        t.hasNiu
          ? 0 == t.point
            ? (this.title.text = LangUtils.LANG_MAP.dzg_niuniu_30)
            : t.fullNiu
              ? (this.title.text = LangUtils.LANG_MAP.dzg_niuniu_31)
              : (this.title.text = t.point.toString())
          : (this.title.text = LangUtils.LANG_MAP.dzg_niuniu_32);
      }),
      (i.prototype.clearAlldis = function () {
        for (this.graphics.clear(); this.numChildren > 0; ) {
          var t = this.getChildAt(0);
          t.parent && t.parent.removeChild(t);
        }
      }),
      (i.prototype.destroy = function () {
        this.clearAlldis(), this.parent && this.parent.removeChild(this);
      }),
      i
    );
  })(t.ScreenAbstract);
  (t.NiuRoteTitle = e), __reflect(e.prototype, "dzxx.NiuRoteTitle");
})(dzxx || (dzxx = {}));
var dzxx;
!(function (t) {
  var e;
  !(function (t) {
    (t[(t.SHAIBROTE_SHOW_TYPE_1 = 1)] = "SHAIBROTE_SHOW_TYPE_1"),
      (t[(t.SHAIBROTE_SHOW_TYPE_2 = 2)] = "SHAIBROTE_SHOW_TYPE_2");
  })((e = t.SHAIB_ROTE_SHOW_TYPE || (t.SHAIB_ROTE_SHOW_TYPE = {})));
  var i = (function (e) {
    function i(t, i) {
      var a = e.call(this) || this;
      return (
        (a.gridLayer = new egret.Shape()),
        (a.L_Sp = new egret.Sprite()),
        (a.R_Sp = new egret.Sprite()),
        (a.l_table = new Array()),
        (a.r_table = new Array()),
        (a.L_Sp_size = 60),
        (a.L_titleHash = {}),
        (a.R_titleHash = {}),
        (a.gap = 5),
        (a.show_type = 2),
        (a.red_color = 13909559),
        (a.black_color = 0),
        (a.green_color = 2226181),
        (a.blue_color = 1867971),
        (a.white_color = 16777215),
        (a._currType = 0),
        (a.touchEnabled = !1),
        (a.touchChildren = !1),
        (a.m_col = i),
        (a.m_row = t),
        LangUtils.addEventListener(a.changeLang, a),
        a
      );
    }
    return (
      __extends(i, e),
      Object.defineProperty(i.prototype, "pw", {
        get: function () {
          return this.parent ? this.parent.width : 200;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "ph", {
        get: function () {
          return this.parent ? this.parent.height : 100;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "maxCol", {
        get: function () {
          return Math.floor(this.pw / this.MapRoteWidth) - this.m_col;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "MapRoteWidth", {
        get: function () {
          return Math.floor(0.5 * (this.pw - this.gap)) / this.m_col;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "currType", {
        set: function (t) {
          this._currType = t;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "MapRoteHeight", {
        get: function () {
          return Math.floor(this.ph / this.m_row);
        },
        enumerable: !0,
        configurable: !0,
      }),
      (i.prototype.changeLang = function (t) {}),
      (i.prototype.updata = function () {
        this.m_infoAny && this.show(this.m_infoAny);
      }),
      (i.prototype.show = function (t) {
        e.prototype.show.call(this, t);
        var i = t.concat(),
          a = this.m_col * this.m_row;
        if (i.length > a) {
          var n = i.length - a;
          i = i.slice(n, i.length);
        }
        (this.L_Sp_size = 0.5 * Math.floor(this.pw - this.gap)),
          this.initConfig(),
          this.clearMap2D(),
          this.setLeftContainerData(i),
          this.setRightContainerData(i);
      }),
      (i.prototype.initLTable = function () {
        for (var t = 0; t < this.m_col; t++) {
          this.l_table[t] = [];
          for (var e = 0; e < this.m_row; e++) this.l_table[t][e] = void 0;
        }
      }),
      (i.prototype.initRTable = function () {
        for (var t = 0; t < this.m_col; t++) {
          this.r_table[t] = [];
          for (var e = 0; e < this.m_row; e++) this.r_table[t][e] = void 0;
        }
      }),
      (i.prototype.replaceTableData = function (t) {
        t.shift();
        for (var e = 0; e < t.length; e++)
          for (var i = 0; i < t[e].length; i++) {
            var a = t[e][i];
            a && a.t_x--;
          }
        t.push(new Array(this.m_row));
      }),
      (i.prototype.notDragonLine = function (t, e) {
        for (var i = !1, a = 0; a < t.length; a++)
          if (t[a].word != e.word && "围" != e.word && "围" != t[a].word) {
            i = !0;
            break;
          }
        return i;
      }),
      (i.prototype.setLeftContainerData = function (t) {
        if (t && !(t.length <= 0)) {
          for (var e = [], i = 0, a = 0, n = !1, s = 0; s < t.length; ++s) {
            var r = this.getInobjByType(t[s], this.L_Sp),
              o = 0 == s ? null : this.l_table[i][a - 1];
            a >= this.m_row
              ? this.notDragonLine(e, r)
                ? ((e.length = 0),
                  n
                    ? ((a = 0),
                      (i = this.checkTableTurnPoint(this.l_table)),
                      (n = !1))
                    : ((a = 0), i++))
                : (i++, a--, n || (n = !0))
              : o &&
                (this.notDragonLine(e, r)
                  ? ((e.length = 0),
                    n
                      ? ((a = 0),
                        (i = this.checkTableTurnPoint(this.l_table)),
                        (n = !1))
                      : ((a = 0), i++))
                  : this.l_table[i][a] && (i++, a--, n || (n = !0))),
              i >= this.m_col &&
                ((i = this.m_col - 1), this.replaceTableData(this.l_table)),
              (r.t_x = i),
              (r.t_y = a),
              e.push(r),
              (this.l_table[i][a] = r),
              a++;
          }
          for (var h = 0; h < this.l_table.length; ++h)
            for (var l = 0; l < this.l_table[h].length; l++) {
              var r = this.l_table[h][l];
              if (r) {
                var g = this.getTitleScreen(
                  r.t_x.toString() + r.t_y.toString(),
                  "L",
                );
                if (!g) break;
                g.show(r), this.L_Sp.addChild(g);
              }
            }
          (this.L_Sp.x = this.L_Sp.y = 0), this.addChild(this.L_Sp);
        }
      }),
      (i.prototype.setRightContainerData = function (t) {
        if (t && !(t.length <= 0)) {
          for (var e = [], i = 0, a = 0, n = !1, s = 0; s < t.length; ++s) {
            var r = this.getInobjByType(t[s], this.R_Sp),
              o = 0 == s ? null : this.r_table[i][a - 1];
            a >= this.m_row
              ? this.notDragonLine(e, r)
                ? ((e.length = 0),
                  n
                    ? ((a = 0),
                      (i = this.checkTableTurnPoint(this.r_table)),
                      (n = !1))
                    : ((a = 0), i++))
                : (i++, a--, n || (n = !0))
              : o &&
                (this.notDragonLine(e, r)
                  ? ((e.length = 0),
                    n
                      ? ((a = 0),
                        (i = this.checkTableTurnPoint(this.r_table)),
                        (n = !1))
                      : ((a = 0), i++))
                  : this.r_table[i][a] && (i++, a--, n || (n = !0))),
              i >= this.m_col &&
                ((i = this.m_col - 1), this.replaceTableData(this.r_table)),
              (r.t_x = i),
              (r.t_y = a),
              e.push(r),
              (this.r_table[i][a] = r),
              a++;
          }
          for (var h = 0; h < this.r_table.length; ++h)
            for (var l = 0; l < this.r_table[h].length; l++) {
              var r = this.r_table[h][l];
              if (r) {
                var g = this.getTitleScreen(
                  r.t_x.toString() + r.t_y.toString(),
                  "R",
                );
                if (!g) break;
                g.show(r), this.R_Sp.addChild(g);
              }
            }
          (this.R_Sp.x = this.L_Sp_size + this.gap), this.addChild(this.R_Sp);
        }
      }),
      (i.prototype.checkTableTurnPoint = function (t) {
        for (var e = 0; e < t.length; e++)
          if (!t[e][0]) return e >= this.m_col ? this.m_col - 1 : e;
        return this.m_col - 1;
      }),
      (i.prototype.getInobjByType = function (t, e) {
        var i = {};
        (i.title_type = this._currType),
          (i.title_width = this.MapRoteWidth),
          (i.title_height = this.MapRoteHeight);
        var a;
        return (
          e == this.L_Sp
            ? ((i.container_direct = "left"),
              (a = game.ShaiBaoManager.judgeBigOrSmall(t)),
              (i.word = a.word))
            : ((i.container_direct = "right"),
              (a = game.ShaiBaoManager.judgeOddOrEven(t)),
              (i.word = a.word)),
          (i.value = a.value),
          (i.lab_color = this.white_color),
          i
        );
      }),
      (i.prototype.initConfig = function () {
        this.initLTable(),
          this.initRTable(),
          this.clearAllgraphics(),
          this.clearAllTitle(),
          this.drawTitle(),
          this.addChild(this.gridLayer);
      }),
      (i.prototype.drawTitle = function () {
        var t = this.m_row,
          e = this.m_col;
        this.graphics.beginFill(14937327),
          this.graphics.drawRect(0, 0, this.pw, this.ph),
          this.graphics.endFill(),
          this.graphics.beginFill(16777215),
          this.graphics.drawRect(0, 0, this.L_Sp_size, this.ph),
          this.graphics.endFill(),
          this.graphics.beginFill(16777215),
          this.graphics.drawRect(
            this.L_Sp_size + this.gap,
            0,
            this.L_Sp_size,
            this.ph,
          ),
          this.graphics.endFill();
        for (var i = 0; 2 * e >= i; ++i) {
          this.gridLayer.graphics.beginFill(16777215, 1),
            this.gridLayer.graphics.lineStyle(1, 14937327);
          var a = i * this.MapRoteWidth;
          i > 12 && (a += this.gap),
            this.gridLayer.graphics.moveTo(a, 0),
            this.gridLayer.graphics.lineTo(a, this.ph);
        }
        for (i = 0; t >= i; ++i) {
          this.gridLayer.graphics.beginFill(16777215, 1),
            this.gridLayer.graphics.lineStyle(1, 14937327);
          var a = i * this.MapRoteHeight;
          this.gridLayer.graphics.moveTo(0, a),
            this.gridLayer.graphics.lineTo(this.pw, a);
        }
        this.gridLayer.graphics.endFill();
      }),
      (i.prototype.clearAllgraphics = function () {
        this.graphics.clear(),
          this.gridLayer &&
            this.gridLayer.graphics &&
            this.gridLayer.graphics.clear();
      }),
      (i.prototype.clearMap2D = function () {}),
      (i.prototype.getTitleScreen = function (e, i) {
        if ((void 0 === i && (i = "L"), "L" == i)) {
          var a = this.L_titleHash[e];
          return a || (a = this.L_titleHash[e] = new t.ShaiBaoRoteTitle()), a;
        }
        if ("R" == i) {
          var a = this.R_titleHash[e];
          return a || (a = this.R_titleHash[e] = new t.ShaiBaoRoteTitle()), a;
        }
      }),
      (i.prototype.clearAllTitle = function () {
        for (var t in this.L_titleHash) {
          var e = this.L_titleHash[t];
          e && e.destroy();
        }
        for (var t in this.R_titleHash) {
          var e = this.R_titleHash[t];
          e && e.destroy();
        }
      }),
      (i.prototype.destroy = function () {
        this.clearAllgraphics(),
          this.clearAllTitle(),
          this.gridLayer.parent &&
            this.gridLayer.parent.removeChild(this.gridLayer),
          this.L_Sp.parent &&
            (this.L_Sp.parent.removeChild(this.L_Sp),
            this.L_Sp.removeChildren()),
          this.R_Sp.parent &&
            (this.R_Sp.parent.removeChild(this.R_Sp),
            this.R_Sp.removeChildren()),
          this.parent && this.parent.removeChild(this);
      }),
      (i.getMapRoteScreen = function (e, a, n) {
        var s = i.rote_hash[e];
        return s || (s = i.rote_hash[e] = new t.ShaiBaoRoteScreen(a, n)), s;
      }),
      (i.rote_hash = {}),
      i
    );
  })(t.ScreenAbstract);
  (t.ShaiBaoRoteScreen = i), __reflect(i.prototype, "dzxx.ShaiBaoRoteScreen");
})(dzxx || (dzxx = {}));
var dzxx;
!(function (t) {
  var e = (function (e) {
    function i() {
      var t = e.call(this) || this;
      return (
        (t.gridimg = new eui.Image()),
        (t.title = new eui.Label()),
        (t.title_width = 0),
        (t.title_height = 0),
        (t.title_bottm = new eui.Label()),
        t
      );
    }
    return (
      __extends(i, e),
      (i.prototype.show = function (i) {
        if ((e.prototype.show.call(this, i), this.clearAlldis(), i)) {
          (this.title.width = this.title_width = i.title_width),
            (this.title.height = this.title_height = i.title_height),
            (this.title.size = 18),
            (this.title.fontFamily = "Microsoft YaHei"),
            (this.title.verticalAlign = "middle"),
            (this.title.textAlign = "center"),
            (this.title.textColor = 16777215),
            (this.x = i.title_width * i.t_x),
            (this.y = i.title_height * i.t_y),
            (this.gridimg.width = i.title_width),
            (this.gridimg.height = i.title_height),
            (this.title_bottm.width = 0.8 * i.title_width),
            (this.title_bottm.height = 16),
            (this.title_bottm.size = 14),
            (this.title_bottm.fontFamily = "Microsoft YaHei"),
            (this.title_bottm.verticalAlign = "middle"),
            (this.title_bottm.textAlign = "center"),
            (this.title_bottm.textColor = 16777215),
            (this.title_bottm.backgroundColor = 1407953),
            (this.title_bottm.background = !0),
            (this.title_bottm.x =
              (this.title_width - this.title_bottm.width) / 2),
            (this.title_bottm.y = this.title_height - this.title_bottm.height);
          var a = i.container_direct;
          if (
            (this.addChild(this.gridimg),
            i.title_type == t.SHAIB_ROTE_SHOW_TYPE.SHAIBROTE_SHOW_TYPE_1)
          )
            if ("left" == a) {
              switch (i.word) {
                case LangUtils.LANG_MAP.H_DiceWei:
                  this.gridimg.source = "greenCircleBg_png";
                  break;
                case LangUtils.LANG_MAP.DiBig:
                  this.gridimg.source = "redCircleBg_png";
                  break;
                case LangUtils.LANG_MAP.DiSm:
                  this.gridimg.source = "blueCircleBg_png";
              }
              this.title.text = i.value;
            } else
              switch (((this.title.size = 22), i.word)) {
                case LangUtils.LANG_MAP.H_DiceWei:
                  (this.gridimg.source = "greenCircleBg_png"),
                    (this.title.text = LangUtils.LANG_MAP.H_DiceWei);
                  break;
                case LangUtils.LANG_MAP.DiOdd:
                  (this.gridimg.source = "blueRectBg_png"),
                    (this.title.text = LangUtils.LANG_MAP.H_RoOdd);
                  break;
                case LangUtils.LANG_MAP.DiEven:
                  (this.gridimg.source = "redRectBg_png"),
                    (this.title.text = LangUtils.LANG_MAP.H_RoEven);
              }
          else if ("left" == a) {
            switch (i.word) {
              case LangUtils.LANG_MAP.H_DiceWei:
                this.gridimg.source = "greenCircleBg_png";
                break;
              case LangUtils.LANG_MAP.DiBig:
                this.gridimg.source = "redCircleBg_png";
                break;
              case LangUtils.LANG_MAP.DiSm:
                this.gridimg.source = "blueCircleBg_png";
            }
            this.title.text = i.value;
          } else
            switch (i.word) {
              case LangUtils.LANG_MAP.H_DiceWei:
                (this.gridimg.source = "greenCircleBg_png"),
                  (this.title.text = LangUtils.LANG_MAP.H_DiceWei);
                break;
              case LangUtils.LANG_MAP.DiOdd:
                (this.gridimg.source = "blueRectBg_png"),
                  (this.title.text = LangUtils.LANG_MAP.H_RoOdd);
                break;
              case LangUtils.LANG_MAP.DiEven:
                (this.gridimg.source = "redRectBg_png"),
                  (this.title.text = LangUtils.LANG_MAP.H_RoEven);
            }
          this.addChild(this.title);
        }
      }),
      (i.prototype.clearAlldis = function () {
        for (this.graphics.clear(); this.numChildren > 0; ) {
          var t = this.getChildAt(0);
          t.parent && t.parent.removeChild(t);
        }
      }),
      (i.prototype.destroy = function () {
        this.clearAlldis(), this.parent && this.parent.removeChild(this);
      }),
      i
    );
  })(t.ScreenAbstract);
  (t.ShaiBaoRoteTitle = e), __reflect(e.prototype, "dzxx.ShaiBaoRoteTitle");
})(dzxx || (dzxx = {}));
var BetAmountMessage = (function (t) {
  function e(e, i, a, n, s, r) {
    void 0 === e && (e = 0),
      void 0 === i && (i = null),
      void 0 === a && (a = null),
      void 0 === n && (n = null),
      void 0 === s && (s = null),
      void 0 === r && (r = null);
    var o = t.call(this) || this;
    return (
      (o.iType = MessageUtils.BETAMOUNT_MESSAGE),
      (o.tableid = e),
      (o.point = i),
      (o.usertotal = a),
      (o.amount = n),
      (o.bankerCom = s),
      (o.bankerMem = r),
      (o.lMessageID = o.createMessageId()),
      o
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      var e = 0,
        i = 0;
      for (
        this.tableid = MessageUtils.readLong(t),
          e = t.readInt(),
          this.point = 0 == e ? null : new Array(),
          i = 0;
        e > i;
        i++
      )
        this.point[i] = t.readUTFBytes(t.readInt());
      for (
        e = t.readInt(), this.usertotal = 0 == e ? null : new Array(), i = 0;
        e > i;
        i++
      )
        this.usertotal[i] = t.readInt();
      for (
        e = t.readInt(), this.amount = 0 == e ? null : new Array(), i = 0;
        e > i;
        i++
      )
        this.amount[i] = t.readDouble();
      for (
        e = t.readInt(), this.bankerCom = 0 == e ? null : new Array(), i = 0;
        e > i;
        i++
      )
        this.bankerCom[i] = t.readDouble();
      for (
        e = t.readInt(), this.bankerMem = 0 == e ? null : new Array(), i = 0;
        e > i;
        i++
      )
        this.bankerMem[i] = t.readDouble();
      this.lMessageID = MessageUtils.readLong(t);
    }),
    (e.prototype.toString = function () {
      return (
        "BetAmountMessage<tableid:" +
        this.tableid +
        ", point:" +
        this.point +
        ", usertotal:" +
        this.usertotal +
        ", amount:" +
        this.amount +
        ", bankerCom:" +
        this.bankerCom +
        ", bankerMem:" +
        this.bankerMem +
        ">"
      );
    }),
    (e.EVENT_NAME = "BETAMOUNT_MESSAGE"),
    e
  );
})(TableMessage);
__reflect(BetAmountMessage.prototype, "BetAmountMessage");
var BetPointMessage = (function (t) {
  function e(e, i, a) {
    void 0 === e && (e = 0),
      void 0 === i && (i = null),
      void 0 === a && (a = !1);
    var n = t.call(this) || this;
    return (
      (n.open = !1),
      (n.iType = MessageUtils.BET_POINT_MESSAGE),
      (n.tableid = e),
      (n.pointid = i),
      (n.open = a),
      (n.lMessageID = n.createMessageId()),
      n
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      var e = 0;
      (this.tableid = MessageUtils.readLong(t)),
        (e = t.readInt()),
        (this.pointid = t.readUTFBytes(e)),
        (this.open = 0 != t.readByte()),
        (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.messageToBytes = function () {
      var t = new egret.ByteArray();
      t.writeInt(this.iType), t.writeInt(0);
      var e = 8;
      return (
        MessageUtils.writeLong(t, this.tableid),
        (e = t.length),
        t.writeInt(0),
        null != this.pointid &&
          this.pointid.length > 0 &&
          t.writeUTFBytes(this.pointid),
        MessageUtils.replaceInt(t, e, t.length - e - 4),
        (e = t.length),
        t.writeByte(this.open ? 1 : 0),
        (e = t.length),
        MessageUtils.writeLong(t, this.lMessageID),
        MessageUtils.replaceInt(t, 4, t.length - 8),
        t
      );
    }),
    (e.prototype.toString = function () {
      return (
        "BetPointMessage<tableid:" +
        this.tableid +
        ", pointid:" +
        this.pointid +
        ", open:" +
        this.open +
        ">"
      );
    }),
    (e.EVENT_NAME = "BET_POINT_MESSAGE"),
    e
  );
})(TableMessage);
__reflect(BetPointMessage.prototype, "BetPointMessage");
var BetResponseMessage = (function (t) {
  function e(e, i, a, n, s) {
    void 0 === e && (e = 0),
      void 0 === i && (i = 0),
      void 0 === a && (a = null),
      void 0 === n && (n = null),
      void 0 === s && (s = 0);
    var r = t.call(this) || this;
    return (
      (r.result = 0),
      (r.iType = MessageUtils.BET_RESPONSE_MESSAGE),
      (r.userid = e),
      (r.tableid = i),
      (r.option = a),
      (r.amount = n),
      (r.result = s),
      (r.lMessageID = r.createMessageId()),
      r
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      var e = 0,
        i = 0,
        a = 0;
      for (
        this.userid = MessageUtils.readLong(t),
          this.tableid = MessageUtils.readLong(t),
          i = t.readInt(),
          this.option = 0 == i ? null : new Array(),
          a = 0;
        i > a;
        a++
      )
        (e = t.readInt()), (this.option[a] = t.readUTFBytes(e));
      for (
        i = t.readInt(), this.amount = 0 == i ? null : new Array(), a = 0;
        i > a;
        a++
      )
        this.amount[a] = t.readDouble();
      (this.result = t.readInt()), (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.toString = function () {
      return (
        "BetResponseMessage<userid:" +
        this.userid +
        ", tableid:" +
        this.tableid +
        ", option:" +
        this.option +
        ", amount:" +
        this.amount +
        ", result:" +
        this.result +
        ">"
      );
    }),
    (e.EVENT_NAME = "BET_RESPONSE_MESSAGE"),
    e
  );
})(BetMessage);
__reflect(BetResponseMessage.prototype, "BetResponseMessage");
var BetResultMessage = (function (t) {
  function e(e, i, a, n, s, r) {
    void 0 === e && (e = 0),
      void 0 === i && (i = 0),
      void 0 === a && (a = null),
      void 0 === n && (n = 0),
      void 0 === s && (s = 0),
      void 0 === r && (r = null);
    var o = t.call(this) || this;
    return (
      (o.tableid = 0),
      (o.winAmount = 0),
      (o.firstbetwin = 0),
      (o.iType = MessageUtils.BET_RESULT_MESSAGE),
      (o.userid = e),
      (o.tableid = i),
      (o.winOptions = a),
      (o.winAmount = n),
      (o.firstbetwin = s),
      (o.cardresult = r),
      (o.lMessageID = o.createMessageId()),
      o
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      var e = 0,
        i = 0;
      (this.userid = MessageUtils.readLong(t)),
        (this.tableid = MessageUtils.readLong(t)),
        (i = t.readInt()),
        (this.winOptions = 0 == i ? null : new Array());
      for (var a = 0; i > a; a++)
        (e = t.readInt()), (this.winOptions[a] = t.readUTFBytes(e));
      (this.winAmount = t.readDouble()),
        (this.firstbetwin = t.readByte()),
        (e = t.readInt()),
        (this.cardresult = t.readUTFBytes(e)),
        (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.toString = function () {
      return (
        "BetResultMessage<userid:" +
        this.userid +
        ", tableid:" +
        this.tableid +
        ", winOptions:" +
        this.winOptions +
        ", winAmount:" +
        this.winAmount +
        ", firstbetwin:" +
        this.firstbetwin +
        ", cardresult:" +
        this.cardresult +
        ">"
      );
    }),
    (e.EVENT_NAME = "BET_RESULT_MESSAGE"),
    e
  );
})(UserMessage);
__reflect(BetResultMessage.prototype, "BetResultMessage");
var BetStartMessage = (function (t) {
  function e(e, i, a, n, s) {
    void 0 === e && (e = 0),
      void 0 === i && (i = 0),
      void 0 === a && (a = 0),
      void 0 === n && (n = 0),
      void 0 === s && (s = 0);
    var r = t.call(this) || this;
    return (
      (r.countdown = 0),
      (r.bettype = 0),
      (r.shoeSeq = 0),
      (r.gameSeq = 0),
      (r.iType = MessageUtils.BET_START_MESSAGE),
      (r.tableid = e),
      (r.countdown = i),
      (r.bettype = a),
      (r.shoeSeq = n),
      (r.gameSeq = s),
      (r.lMessageID = r.createMessageId()),
      r
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      (this.tableid = MessageUtils.readLong(t)),
        (this.countdown = t.readInt()),
        (this.bettype = t.readInt()),
        (this.shoeSeq = t.readInt()),
        (this.gameSeq = t.readInt()),
        (this.lMessageID = MessageUtils.readLong(t)),
        0 == this.bettype && (this.countdown = this.countdown - 1500);
    }),
    (e.prototype.toString = function () {
      return (
        "BetStartMessage<tableid:" +
        this.tableid +
        ", countdown:" +
        this.countdown +
        ", bettype:" +
        this.bettype +
        ", shoeSeq:" +
        this.shoeSeq +
        ", gameSeq:" +
        this.gameSeq +
        ">"
      );
    }),
    (e.EVENT_NAME = "BET_START_MESSAGE"),
    e
  );
})(TableMessage);
__reflect(BetStartMessage.prototype, "BetStartMessage");
var ChangeMiCardMessage = (function (t) {
  function e(e, i, a, n, s, r, o, h) {
    void 0 === e && (e = 0),
      void 0 === i && (i = 0),
      void 0 === a && (a = 0),
      void 0 === n && (n = 0),
      void 0 === s && (s = 0),
      void 0 === r && (r = 0),
      void 0 === o && (o = 0),
      void 0 === h && (h = null);
    var l = t.call(this) || this;
    return (
      (l.userid = 0),
      (l.ismiCard = 0),
      (l.anyway = 0),
      (l.banker = 0),
      (l.bankerAnd = 0),
      (l.isPasswd = 0),
      (l.iType = MessageUtils.CHANGE_MICARD_MESSAGE),
      (l.tableid = e),
      (l.userid = i),
      (l.ismiCard = a),
      (l.anyway = n),
      (l.banker = s),
      (l.bankerAnd = r),
      (l.isPasswd = o),
      (l.passwd = h),
      (l.lMessageID = l.createMessageId()),
      l
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      var e = 0;
      (this.tableid = MessageUtils.readLong(t)),
        (this.userid = MessageUtils.readLong(t)),
        (this.ismiCard = t.readInt()),
        (this.anyway = t.readInt()),
        (this.banker = t.readInt()),
        (this.bankerAnd = t.readInt()),
        (this.isPasswd = t.readInt()),
        (e = t.readInt()),
        (this.passwd = t.readUTFBytes(e)),
        (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.messageToBytes = function () {
      var t = new egret.ByteArray();
      t.writeInt(this.iType), t.writeInt(0);
      var e = 8;
      return (
        MessageUtils.writeLong(t, this.tableid),
        (e = t.length),
        MessageUtils.writeLong(t, this.userid),
        (e = t.length),
        t.writeInt(this.ismiCard),
        (e = t.length),
        t.writeInt(this.anyway),
        (e = t.length),
        t.writeInt(this.banker),
        (e = t.length),
        t.writeInt(this.bankerAnd),
        (e = t.length),
        t.writeInt(this.isPasswd),
        (e = t.length),
        t.writeInt(0),
        null != this.passwd &&
          this.passwd.length > 0 &&
          t.writeUTFBytes(this.passwd),
        MessageUtils.replaceInt(t, e, t.length - e - 4),
        (e = t.length),
        MessageUtils.writeLong(t, this.lMessageID),
        MessageUtils.replaceInt(t, 4, t.length - 8),
        t
      );
    }),
    (e.prototype.toString = function () {
      return (
        "ChangeMiCardMessage<tableid:" +
        this.tableid +
        ", userid:" +
        this.userid +
        ", ismiCard:" +
        this.ismiCard +
        ", anyway:" +
        this.anyway +
        ", banker:" +
        this.banker +
        ", bankerAnd:" +
        this.bankerAnd +
        ", isPasswd:" +
        this.isPasswd +
        ", passwd:" +
        this.passwd +
        ">"
      );
    }),
    (e.EVENT_NAME = "CHANGE_MICARD_MESSAGE"),
    e
  );
})(TableMessage);
__reflect(ChangeMiCardMessage.prototype, "ChangeMiCardMessage");
var ChatMessage = (function (t) {
  function e(e, i, a, n) {
    void 0 === e && (e = 0),
      void 0 === i && (i = 0),
      void 0 === a && (a = null),
      void 0 === n && (n = null);
    var s = t.call(this) || this;
    return (
      (s.iType = MessageUtils.CHAT_MESSAGE),
      (s.userid = e),
      (s.tableid = i),
      (s.showname = a),
      (s.content = n),
      (s.lMessageID = s.createMessageId()),
      s
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      var e;
      (this.userid = MessageUtils.readLong(t)),
        (this.tableid = MessageUtils.readLong(t)),
        (e = t.readInt()),
        (this.showname = t.readUTFBytes(e)),
        (e = t.readInt()),
        (this.content = t.readUTFBytes(e)),
        (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.messageToBytes = function () {
      var t = new egret.ByteArray();
      t.writeInt(this.iType), t.writeInt(0);
      var e = 8;
      return (
        MessageUtils.writeLong(t, this.userid),
        (e = t.length),
        MessageUtils.writeLong(t, this.tableid),
        (e = t.length),
        t.writeInt(0),
        null != this.showname &&
          this.showname.length > 0 &&
          t.writeUTFBytes(this.showname),
        MessageUtils.replaceInt(t, e, t.length - e - 4),
        (e = t.length),
        t.writeInt(0),
        null != this.content &&
          this.content.length > 0 &&
          t.writeUTFBytes(this.content),
        MessageUtils.replaceInt(t, e, t.length - e - 4),
        (e = t.length),
        MessageUtils.writeLong(t, this.lMessageID),
        MessageUtils.replaceInt(t, 4, t.length - 8),
        t
      );
    }),
    (e.prototype.toString = function () {
      return (
        "ChatMessage<userid:" +
        this.userid +
        ", tableid:" +
        this.tableid +
        ", showname:" +
        this.showname +
        ", content:" +
        this.content +
        ">"
      );
    }),
    (e.EVENT_NAME = "CHAT_MESSAGE"),
    e
  );
})(UserMessage);
__reflect(ChatMessage.prototype, "ChatMessage");
var ChooseTableMessage = (function (t) {
  function e(e, i, a, n, s) {
    void 0 === e && (e = 0),
      void 0 === i && (i = 0),
      void 0 === a && (a = ""),
      void 0 === n && (n = 0),
      void 0 === s && (s = 0);
    var r = t.call(this) || this;
    return (
      (r.iType = MessageUtils.CHOOSE_TABLE_MESSAGE),
      (r.userid = e),
      (r.tableid = i),
      (r.limitKey = a),
      (r.entertype = n),
      (r.seatno = s),
      (r.lMessageID = r.createMessageId()),
      r
    );
  }
  return (
    __extends(e, t),
    (e.prototype.messageToBytes = function () {
      var t = new egret.ByteArray(),
        e = 24 + this.limitKey.length + 4 + 1 + 8;
      return (
        t.writeInt(this.iType),
        t.writeInt(e),
        MessageUtils.writeLong(t, this.userid),
        MessageUtils.writeLong(t, this.tableid),
        t.writeInt(this.limitKey.length),
        t.writeUTFBytes(this.limitKey),
        t.writeInt(this.entertype),
        t.writeByte(this.seatno),
        MessageUtils.writeLong(t, this.lMessageID),
        t
      );
    }),
    (e.prototype.toString = function () {
      return (
        "ChooseTableMessage<userid:" +
        this.userid +
        ", tableid:" +
        this.tableid +
        ", limitKey:" +
        this.limitKey +
        ", entertype:" +
        this.entertype +
        ", seatno:" +
        this.seatno +
        ">"
      );
    }),
    (e.EVENT_NAME = "CHOOSE_TABLE_MESSAGE"),
    e
  );
})(UserMessage);
__reflect(ChooseTableMessage.prototype, "ChooseTableMessage");
var Connector = (function () {
  function t() {
    (this._logined = -1),
      (this.ReHeart = !1),
      (this._reContentCount = 0),
      MessageUtils.init(),
      (t.thisIns = this);
  }
  return (
    Object.defineProperty(t.prototype, "connected", {
      get: function () {
        return this.socket && this.socket.connected;
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t.prototype, "logined", {
      get: function () {
        return this._logined >= 2;
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t.prototype, "timerRunning", {
      get: function () {
        return (
          (this.timer && this.timer.running) ||
          (this.heartMessageTimer && this.heartMessageTimer.running)
        );
      },
      enumerable: !0,
      configurable: !0,
    }),
    (t.prototype.connect = function () {
      this.removeSocket(),
        this._logined > -1
          ? ShareUtils.callLater(2e3, this.toSocket, this)
          : this.toSocket();
    }),
    (t.prototype.toSocket = function () {
      (this.socket = new egret.WebSocket()),
        (this.socket.type = egret.WebSocket.TYPE_BINARY),
        this.socket.addEventListener(
          egret.ProgressEvent.SOCKET_DATA,
          this.onData,
          this,
        ),
        this.socket.addEventListener(egret.Event.CONNECT, this.onConnect, this),
        this.socket.addEventListener(egret.Event.CLOSE, this.onClose, this),
        this.socket.addEventListener(
          egret.IOErrorEvent.IO_ERROR,
          this.onError,
          this,
        );
      var e, i;
      t.socket_obj_arr.length > t.socket_host_index ||
        (t.socket_host_index = 0),
        3 == DataManager.game_login_type
          ? ((e = DataManager.HOST), (i = DataManager.PORT))
          : ((e = t.socket_obj_arr[t.socket_host_index].host),
            (i = t.socket_obj_arr[t.socket_host_index].port)),
        (t.socket_host_temp = e),
        (t.socket_port_temp = i),
        "https:" == document.location.protocol
          ? this.socket.connectByUrl("wss://" + e + ":" + i)
          : this.socket.connectByUrl("ws://" + e + ":" + i),
        this.chaoshitimer || (this.chaoshitimer = new egret.Timer(3e3, 1)),
        this.chaoshitimer.hasEventListener(egret.TimerEvent.TIMER_COMPLETE) ||
          this.chaoshitimer.addEventListener(
            egret.TimerEvent.TIMER_COMPLETE,
            this.outTimer,
            this,
          ),
        this.chaoshitimer.start(),
        t.socket_host_index++,
        EventManager.getIns().dispatchEvent(
          new LoadingTipEvent(
            LoadingTipEvent.TEXT,
            LangUtils.LANG_MAP.CONNECT_LOGIN,
          ),
        );
    }),
    (t.addHighProtectHost = function () {
      window.LINELIST_HIGHPROTECT &&
        (window.LINELIST_HIGHPROTECT.forEach(function (e) {
          var i = e.split(":");
          t.socket_obj_arr.push({
            host: i[0],
            port: Number(i[1]),
          });
        }),
        t.pingHost());
    }),
    (t.pingHost = function () {
      var e = this;
      t.socket_obj_arr.forEach(function (e) {
        e.pingStartTime = Number(new Date());
        var i = "http://";
        443 === e.port && (i = "https://");
        var a = function (i) {
          i
            ? ((e.ping = Number(new Date()) - e.pingStartTime), (e.active = !0))
            : (e.active = !1),
            t.socket_obj_arr.sort(function (t, e) {
              return t.active !== !0
                ? 1
                : e.active !== !0
                  ? -1
                  : t.ping - e.ping;
            });
        };
        fetch(i + e.host + ":" + e.port + "/client/api/ping/net").then(a);
      }),
        setTimeout(function () {
          t.socket_host_index = 0;
          var i = e.socket_obj_arr.map(function (t) {
              return {
                lineAddr: t.host + ":" + t.port,
                pingResult: t.ping ? "10" : "20",
                pingTime: t.ping ? "" + t.ping : null,
              };
            }),
            a = encodeURIComponent(JSON.stringify(i));
          new HttpPostHandle(
            DataManager.HTTP_HOST_PF + "/client/api/ping/input?lines=" + a,
            null,
            function () {},
            e,
            "get",
          );
        }, 3e3);
    }),
    (t.pingDisconnect = function () {
      if (t.is_reconnect) {
        t.is_reconnect = !1;
        var e = [
            {
              lineAddr: t.socket_host_temp + ":" + t.socket_port_temp,
              pingResult: "30",
              pingTime: null,
            },
          ],
          i = encodeURIComponent(JSON.stringify(e));
        new HttpPostHandle(
          DataManager.HTTP_HOST_PF + "/client/api/ping/input?lines=" + i,
          null,
          function () {},
          this,
          "get",
        );
      }
    }),
    (t.prototype.onConnect = function (e) {
      Alert.hideWait(),
        (t.is_reconnect = !0),
        this._logined++,
        this.send(new LoginMessage(DataManager.USER_NAME, DataManager.CODE)),
        this.removeTimer(),
        this.shareTimer && this.shareTimer.reset(),
        EventManager.getIns().dispatchEvent(
          new LoadingTipEvent(
            LoadingTipEvent.TEXT,
            LangUtils.LANG_MAP.CONNECT_LOGIN_USER,
          ),
        );
    }),
    (t.prototype.onClose = function (t) {
      0 != this._logined && (this._logined = 1),
        this.shareTimer ? this.shareTimer.reset() : this.removeTimer(),
        this.chaoshitimer &&
          (this.chaoshitimer.removeEventListener(
            egret.TimerEvent.TIMER_COMPLETE,
            this.outTimer,
            this,
          ),
          this.chaoshitimer.reset()),
        (this.shareTimer = ShareUtils.callLater(3e3, this.re_connect, this));
    }),
    (t.prototype.onError = function (t) {
      0 != this._logined && (this._logined = 1),
        DebugText.appendError("Socket：连接错误"),
        this.shareTimer ? this.shareTimer.reset() : this.removeTimer(),
        this.chaoshitimer &&
          (this.chaoshitimer.removeEventListener(
            egret.TimerEvent.TIMER_COMPLETE,
            this.outTimer,
            this,
          ),
          this.chaoshitimer.reset()),
        (this.shareTimer = ShareUtils.callLater(
          3e3,
          this.re_connect,
          this,
          !0,
        ));
    }),
    (t.prototype.re_connect = function (e) {
      void 0 === e && (e = !1), t.pingDisconnect();
      var i = t.thisIns;
      i._reContentCount++,
        i.removeTimer(),
        i._reContentCount < 10
          ? (i.connect(), Alert.showWait(""))
          : (this.close(), window.location.reload());
    }),
    (t.prototype.startReconnectTimer = function () {
      (this.ReconnectTimer = new egret.Timer(1e4, 2)),
        this.ReconnectTimer.addEventListener(
          egret.TimerEvent.TIMER,
          this.reconnectTimer,
          this,
        ),
        this.ReconnectTimer.start();
    }),
    (t.prototype.send = function (t) {
      this.connected &&
        (t.type != MessageUtils.HEART_MESSAGE &&
          DebugText.appendSend("c2s_No:[" + t.type + "]," + t.toString()),
        t.send(this.socket));
    }),
    (t.prototype.onData = function (t) {
      this.shareTimer && this.shareTimer.reset();
      var e;
      this.socket &&
        ((e = MessageUtils.readMessage(this.socket)),
        null != e
          ? e.type == MessageUtils.HEART_MESSAGE
            ? (this.receiveHeartMessage(),
              (EnterFrameRunner.ServerTime = e.messageID))
            : e.type == MessageUtils.LOGIN_RESPONSE_MESSAGE
              ? this.loginResponse(e)
              : (DebugText.appendGet("s2c_No:[" + e.type + "]," + e.toString()),
                MessageHandler.onMessage(e),
                this.ReHeart && this.receiveHeartMessage())
          : Alert.show("找不到协议"));
    }),
    (t.prototype.loginResponse = function (t) {
      (EnterFrameRunner.ServerTime = t.messageID),
        t.serverip &&
          ((DataManager.HOST = t.serverip), (DataManager.PORT = t.serverport)),
        (DataManager.isTrialUser = 1 == t.result),
        t.isWhiteList > 0 && ShareUtils.setInWhiteList(t.isWhiteList),
        (DataManager.CODE = t.code),
        (DataManager.userid = t.userid),
        (DataManager.userName = t.name),
        (DataManager.showName = t.showname),
        (DataManager.nickname = t.nickname),
        (DataManager.sumAmount = t.account),
        (DataManager.videoaddresses = t.videoaddress);
      var e = DataManager.ccData;
      if (e) {
        var i = atob(e),
          a = JSON.parse(i);
        (a.Code = DataManager.CODE),
          (i = JSON.stringify(a)),
          (DataManager.ccData = btoa(i));
      }
      DebugText.appendGet(t.toString()), this.checkLogined(t);
    }),
    (t.prototype.checkLogined = function (t) {
      if (t)
        if (
          (DataManager.enterLobbys(),
          EnterFrameRunner.getInstance().start(Math.ceil(t.messageID / 1e4)),
          EventManager.getIns().dispatchEvent(
            new LoadingTipEvent(LoadingTipEvent.TEXT, "Done!"),
          ),
          this.setClose(),
          this.startHeartTimer(),
          Alert.hideLoading(),
          (DataManager.goingTable = !1),
          DataManager.thisView)
        ) {
          if (DataManager.curTable)
            if (DataManager.is_goto_duotai) {
              if (DataManager.thisduotaiView) {
                var e = DataManager.thisduotaiView.cur_enterTabinfo_arr;
                DataManager.enterLobby();
                for (var i in e) {
                  var a = e[i];
                  MessageHandler.chooseTableDuotai(a.tableid, a.gameType);
                }
              }
            } else
              DataManager.enterLobby(),
                MessageHandler.chooseTable(
                  DataManager.curTable.tableid,
                  DataManager.curTable.gameType,
                );
        } else
          EventManager.getIns().dispatchEvent(
            new GotoViewEvent(GotoViewEvent.GOTO_VIEW, View.LOBBY_VIEW),
          );
      else this.connect();
      DataManager.isReconnect = !1;
    }),
    (t.prototype.removeSocket = function () {
      if (null != this.socket) {
        this.socket.removeEventListener(
          egret.Event.CONNECT,
          this.onConnect,
          this,
        ),
          this.socket.removeEventListener(
            egret.Event.CLOSE,
            this.onClose,
            this,
          ),
          this.socket.removeEventListener(
            egret.ProgressEvent.SOCKET_DATA,
            this.onData,
            this,
          ),
          this.socket.removeEventListener(
            egret.IOErrorEvent.IO_ERROR,
            this.onError,
            this,
          );
        try {
          this.socket.close(), DebugText.appendText("主动关闭了连接");
        } catch (t) {
          Alert.show("关闭连接出错：" + t);
        }
        this.socket = null;
      }
    }),
    (t.prototype.startHeartTimer = function () {
      (this.timer = new egret.Timer(2e3, 1)),
        this.timer.addEventListener(
          egret.TimerEvent.TIMER_COMPLETE,
          this.heartTimer,
          this,
        ),
        (this.heartMessageTimer = new egret.Timer(5e3, 1)),
        this.heartMessageTimer.addEventListener(
          egret.TimerEvent.TIMER_COMPLETE,
          this.sendHeartMessage,
          this,
        ),
        this.heartMessageTimer.start();
    }),
    (t.prototype.heartTimer = function (t) {
      this.removeReconnectTimer(),
        this.removeTimer(!1),
        (this.ReconnectTimer = new egret.Timer(5e3, 4)),
        this.ReconnectTimer.addEventListener(
          egret.TimerEvent.TIMER,
          this.reconnectHeartTimer,
          this,
        ),
        this.ReconnectTimer.start(),
        (this.ReHeart = !0);
    }),
    (t.prototype.reconnectHeartTimer = function (t) {
      this.ReconnectTimer &&
        (this.ReconnectTimer.currentCount < 4
          ? ((DataManager.isReconnect = !0), Alert.showWait(""))
          : (this.removeReconnectTimer(), this.onClose(null)));
    }),
    (t.prototype.showReConnectorTip = function () {
      DataManager.thisView && Alert.tip(LangUtils.LANG_MAP.SOCKET_RECONNECT);
    }),
    (t.prototype.sendHeartMessage = function (t) {
      this.heartMessageTimer.reset(),
        this.timer && (this.timer.reset(), this.timer.start()),
        this.send(new HeartMessage());
    }),
    (t.prototype.removeReconnectTimer = function () {
      null != this.ReconnectTimer &&
        (this.ReconnectTimer.removeEventListener(
          egret.TimerEvent.TIMER,
          this.reconnectTimer,
          this,
        ),
        this.ReconnectTimer.removeEventListener(
          egret.TimerEvent.TIMER,
          this.reconnectHeartTimer,
          this,
        ),
        this.ReconnectTimer.reset(),
        (this.ReconnectTimer = null));
    }),
    (t.prototype.removeTimer = function (t) {
      void 0 === t && (t = !0),
        this.chaoshitimer &&
          (this.chaoshitimer.removeEventListener(
            egret.TimerEvent.TIMER_COMPLETE,
            this.outTimer,
            this,
          ),
          this.chaoshitimer.reset()),
        null != this.timer &&
          (this.timer.removeEventListener(
            egret.TimerEvent.TIMER_COMPLETE,
            this.outTimer,
            this,
          ),
          this.timer.removeEventListener(
            egret.TimerEvent.TIMER_COMPLETE,
            this.heartTimer,
            this,
          ),
          this.timer.removeEventListener(
            egret.TimerEvent.TIMER,
            this.reconnectTimer,
            this,
          ),
          this.timer.reset(),
          (this.timer = null)),
        0 != t &&
          null != this.heartMessageTimer &&
          (this.heartMessageTimer.removeEventListener(
            egret.TimerEvent.TIMER_COMPLETE,
            this.sendHeartMessage,
            this,
          ),
          this.heartMessageTimer.reset(),
          (this.heartMessageTimer = null));
    }),
    (t.prototype.receiveHeartMessage = function () {
      this.ReHeart && (Alert.hideWait(), (DataManager.goingTable = !1)),
        (this.ReHeart = !1),
        this.removeReconnectTimer(),
        this.timer
          ? this.timer.reset()
          : ((this.timer = new egret.Timer(2e3, 1)),
            this.timer.addEventListener(
              egret.TimerEvent.TIMER_COMPLETE,
              this.heartTimer,
              this,
            )),
        this.heartMessageTimer
          ? (this.heartMessageTimer.reset(), this.heartMessageTimer.start())
          : ((this.heartMessageTimer = new egret.Timer(5e3, 1)),
            this.heartMessageTimer.addEventListener(
              egret.TimerEvent.TIMER_COMPLETE,
              this.sendHeartMessage,
              this,
            ),
            this.heartMessageTimer.start());
    }),
    (t.prototype.outTimer = function (t) {
      EventManager.getIns().dispatchEvent(
        new LoadingTipEvent(
          LoadingTipEvent.TEXT,
          LangUtils.LANG_MAP.CONNECT_OUT_TIME,
        ),
      ),
        this.close(),
        this.showTipNetBox(),
        this.shareTimer && this.shareTimer.reset(),
        this.re_connect();
    }),
    (t.prototype.showTipNetBox = function () {
      null != DataManager.thisView &&
        Alert.show(
          LangUtils.LANG_MAP.SOCKET_DISCON,
          "",
          DataManager.callReferrer,
        );
    }),
    (t.prototype.close = function () {
      this.shareTimer && this.shareTimer.reset(),
        (this.shareTimer = null),
        this.removeSocket(),
        this.removeTimer(),
        this.removeReconnectTimer(),
        Alert.hideLoading(),
        DebugText.appendText("Connector.close()");
    }),
    (t.prototype.setClose = function () {
      this.removeTimer(),
        this.shareTimer && this.shareTimer.reset(),
        this.removeReconnectTimer(),
        (this.shareTimer = null),
        (this._logined = -1),
        (this._reContentCount = 0);
    }),
    (t.prototype.reconnectTimer = function (t) {
      this.ReconnectTimer &&
        (this.ReconnectTimer && 1 == this.ReconnectTimer.currentCount
          ? this.showReConnectorTip()
          : (EventManager.getIns().dispatchEvent(
              new LoadingTipEvent(
                LoadingTipEvent.TEXT,
                LangUtils.LANG_MAP.CONNECT_OUT_TIME,
              ),
            ),
            this.close(),
            this.showTipNetBox()));
    }),
    (t.socket_obj_arr = []),
    (t.socket_host_arr = []),
    (t.socket_port_arr = []),
    (t.socket_host_index = 0),
    (t.socket_host_temp = ""),
    (t.socket_port_temp = 0),
    (t.is_reconnect = !1),
    t
  );
})();
__reflect(Connector.prototype, "Connector");
var CurrencyMessage = (function (t) {
  function e(e, i, a, n) {
    void 0 === e && (e = 0),
      void 0 === i && (i = 0),
      void 0 === a && (a = 0),
      void 0 === n && (n = null);
    var s = t.call(this) || this;
    return (
      (s.iType = MessageUtils.CURRENCY_MESSAGE),
      (s.userid = e),
      (s.sysCurrencyId = i),
      (s.userCurrencyId = a),
      (s.currencyList = n),
      (s.lMessageID = s.createMessageId()),
      s
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      var e = 0;
      (this.userid = MessageUtils.readLong(t)),
        (this.sysCurrencyId = MessageUtils.readLong(t)),
        (this.userCurrencyId = MessageUtils.readLong(t)),
        (e = t.readInt()),
        (this.currencyList = t.readUTFBytes(e)),
        (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.toString = function () {
      return (
        "CurrencyMessage<userid:" +
        this.userid +
        ", sysCurrencyId:" +
        this.sysCurrencyId +
        ", userCurrencyId:" +
        this.userCurrencyId +
        ", currencyList:" +
        this.currencyList +
        ">"
      );
    }),
    (e.EVENT_NAME = "CURRENCY_MESSAGE"),
    e
  );
})(UserMessage);
__reflect(CurrencyMessage.prototype, "CurrencyMessage");
var EnterLobbyMessage = (function (t) {
  function e(e) {
    void 0 === e && (e = 0);
    var i = t.call(this) || this;
    return (
      (i.iType = MessageUtils.ENTER_LOBBY_MESSAGE),
      (i.lobbyid = e),
      (i.lMessageID = i.createMessageId()),
      i
    );
  }
  return (
    __extends(e, t),
    (e.prototype.messageToBytes = function () {
      var t = new egret.ByteArray();
      return (
        t.writeInt(this.iType),
        t.writeInt(0),
        MessageUtils.writeLong(t, this.lobbyid),
        MessageUtils.writeLong(t, this.lMessageID),
        MessageUtils.replaceInt(t, 4, t.length - 8),
        t
      );
    }),
    (e.prototype.toString = function () {
      return "EnterLobbyMessage<lobbyid:" + this.lobbyid + ">";
    }),
    (e.EVENT_NAME = "ENTER_LOBBY_MESSAGE"),
    e
  );
})(Message);
__reflect(EnterLobbyMessage.prototype, "EnterLobbyMessage");
var EnterTableMessage = (function (t) {
  function e(e, i, a, n, s, r, o, h, l, g, u, c) {
    void 0 === e && (e = 0),
      void 0 === i && (i = 0),
      void 0 === a && (a = 0),
      void 0 === n && (n = null),
      void 0 === s && (s = 0),
      void 0 === r && (r = 0),
      void 0 === o && (o = 0),
      void 0 === h && (h = 0),
      void 0 === l && (l = 0),
      void 0 === g && (g = 0),
      void 0 === u && (u = 0),
      void 0 === c && (c = null);
    var d = t.call(this) || this;
    return (
      (d.tableid = 0),
      (d.gameType = 0),
      (d.shoeSeq = 0),
      (d.gameSeq = 0),
      (d.minlimit = 0),
      (d.maxlimit = 0),
      (d.hedge = 0),
      (d.seatid = 0),
      (d.sbanker = 0),
      (d.iType = MessageUtils.ENTER_TABLE_MESSAGE),
      (d.userid = e),
      (d.tableid = i),
      (d.gameType = a),
      (d.tableSeq = n),
      (d.shoeSeq = s),
      (d.gameSeq = r),
      (d.minlimit = o),
      (d.maxlimit = h),
      (d.hedge = l),
      (d.seatid = g),
      (d.sbanker = u),
      (d.videoline = c),
      (d.lMessageID = d.createMessageId()),
      d
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      (this.userid = MessageUtils.readLong(t)),
        (this.tableid = MessageUtils.readLong(t)),
        (this.gameType = t.readInt()),
        (this.tableSeq = t.readUTFBytes(t.readInt())),
        (this.shoeSeq = t.readInt()),
        (this.gameSeq = t.readInt()),
        (this.minlimit = t.readInt()),
        (this.maxlimit = t.readInt()),
        (this.hedge = t.readInt()),
        (this.seatid = t.readInt()),
        (this.sbanker = t.readInt()),
        (this.videoline = t.readUTFBytes(t.readInt())),
        (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.toString = function () {
      return (
        "EnterTableMessage<userid:" +
        this.userid +
        ", tableid:" +
        this.tableid +
        ", gameType:" +
        this.gameType +
        ", tableSeq:" +
        this.tableSeq +
        ", shoeSeq:" +
        this.shoeSeq +
        ", gameSeq:" +
        this.gameSeq +
        ", minlimit:" +
        this.minlimit +
        ", maxlimit:" +
        this.maxlimit +
        ", hedge:" +
        this.hedge +
        ", seatid:" +
        this.seatid +
        ", sbanker:" +
        this.sbanker +
        ", videoline:" +
        this.videoline +
        ">"
      );
    }),
    (e.EVENT_NAME = "ENTER_TABLE_MESSAGE"),
    e
  );
})(UserMessage);
__reflect(EnterTableMessage.prototype, "EnterTableMessage");
var ErrorMessage = (function (t) {
  function e(e, i) {
    void 0 === e && (e = 0), void 0 === i && (i = null);
    var a = t.call(this) || this;
    return (
      (a.errorid = 0),
      (a.iType = MessageUtils.ERROR_MESSAGE),
      (a.errorid = e),
      (a.desc = i),
      (a.lMessageID = a.createMessageId()),
      a
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      (this.errorid = t.readInt()),
        (this.desc = t.readUTFBytes(t.readInt())),
        (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.toString = function () {
      return (
        "ErrorMessage<errorid:" + this.errorid + ", desc:" + this.desc + ">"
      );
    }),
    (e.EVENT_NAME = "ERROR_MESSAGE"),
    e
  );
})(Message);
__reflect(ErrorMessage.prototype, "ErrorMessage");
var HeartMessage = (function (t) {
  function e(e) {
    void 0 === e && (e = 0);
    var i = t.call(this) || this;
    return (
      (i.iType = MessageUtils.HEART_MESSAGE),
      (i.num = e),
      (i.lMessageID = i.createMessageId()),
      i
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      (this.num = t.readByte()), (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.messageToBytes = function () {
      var t = 17,
        e = new egret.ByteArray();
      return (
        e.writeInt(this.iType),
        e.writeInt(t),
        e.writeByte(this.num),
        MessageUtils.writeLong(e, this.lMessageID),
        e
      );
    }),
    (e.prototype.toString = function () {
      return "HeartMessage<num:" + this.num + ">";
    }),
    (e.EVENT_NAME = "HEART_MESSAGE"),
    e
  );
})(Message);
__reflect(HeartMessage.prototype, "HeartMessage");
var HttpPostHandle = (function () {
  function t(t, e, i, a, n, s) {
    if (
      (void 0 === e && (e = null),
      void 0 === i && (i = null),
      void 0 === n && (n = null),
      void 0 === s && (s = !0),
      (this.thisObject = a),
      (this.callbackfunction = i),
      (this.urlLoader = new egret.URLLoader()),
      this.urlLoader.addEventListener(
        egret.Event.COMPLETE,
        this.onComplete,
        this,
      ),
      this.urlLoader.addEventListener(
        egret.IOErrorEvent.IO_ERROR,
        this.onIoError,
        this,
      ),
      s
        ? (this.urlRequest = new egret.URLRequest(t))
        : (this.urlRequest = new egret.URLRequest(t)),
      (this.urlRequest.method = n ? n : egret.URLRequestMethod.POST),
      (this.urlRequestHeader = new egret.URLRequestHeader(
        "apiUserToken",
        DataManager.apiUserToken,
      )),
      this.urlRequest.requestHeaders.push(this.urlRequestHeader),
      (this.urlVariablesData = new egret.URLVariables()),
      e)
    )
      for (var r in e) this.urlVariablesData[r] = e[r];
    (this.urlVariablesData.userid = DataManager.userid),
      (this.urlVariablesData.time = new Date().getTime() + ""),
      (this.urlRequest.data = this.urlVariablesData),
      this.urlLoader.load(this.urlRequest);
  }
  return (
    (t.prototype.onComplete = function (t) {
      if (null != this.callbackfunction) {
        var e = t.currentTarget.data + "";
        e = StringUtils.trim(e);
        var i = void 0;
        e &&
          (0 == e.indexOf("[") || 0 == e.indexOf("{")
            ? (i = JSON.parse(e))
            : 0 == e.indexOf("<") && (i = egret.XML.parse(e))),
          null != this.callbackfunction &&
            this.callbackfunction.apply(this.thisObject, [i]);
      }
      this.dispose();
    }),
    (t.prototype.onIoError = function (t) {
      null != this.callbackfunction &&
        this.callbackfunction.apply(this.thisObject, null),
        this.dispose();
    }),
    (t.prototype.dispose = function () {
      this.urlLoader &&
        (this.urlLoader.removeEventListener(
          egret.Event.COMPLETE,
          this.onComplete,
          this,
        ),
        this.urlLoader.removeEventListener(
          egret.IOErrorEvent.IO_ERROR,
          this.onIoError,
          this,
        ),
        (this.urlLoader = null)),
        (this.callbackfunction = null),
        (this.urlRequest = null),
        (this.urlVariablesData = null),
        (this.thisObject = null);
    }),
    (t.objtourlparam = function (t) {
      var e = "";
      for (var i in t) e.length > 0 && (e += "&"), (e += i + "=" + t[i]);
      return e.length > 0 && (e = "?" + e), e;
    }),
    (t.pfsend = function (e, i, a, n, s) {
      void 0 === s && (s = egret.URLRequestMethod.GET);
      var r = s == egret.URLRequestMethod.GET ? t.objtourlparam(i) : "";
      new t(DataManager.HTTP_HOST_PF + e + r, i, a, n, s);
    }),
    (t.gamesend = function (e, i, a, n, s) {
      void 0 === s && (s = egret.URLRequestMethod.GET);
      var r = s == egret.URLRequestMethod.GET ? t.objtourlparam(i) : "";
      new t(DataManager.HTTP_HOST + e + r, i, a, n, s);
    }),
    t
  );
})();
__reflect(HttpPostHandle.prototype, "HttpPostHandle");
var JobDeskMessage = (function (t) {
  function e(e, i, a) {
    void 0 === e && (e = 0),
      void 0 === i && (i = 0),
      void 0 === a && (a = null);
    var n = t.call(this) || this;
    return (
      (n.userid = 0),
      (n.iType = MessageUtils.JOBDESK_MESSAGE),
      (n.tableid = e),
      (n.userid = i),
      (n.limitKey = a),
      (n.lMessageID = n.createMessageId()),
      n
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      var e = 0;
      (this.tableid = MessageUtils.readLong(t)),
        (this.userid = MessageUtils.readLong(t)),
        (e = t.readInt()),
        (this.limitKey = t.readUTFBytes(e)),
        (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.messageToBytes = function () {
      var t = new egret.ByteArray();
      return t;
    }),
    (e.prototype.toString = function () {
      return (
        "JobDeskMessage<tableid:" +
        this.tableid +
        ", userid:" +
        this.userid +
        ", limitKey:" +
        this.limitKey +
        ">"
      );
    }),
    (e.EVENT_NAME = "JOBDESK_MESSAGE"),
    e
  );
})(TableMessage);
__reflect(JobDeskMessage.prototype, "JobDeskMessage");
var LeaveTableMessage = (function (t) {
  function e(e, i) {
    void 0 === e && (e = 0), void 0 === i && (i = 0);
    var a = t.call(this) || this;
    return (
      (a.userid = 0),
      (a.iType = MessageUtils.LEAVE_TABLE_MESSAGE),
      (a.tableid = e),
      (a.userid = i),
      (a.lMessageID = a.createMessageId()),
      a
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      (this.tableid = MessageUtils.readLong(t)),
        (this.userid = MessageUtils.readLong(t)),
        (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.messageToBytes = function () {
      var t = 32,
        e = new egret.ByteArray();
      return (
        e.writeInt(this.iType),
        e.writeInt(t),
        MessageUtils.writeLong(e, this.tableid),
        MessageUtils.writeLong(e, this.userid),
        MessageUtils.writeLong(e, this.lMessageID),
        e
      );
    }),
    (e.prototype.toString = function () {
      return (
        "LeaveTableMessage<tableid:" +
        this.tableid +
        ", userid:" +
        this.userid +
        ">"
      );
    }),
    (e.EVENT_NAME = "LEAVE_TABLE_MESSAGE"),
    e
  );
})(TableMessage);
__reflect(LeaveTableMessage.prototype, "LeaveTableMessage");
var LobbyMessage = (function (t) {
  function e(e, i, a, n, s) {
    void 0 === e && (e = 0),
      void 0 === i && (i = 0),
      void 0 === a && (a = null),
      void 0 === n && (n = null),
      void 0 === s && (s = null);
    var r = t.call(this) || this;
    return (
      (r.iType = MessageUtils.LOBBY_MESSAGE),
      (r.lobbyType = e),
      (r.lobbyid = i),
      (r.notice = a),
      (r.gameList = n),
      (r.videoline = s),
      (r.lMessageID = r.createMessageId()),
      r
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      var e;
      (this.lobbyType = t.readInt()),
        (this.lobbyid = MessageUtils.readLong(t)),
        (this.temp_lobbyid = this.lobbyid),
        3 == this.lobbyid && (this.temp_lobbyid = 1),
        (e = t.readInt()),
        (this.notice = 0 == e ? null : new Array());
      for (var i = 0; e > i; i++) this.notice[i] = t.readUTFBytes(t.readInt());
      (e = t.readInt()), (this.gameList = 0 == e ? null : new Array());
      for (var i = 0; e > i; i++) {
        var a = (this.gameList[i] = t.readUTFBytes(t.readInt())),
          n = a.split(":");
        n.length > 3 && "3" == n[3];
        var s = DataManager.getTabArrByLabid(this.lobbyid);
        s.push(parseInt(n[1]));
      }
      (this.videoline = t.readUTFBytes(t.readInt())),
        (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.toString = function () {
      return (
        "LobbyMessage<lobbyType:" +
        this.lobbyType +
        ", lobbyid:" +
        this.lobbyid +
        ", notice:" +
        this.notice +
        ", gameList:" +
        this.gameList +
        ", videoline:" +
        this.videoline +
        ">"
      );
    }),
    (e.EVENT_NAME = "LOBBY_MESSAGE"),
    e
  );
})(Message);
__reflect(LobbyMessage.prototype, "LobbyMessage");
var LoginMessage = (function (t) {
  function e(e, i) {
    void 0 === e && (e = ""), void 0 === i && (i = "");
    var a = t.call(this) || this;
    return (
      (a.iType = MessageUtils.LOGIN_MESSAGE),
      (a.name = e),
      (a.code = i),
      (a.lMessageID = a.createMessageId()),
      a
    );
  }
  return (
    __extends(e, t),
    (e.prototype.messageToBytes = function () {
      var t = 8 + this.code.length + this.name.length + 8,
        e = new egret.ByteArray();
      return (
        e.writeInt(this.iType),
        e.writeInt(t),
        e.writeInt(this.name.length),
        e.writeUTFBytes(this.name),
        e.writeInt(this.code.length),
        e.writeUTFBytes(this.code),
        MessageUtils.writeLong(e, this.lMessageID),
        e
      );
    }),
    (e.prototype.toString = function () {
      return "LoginMessage<name:" + this.name + ", code:" + this.code + ">";
    }),
    (e.EVENT_NAME = "LOGIN_MESSAGE"),
    e
  );
})(Message);
__reflect(LoginMessage.prototype, "LoginMessage");
var LoginResponseMessage = (function (t) {
  function e(e, i, a, n, s, r, o, h, l, g, u, c, d, p, _, b) {
    void 0 === e && (e = 0),
      void 0 === i && (i = 0),
      void 0 === a && (a = null),
      void 0 === n && (n = null),
      void 0 === s && (s = 0),
      void 0 === r && (r = null),
      void 0 === o && (o = null),
      void 0 === h && (h = 0),
      void 0 === l && (l = 0),
      void 0 === g && (g = null),
      void 0 === u && (u = 0),
      void 0 === c && (c = null),
      void 0 === d && (d = 0),
      void 0 === p && (p = 0),
      void 0 === _ && (_ = null),
      void 0 === b && (b = 0);
    var m = t.call(this) || this;
    return (
      (m.iType = MessageUtils.LOGIN_RESPONSE_MESSAGE),
      (m.userid = e),
      (m.result = i),
      (m.name = a),
      (m.showname = n),
      (m.account = s),
      (m.videoaddress = r),
      (m.serverip = o),
      (m.serverport = h),
      (m.policyport = l),
      (m.code = g),
      (m.firstlanding = u),
      (m.nickname = c),
      (m.isGive = d),
      (m.platformType = p),
      (m.VODaddress = _),
      (m.isWhiteList = b),
      (m.lMessageID = m.createMessageId()),
      m
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      var e, i;
      (this.userid = MessageUtils.readLong(t)),
        (this.result = t.readInt()),
        (e = t.readInt()),
        (this.name = t.readUTFBytes(e)),
        (e = t.readInt()),
        (this.showname = t.readUTFBytes(e)),
        (this.account = t.readDouble()),
        (i = t.readInt()),
        (this.videoaddress = 0 == i ? null : new Array());
      for (var a = 0; i > a; a++)
        (e = t.readInt()), (this.videoaddress[a] = t.readUTFBytes(e));
      (e = t.readInt()),
        (this.serverip = t.readUTFBytes(e)),
        (this.serverport = MessageUtils.readLong(t)),
        (this.policyport = MessageUtils.readLong(t)),
        (e = t.readInt()),
        (this.code = t.readUTFBytes(e)),
        (this.firstlanding = t.readByte()),
        (e = t.readInt()),
        (this.nickname = t.readUTFBytes(e)),
        (this.isGive = t.readInt()),
        (this.platformType = t.readByte()),
        (e = t.readInt()),
        (this.VODaddress = t.readUTFBytes(e)),
        (this.isWhiteList = t.readInt()),
        (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.toString = function () {
      return (
        "LoginResponseMessage<userid:" +
        this.userid +
        ", result:" +
        this.result +
        ", name:" +
        name +
        ", showname:" +
        this.showname +
        ", account:" +
        this.account +
        ", videoaddress:" +
        this.videoaddress +
        ", serverip:" +
        this.serverip +
        ", serverport:" +
        this.serverport +
        ", policyport:" +
        this.policyport +
        ", code:" +
        this.code +
        ", firstlanding:" +
        this.firstlanding +
        ", nickname:" +
        this.nickname +
        ", isGive:" +
        this.isGive +
        ", platformType:" +
        this.platformType +
        ", VODaddress:" +
        this.VODaddress +
        ", isWhiteList:" +
        this.isWhiteList +
        ">"
      );
    }),
    (e.EVENT_NAME = "LOGIN_RESPONSE_MESSAGE"),
    e
  );
})(UserMessage);
__reflect(LoginResponseMessage.prototype, "LoginResponseMessage");
var MessageHandler = (function () {
  function t() {
    (this.HANDLERS = new Array()), this.init();
  }
  return (
    Object.defineProperty(t, "connected", {
      get: function () {
        return this.connector.connected;
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t, "timerRunning", {
      get: function () {
        return this.connector.timerRunning;
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t, "logined", {
      get: function () {
        return this.connector.logined;
      },
      enumerable: !0,
      configurable: !0,
    }),
    (t.close = function () {
      this.connector && this.connector.close();
    }),
    (t.startHeartTimer = function () {
      this.connector.startHeartTimer();
    }),
    (t.setClose = function () {
      this.connector.setClose();
    }),
    (t.getIns = function () {
      return null != t.instance || (t.instance = new t()), t.instance;
    }),
    (t.prototype.init = function () {
      (t.connector = new Connector()),
        this.addMessageListener(
          MessageUtils.LOGIN_RESPONSE_MESSAGE,
          t.connector.loginResponse,
        ),
        this.addMessageListener(
          MessageUtils.LOBBY_MESSAGE,
          DataManager.lobbyMessage,
        ),
        this.addMessageListener(
          MessageUtils.TABLE_INFO_MESSAGE,
          DataManager.tableInfoMessage,
        ),
        this.addMessageListener(
          MessageUtils.ENTER_TABLE_MESSAGE,
          DataManager.enterTableMessage,
        ),
        this.addMessageListener(
          MessageUtils.ERROR_MESSAGE,
          DataManager.errorMessage,
        ),
        this.addMessageListener(
          MessageUtils.SUBCOUNTBALANCE_MESSAGE,
          DataManager.subcountBalanceMessage,
        ),
        this.addMessageListener(
          MessageUtils.CURRENCY_MESSAGE,
          DataManager.currencyMessage,
        ),
        this.addMessageListener(
          MessageUtils.SEAT_BETTING_MESSAGE,
          DataManager.seatBettingMessage,
        ),
        this.addMessageListener(
          MessageUtils.BET_RESULT_MESSAGE,
          DataManager.betResultMessage,
        ),
        this.addMessageListener(
          MessageUtils.SEAT_DEAL_MESSAGE,
          DataManager.seatDealMessage,
        ),
        this.addMessageListener(
          MessageUtils.BET_RESPONSE_MESSAGE,
          DataManager.betResponseMessage,
        ),
        this.addMessageListener(
          MessageUtils.BET_START_MESSAGE,
          DataManager.betStartMessage,
        ),
        this.addMessageListener(
          MessageUtils.BETAMOUNT_MESSAGE,
          DataManager.betAmountMessage,
        ),
        this.addMessageListener(
          MessageUtils.NOTICE_MESSAGE,
          DataManager.noticeMessage,
        ),
        this.addMessageListener(
          MessageUtils.MICARD_ACTION_MESSAGE,
          DataManager.miCardAction,
        ),
        this.addMessageListener(
          MessageUtils.BET_ING_MESSAGE,
          DataManager.betTemp,
        ),
        this.addMessageListener(
          MessageUtils.USER_GIVE_MESSAGE,
          DataManager.userGive,
        ),
        this.addMessageListener(
          MessageUtils.TABLE_INSTANT_MESSAGE,
          DataManager.tableInstant,
        ),
        this.addMessageListener(MessageUtils.CHAT_MESSAGE, DataManager.onchat),
        this.addMessageListener(
          MessageUtils.APPLY_HANDLE_MESSAGE,
          DataManager.ApplyHandle,
        ),
        this.addMessageListener(
          MessageUtils.PUBLICJSON_MESSAGE,
          DataManager.publicJsonMsg,
        );
    }),
    (t.prototype.addMessageListener = function (t, e) {
      if (!(0 > t)) {
        for (; this.HANDLERS.length < t; ) this.HANDLERS.push(null);
        this.HANDLERS[t] = e;
      }
    }),
    (t.prototype.connect = function () {
      t.connector.connect();
    }),
    (t.onMessage = function (e) {
      t.instance.HANDLERS[e.type] && t.instance.HANDLERS[e.type].call(null, e);
    }),
    (t.enterLobby = function (t) {
      DebugText.appendSend("进入大厅EnterLobbyMessage:" + t),
        this.connector.send(new EnterLobbyMessage(t));
    }),
    (t.leaveTable = function (t) {
      this.connector.send(new LeaveTableMessage(t, DataManager.userid));
    }),
    (t.chooseTable = function (t, e, i) {
      if ((void 0 === i && (i = 0), !DataManager.goingTable)) {
        Alert.loading(), (DataManager.selectTableid = t);
        var a =
          (DataManager.getTableStates(t), DataManager.ENTER_TABLE_TYPE_SIT);
        (DataManager.goingTable = !0),
          this.connector.send(
            new ChooseTableMessage(
              DataManager.userid,
              t,
              DataManager.currentLimitKey,
              a,
              i,
            ),
          );
      }
    }),
    (t.chooseTableDuotai = function (t, e, i) {
      void 0 === i && (i = 0), (DataManager.selectTableid = t);
      var a = DataManager.getTableStates(t),
        n = DataManager.ENTER_TABLE_TYPE_SIT;
      a.gameStyle == DataManager.GAMESTYLE_mi &&
        ((n = DataManager.enterTableType),
        (a.enterType = n),
        (a.seatno = i),
        (a.lastlimitKey = DataManager.currentLimitKey)),
        this.connector.send(
          new ChooseTableMessage(
            DataManager.userid,
            t,
            DataManager.currentLimitKey,
            n,
            i,
          ),
        );
    }),
    (t.bet = function (e, i, a, n, s) {
      void 0 === n && (n = 0),
        void 0 === s && (s = 0),
        (s = DataManager.getTableInfo(e).gameSeq),
        t.connector.send(
          new BetMessage(
            t.userid,
            e,
            i,
            a,
            n,
            s,
            DataManager.xAxis,
            DataManager.yAxis,
          ),
        );
    }),
    (t.chat = function (e) {
      t.connector.send(new ChatMessage(t.userid, t.tableid, null, e));
    }),
    (t.userGive = function (e, i, a, n, s) {
      t.connector.send(
        new UserGiveMessage(t.tableid, t.userid, null, e, i, a, n, s),
      );
    }),
    Object.defineProperty(t, "tableid", {
      get: function () {
        return DataManager.curTable ? DataManager.curTable.tableid : 0;
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t, "userid", {
      get: function () {
        return DataManager.userid;
      },
      enumerable: !0,
      configurable: !0,
    }),
    (t.applyMI = function (e) {
      t.connector.send(new ApplyHandleMessage(t.tableid, t.userid, null, e));
    }),
    (t.miCardAction = function (e, i, a, n) {
      t.connector.send(new MiCardActionMessage(t.tableid, e, i, a, n));
    }),
    t
  );
})();
__reflect(MessageHandler.prototype, "MessageHandler");
var MessageUtils = (function () {
  function t() {}
  return (
    (t.init = function () {
      (this.MESSAGE_MAP[this.LOGIN_RESPONSE_MESSAGE] = LoginResponseMessage),
        (this.MESSAGE_MAP[this.HEART_MESSAGE] = HeartMessage),
        (this.MESSAGE_MAP[this.LOBBY_MESSAGE] = LobbyMessage),
        (this.MESSAGE_MAP[this.TABLE_INFO_MESSAGE] = TableInfoMessage),
        (this.MESSAGE_MAP[this.ENTER_TABLE_MESSAGE] = EnterTableMessage),
        (this.MESSAGE_MAP[this.ERROR_MESSAGE] = ErrorMessage),
        (this.MESSAGE_MAP[this.SUBCOUNTBALANCE_MESSAGE] =
          SubCountBalanceMessage),
        (this.MESSAGE_MAP[this.CURRENCY_MESSAGE] = CurrencyMessage),
        (this.MESSAGE_MAP[this.BETAMOUNT_MESSAGE] = BetAmountMessage),
        (this.MESSAGE_MAP[this.SEAT_BETTING_MESSAGE] = SeatBettingMessage),
        (this.MESSAGE_MAP[this.BET_RESULT_MESSAGE] = BetResultMessage),
        (this.MESSAGE_MAP[this.SEAT_DEAL_MESSAGE] = SeatDealMessage),
        (this.MESSAGE_MAP[this.BET_RESPONSE_MESSAGE] = BetResponseMessage),
        (this.MESSAGE_MAP[this.BET_START_MESSAGE] = BetStartMessage),
        (this.MESSAGE_MAP[this.NOTICE_MESSAGE] = NoticeMessage),
        (this.MESSAGE_MAP[this.CHAT_MESSAGE] = ChatMessage),
        (this.MESSAGE_MAP[this.ONLINE_MESSAGE] = OnlineMessage),
        (this.MESSAGE_MAP[this.JOBDESK_MESSAGE] = JobDeskMessage),
        (this.MESSAGE_MAP[this.TABLE_INSTANT_MESSAGE] = TableInstantMessage),
        (this.MESSAGE_MAP[this.MODIFY_NICKNAME_MESSAGE] =
          ModifyNickNameMessage),
        (this.MESSAGE_MAP[this.CHANGE_MICARD_MESSAGE] = ChangeMiCardMessage),
        (this.MESSAGE_MAP[this.BET_POINT_MESSAGE] = BetPointMessage),
        (this.MESSAGE_MAP[this.LEAVE_TABLE_MESSAGE] = LeaveTableMessage),
        (this.MESSAGE_MAP[this.BET_ING_MESSAGE] = UserBetingMessage),
        (this.MESSAGE_MAP[this.USER_GIVE_MESSAGE] = UserGiveMessage),
        (this.MESSAGE_MAP[this.MICARD_ACTION_MESSAGE] = MiCardActionMessage),
        (this.MESSAGE_MAP[this.APPLY_HANDLE_MESSAGE] = ApplyHandleMessage),
        (this.MESSAGE_MAP[this.PUBLICJSON_MESSAGE] = PublicJsonMessage);
    }),
    (t.replaceBytes = function (t, e, i) {
      var a = t.position;
      (t.position = e), t.writeBytes(i), (t.position = a);
    }),
    (t.replaceInt = function (t, e, i) {
      var a = t.position;
      (t.position = e), t.writeInt(i), (t.position = a);
    }),
    (t.readLong = function (t) {
      var e = t.readInt();
      if (-1 == e) return t.readInt();
      var i = t.readUnsignedInt();
      return 0 == e ? i : e * Math.pow(2, 32) + (e > 0 ? i : i);
    }),
    (t.writeLong = function (t, e) {
      var i = Math.floor(e / Math.pow(2, 32));
      0 == i && 0 > e && (i = -1);
      var a = e;
      t.writeInt(i), t.writeUnsignedInt(a);
    }),
    (t.readMessage = function (t) {
      try {
        var e = this.headerBytes.length;
        e > 0 && Alert.show("协议未解析"), t.readBytes(this.headerBytes, 0);
        var i = this.headerBytes.readInt(),
          a = this.headerBytes.readInt(),
          n = null;
        if (null != this.MESSAGE_MAP[i])
          return (
            (n = new this.MESSAGE_MAP[i]()),
            n.bytesToMessage(this.headerBytes),
            this.headerBytes.clear(),
            n
          );
        Alert.show("注意缺少协议,messagenum=" + i + ",messageleg" + a);
      } catch (s) {
        Alert.show("协议出错,error=" + s);
      }
      return this.headerBytes.clear(), null;
    }),
    (t.MESSAGE_MAP = []),
    (t.ERROR_MESSAGE = 0),
    (t.STATE_MESSAGE = 1),
    (t.CHAT_MESSAGE = 2),
    (t.LOGIN_MESSAGE = 3),
    (t.LOGIN_RESPONSE_MESSAGE = 4),
    (t.LOBBY_MESSAGE = 5),
    (t.ENTER_LOBBY_MESSAGE = 6),
    (t.TABLE_INFO_MESSAGE = 7),
    (t.CHOOSE_TABLE_MESSAGE = 8),
    (t.ENTER_TABLE_MESSAGE = 9),
    (t.BET_POINT_MESSAGE = 10),
    (t.BET_START_MESSAGE = 11),
    (t.BET_MESSAGE = 12),
    (t.BET_RESPONSE_MESSAGE = 13),
    (t.SEAT_DEAL_MESSAGE = 15),
    (t.BET_RESULT_MESSAGE = 17),
    (t.LEAVE_TABLE_MESSAGE = 19),
    (t.TABLE_MESSAGE = 21),
    (t.USER_MESSAGE = 22),
    (t.SEAT_BETTING_MESSAGE = 24),
    (t.SUBCOUNTBALANCE_MESSAGE = 25),
    (t.BETAMOUNT_MESSAGE = 26),
    (t.ONLINE_MESSAGE = 30),
    (t.NOTICE_MESSAGE = 31),
    (t.HEART_MESSAGE = 37),
    (t.JOBDESK_MESSAGE = 38),
    (t.CHANGE_MICARD_MESSAGE = 39),
    (t.MICARD_ACTION_MESSAGE = 41),
    (t.TABLE_INSTANT_MESSAGE = 42),
    (t.MODIFY_NICKNAME_MESSAGE = 45),
    (t.APPLY_HANDLE_MESSAGE = 46),
    (t.BET_ING_MESSAGE = 47),
    (t.USER_GIVE_MESSAGE = 48),
    (t.CURRENCY_MESSAGE = 53),
    (t.PUBLICJSON_MESSAGE = 1e4),
    (t.headerBytes = new egret.ByteArray()),
    t
  );
})();
__reflect(MessageUtils.prototype, "MessageUtils");
var MiCardActionMessage = (function (t) {
  function e(e, i, a, n, s) {
    void 0 === e && (e = 0),
      void 0 === i && (i = 0),
      void 0 === a && (a = 0),
      void 0 === n && (n = 0),
      void 0 === s && (s = 0);
    var r = t.call(this) || this;
    return (
      (r.iType = MessageUtils.MICARD_ACTION_MESSAGE),
      (r.tableid = e),
      (r.order = i),
      (r.mouseX = a),
      (r.mouseY = n),
      (r.ARROW = s),
      (r.lMessageID = r.createMessageId()),
      r
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      (this.tableid = MessageUtils.readLong(t)),
        (this.order = t.readInt()),
        (this.mouseX = t.readDouble()),
        (this.mouseY = t.readDouble()),
        (this.ARROW = t.readInt()),
        (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.messageToBytes = function () {
      var t = new egret.ByteArray();
      t.writeInt(this.iType), t.writeInt(0);
      var e = 8;
      return (
        MessageUtils.writeLong(t, this.tableid),
        (e = t.length),
        t.writeInt(this.order),
        (e = t.length),
        t.writeDouble(this.mouseX),
        (e = t.length),
        t.writeDouble(this.mouseY),
        (e = t.length),
        t.writeInt(this.ARROW),
        (e = t.length),
        MessageUtils.writeLong(t, this.lMessageID),
        MessageUtils.replaceInt(t, 4, t.length - 8),
        t
      );
    }),
    (e.prototype.toString = function () {
      return (
        "MiCardActionMessage<tableid:" +
        this.tableid +
        ", order:" +
        this.order +
        ", mouseX:" +
        this.mouseX +
        ", mouseY:" +
        this.mouseY +
        ", ARROW:" +
        this.ARROW +
        ">"
      );
    }),
    (e.EVENT_NAME = "MICARD_ACTION_MESSAGE"),
    e
  );
})(TableMessage);
__reflect(MiCardActionMessage.prototype, "MiCardActionMessage");
var ModifyNickNameMessage = (function (t) {
  function e(e, i) {
    void 0 === e && (e = 0), void 0 === i && (i = null);
    var a = t.call(this) || this;
    return (
      (a.iType = MessageUtils.MODIFY_NICKNAME_MESSAGE),
      (a.userid = e),
      (a.nickname = i),
      (a.lMessageID = a.createMessageId()),
      a
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      var e = 0;
      (this.userid = MessageUtils.readLong(t)),
        (e = t.readInt()),
        (this.nickname = t.readUTFBytes(e)),
        (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.messageToBytes = function () {
      var t = new egret.ByteArray();
      t.writeInt(this.iType), t.writeInt(0);
      var e = 8;
      return (
        MessageUtils.writeLong(t, this.userid),
        (e = t.length),
        t.writeInt(0),
        null != this.nickname &&
          this.nickname.length > 0 &&
          t.writeUTFBytes(this.nickname),
        MessageUtils.replaceInt(t, e, t.length - e - 4),
        (e = t.length),
        MessageUtils.writeLong(t, this.lMessageID),
        MessageUtils.replaceInt(t, 4, t.length - 8),
        t
      );
    }),
    (e.prototype.toString = function () {
      return (
        "ModifyNickNameMessage<userid:" +
        this.userid +
        ", nickname:" +
        this.nickname +
        ">"
      );
    }),
    (e.EVENT_NAME = "MODIFY_NICKNAME_MESSAGE"),
    e
  );
})(UserMessage);
__reflect(ModifyNickNameMessage.prototype, "ModifyNickNameMessage");
var NoticeMessage = (function (t) {
  function e(e, i, a, n) {
    void 0 === e && (e = 0),
      void 0 === i && (i = null),
      void 0 === a && (a = null),
      void 0 === n && (n = null);
    var s = t.call(this) || this;
    return (
      (s.ntype = 0),
      (s.iType = MessageUtils.NOTICE_MESSAGE),
      (s.ntype = e),
      (s.notice = i),
      (s.enotice = a),
      (s.tnotice = n),
      (s.lMessageID = s.createMessageId()),
      s
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      var e = 0,
        i = 0,
        a = 0;
      for (
        this.ntype = t.readInt(),
          i = t.readInt(),
          this.notice = 0 == i ? null : new Array(),
          a = 0;
        i > a;
        a++
      )
        (e = t.readInt()), (this.notice[a] = t.readUTFBytes(e));
      for (
        i = t.readInt(), this.enotice = 0 == i ? null : new Array(), a = 0;
        i > a;
        a++
      )
        (e = t.readInt()), (this.enotice[a] = t.readUTFBytes(e));
      for (
        i = t.readInt(), this.tnotice = 0 == i ? null : new Array(), a = 0;
        i > a;
        a++
      )
        (e = t.readInt()), (this.tnotice[a] = t.readUTFBytes(e));
      this.lMessageID = MessageUtils.readLong(t);
    }),
    (e.prototype.toString = function () {
      return (
        "NoticeMessage<ntype:" +
        this.ntype +
        ", notice:" +
        this.notice +
        ", enotice:" +
        this.enotice +
        ", tnotice:" +
        this.tnotice +
        ">"
      );
    }),
    (e.EVENT_NAME = "NOTICE_MESSAGE"),
    e
  );
})(Message);
__reflect(NoticeMessage.prototype, "NoticeMessage");
var OnlineMessage = (function (t) {
  function e(e) {
    void 0 === e && (e = 0);
    var i = t.call(this) || this;
    return (
      (i.num = 0),
      (i.iType = MessageUtils.ONLINE_MESSAGE),
      (i.num = e),
      (i.lMessageID = i.createMessageId()),
      i
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      (this.num = t.readInt()), (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.toString = function () {
      return "OnlineMessage<num:" + this.num + ">";
    }),
    (e.EVENT_NAME = "ONLINE_MESSAGE"),
    e
  );
})(Message);
__reflect(OnlineMessage.prototype, "OnlineMessage");
var PublicJsonMessage = (function (t) {
  function e(e) {
    var i = t.call(this) || this;
    return (
      (i.jsonStr = ""),
      (i.iType = MessageUtils.PUBLICJSON_MESSAGE),
      (i.jsonStr = e),
      (i.lMessageID = i.createMessageId()),
      i
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      var e = t.readInt();
      this.jsonStr = t.readUTFBytes(e);
    }),
    (e.prototype.toString = function () {
      return "OnlineMessage<jsonStr:" + this.jsonStr + ">";
    }),
    (e.EVENT_NAME = "PublicJson_MESSAGE"),
    e
  );
})(Message);
__reflect(PublicJsonMessage.prototype, "PublicJsonMessage");
var SeatBettingMessage = (function (t) {
  function e(e, i, a, n, s, r, o, h, l, g, u) {
    void 0 === e && (e = 0),
      void 0 === i && (i = 0),
      void 0 === a && (a = null),
      void 0 === n && (n = 0),
      void 0 === s && (s = null),
      void 0 === r && (r = 0),
      void 0 === o && (o = 0),
      void 0 === h && (h = 0),
      void 0 === l && (l = null),
      void 0 === g && (g = 0),
      void 0 === u && (u = 0);
    var c = t.call(this) || this;
    return (
      (c.userid = 0),
      (c.groupid = 0),
      (c.seatid = 0),
      (c.amount = 0),
      (c.chips = 0),
      (c.sbanker = 0),
      (c.currencyid = 0),
      (c.iType = MessageUtils.SEAT_BETTING_MESSAGE),
      (c.tableid = e),
      (c.userid = i),
      (c.nickname = a),
      (c.groupid = n),
      (c.option = s),
      (c.seatid = r),
      (c.amount = o),
      (c.chips = h),
      (c.miseat = l),
      (c.sbanker = g),
      (c.currencyid = u),
      (c.lMessageID = c.createMessageId()),
      c
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      var e = 0;
      (this.tableid = MessageUtils.readLong(t)),
        (this.userid = MessageUtils.readLong(t)),
        (e = t.readInt()),
        (this.nickname = t.readUTFBytes(e)),
        (this.groupid = MessageUtils.readLong(t)),
        (e = t.readInt()),
        (this.option = t.readUTFBytes(e)),
        (this.seatid = t.readInt()),
        (this.amount = t.readDouble()),
        (this.chips = t.readDouble()),
        (e = t.readInt()),
        (this.miseat = t.readUTFBytes(e)),
        (this.sbanker = t.readInt()),
        (this.currencyid = MessageUtils.readLong(t)),
        (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.toString = function () {
      return (
        "SeatBettingMessage<tableid:" +
        this.tableid +
        ", userid:" +
        this.userid +
        ", nickname:" +
        this.nickname +
        ", groupid:" +
        this.groupid +
        ", option:" +
        this.option +
        ", seatid:" +
        this.seatid +
        ", amount:" +
        this.amount +
        ", chips:" +
        this.chips +
        ", miseat:" +
        this.miseat +
        ", sbanker:" +
        this.sbanker +
        ", currencyid:" +
        this.currencyid +
        ">"
      );
    }),
    (e.EVENT_NAME = "SEAT_BETTING_MESSAGE"),
    e
  );
})(TableMessage);
__reflect(SeatBettingMessage.prototype, "SeatBettingMessage");
var SeatDealMessage = (function (t) {
  function e(e, i, a, n, s, r, o, h) {
    void 0 === e && (e = 0),
      void 0 === i && (i = 0),
      void 0 === a && (a = 0),
      void 0 === n && (n = null),
      void 0 === s && (s = 0),
      void 0 === r && (r = 0),
      void 0 === o && (o = 0),
      void 0 === h && (h = null);
    var l = t.call(this) || this;
    return (
      (l.seatid = 0),
      (l.color = 0),
      (l.order = 0),
      (l.state = 0),
      (l.gamblingNum = 0),
      (l.iType = MessageUtils.SEAT_DEAL_MESSAGE),
      (l.tableid = e),
      (l.seatid = i),
      (l.color = a),
      (l.point = n),
      (l.order = s),
      (l.state = r),
      (l.gamblingNum = o),
      (l.cardresult = h),
      (l.lMessageID = l.createMessageId()),
      l
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      var e = 0;
      (this.tableid = MessageUtils.readLong(t)),
        (this.seatid = t.readByte()),
        (this.color = t.readByte()),
        (e = t.readInt()),
        (this.point = t.readUTFBytes(e)),
        (this.order = t.readInt()),
        (this.state = t.readByte()),
        (this.gamblingNum = t.readInt()),
        (e = t.readInt()),
        (this.cardresult = t.readUTFBytes(e)),
        (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.toString = function () {
      return (
        "SeatDealMessage<tableid:" +
        this.tableid +
        ", seatid:" +
        this.seatid +
        ", color:" +
        this.color +
        ", point:" +
        this.point +
        ", order:" +
        this.order +
        ", state:" +
        this.state +
        ", gamblingNum:" +
        this.gamblingNum +
        ", cardresult:" +
        this.cardresult +
        ">"
      );
    }),
    (e.EVENT_NAME = "SEAT_DEAL_MESSAGE"),
    e
  );
})(TableMessage);
__reflect(SeatDealMessage.prototype, "SeatDealMessage");
var SubCountBalanceMessage = (function (t) {
  function e(e, i, a) {
    void 0 === e && (e = 0),
      void 0 === i && (i = null),
      void 0 === a && (a = 0);
    var n = t.call(this) || this;
    return (
      (n.iType = MessageUtils.SUBCOUNTBALANCE_MESSAGE),
      (n.userid = e),
      (n.mark = i),
      (n.account = a),
      (n.lMessageID = n.createMessageId()),
      n
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      (this.userid = MessageUtils.readLong(t)),
        (this.mark = t.readUTFBytes(t.readInt())),
        (this.account = t.readDouble()),
        (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.toString = function () {
      return (
        "SubCountBalanceMessage<userid:" +
        this.userid +
        ", mark:" +
        this.mark +
        ", account:" +
        this.account +
        ">"
      );
    }),
    (e.EVENT_NAME = "SUBCOUNTBALANCE_MESSAGE"),
    e
  );
})(UserMessage);
__reflect(SubCountBalanceMessage.prototype, "SubCountBalanceMessage");
var TableInfoMessage = (function (t) {
  function e(
    e,
    i,
    a,
    n,
    s,
    r,
    o,
    h,
    l,
    g,
    u,
    c,
    d,
    p,
    _,
    b,
    m,
    T,
    v,
    E,
    f,
    L,
    y,
    M,
    A,
    D,
    S,
  ) {
    void 0 === e && (e = 0),
      void 0 === i && (i = 0),
      void 0 === a && (a = null),
      void 0 === n && (n = 0),
      void 0 === s && (s = 0),
      void 0 === r && (r = null),
      void 0 === o && (o = null),
      void 0 === h && (h = null),
      void 0 === l && (l = 0),
      void 0 === g && (g = null),
      void 0 === u && (u = null),
      void 0 === c && (c = null),
      void 0 === d && (d = 0),
      void 0 === p && (p = null),
      void 0 === _ && (_ = null),
      void 0 === b && (b = null),
      void 0 === m && (m = null),
      void 0 === T && (T = null),
      void 0 === v && (v = 0),
      void 0 === E && (E = null),
      void 0 === f && (f = null),
      void 0 === L && (L = null),
      void 0 === y && (y = 0),
      void 0 === M && (M = 0),
      void 0 === A && (A = 0),
      void 0 === D && (D = null),
      void 0 === S && (S = 0);
    var C = t.call(this) || this;
    return (
      (C.iType = MessageUtils.TABLE_INFO_MESSAGE),
      (C.tableid = e),
      (C.gameType = i),
      (C.tableSeq = a),
      (C.shoeSeq = n),
      (C.gameSeq = s),
      (C.limitKeys = r),
      (C.minlimit = o),
      (C.maxlimit = h),
      (C.hedge = l),
      (C.history = g),
      (C.history2 = u),
      (C.history3 = c),
      (C.onlinenum = d),
      (C.tablestate = p),
      (C.dealername = _),
      (C.dealericon = b),
      (C.emcee = m),
      (C.emceeicon = T),
      (C.emceelanguage = v),
      (C.alimitKeys = E),
      (C.aminlimit = f),
      (C.amaxlimit = L),
      (C.gamestyle = y),
      (C.entertype = M),
      (C.seatno = A),
      (C.lastlimitKey = D),
      (C.pokerStyle = S),
      (C.lMessageID = C.createMessageId()),
      C
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      var e, i;
      (this.tableid = MessageUtils.readLong(t)),
        (this.gameType = t.readInt()),
        (e = t.readInt()),
        (this.tableSeq = t.readUTFBytes(e)),
        (this.shoeSeq = t.readInt()),
        (this.gameSeq = t.readInt()),
        (i = t.readInt()),
        (this.limitKeys = 0 == i ? null : new Array());
      for (var a = 0; i > a; a++)
        (e = t.readInt()), (this.limitKeys[a] = t.readUTFBytes(e));
      (i = t.readInt()), (this.minlimit = 0 == i ? null : new Array());
      for (var a = 0; i > a; a++) this.minlimit[a] = t.readInt();
      (i = t.readInt()), (this.maxlimit = 0 == i ? null : new Array());
      for (var a = 0; i > a; a++) this.maxlimit[a] = t.readInt();
      (this.hedge = t.readInt()),
        (i = t.readInt()),
        (this.history = 0 == i ? null : new Array());
      for (var a = 0; i > a; a++) this.history[a] = t.readByte();
      (i = t.readInt()), (this.history2 = 0 == i ? null : new Array());
      for (var a = 0; i > a; a++)
        (e = t.readInt()), (this.history2[a] = t.readUTFBytes(e));
      (i = t.readInt()), (this.history3 = 0 == i ? null : new Array(12));
      for (var a = 0; i > a; a++) this.history3[a] = t.readInt();
      (this.onlinenum = t.readInt()),
        (e = t.readInt()),
        (this.tablestate = t.readUTFBytes(e)),
        (e = t.readInt()),
        (this.dealername = t.readUTFBytes(e)),
        (e = t.readInt()),
        (this.dealericon = t.readUTFBytes(e)),
        (e = t.readInt()),
        (this.emcee = t.readUTFBytes(e)),
        (e = t.readInt()),
        (this.emceeicon = t.readUTFBytes(e)),
        (this.emceelanguage = t.readByte()),
        (i = t.readInt()),
        (this.alimitKeys = 0 == i ? null : new Array());
      for (var a = 0; i > a; a++)
        (e = t.readInt()), (this.alimitKeys[a] = t.readUTFBytes(e));
      (i = t.readInt()), (this.aminlimit = 0 == i ? null : new Array());
      for (var a = 0; i > a; a++) this.aminlimit[a] = t.readInt();
      (i = t.readInt()), (this.amaxlimit = 0 == i ? null : new Array());
      for (var a = 0; i > a; a++) this.amaxlimit[a] = t.readInt();
      (this.gamestyle = t.readInt()),
        (this.entertype = t.readInt()),
        (this.seatno = t.readInt()),
        (e = t.readInt()),
        (this.lastlimitKey = t.readUTFBytes(e)),
        (this.pokerStyle = t.readInt()),
        (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.toString = function () {
      return (
        "TableInfoMessage<tableid:" +
        this.tableid +
        ", gameType:" +
        this.gameType +
        ", tableSeq:" +
        this.tableSeq +
        ", shoeSeq:" +
        this.shoeSeq +
        ", gameSeq:" +
        this.gameSeq +
        ", limitKeys:" +
        this.limitKeys +
        ", minlimit:" +
        this.minlimit +
        ", maxlimit:" +
        this.maxlimit +
        ", hedge:" +
        this.hedge +
        ", history:" +
        this.history +
        ", history2:" +
        this.history2 +
        ", history3:" +
        this.history3 +
        ", onlinenum:" +
        this.onlinenum +
        ", tablestate:" +
        this.tablestate +
        ", dealername:" +
        this.dealername +
        ", dealericon:" +
        this.dealericon +
        ", emcee:" +
        this.emcee +
        ", emceeicon:" +
        this.emceeicon +
        ", emceelanguage:" +
        this.emceelanguage +
        ", alimitKeys:" +
        this.alimitKeys +
        ", aminlimit:" +
        this.aminlimit +
        ", amaxlimit:" +
        this.amaxlimit +
        ", gamestyle:" +
        this.gamestyle +
        ", entertype:" +
        this.entertype +
        ", seatno:" +
        this.seatno +
        ", lastlimitKey:" +
        this.lastlimitKey +
        ", pokerStyle:" +
        this.pokerStyle +
        ">"
      );
    }),
    (e.EVENT_NAME = "TABLE_INFO_MESSAGE"),
    e
  );
})(TableMessage);
__reflect(TableInfoMessage.prototype, "TableInfoMessage");
var TableInstantMessage = (function (t) {
  function e(e, i, a, n, s) {
    void 0 === e && (e = 0),
      void 0 === i && (i = 0),
      void 0 === a && (a = null),
      void 0 === n && (n = null),
      void 0 === s && (s = 0);
    var r = t.call(this) || this;
    return (
      (r.seatNum = 0),
      (r.amount = 0),
      (r.iType = MessageUtils.TABLE_INSTANT_MESSAGE),
      (r.tableid = e),
      (r.seatNum = i),
      (r.seats = a),
      (r.realseats = n),
      (r.amount = s),
      (r.lMessageID = r.createMessageId()),
      r
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      var e = 0;
      (this.tableid = MessageUtils.readLong(t)),
        (this.seatNum = t.readInt()),
        (e = t.readInt()),
        (this.seats = t.readUTFBytes(e)),
        (e = t.readInt()),
        (this.realseats = t.readUTFBytes(e)),
        (this.amount = t.readDouble()),
        (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.toString = function () {
      return (
        "TableInstantMessage<tableid:" +
        this.tableid +
        ", seatNum:" +
        this.seatNum +
        ", seats:" +
        this.seats +
        ", realseats:" +
        this.realseats +
        ", amount:" +
        this.amount +
        ">"
      );
    }),
    (e.EVENT_NAME = "TABLE_INSTANT_MESSAGE"),
    e
  );
})(TableMessage);
__reflect(TableInstantMessage.prototype, "TableInstantMessage");
var UserBetingMessage = (function (t) {
  function e(e, i, a, n, s, r) {
    void 0 === e && (e = 0),
      void 0 === i && (i = 0),
      void 0 === a && (a = 0),
      void 0 === n && (n = null),
      void 0 === s && (s = 0),
      void 0 === r && (r = 0);
    var o = t.call(this) || this;
    return (
      (o.iType = MessageUtils.BET_ING_MESSAGE),
      (o.userid = e),
      (o.tableid = i),
      (o.seatid = a),
      (o.option = n),
      (o.amount = s),
      (o.gamblingnum = r),
      (o.lMessageID = o.createMessageId()),
      o
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      var e;
      (this.userid = MessageUtils.readLong(t)),
        (this.tableid = MessageUtils.readLong(t)),
        (this.seatid = MessageUtils.readLong(t)),
        (e = t.readInt()),
        (this.option = t.readUTFBytes(e)),
        (this.amount = t.readDouble()),
        (this.gamblingnum = t.readInt()),
        (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.messageToBytes = function () {
      var t = new egret.ByteArray();
      t.writeInt(this.iType), t.writeInt(0);
      var e = 8;
      return (
        MessageUtils.writeLong(t, this.userid),
        (e = t.length),
        MessageUtils.writeLong(t, this.tableid),
        (e = t.length),
        MessageUtils.writeLong(t, this.seatid),
        (e = t.length),
        t.writeInt(0),
        null != this.option &&
          this.option.length > 0 &&
          t.writeUTFBytes(this.option),
        MessageUtils.replaceInt(t, e, t.length - e - 4),
        (e = t.length),
        t.writeDouble(this.amount),
        (e = t.length),
        t.writeInt(this.gamblingnum),
        (e = t.length),
        MessageUtils.writeLong(t, this.lMessageID),
        MessageUtils.replaceInt(t, 4, t.length - 8),
        t
      );
    }),
    (e.prototype.toString = function () {
      return (
        "UserBetingMessage<userid:" +
        this.userid +
        ", tableid:" +
        this.tableid +
        ", seatid:" +
        this.seatid +
        ", option:" +
        this.option +
        ", amount:" +
        this.amount +
        ", gamblingnum:" +
        this.gamblingnum +
        ">"
      );
    }),
    (e.EVENT_NAME = "BET_ING_MESSAGE"),
    e
  );
})(UserMessage);
__reflect(UserBetingMessage.prototype, "UserBetingMessage");
var UserGiveMessage = (function (t) {
  function e(e, i, a, n, s, r, o, h) {
    void 0 === e && (e = 0),
      void 0 === i && (i = 0),
      void 0 === a && (a = null),
      void 0 === n && (n = null),
      void 0 === s && (s = 0),
      void 0 === r && (r = 0),
      void 0 === o && (o = 0),
      void 0 === h && (h = 0);
    var l = t.call(this) || this;
    return (
      (l.iType = MessageUtils.USER_GIVE_MESSAGE),
      (l.tableid = e),
      (l.userid = i),
      (l.userName = a),
      (l.emcee = n),
      (l.gameType = s),
      (l.shoenum = r),
      (l.gamblingnum = o),
      (l.giveamount = h),
      (l.lMessageID = l.createMessageId()),
      l
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      var e;
      (this.tableid = MessageUtils.readLong(t)),
        (this.userid = MessageUtils.readLong(t)),
        (e = t.readInt()),
        (this.userName = t.readUTFBytes(e)),
        (e = t.readInt()),
        (this.emcee = t.readUTFBytes(e)),
        (this.gameType = t.readInt()),
        (this.shoenum = MessageUtils.readLong(t)),
        (this.gamblingnum = MessageUtils.readLong(t)),
        (this.giveamount = t.readDouble()),
        (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.messageToBytes = function () {
      var t = new egret.ByteArray();
      t.writeInt(this.iType), t.writeInt(0);
      var e = 8;
      return (
        MessageUtils.writeLong(t, this.tableid),
        (e = t.length),
        MessageUtils.writeLong(t, this.userid),
        (e = t.length),
        t.writeInt(0),
        null != this.userName &&
          this.userName.length > 0 &&
          t.writeUTFBytes(this.userName),
        MessageUtils.replaceInt(t, e, t.length - e - 4),
        (e = t.length),
        t.writeInt(0),
        null != this.emcee &&
          this.emcee.length > 0 &&
          t.writeUTFBytes(this.emcee),
        MessageUtils.replaceInt(t, e, t.length - e - 4),
        (e = t.length),
        t.writeInt(this.gameType),
        (e = t.length),
        MessageUtils.writeLong(t, this.shoenum),
        (e = t.length),
        MessageUtils.writeLong(t, this.gamblingnum),
        (e = t.length),
        t.writeDouble(this.giveamount),
        (e = t.length),
        MessageUtils.writeLong(t, this.lMessageID),
        MessageUtils.replaceInt(t, 4, t.length - 8),
        t
      );
    }),
    (e.prototype.toString = function () {
      return (
        "UserGiveMessage<tableid:" +
        this.tableid +
        ", userid:" +
        this.userid +
        ", userName:" +
        this.userName +
        ", emcee:" +
        this.emcee +
        ", gameType:" +
        this.gameType +
        ", shoenum:" +
        this.shoenum +
        ", gamblingnum:" +
        this.gamblingnum +
        ", giveamount:" +
        this.giveamount +
        ">"
      );
    }),
    (e.EVENT_NAME = "USER_GIVE_MESSAGE"),
    e
  );
})(TableMessage);
__reflect(UserGiveMessage.prototype, "UserGiveMessage");
var route;
!(function (t) {
  var e = (function (t) {
    function e(e) {
      void 0 === e && (e = 10);
      var i = t.call(this, !1, 1, !1) || this;
      i.removeChildren(), (i.touchEnabled = !1), (i.touchChildren = !1);
      var a = e,
        n = GameUtils.routeSize;
      return (
        i.route1.init(
          a,
          6,
          a * n,
          6 * n,
          0,
          com.fontana.route.Rt1CheckerS,
          n,
          n,
          0,
          0,
        ),
        (i.route1.x = 0),
        (i.route1.y = 0),
        i.addChild(i.route1),
        i.drawSmallGrids(a, 6, n, n, 8224125),
        i.graphics.beginFill(16777215),
        i.graphics.drawRect(0, 0, a * n, 6 * n),
        i.graphics.endFill(),
        i
      );
    }
    return __extends(e, t), e;
  })(t.RouteContainer);
  (t.BaccratRoadSmall = e), __reflect(e.prototype, "route.BaccratRoadSmall");
})(route || (route = {}));
var GameData = (function () {
  function t(e) {
    (this.tileCount = 0),
      (this.tileCountBefore = 0),
      (this.winner = 3 & e),
      this.winner == t.WINNER_TILE && (this.tileCount = 1),
      (this.playerPair = 0 != (e & t.PLAYER_PAIR_MASK)),
      (this.bankerPair = 0 != (e & t.BANKER_PAIR_MASK)),
      (this.isLucky6 = 0 != (e & t.LUCKY6_MASK));
  }
  return (
    (t.WINNER_BANKER = 1),
    (t.WINNER_PLAYER = 2),
    (t.WINNER_TILE = 3),
    (t.PLAYER_PAIR_MASK = 16),
    (t.BANKER_PAIR_MASK = 32),
    (t.LUCKY6_MASK = 64),
    t
  );
})();
__reflect(GameData.prototype, "GameData");
var GameRoute = (function (t) {
  function e(e, i, a) {
    return (
      void 0 === e && (e = 6),
      void 0 === i && (i = 6),
      void 0 === a && (a = 0),
      t.call(this, !0, 1, !0, !0, !1, e, i, a) || this
    );
  }
  return (
    __extends(e, t),
    (e.getIns = function (t, i, a) {
      return (
        void 0 === t && (t = 6),
        void 0 === i && (i = 6),
        void 0 === a && (a = 0),
        e.ins || (e.ins = new e(t, i, a)),
        e.ins
      );
    }),
    (e.prototype.parseDatum = function (e, i, a, n, s) {
      void 0 === i && (i = !1),
        void 0 === a && (a = !1),
        void 0 === n && (n = !1),
        void 0 === s && (s = !1),
        t.prototype.parseDatum.call(this, e, i, a, n, s);
    }),
    (e.prototype.getkWayResult = function (t) {
      var e;
      DataManager.curTableState && DataManager.curTableState.tableInfo.history
        ? ((e = DataManager.curTableState.tableInfo.history.slice()),
          e.push(t),
          this.parseDatum(e, !1))
        : ((e = []), e.push(t), this.parseDatum(e, !1));
    }),
    (e.prototype.getLongHUWayResult = function (t) {
      var e;
      DataManager.curTableState && DataManager.curTableState.tableInfo.history
        ? ((e = DataManager.curTableState.tableInfo.history.slice()),
          e.push(t),
          this.parseDatum(e, !1, !0, !1))
        : ((e = []), e.push(t), this.parseDatum(e, !1, !0, !1));
    }),
    (e.prototype.askWay = function (t) {
      var e;
      DataManager.curTableState && DataManager.curTableState.tableInfo.history
        ? ((e = DataManager.curTableState.tableInfo.history.slice()),
          e.push(t),
          this.parseDatum(
            e,
            !0,
            DataManager.curTableState.tableInfo.gameType ==
              DataManager.GAME_TYPE_DRAGONTIGER,
          ))
        : ((e = []),
          e.push(t),
          this.parseDatum(
            e,
            !0,
            DataManager.curTableState.tableInfo.gameType ==
              DataManager.GAME_TYPE_DRAGONTIGER,
          )),
        this.timer ||
          ((this.timer = new egret.Timer(3e3, 1)),
          this.timer.addEventListener(
            egret.TimerEvent.TIMER_COMPLETE,
            this.onTimer,
            this,
          )),
        this.timer.reset(),
        this.timer.start();
    }),
    (e.prototype.onTimer = function (t) {
      this.parseDatum(
        DataManager.curTableState.tableInfo.history,
        !1,
        DataManager.curTableState.tableInfo.gameType ==
          DataManager.GAME_TYPE_DRAGONTIGER,
      ),
        this.timer.stop();
    }),
    (e.prototype.askWayDuotai = function (t, e) {
      var i;
      (this.duotai_curTabstate = t),
        t && t.tableInfo.history
          ? ((i = t.tableInfo.history.slice()),
            i.push(e),
            this.parseDatum(
              i,
              !0,
              t.tableInfo.gameType == DataManager.GAME_TYPE_DRAGONTIGER,
            ))
          : ((i = []),
            i.push(e),
            this.parseDatum(
              i,
              !0,
              t.tableInfo.gameType == DataManager.GAME_TYPE_DRAGONTIGER,
            )),
        this.duotai_timer ||
          ((this.duotai_timer = new egret.Timer(3e3, 1)),
          this.duotai_timer.addEventListener(
            egret.TimerEvent.TIMER_COMPLETE,
            this.duotaionTimer,
            this,
          )),
        this.duotai_timer.reset(),
        this.duotai_timer.start();
    }),
    (e.prototype.duotaionTimer = function (t) {
      this.duotai_curTabstate &&
        this.parseDatum(
          this.duotai_curTabstate.tableInfo.history,
          !1,
          this.duotai_curTabstate.tableInfo.gameType ==
            DataManager.GAME_TYPE_DRAGONTIGER,
        ),
        this.duotai_timer.stop();
    }),
    (e.prototype.getkWayDuotaiResult = function (t, e) {
      var i;
      t && t.tableInfo.history
        ? ((i = t.tableInfo.history.slice()), i.push(e), this.parseDatum(i, !1))
        : ((i = []), i.push(e), this.parseDatum(i, !1));
    }),
    (e.prototype.dispose = function () {
      t.prototype.dispose.call(this),
        this.timer && this.timer.stop(),
        this.duotai_timer && this.duotai_timer.stop();
    }),
    e
  );
})(route.RouteContainer);
__reflect(GameRoute.prototype, "GameRoute");
var route;
!(function (t) {
  var e = (function () {
    function t() {
      (this.mrow = 6), (this.mcol = 120), (this.canDraw = !1);
    }
    return (
      (t.prototype.updateRoad = function (t, e, i, a, n, s) {
        void 0 === a && (a = 6),
          void 0 === n && (n = 120),
          void 0 === s && (s = null),
          (this.mrow = a),
          (this.mcol = n),
          (this.checkerClass = s.checkerClass),
          (this.checkerWidth = s.checkerWidth),
          (this.checkerHeight = s.checkerHeight),
          (this.canDraw = s.canDraw);
        for (var r, o = 0, h = 0, l = 0, g = 0, u = 0; u < t.length; u++) {
          (r = t[u]), (h = u), (l = 0), (o = 0);
          for (var c = 0; c < r.length; c++)
            if (i) this.getGameData(e, u, c, r[c]);
            else if (
              (g++,
              h == u &&
                9 != o &&
                null == this.getGameData(e, h, l) &&
                ((l + 1 < this.mrow &&
                  (null == this.getGameData(e, h, l + 1) ||
                    this.getGameData(e, h, l + 1).winner != r[c].winner)) ||
                  l == this.mrow - 1) &&
                ((h - 1 >= 0 &&
                  (null == this.getGameData(e, h - 1, l) ||
                    this.getGameData(e, h - 1, l).winner != r[c].winner)) ||
                  0 == h))
            )
              this.getGameData(e, h, l, r[c]), (l += 1);
            else if (0 == o)
              if (
                ((h -= 1),
                l > 3 &&
                  (0 > l - 1 || null == this.getGameData(e, h, l - 1)) &&
                  ((l < this.mrow &&
                    (null == this.getGameData(e, h, l) ||
                      this.getGameData(e, h, l).winner != r[c].winner)) ||
                    l - 1 == this.mrow - 1) &&
                  ((h - 1 >= 0 &&
                    (null == this.getGameData(e, h - 1, l - 1) ||
                      this.getGameData(e, h - 1, l - 1).winner !=
                        r[c].winner)) ||
                    0 == h) &&
                  (null == this.getGameData(e, h, l - 2) ||
                    this.getGameData(e, h, l - 2).winner != r[c].winner) &&
                  h >= 0)
              )
                this.getGameData(e, h, l - 1, r[c]);
              else {
                o = 1;
                var d = this.changeDroadsLeft2Right(h + 1, l - 1, u, c, r, e);
                (h = u + 1 + d),
                  3 >= l
                    ? ((h = u),
                      (o = 9),
                      (null != this.getGameData(e, h, l) &&
                        this.getGameData(e, h, l).winner != r[c].winner) ||
                      (null != this.getGameData(e, h - 1, l) &&
                        this.getGameData(e, h - 1, l).winner == r[c].winner)
                        ? (this.getGameData(e, h, l - 1, r[c]),
                          (this.getGameData(e, h, l - 1).text = c - 1 + ""),
                          r[c].tileCount > 0 &&
                            (this.getGameData(e, h, l - 2).tileCount =
                              this.getGameData(e, h, l - 2).tileCount +
                              r[c].tileCount))
                        : (this.getGameData(e, h, l, r[c]),
                          null != this.getGameData(e, h, l + 1) &&
                            this.getGameData(e, h, l + 1).winner ==
                              r[c].winner &&
                            (this.getGameData(e, h, l).text = c - 1 + ""),
                          r[c].tileCount > 0 &&
                            (this.getGameData(e, h, l - 1).tileCount =
                              this.getGameData(e, h, l - 1).tileCount +
                              r[c].tileCount)))
                    : this.getGameData(e, h, l - 1, r[c]);
              }
            else
              1 == o
                ? ((h += 1), this.getGameData(e, h, l - 1, r[c]))
                : ((h = u),
                  (null != this.getGameData(e, h, l) &&
                    this.getGameData(e, h, l).winner != r[c].winner) ||
                  (null != this.getGameData(e, h - 1, l) &&
                    this.getGameData(e, h - 1, l).winner == r[c].winner)
                    ? (this.getGameData(e, h, l - 1, r[c]),
                      (this.getGameData(e, h, l - 1).text = c - 1 + ""),
                      r[c].tileCount > 0 &&
                        (this.getGameData(e, h, l - 2).tileCount =
                          this.getGameData(e, h, l - 2).tileCount +
                          r[c].tileCount))
                    : (this.getGameData(e, h, l, r[c]),
                      (this.getGameData(e, h, l).text = c - 1 + ""),
                      r[c].tileCount > 0 &&
                        (this.getGameData(e, h, l - 1).tileCount =
                          this.getGameData(e, h, l - 1).tileCount +
                          r[c].tileCount)));
        }
        return (r = null), e;
      }),
      (t.prototype.getGameData = function (t, e, i, a) {
        if ((void 0 === a && (a = null), 0 > e || 0 > i || i >= this.mrow))
          return null;
        if (a) {
          if (e >= t.length && this.canDraw) {
            t[e] = new Array(this.mrow, !0);
            for (var n, s = 0; s < this.mrow; ++s)
              (n = new this.checkerClass()),
                isNaN(this.checkerWidth) ||
                  isNaN(this.checkerHeight) ||
                  ((n.width = this.checkerWidth),
                  (n.height = this.checkerHeight)),
                (t[e][s] = n),
                (n = null);
          }
          e < t.length &&
            i < t[e].length &&
            t[e][i] &&
            ((t[e][i].attached = a), (a.checker = t[e][i]));
        }
        return e >= t.length ? null : t[e][i].attached;
      }),
      (t.prototype.changeDroadsLeft2Right = function (t, e, i, a, n, s) {
        (t = t), (e = e), (i = i), (a = a), 0 > t && (t = 0);
        var r = i - t,
          o = i,
          h = 0,
          l = 0,
          g = 0;
        for (h = t; i > h; h++)
          (e = 0 > e ? 0 : e), (s[h][e].attached = null), g++;
        for (l = a - r; a > l; l++)
          3 > e
            ? (this.getGameData(s, o, e, n[l]),
              (this.getGameData(s, o, e).text = l - 1 + ""),
              n[l].tileCount > 0 &&
                (this.getGameData(s, o, e - 1).tileCount =
                  this.getGameData(s, o, e - 1).tileCount + n[l].tileCount))
            : (o++, this.getGameData(s, o, e, n[l]));
        return g;
      }),
      t
    );
  })();
  (t.NewRoad = e), __reflect(e.prototype, "route.NewRoad");
})(route || (route = {}));
var route;
!(function (t) {
  var e = (function (t) {
    function e() {
      return t.call(this, !0, 2) || this;
    }
    return (
      __extends(e, t),
      (e.prototype.parse = function (t) {
        var e,
          i,
          a,
          n = 1,
          s = 1;
        if (((this.routeDatum = new Array()), !(t.length <= n))) {
          if (((e = t[n]), this.getArrayLength(e) <= s)) {
            if (t.length <= ++n) return;
            (e = t[n]), (s = 0);
          }
          for (; n < t.length; ++n, s = 0)
            for (e = t[n]; s < e.length; ++s) {
              if (null == e[s]) {
                s--;
                break;
              }
              (a = new GameData(
                0 == s
                  ? this.getArrayLength(t[n - 1]) ==
                    this.getArrayLength(t[n - 2])
                    ? GameData.WINNER_BANKER
                    : GameData.WINNER_PLAYER
                  : this.getArrayLength(t[n - 1]) == s
                    ? GameData.WINNER_PLAYER
                    : GameData.WINNER_BANKER,
              )),
                i && i[i.length - 1].winner != a.winner && (i = null),
                i || ((i = new Array()), this.routeDatum.push(i)),
                i.push(a);
            }
          (a = null), (e = null), (i = null);
        }
      }),
      e
    );
  })(t.AbstractRoutePane);
  (t.Route2Pane = e), __reflect(e.prototype, "route.Route2Pane");
})(route || (route = {}));
var route;
!(function (t) {
  var e = (function (t) {
    function e() {
      return t.call(this, !0, 3) || this;
    }
    return (
      __extends(e, t),
      (e.prototype.parse = function (t) {
        var e,
          i,
          a,
          n = 2,
          s = 1;
        if (((this.routeDatum = new Array()), !(t.length <= n))) {
          if (((e = t[n]), this.getArrayLength(e) <= s)) {
            if (t.length <= ++n) return;
            (e = t[n]), (s = 0);
          }
          for (; n < t.length; ++n, s = 0)
            for (e = t[n]; s < e.length; ++s) {
              if (null == e[s]) {
                s--;
                break;
              }
              (a = new GameData(
                0 == s
                  ? this.getArrayLength(t[n - 1]) ==
                    this.getArrayLength(t[n - 3])
                    ? GameData.WINNER_BANKER
                    : GameData.WINNER_PLAYER
                  : this.getArrayLength(t[n - 2]) == s
                    ? GameData.WINNER_PLAYER
                    : GameData.WINNER_BANKER,
              )),
                i && i[i.length - 1].winner != a.winner && (i = null),
                i || ((i = new Array()), this.routeDatum.push(i)),
                i.push(a);
            }
          (a = null), (e = null), (i = null);
        }
      }),
      e
    );
  })(t.AbstractRoutePane);
  (t.Route3Pane = e), __reflect(e.prototype, "route.Route3Pane");
})(route || (route = {}));
var route;
!(function (t) {
  var e = (function (t) {
    function e() {
      return t.call(this, !0, 4) || this;
    }
    return (
      __extends(e, t),
      (e.prototype.parse = function (t) {
        var e,
          i,
          a,
          n = 3,
          s = 1;
        if (((this.routeDatum = new Array()), !(t.length <= n))) {
          if (((e = t[n]), this.getArrayLength(e) <= s)) {
            if (t.length <= ++n) return;
            (e = t[n]), (s = 0);
          }
          for (; n < t.length; ++n, s = 0)
            for (e = t[n]; s < e.length; ++s) {
              if (null == e[s]) {
                s--;
                break;
              }
              (a = new GameData(
                0 == s
                  ? this.getArrayLength(t[n - 1]) ==
                    this.getArrayLength(t[n - 4])
                    ? GameData.WINNER_BANKER
                    : GameData.WINNER_PLAYER
                  : this.getArrayLength(t[n - 3]) == s
                    ? GameData.WINNER_PLAYER
                    : GameData.WINNER_BANKER,
              )),
                i && i[i.length - 1].winner != a.winner && (i = null),
                i || ((i = new Array()), this.routeDatum.push(i)),
                i.push(a);
            }
          (a = null), (e = null), (i = null);
        }
      }),
      e
    );
  })(t.AbstractRoutePane);
  (t.Route4Pane = e), __reflect(e.prototype, "route.Route4Pane");
})(route || (route = {}));
var com;
!(function (t) {
  var e;
  !(function (e) {
    var i;
    !(function (e) {
      var i = (function (e) {
        function i() {
          var t = e.call(this) || this;
          return (t.image = new eui.Image()), t.addChild(t.image), t.reset(), t;
        }
        return (
          __extends(i, e),
          (i.prototype.show = function (e, i, a, n, s, r, o, h) {
            void 0 === o && (o = "sc"),
              void 0 === h && (h = ""),
              "sc" != o && (o = "tc" == o ? "tc" : "en");
            var l = n
              ? 1e3 + (a ? 1 : 0) + (i ? 2 : 0)
              : 10 * e + (a ? 1 : 0) + (i ? 2 : 0);
            if (
              ((o = n ? "lucky_" : o),
              t.fontana.route.RsltCheckerS.AVAIL_LIST.indexOf(l.toString()) >=
                0)
            ) {
              var g = o + h + l + "_png",
                u = RES.getRes(g);
              (this.image.texture = u), (this.visible = !0);
            } else this.reset();
          }),
          (i.prototype.reset = function () {
            this.visible = !1;
          }),
          Object.defineProperty(i.prototype, "width", {
            set: function (t) {
              this.image.width = t;
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(i.prototype, "height", {
            set: function (t) {
              this.image.height = t;
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(i.prototype, "alpha", {
            get: function () {
              return this.image.alpha;
            },
            set: function (t) {
              this.image.alpha = t;
            },
            enumerable: !0,
            configurable: !0,
          }),
          (i.prototype.dispose = function () {
            for (; this.numChildren > 0; ) this.removeChildAt(0);
            (this.image = null), (this.attached = null);
          }),
          (i.AVAIL_LIST = [
            "10",
            "11",
            "12",
            "13",
            "20",
            "21",
            "22",
            "23",
            "30",
            "31",
            "32",
            "33",
            "1000",
            "1001",
            "1002",
            "1003",
          ]),
          i
        );
      })(egret.Sprite);
      (e.RsltCheckerS = i),
        __reflect(i.prototype, "com.fontana.route.RsltCheckerS");
    })((i = e.route || (e.route = {})));
  })((e = t.fontana || (t.fontana = {})));
})(com || (com = {}));
var com;
!(function (t) {
  var e;
  !(function (t) {
    var e;
    !(function (t) {
      var e = (function (t) {
        function e() {
          var e = t.call(this) || this;
          return (e.image = new eui.Image()), e.addChild(e.image), e.reset(), e;
        }
        return (
          __extends(e, t),
          (e.prototype.show = function (t, e, i, a, n, s, r, o) {
            void 0 === r && (r = "sc"), void 0 === o && (o = "");
            var h = 10 * t + (i ? 1 : 0) + (e ? 2 : 0);
            (this.visible = !0),
              (this.image.source = "Rt1Checker_f" + h + o + "_png"),
              0 == n && this.image_tie
                ? ((this.getTieImg().visible = !1),
                  (this.getTieTxt().visible = !1))
                : ((this.getTieImg().visible = n > s),
                  (this.getTieTxt().visible = !0),
                  (this.getTieTxt().text = n > 1 ? n.toString() : ""));
          }),
          (e.prototype.getTieImg = function () {
            return (
              this.image_tie ||
                ((this.image_tie = new eui.Image()),
                (this.image_tie.source = "route_tie_png"),
                (this.image_tie.width = this.image.width),
                (this.image_tie.height = this.image.height),
                this.addChild(this.image_tie)),
              this.image_tie
            );
          }),
          (e.prototype.getTieTxt = function () {
            return (
              this.txt_tie ||
                ((this.txt_tie = new egret.TextField()),
                (this.txt_tie.size = this.image.width),
                (this.txt_tie.textAlign = "center"),
                (this.txt_tie.textColor = 0),
                (this.txt_tie.x = 5),
                (this.txt_tie.y = 3),
                (this.txt_tie.bold = !0),
                this.addChild(this.txt_tie)),
              this.txt_tie
            );
          }),
          (e.prototype.reset = function () {
            this.visible = !1;
          }),
          Object.defineProperty(e.prototype, "width", {
            set: function (t) {
              (this.image.width = t),
                this.image_tie && (this.image_tie.width = t),
                this.txt_tie && (this.txt_tie.size = t);
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(e.prototype, "height", {
            set: function (t) {
              (this.image.height = t),
                this.image_tie && (this.image_tie.height = t),
                this.txt_tie && (this.txt_tie.size = t);
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(e.prototype, "alpha", {
            get: function () {
              return this.image.alpha;
            },
            set: function (t) {
              this.image.alpha = t;
            },
            enumerable: !0,
            configurable: !0,
          }),
          (e.prototype.dispose = function () {
            for (this.reset(); this.numChildren > 0; ) this.removeChildAt(0);
            (this.image = null),
              (this.attached = null),
              (this.image_tie = null),
              (this.txt_tie = null);
          }),
          e
        );
      })(egret.Sprite);
      (t.Rt1CheckerS = e),
        __reflect(e.prototype, "com.fontana.route.Rt1CheckerS");
    })((e = t.route || (t.route = {})));
  })((e = t.fontana || (t.fontana = {})));
})(com || (com = {}));
var com;
!(function (t) {
  var e;
  !(function (t) {
    var e;
    !(function (t) {
      var e = (function (t) {
        function e() {
          var e = t.call(this) || this;
          return (e.image = new eui.Image()), e.addChild(e.image), e.reset(), e;
        }
        return (
          __extends(e, t),
          (e.prototype.show = function (t, e, i, a, n, s, r, o) {
            void 0 === r && (r = "sc"),
              void 0 === o && (o = ""),
              (this.visible = !0),
              (this.image.source = "Rt2Checker_f" + t + o + "_png");
          }),
          (e.prototype.reset = function () {
            this.visible = !1;
          }),
          Object.defineProperty(e.prototype, "width", {
            set: function (t) {
              this.image.width = t;
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(e.prototype, "height", {
            set: function (t) {
              this.image.height = t;
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(e.prototype, "alpha", {
            get: function () {
              return this.image.alpha;
            },
            set: function (t) {
              this.image.alpha = t;
            },
            enumerable: !0,
            configurable: !0,
          }),
          (e.prototype.dispose = function () {
            for (this.reset(); this.numChildren > 0; ) this.removeChildAt(0);
            (this.image = null), (this.attached = null);
          }),
          e
        );
      })(egret.Sprite);
      (t.Rt2CheckerS = e),
        __reflect(e.prototype, "com.fontana.route.Rt2CheckerS");
    })((e = t.route || (t.route = {})));
  })((e = t.fontana || (t.fontana = {})));
})(com || (com = {}));
var com;
!(function (t) {
  var e;
  !(function (t) {
    var e;
    !(function (t) {
      var e = (function (t) {
        function e() {
          var e = t.call(this) || this;
          return (e.image = new eui.Image()), e.addChild(e.image), e.reset(), e;
        }
        return (
          __extends(e, t),
          (e.prototype.show = function (t, e, i, a, n, s, r, o) {
            void 0 === r && (r = "sc"),
              void 0 === o && (o = ""),
              (this.visible = !0),
              (this.image.source = "Rt3Checker_f" + t + o + "_png");
          }),
          (e.prototype.reset = function () {
            this.visible = !1;
          }),
          Object.defineProperty(e.prototype, "width", {
            set: function (t) {
              this.image.width = t;
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(e.prototype, "height", {
            set: function (t) {
              this.image.height = t;
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(e.prototype, "alpha", {
            get: function () {
              return this.image.alpha;
            },
            set: function (t) {
              this.image.alpha = t;
            },
            enumerable: !0,
            configurable: !0,
          }),
          (e.prototype.dispose = function () {
            for (this.reset(); this.numChildren > 0; ) this.removeChildAt(0);
            (this.image = null), (this.attached = null);
          }),
          e
        );
      })(egret.Sprite);
      (t.Rt3CheckerS = e),
        __reflect(e.prototype, "com.fontana.route.Rt3CheckerS");
    })((e = t.route || (t.route = {})));
  })((e = t.fontana || (t.fontana = {})));
})(com || (com = {}));
var com;
!(function (t) {
  var e;
  !(function (t) {
    var e;
    !(function (t) {
      var e = (function (t) {
        function e() {
          var e = t.call(this) || this;
          return (e.image = new eui.Image()), e.addChild(e.image), e.reset(), e;
        }
        return (
          __extends(e, t),
          (e.prototype.show = function (t, e, i, a, n, s, r, o) {
            void 0 === r && (r = "sc"),
              void 0 === o && (o = ""),
              (this.visible = !0),
              (this.image.source = "Rt4Checker_f" + t + o + "_png");
          }),
          (e.prototype.reset = function () {
            this.visible = !1;
          }),
          Object.defineProperty(e.prototype, "width", {
            set: function (t) {
              this.image.width = t;
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(e.prototype, "height", {
            set: function (t) {
              this.image.height = t;
            },
            enumerable: !0,
            configurable: !0,
          }),
          Object.defineProperty(e.prototype, "alpha", {
            get: function () {
              return this.image.alpha;
            },
            set: function (t) {
              this.image.alpha = t;
            },
            enumerable: !0,
            configurable: !0,
          }),
          (e.prototype.dispose = function () {
            for (this.reset(); this.numChildren > 0; ) this.removeChildAt(0);
            (this.image = null), (this.attached = null);
          }),
          e
        );
      })(egret.Sprite);
      (t.Rt4CheckerS = e),
        __reflect(e.prototype, "com.fontana.route.Rt4CheckerS");
    })((e = t.route || (t.route = {})));
  })((e = t.fontana || (t.fontana = {})));
})(com || (com = {}));
var DScrollMouseDownMove = (function () {
  function t() {
    this.item_width = 0;
  }
  return (
    (t.getInstance = function () {
      return t.instance || (t.instance = new t()), t.instance;
    }),
    (t.prototype.add = function (e, i, a, n) {
      void 0 === i && (i = !0),
        void 0 === a && (a = !1),
        void 0 === n && (n = null),
        t.getInstance().isAddOk(e, i, a, n) &&
          e.addEventListener(
            egret.TouchEvent.TOUCH_BEGIN,
            t.getInstance().mouseDownHandler,
            e,
          );
    }),
    (t.prototype.defaultData = function (t, e, i, a) {
      return (
        a || (a = {}),
        (a.child = t),
        (a.x = e),
        (a.y = i),
        null == a.friction && (a.friction = 0.85),
        null == a.easing && (a.easing = 0.2),
        a
      );
    }),
    (t.prototype.mouseDownHandler = function (e) {
      var i = e.currentTarget,
        a = t.getInstance().getDataByChild(i);
      0 != t.getInstance().canMouseMove(e) &&
        ((t.getInstance().listData = a),
        (t.getInstance().listData.downPoint = new egret.Point(
          e.localX,
          e.localY,
        )),
        i.addEventListener(
          egret.TouchEvent.TOUCH_MOVE,
          t.getInstance().downEnterFrame,
          i,
        ),
        i.stage.addEventListener(
          egret.TouchEvent.TOUCH_END,
          t.getInstance().mouseUpHandler,
          i,
        ));
    }),
    (t.prototype.downEnterFrame = function (e) {
      var i = e.currentTarget;
      1 == t.getInstance().listData.x &&
        (i.x +=
          (e.localX - t.getInstance().listData.downPoint.x) *
          t.getInstance().listData.easing),
        1 == t.getInstance().listData.y &&
          (i.y +=
            (e.localY - t.getInstance().listData.downPoint.y) *
            t.getInstance().listData.easing),
        t.getInstance().checkScope(i, t.getInstance().listData),
        (t.getInstance().listData.movePoint = new egret.Point(
          e.localX,
          e.localY,
        ));
    }),
    (t.prototype.mouseUpHandler = function (e) {
      var i = t.getInstance().listData.child;
      i.removeEventListener(
        egret.TouchEvent.TOUCH_MOVE,
        t.getInstance().downEnterFrame,
        i,
      ),
        i.stage &&
          i.stage.removeEventListener(
            egret.TouchEvent.TOUCH_END,
            t.getInstance().mouseUpHandler,
            i,
          ),
        t.getInstance().listData &&
          i &&
          t.getInstance().listData.movePoint &&
          ((t.getInstance().listData.speedPoint = new egret.Point(
            e.localX - t.getInstance().listData.movePoint.x,
            e.localY - t.getInstance().listData.movePoint.y,
          )),
          (t.getInstance().listData.easingSpeedPoint = new egret.Point(
            (e.localX - t.getInstance().listData.downPoint.x) *
              t.getInstance().listData.easing,
            (e.localY - t.getInstance().listData.downPoint.y) *
              t.getInstance().listData.easing,
          )),
          t.getInstance().upEnterFrame(i));
    }),
    (t.prototype.upEnterFrame = function (e) {
      var i = t.getInstance().getDataByChild(e);
      if (i && i.easingSpeedPoint) {
        var a = 0,
          n = 0;
        1 == i.x &&
          ((a =
            (i.easingSpeedPoint.x *= i.friction) +
            (i.speedPoint.x *= i.friction)),
          Math.abs(a) >= 0.2 && (e.x += a)),
          1 == i.y &&
            ((n =
              (i.easingSpeedPoint.y *= i.friction) +
              (i.speedPoint.y *= i.friction)),
            Math.abs(n) >= 0.2 && (e.y += n)),
          t.getInstance().checkScope(e, i),
          (t.getInstance().item_width = parseFloat(e.name.split("_")[2])),
          (e.x = -(
            Math.round(Math.abs(e.x) / t.getInstance().item_width) *
            t.getInstance().item_width
          ));
      }
    }),
    (t.prototype.checkScope = function (t, e) {
      null != e.maxY || null != e.minY || null != e.maxX || null != e.minX
        ? (null != e.maxY && t.y >= e.maxY
            ? (t.y = e.maxY)
            : null != e.minY && t.y < e.minY && (t.y = e.minY),
          null != e.maxX && t.x >= e.maxX
            ? (t.x = e.maxX)
            : null != e.minX && t.x < e.minX && (t.x = e.minX))
        : null != t.mask &&
          (1 == e.x &&
            (t.x > 0
              ? (t.x = 0)
              : t.x < t.mask.width - t.width && (t.x = t.mask.width - t.width)),
          1 == e.y &&
            (t.y > 0
              ? (t.y = 0)
              : t.y < t.mask.height - t.height &&
                (t.y = t.mask.height - t.height)));
    }),
    (t.prototype.removeChild = function (e) {
      e.removeEventListener(
        egret.TouchEvent.TOUCH_BEGIN,
        t.getInstance().mouseDownHandler,
        e,
      ),
        e.removeEventListener(
          egret.TouchEvent.TOUCH_MOVE,
          t.getInstance().downEnterFrame,
          e,
        ),
        e.stage &&
          e.stage.removeEventListener(
            egret.TouchEvent.TOUCH_END,
            t.getInstance().mouseUpHandler,
            e,
          );
    }),
    (t.prototype.isAddOk = function (e, i, a, n) {
      return e && e.mask
        ? (t.getInstance().list || (t.getInstance().list = []),
          null != t.getInstance().getDataByChild(e)
            ? !1
            : (t
                .getInstance()
                .list.push(t.getInstance().defaultData(e, i, a, n)),
              !0))
        : !1;
    }),
    (t.prototype.canMouseMove = function (t) {
      var e = t.currentTarget;
      return null != e.canMouseMove ? e.canMouseMove(t) : !0;
    }),
    (t.prototype.getDataByChild = function (e) {
      if (t.getInstance().listData && e == t.getInstance().listData.child)
        return t.getInstance().listData;
      for (var i in t.getInstance().list)
        if (t.getInstance().list[i].child == e) return t.getInstance().list[i];
      return null;
    }),
    (t.prototype.remove = function (e) {
      if (e)
        for (var i in t.getInstance().list)
          if (t.getInstance().list[i].child == e) {
            t.getInstance().removeChild(e),
              (t.getInstance().list[i] = null),
              t.getInstance().list.splice(parseInt(i), 1);
            break;
          }
    }),
    t
  );
})();
__reflect(DScrollMouseDownMove.prototype, "DScrollMouseDownMove");
var ActivityPanel = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return e.init(), e;
  }
  return (
    __extends(e, t),
    (e.prototype.init = function () {
      (this.skinName = "resource/eui_skins/ActivityPanel.exml"),
        (this.imageLoader = new egret.ImageLoader()),
        this.imageLoader.addEventListener(
          egret.Event.COMPLETE,
          this.onActiveIconLoaded,
          this,
        ),
        this.imageLoader.addEventListener(
          egret.IOErrorEvent.IO_ERROR,
          this.onIOError,
          this,
        ),
        this.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onActiveClick,
          this,
        );
    }),
    (e.prototype.onIOError = function (t) {
      DebugText.appendError("加载头像失败");
    }),
    (e.prototype.loadImage = function (t) {
      this.imageLoader.load(t);
    }),
    (e.prototype.onActiveClick = function (t) {
      window.open(DataManager.PROMO_URL);
    }),
    (e.prototype.onActiveIconLoaded = function (t) {
      if (t.currentTarget.data) {
        egret.log("加载头像成功: " + t.currentTarget.data);
        var e = new egret.DisplayObjectContainer(),
          i = new egret.Texture();
        i.bitmapData = t.currentTarget.data;
        var a = new egret.Bitmap(i);
        e.addChild(a);
        var n = new egret.RenderTexture();
        n.drawToTexture(e),
          this.active_icon.$setTexture(n),
          i.dispose(),
          a.texture.dispose(),
          (e = null),
          (i = null),
          (a = null);
      }
    }),
    (e.prototype.dispose = function () {
      (this.imageLoader = new egret.ImageLoader()),
        this.imageLoader.removeEventListener(
          egret.Event.COMPLETE,
          this.onActiveIconLoaded,
          this,
        ),
        this.imageLoader.removeEventListener(
          egret.IOErrorEvent.IO_ERROR,
          this.onIOError,
          this,
        ),
        this.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onActiveClick,
          this,
        ),
        (this.imageLoader = null);
    }),
    e
  );
})(eui.Component);
__reflect(ActivityPanel.prototype, "ActivityPanel");
var Alert = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.groupcenter = 0),
      (e.groupheight = 300),
      e.init(),
      (e.top = 0),
      (e.bottom = 0),
      (e.left = 0),
      (e.right = 0),
      e
    );
  }
  return (
    __extends(e, t),
    (e.prototype.init = function () {
      (this.skinName = "resource/skins/AlertUI.exml"),
        (this.txtTitle.text = ""),
        (this.txtContent.text = ""),
        (this.txtContent.wordWrap = !0),
        (this.txtContent.multiline = !0),
        (this.btnOK.label = LangUtils.LANG_MAP.CONFIRM),
        this.btnOK.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onOK,
          this,
        ),
        (this.btnNO.label = LangUtils.LANG_MAP.CANCEL),
        this.btnNO.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onNO,
          this,
        ),
        (this.btnNO.includeInLayout = this.btnNO.visible = !1),
        (this.alert_bg.visible = !1),
        (this.alert_bgGroup.visible = !1),
        DataManager.Q1E5_login || DataManager.fast_login
          ? ((this.yaxing_img.source = "logo_png"),
            (this.yaxing_img.width = 216),
            (this.yaxing_img.height = 138))
          : DataManager.API168_login || DataManager.fast_login
            ? ((this.yaxing_img.source = "168APILogo_png"),
              (this.yaxing_img.width = 328),
              (this.yaxing_img.height = 121))
            : DataManager.VG_login
              ? ((this.yaxing_img.source = "vgLogo_png"),
                (this.yaxing_img.width = 223),
                (this.yaxing_img.height = 171))
              : ((this.yaxing_img.source = "logo_png"),
                (this.yaxing_img.width = 216),
                (this.yaxing_img.height = 138)),
        DataManager.GT_login &&
          ((this.yaxing_img.source = "gtLogo_png"),
          (this.yaxing_img.width = 328),
          (this.yaxing_img.height = 113));
    }),
    (e.show = function (t, i, a, n, s) {
      void 0 === i && (i = null),
        void 0 === a && (a = null),
        void 0 === n && (n = !0),
        void 0 === s && (s = !1);
      var r = new e();
      return (
        (r.txtTitle.text = i),
        (r.txtContent.text = t),
        (r.callBack = a),
        ShareUtils.main.addChild(r),
        n && (r.bg.visible = r.bg.includeInLayout = !0),
        (r.alert_bg.visible = r.alert_bgGroup.visible = s),
        r
      );
    }),
    (e.showConfirm = function (t, i, a, n) {
      void 0 === i && (i = null),
        void 0 === a && (a = null),
        void 0 === n && (n = !0);
      var s = new e();
      return (
        (s.txtTitle.text = i),
        (s.txtContent.text = t),
        (s.callBack = a),
        (s.btnNO.includeInLayout = s.btnNO.visible = !0),
        ShareUtils.main.addChild(s),
        n && (s.bg.visible = s.bg.includeInLayout = !0),
        s
      );
    }),
    (e.tip = function (t) {
      var i = new e();
      return (
        (i.touchEnabled = i.touchChildren = !1),
        (i.txtTitle.visible = !1),
        (i.btnOK.visible = !1),
        (i.txtContent.text = t),
        ShareUtils.main.addChild(i),
        ShareUtils.callLater(2e3, i.dispose, i),
        i
      );
    }),
    (e.tipGame = function (t, i) {
      void 0 === i && (i = 16777215);
      var a = new e();
      return (
        (a.touchEnabled = a.touchChildren = !1),
        (a.txtTitle.visible = !1),
        (a.btnOK.visible = !1),
        (a.txtContent.text = t),
        (a.txtContent.size = 50),
        (a.txtContent.bold = !0),
        (a.txtContent.textColor = i),
        (a.getChildByName("contentBG").height = 180),
        DataManager.LANG_TYPE != DataManager.LANG_SC &&
          t.length > 32 &&
          (a.getChildByName("contentBG").height = 240),
        ShareUtils.main.addChild(a),
        ShareUtils.callLater(2e3, a.dispose, a),
        a
      );
    }),
    (e.loading = function (t, i, a) {
      return (
        void 0 === t && (t = null),
        void 0 === i && (i = !0),
        void 0 === a && (a = !1),
        e.alert_loading || (e.alert_loading = new e()),
        (e.alert_loading.txtTitle.visible = !1),
        (e.alert_loading.btnOK.visible = !1),
        (e.alert_loading.txtContent.text = t
          ? t
          : LangUtils.LANG_MAP.PLEAS_WAIT + "..."),
        (e.alert_loading.alert_strGroup.visible = !0),
        a
          ? ((e.alert_loading.alert_bg.visible =
              e.alert_loading.alert_bgGroup.visible =
                1 == DataManager.game_login_type || DataManager.showYaXing),
            e.alert_loading.alert_bg.visible &&
              ((e.alert_loading.txtContent.text = ""),
              (e.alert_loading.alert_strGroup.visible = !1)))
          : (e.alert_loading.alert_bg.visible =
              e.alert_loading.alert_bgGroup.visible =
                !1),
        e.alert_loading.parent || ShareUtils.main.addChild(e.alert_loading),
        i &&
          (e.alert_loading.bg.visible = e.alert_loading.bg.includeInLayout =
            !0),
        e.alert_loading
      );
    }),
    (e.hideLoading = function () {
      e.alert_loading && (e.alert_loading.dispose(), (e.alert_loading = null));
    }),
    (e.prototype.onOK = function (t) {
      null != this.callBack && this.callBack(), this.dispose();
    }),
    (e.prototype.onNO = function (t) {
      this.dispose();
    }),
    (e.showWait = function (t, i, a) {
      void 0 === i && (i = !1),
        void 0 === a && (a = !1),
        null == e.waitUI && (e.waitUI = new WaitUI()),
        ShareUtils.main.addChild(e.waitUI),
        e.waitUI.showWait(t);
    }),
    (e.hideWait = function () {
      e.waitUI &&
        (e.waitUI.hideWait(),
        e.waitUI.parent && e.waitUI.parent.removeChild(e.waitUI));
    }),
    (e.showCaptcha = function () {
      null == e.captcha && (e.captcha = new Captcha()),
        ShareUtils.main.addChild(e.captcha),
        e.captcha.show();
    }),
    (e.showReconnectMask = function () {
      null == e.waitReconnectUI && (e.waitReconnectUI = new WaitReconnectUI()),
        ShareUtils.main.addChild(e.waitReconnectUI),
        e.waitReconnectUI.showWait();
    }),
    (e.hideReconnectMask = function () {
      e.waitReconnectUI &&
        (e.waitReconnectUI.hideWait(),
        e.waitReconnectUI.parent &&
          e.waitReconnectUI.parent.removeChild(e.waitReconnectUI));
    }),
    (e.showScreenWait = function (t, i, a) {
      void 0 === i && (i = !1),
        void 0 === a && (a = !1),
        null == e.pingUI && (e.pingUI = new TopScreenUI()),
        ShareUtils.main.addChild(e.pingUI),
        e.pingUI.showWait(t);
    }),
    (e.hideScreenWait = function () {
      e.pingUI &&
        (e.pingUI.hideWait(),
        e.pingUI.parent && e.pingUI.parent.removeChild(e.pingUI));
    }),
    (e.prototype.dispose = function () {
      this.parent && this.parent.removeChild(this),
        this.btnOK.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onOK,
          this,
        ),
        this.btnNO.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onNO,
          this,
        ),
        this.removeChildren(),
        (this.txtTitle = null),
        (this.txtContent = null),
        (this.btnOK = null),
        (this.btnNO = null),
        (this.callBack = null),
        (this.bg = null);
    }),
    e
  );
})(eui.Component);
__reflect(Alert.prototype, "Alert");
var BetNumTips = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.betnumvisible = !0),
      (e.tempbetnumvisible = !0),
      (e.betnum = 0),
      (e.betnumfb = ""),
      (e.tempbetstr = "+0"),
      (e.touchEnabled = e.touchChildren = !1),
      e
    );
  }
  return (
    __extends(e, t),
    Object.defineProperty(e.prototype, "tempbetnum", {
      set: function (t) {
        t > 0 || 0 > t
          ? (this.tempbetstr =
              (t > 0 ? "+" : "-") + GameUtils.getNumberFormat(t))
          : (this.tempbetstr = "");
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(e.prototype, "initbetnum", {
      set: function (t) {
        this.betnum > 0
          ? (this.betnumfb = GameUtils.getNumberFormat(
              Number(this.betnum.toString()),
            ))
          : (this.betnumfb = "");
      },
      enumerable: !0,
      configurable: !0,
    }),
    (e.prototype.partAdded = function (e, i) {
      t.prototype.partAdded.call(this, e, i);
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this);
    }),
    e
  );
})(eui.Component);
__reflect(BetNumTips.prototype, "BetNumTips", [
  "eui.UIComponent",
  "egret.DisplayObject",
]);
var Captcha = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return e.init(), e;
  }
  return (
    __extends(e, t),
    (e.prototype.init = function () {
      (this.skinName = "resource/skins/CaptchaUI.exml"),
        this.btnOK.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.loginEgret,
          this,
        ),
        this.checkBtn.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.updataCheckIconEgret,
          this,
        ),
        this.updataCheckIconEgret(),
        this.onResize();
    }),
    (e.prototype.onResize = function () {
      (this.width = ShareUtils.main.stage.stageWidth),
        (this.height = ShareUtils.main.stage.stageHeight),
        (this.mainGroup.width = this.width),
        (this.mainGroup.height = this.height);
    }),
    (e.prototype.loginWithParams = function (t) {
      return null == t || void 0 == t || "" == t
        ? void alert("请输入验证码")
        : void (t
            ? new HttpPostHandle(
                DataManager.HTTP_HOST_PF +
                  "/client/api/verifySafe.jsp?random=" +
                  t,
                null,
                this.result,
                this,
                "get",
              )
            : alert(LangUtils.LANG_MAP.LOGIN_VIEW_CHECK));
    }),
    (e.prototype.loginEgret = function (t) {
      this.loginWithParams(this.txtCheck.text);
    }),
    (e.prototype.result = function (t) {
      if (t)
        if ((console.log("安全保障验证 error= " + t.state), 0 == t.state))
          this.hide(), Alert.tipGame(LangUtils.LANG_MAP.SET_VIEW_TIP);
        else {
          var e = t.state,
            i = void 0;
          (i =
            -100 == e
              ? LangUtils.LANG_MAP.dzg_login_11
              : LangUtils.LANG_MAP.dzg_login_14),
            Alert.tipGame(i),
            EventManager.getIns().dispatchEvent(
              new DataChangeEvent(DataChangeEvent.CHECK_YANZHENG_MESSAGE),
            );
        }
    }),
    (e.prototype.updataCheckIconEgret = function (t) {
      void 0 === t && (t = null),
        this.checkIcon &&
          this.checkIcon.texture &&
          this.checkIcon.texture.dispose(),
        (this.checkIcon = null),
        DZUtils.loadImageByUrl(
          DataManager.HTTP_HOST_PF +
            "/client/api/varifycode.jsp?v=" +
            Date.now(),
          function (t) {
            if (t) {
              var e = new egret.Texture();
              (e.bitmapData = t),
                (this.checkIcon = new eui.Image(e)),
                (this.checkIcon.width = 100),
                (this.checkIcon.height = 50),
                this.checkBtn.addChild(this.checkIcon),
                (this.checkIcon.x = 2),
                (this.checkIcon.y = 10);
            }
          },
          this,
        );
    }),
    (e.prototype.show = function () {
      (this.visible = !0), this.updataCheckIconEgret();
    }),
    (e.prototype.hide = function () {
      this.visible = !1;
    }),
    e
  );
})(eui.Component);
__reflect(Captcha.prototype, "Captcha");
var ChatMsgItemRenderer = (function (t) {
  function e() {
    return t.call(this) || this;
  }
  return (
    __extends(e, t),
    (e.prototype.partAdded = function (e, i) {
      t.prototype.partAdded.call(this, e, i);
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this), this.dataChanged();
    }),
    (e.prototype.dataChanged = function () {
      t.prototype.dataChanged.call(this);
      var e = this.data;
      e &&
        this.bg1 &&
        ((this.bg1.visible = !e.itsme),
        (this.bg2.visible = e.itsme),
        (this.titletxt.textFlow = e.titleflow),
        (this.msgtxt.textFlow = e.msgflow),
        this.laterupdatebgsize && this.laterupdatebgsize.stop(),
        (this.laterupdatebgsize = ShareUtils.callLater(
          100,
          this.updatebgsize,
          this,
        )));
    }),
    (e.prototype.updatebgsize = function () {
      if (this.bg1 && this.bg2) {
        var t = this.txtcon.layout,
          e =
            t.paddingLeft +
            t.paddingRight +
            t.gap +
            this.titletxt.textWidth +
            this.msgtxt.textWidth;
        (this.bg1.width = this.bg2.width = e),
          (this.bg1.height = this.bg2.height =
            Math.max(50, this.txtcon.height));
      }
    }),
    e
  );
})(eui.ItemRenderer);
__reflect(ChatMsgItemRenderer.prototype, "ChatMsgItemRenderer");
var ChatPanel = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.state_tanmu = "tanmu"),
      (e.state_fasong = "fasong"),
      (e.state_kuaijie = "kuaijie"),
      (e.kuaijiekeys_num = 9),
      (e.kuaijiekey = "kuaijiestr_"),
      (e.chatmsgs = new eui.ArrayCollection()),
      (e.sendtimerlock = !1),
      (e.percentWidth = 100),
      (e.percentHeight = 100),
      e
    );
  }
  return (
    __extends(e, t),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this),
        LangUtils.addEventListener(this.onlang, this),
        ButtonAction.addtap(this.btnkuaijie, this.onclickkuaijie, this),
        ButtonAction.addtap(this.btnfasong, this.onclickfasong, this),
        (this.tanmulist.dataProvider = this.chatmsgs),
        (this.fasonglist.dataProvider = this.chatmsgs),
        this.onlang();
    }),
    (e.prototype.onlang = function () {
      var t = this;
      if (
        ((this.btntanmu.yesLabel =
          LangUtils.get("chat_tanmu") + LangUtils.get("SYSTEM_SET_OPEN")),
        (this.btntanmu.noLabel =
          LangUtils.get("chat_tanmu") + LangUtils.get("SYSTEM_SET_CLOSE")),
        (this.btnkuaijie.label = LangUtils.get("chat_kuaijie")),
        (this.btnfasong.label = LangUtils.get("CHAT_SEND_STRING")),
        this.btntanmu.updateLabel(),
        this.kuaijielist && this.kuaijielist.numChildren > 0)
      ) {
        for (var e = 0; e < this.kuaijielist.numChildren; e++) {
          var i = this.kuaijielist.getChildAt(e);
          i.label = LangUtils.get(this.kuaijiekey + (e + 1));
        }
        ShareUtils.callLater(
          100,
          function () {
            t.updatekuaijielayout();
          },
          this,
        );
      }
    }),
    (e.prototype.updatekuaijielayout = function () {
      for (var t = 10, e = 0; e < this.kuaijielist.numChildren; e++) {
        var i = this.kuaijielist.getChildAt(e);
        if (e > 0) {
          var a = this.kuaijielist.getChildAt(e - 1);
          a.x + a.width + t + i.width > this.width
            ? ((i.x = t), (i.y = a.y + a.height + t))
            : ((i.x = a.x + a.width + t), (i.y = a.y));
        } else (i.x = t), (i.y = t);
      }
    }),
    (e.prototype.onclickkuaijiechat = function (t) {
      var e = t.currentTarget,
        i = e.label;
      (this.inputtext.text = i),
        this.onclickfasong(),
        (this.currentState = this.state_fasong);
    }),
    (e.prototype.onclickkuaijie = function () {
      if (this.currentState == this.state_kuaijie)
        (this.currentState = this.state_fasong), this.scrolltobottom();
      else {
        if (
          ((this.currentState = this.state_kuaijie),
          0 == this.kuaijielist.numChildren)
        )
          for (var t = 0; t < this.kuaijiekeys_num; t++) {
            var e = new DZChatLabel();
            this.kuaijielist.addChild(e),
              ButtonAction.addtap(e, this.onclickkuaijiechat, this);
          }
        this.onlang();
      }
    }),
    (e.prototype.onclickfasong = function () {
      var t = this;
      if (0 != this.inputtext.text.length && !DataManager.isTrialUser) {
        if (this.sendtimerlock)
          return void Alert.tip(LangUtils.get("CHAT_SEND_TO_QUICKLY"));
        var e = this.inputtext.text;
        (this.sendtimerlock = !0),
          ShareUtils.callLater(
            3e3,
            function () {
              t.sendtimerlock = !1;
            },
            this,
          ),
          ("\r" == e.charAt(e.length - 1) || "\n" == e.charAt(e.length - 1)) &&
            (e = e
              .replace(new RegExp("\\r", "g"), "")
              .replace(new RegExp("\\n", "g"), "")),
          MessageHandler.chat(e),
          (this.inputtext.text = ""),
          (e = null);
      }
    }),
    (e.prototype.show = function (e) {
      t.prototype.show.call(this, e),
        (this.currentState = this.state_fasong),
        this.scrolltobottom();
    }),
    (e.prototype.hide = function () {
      this.btntanmu && this.btntanmu.selected
        ? ((this.currentState = this.state_tanmu), this.scrolltobottom())
        : t.prototype.hide.call(this);
    }),
    (e.prototype.onchat = function (t) {
      var e = t.userid == DataManager.userid,
        i =
          (t.showname + "：" + t.content,
          [
            {
              text: t.showname + "：",
            },
          ]),
        a = [
          {
            text: t.content,
          },
        ];
      this.chatmsgs.addItem({
        itsme: e,
        titleflow: i,
        msgflow: a,
      }),
        this.scrolltobottom();
    }),
    (e.prototype.scrolltobottom = function () {
      var t = this;
      ShareUtils.callLater(
        200,
        function () {
          ShareUtils.scrollVToBottom(t.tanmulist);
        },
        this,
      ),
        ShareUtils.callLater(
          200,
          function () {
            ShareUtils.scrollVToBottom(t.fasonglist);
          },
          this,
        );
    }),
    (e.prototype.dispose = function () {
      for (
        ButtonAction.removetap(this.btnkuaijie, this.onclickkuaijie, this),
          ButtonAction.removetap(this.btnfasong, this.onclickfasong, this),
          LangUtils.removeEventListener(this.onlang, this);
        this.kuaijielist && this.kuaijielist.numChildren;

      ) {
        var e = this.kuaijielist.removeChildAt(0);
        ButtonAction.removetap(e, this.onclickkuaijiechat, this);
      }
      (this.state_tanmu = null),
        (this.state_fasong = null),
        (this.state_kuaijie = null),
        (this.btntanmu = null),
        (this.kuaijielist = null),
        (this.tanmulist.dataProvider = null),
        (this.fasonglist.dataProvider = null),
        this.chatmsgs.removeAll(),
        (this.chatmsgs = null),
        (this.inputtext = null),
        t.prototype.dispose.call(this);
    }),
    e
  );
})(dzxx.DZAutoHidePanel);
__reflect(ChatPanel.prototype, "ChatPanel");
var ChooseTableView = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (e.percentWidth = e.percentHeight = 100), e;
  }
  return (
    __extends(e, t),
    Object.defineProperty(e, "inst", {
      get: function () {
        return this._inst || (this._inst = new e()), this._inst;
      },
      enumerable: !0,
      configurable: !0,
    }),
    (e.prototype.partAdded = function (e, i) {
      t.prototype.partAdded.call(this, e, i);
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this),
        (this.limit_group.visible = !1),
        ButtonAction.addtap(this.btnback, this.onback, this),
        ButtonAction.addtap(this.btn_1, this.selectLimit, this),
        ButtonAction.addtap(this.btn_2, this.selectLimit, this),
        ButtonAction.addtap(this.btn_3, this.selectLimit, this),
        ButtonAction.addtap(this.btn_liclose, this.closelimit, this),
        this.tablelist.addEventListener(
          egret.Event.CHANGE,
          this.onselect,
          this,
        ),
        LangUtils.addEventListener(this.changelang, this),
        DataManager.tableStatesAC.addEventListener(
          eui.CollectionEvent.COLLECTION_CHANGE,
          this.onproviderchange,
          this,
        );
    }),
    (e.prototype.sortFun = function (t, e) {
      return (
        DataManager.getTableStrIndex(t.tableid) -
        DataManager.getTableStrIndex(e.tableid)
      );
    }),
    (e.prototype.changelang = function () {
      6 == this.lobbyid
        ? (this.labeltitle.text = LangUtils.get("dzg_main_menu_6"))
        : this.lobbyid == DataManager.LOBBY_ID_LUNPAN
          ? (this.labeltitle.text = LangUtils.get("dzg_main_menu_7"))
          : (this.labeltitle.text = LangUtils.get("LOBBY_" + this.lobbyid)),
        (this.labeltitle.visible = !1),
        (this.lblLimitTitle.text = LangUtils.get("SELECT_LIMIT")),
        DataManager.LANG_TYPE == DataManager.LANG_VL
          ? (this.lblLimitTitle.size = 20)
          : (this.lblLimitTitle.size = 29),
        this.updatelimittabletitle(),
        (this.tablelist.dataProvider = null),
        (this.tablelist.dataProvider = this.tables);
    }),
    (e.prototype.closelimit = function () {
      (this.limit_group.visible = !1), (this.tablelist.selectedIndex = -1);
    }),
    (e.prototype.selectLimit = function (t) {
      var e = t.target.name.split("_")[0],
        i = this.tablelist.selectedItem;
      i &&
        (this.entertable(e, i.tableid, i.tableInfo.gameType),
        this.closelimit());
    }),
    (e.prototype.onselect = function () {
      var t = this.tablelist.selectedItem;
      if (t) {
        if (0 == this.checkTableState(t))
          return (
            (this.tablelist.selectedIndex = -1),
            void (this.limit_group.visible = !1)
          );
        if (t.tableInfo.limitKeys && 1 == t.tableInfo.limitKeys.length)
          return void this.entertable(
            t.tableInfo.limitKeys[0],
            t.tableid,
            t.tableInfo.gameType,
          );
        !t.tableInfo.limitKeys || t.tableInfo.limitKeys.length <= 0
          ? Alert.tip(LangUtils.LANG_MAP.UNSELECT_LIMIT_TIP)
          : this.showLimit(t.tableInfo);
      }
    }),
    (e.prototype.entertable = function (t, e, i) {
      (this.tablelist.selectedIndex = -1),
        (DataManager.currentLimitKey = t),
        MessageHandler.chooseTable(e, i);
    }),
    (e.prototype.showLimit = function (t) {
      for (var e, i, a = 0; 3 > a; a++)
        (e = this["btn_" + (a + 1)]),
          t.limitKeys.length > a
            ? ((i = DataManager.getLimitByTableId(t.tableid, t.limitKeys[a])),
              (e.name = t.limitKeys[a] + "_" + t.tableid + "_" + t.gameType),
              (e.label = i[0] + " - " + i[1]),
              (e.visible = !0))
            : (e.visible = !1);
      (this.limit_group.visible = !0), this.updatelimittabletitle();
    }),
    (e.prototype.updatelimittabletitle = function () {
      var t = this.tablelist.selectedItem;
      t && (this.lblLimitTableTitle.text = DataManager.getTableStr(t.tableid));
    }),
    (e.prototype.checkTableState = function (t) {
      return 0 == MessageHandler.connected
        ? (Alert.tip(LangUtils.LANG_MAP.DISCON_TIP), !1)
        : null == t || null == t.tableInfo
          ? !1
          : null == t.tableInfo.limitKeys || 0 == t.tableInfo.limitKeys.length
            ? (Alert.tip(LangUtils.LANG_MAP.UNSELECT_LIMIT_TIP), !1)
            : "RP" == t.tableInfo.tablestate
              ? (Alert.tip(LangUtils.get("Maintaining_Table_Card")), !1)
              : !0;
    }),
    (e.prototype.canshowgame = function (t, e, i) {
      return t == this.lobbyid && DataManager.isH5SupportedGameType(e, i);
    }),
    (e.prototype.onproviderchange = function (t) {
      for (var e in t.items) {
        var i = t.items[e],
          a = DataManager.getLobbyTableData(i.tableid);
        if (a && this.canshowgame(a.lobbyid, a.gameType, a.gameStyle)) {
          var n = this.tables.getItemIndex(t.items[e]);
          t.kind == eui.CollectionEventKind.ADD
            ? this.tables.addItem(i)
            : t.kind == eui.CollectionEventKind.REMOVE
              ? this.tables.removeItemAt(n)
              : t.kind == eui.CollectionEventKind.UPDATE &&
                this.tables.itemUpdated(i);
        }
      }
    }),
    (e.prototype.onback = function () {
      DataManager.gotoLobby();
    }),
    (e.prototype.show = function (t) {
      (DataManager.cur_lobby_id = this.lobbyid = t),
        ShareUtils.main.viewGroup.addChild(e._inst),
        MessageHandler.enterLobby(t);
      var i = DataManager.getTableStatesByLobbyID(this.lobbyid);
      i.sort(this.sortFun),
        (this.tables = new eui.ArrayCollection(i)),
        this.changelang(),
        this.topScreen.addChild(HeadScreen.getIns()),
        HeadScreen.getIns().showLangBtn(!0),
        DataManager.vector_login && (this.btnback.visible = !1),
        this.activePanel &&
          DataManager.Q1E5_login &&
          DataManager.IMAGE_URL &&
          this.activePanel.loadImage(DataManager.IMAGE_URL);
      for (var a = 0, n = 0; n < i.length; n++) {
        var s = i[n];
        "RP" == s.tableInfo.tablestate && a++;
      }
      i.length == a && Alert.tip(LangUtils.LANG_MAP.hall_tables_maintain);
    }),
    (e.prototype.dispose = function () {
      this.topScreen.removeChildren(),
        (this.tablelist.dataProvider = null),
        this.parent && this.parent.removeChild(this);
    }),
    e
  );
})(eui.Component);
__reflect(ChooseTableView.prototype, "ChooseTableView", [
  "eui.UIComponent",
  "egret.DisplayObject",
]);
var ChooseTableViewItem = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.state_normal = "normal"),
      (e.state_jingmiedustate = "jingmiedustate"),
      (e.state_jingmixuanzhuostate = "jingmixuanzhuostate"),
      (e.xiane_num = 3),
      (e.percentWidth = e.percentHeight = 100),
      e
    );
  }
  return (
    __extends(e, t),
    (e.prototype.partAdded = function (e, i) {
      t.prototype.partAdded.call(this, e, i);
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this),
        this.routegroup.addEventListener(
          egret.Event.RESIZE,
          this.onrouteresize,
          this,
        ),
        EnterFrameRunner.getInstance().addEventListener(
          TimerGameEvent.TICK,
          this.ontick,
          this,
        ),
        (this.txtbanker.textColor = DataManager.BANKER_COLOR),
        (this.txtplayer.textColor = DataManager.PLAYER_COLOR),
        EventManager.getIns().addEventListener(
          DataChangeEvent.GOOD_ROAD_CHANGE,
          this.updataHaoluFun,
          this,
        ),
        LangUtils.addEventListener(this.changeLang, this);
    }),
    (e.prototype.changeLang = function (t) {
      void 0 === t && (t = null), this.dataChanged();
    }),
    (e.prototype.updataHaoluFun = function () {
      var t = this.data;
      if (!t) return void (this.haoluGroup.visible = !1);
      var e = t.tableInfo;
      if (!e) return void (this.haoluGroup.visible = !1);
      if (
        ((this.haoluGroup.visible =
          e.gameType == DataManager.GAME_TYPE_BACCARAT),
        e.gameType == DataManager.GAME_TYPE_BACCARAT)
      ) {
        var i = DataManager.getGoodRoadMessage(e.tableid);
        i
          ? ((this.goodRoadLab.visible = !0),
            (this.goodRoadLab.text =
              LangUtils.LANG_MAP["GOOD_ROAD_" + i.RoadType]))
          : (this.goodRoadLab.visible = !1);
      }
    }),
    (e.prototype.onrouteresize = function () {
      this.route && this.route.update(),
        this.lunpan_route && this.lunpan_route.updata(),
        this.niuniu_route && this.niuniu_route.updata(),
        this.shaibao_route && this.shaibao_route.updata();
    }),
    Object.defineProperty(e.prototype, "selected", {
      get: function () {
        return egret.superGetter(e, this, "selected");
      },
      set: function (t) {
        egret.superSetter(e, this, "selected", t), this.updateJingMiVisible();
      },
      enumerable: !0,
      configurable: !0,
    }),
    (e.prototype.updateJingMiVisible = function () {}),
    (e.prototype.ontick = function () {
      if (this.parent && this.stage) {
        var t = this.data,
          e = t.tableInfo;
        if (
          (this.clock &&
            (t.tableInfo &&
              (!t.betStart ||
              (20 != t.betStart.bettype &&
                21 != t.betStart.bettype &&
                22 != t.betStart.bettype)
                ? this.clock.tick(
                    DataManager.getCountMaxTime(
                      t.tableInfo.shoeSeq,
                      t.tableInfo.gameSeq,
                    ) / 1e3,
                    t.betzfbTime || t.betTime,
                  )
                : this.clock.tick(
                    DataManager.getCountMaxTime(
                      t.tableInfo.shoeSeq,
                      t.tableInfo.gameSeq,
                    ) / 1e3,
                    0,
                  )),
            (this.labelclock.text = this.clock.time.toString()),
            (this.labelclock.textColor = this.clock.timeTextColor)),
          (this.labelstate.text = this.tableStateToLang(e.tablestate)),
          "RP" == e.tablestate
            ? ((this.roteTip.visible = !0),
              (this.roteTipLab.text = LangUtils.LANG_MAP.dzg_main_39))
            : (this.roteTip.visible = !1),
          (this.clockgroup.visible =
            "A" == e.tablestate || "D" == e.tablestate),
          this.selectedXianEBtn &&
            this.currentState == this.state_jingmixuanzhuostate)
        ) {
          for (
            var i = t.seats || "",
              a = i.split(","),
              n = this.seatlist.dataProvider,
              s = 0;
            s < n.length;
            s++
          ) {
            var r = n.getItemAt(s),
              o = a.indexOf(r.seatid.toString()),
              h = -1 != o;
            (r.seated = h), (r.notseated = !h);
          }
          n.refresh();
        }
        this.updataHaoluFun();
      } else this.dispose();
    }),
    (e.prototype.tableStateToLang = function (t) {
      return "S" == t
        ? LangUtils.get("Clear_Table_Card")
        : "RP" == t
          ? LangUtils.get("Maintaining_Table_Card")
          : "R" == t
            ? LangUtils.get("E")
            : "WOP" == t
              ? LangUtils.get("SB0")
              : "";
    }),
    Object.defineProperty(e.prototype, "tableState", {
      get: function () {
        return this.data;
      },
      enumerable: !0,
      configurable: !0,
    }),
    (e.prototype.dataChanged = function () {
      t.prototype.dataChanged.call(this);
      var e = this.tableState;
      if (e) {
        var i = DataManager.getLobbyTableData(e.tableid),
          a = e.tableInfo;
        if (a) {
          if (
            ((this.currentState = this.state_normal),
            (this.labelgame.text = DataManager.getGameNameWithGameStyle(
              a.gameType,
              a.gamestyle,
            )),
            (this.labelgamenum.text = DataManager.getTableStr1(e.tableid)),
            DataManager.LANG_TYPE == DataManager.LANG_KN
              ? ((this.labelgame.size = 22), (this.labelgamenum.size = 22))
              : DataManager.LANG_TYPE == DataManager.LANG_VL
                ? ((this.labelgame.size = 22), (this.labelgamenum.size = 22))
                : DataManager.LANG_TYPE == DataManager.LANG_EN
                  ? i.gameType == DataManager.GAME_TYPE_DRAGONTIGER &&
                    ((this.labelgame.size = 20), (this.labelgamenum.size = 20))
                  : ((this.labelgame.size = 24), (this.labelgamenum.size = 24)),
            (this.labeltotalman.text = LangUtils.get("dzg_main_10012")),
            (this.txttotalman.text = a.onlinenum.toString()),
            (this.labelxue.text = LangUtils.get("dzg_main_10013")),
            (this.txtxue.text = e.tableInfo.shoeSeq.toString()),
            (this.labelju.text = LangUtils.get("dzg_main_10014")),
            (this.txtju.text = a.gameSeq.toString()),
            (this.mi_chooseseattxt.text = LangUtils.get("xuanzezuowei")),
            a.gameType == DataManager.GAME_TYPE_LUNPAGAME)
          ) {
            (this.tongjiGroup0.visible = !1),
              (this.tongjiGroup1.visible = !1),
              (this.tongjiGroup3.visible = !1),
              (this.tongjiGroup0.includeInLayout =
                this.tongjiGroup1.includeInLayout =
                this.tongjiGroup3.includeInLayout =
                  !1),
              (this.tongjiGroup2.visible = !0),
              (this.tongjiGroup2.includeInLayout = !0),
              (this.tongjiGroup2.percentWidth = 100);
            for (
              var n = 0, s = game.LunpanManager.betNameArr.length;
              s > n;
              n++
            ) {
              var r = this[game.LunpanManager.betNameArr[n] + "_value_lab"],
                o = this[game.LunpanManager.betNameArr[n] + "_lab"];
              o &&
                (o.text = LangUtils.LANG_MAP[game.LunpanManager.betNameArr[n]]),
                r && (r.text = a.history3[n].toString());
            }
            (this.labelplayer.text = ""),
              (this.txtplayer.text = ""),
              (this.labelbanker.text = ""),
              (this.labelbanker.text = "");
          } else if (a.gameType == DataManager.GAME_TYPE_SICBO)
            (this.tongjiGroup0.visible = !1),
              (this.tongjiGroup1.visible = !1),
              (this.tongjiGroup3.visible = !1),
              (this.tongjiGroup0.includeInLayout =
                this.tongjiGroup1.includeInLayout =
                this.tongjiGroup3.includeInLayout =
                  !1),
              (this.tongjiGroup2.visible = !0),
              (this.tongjiGroup2.includeInLayout = !0),
              (this.tongjiGroup2.percentWidth = 100),
              (this.onelabe_bg.source = "blue_numbg2_png"),
              (this.twolable_bg.source = "blue_numbg3_png"),
              (this.threelable_bg.source = "blue_numbg2_png"),
              (this.fourlable_bg.source = "blue_numbg3_png"),
              (this.RoBig_lab.text = "小"),
              (this.RoBig_value_lab.text = a.history3[1] + ""),
              (this.RoBig_value_lab.textColor = DataManager.PLAYER_COLOR),
              (this.RoSm_lab.text = "大"),
              (this.RoSm_value_lab.text = a.history3[0] + ""),
              (this.RoSm_value_lab.textColor = DataManager.BANKER_COLOR),
              (this.RoOdd_lab.text = "单"),
              (this.RoOdd_value_lab.text = a.history3[2] + ""),
              (this.RoOdd_value_lab.textColor = DataManager.PLAYER_COLOR),
              (this.RoEven_lab.text = "双"),
              (this.RoEven_value_lab.text = a.history3[3] + ""),
              (this.RoEven_value_lab.textColor = DataManager.BANKER_COLOR);
          else if (a.gameType == DataManager.GAME_TYPE_NIUNIU)
            (this.tongjiGroup0.visible = !1),
              (this.tongjiGroup1.visible = !1),
              (this.tongjiGroup2.visible = !1),
              (this.tongjiGroup3.visible = !1);
          else {
            var h = a.history3[0] || 0,
              l = a.history3[1] || 0,
              g = a.history3[2] || 0,
              u = h + l + g,
              c = u > 0 ? Math.floor((h / u) * 100) : 0,
              d = u > 0 ? Math.floor((l / u) * 100) : 0,
              p = u > 0 ? 100 - c - d : 0;
            (this.tongjiGroup0.visible = !0),
              (this.tongjiGroup1.visible = !0),
              (this.tongjiGroup3.visible = !0),
              (this.tongjiGroup0.includeInLayout =
                this.tongjiGroup1.includeInLayout =
                this.tongjiGroup3.includeInLayout =
                  !0),
              (this.tongjiGroup0.percentWidth =
                this.tongjiGroup1.percentWidth =
                this.tongjiGroup3.percentWidth =
                  100),
              (this.tongjiGroup2.visible = !1),
              (this.tongjiGroup2.includeInLayout = !1),
              (this.labelbanker.text = LangUtils.get("M_BANKER")),
              i.gameType == DataManager.GAME_TYPE_DRAGONTIGER &&
                (this.labelbanker.text = LangUtils.get("M_DRAGON")),
              (this.txtbanker.text = c + "%"),
              (this.labelplayer.text = LangUtils.get("M_PLAYER")),
              i.gameType == DataManager.GAME_TYPE_DRAGONTIGER &&
                (this.labelplayer.text = LangUtils.get("M_TIGER")),
              (this.txtplayer.text = d + "%"),
              (this.labelTile.text = LangUtils.get("M_TILE")),
              (this.txtTile.text = p + "%"),
              e.tablePool.TILE;
          }
          null != a.dealericon && void 0 != a.dealericon && "" != a.dealericon
            ? window.shared_cdn
              ? (this.imgGirl.source =
                  window.shared_cdn + "/avatar/dealer/" + a.dealericon + ".png")
              : (this.imgGirl.source =
                  DZUtils.getRootURL() +
                  "/avatar/dealer/" +
                  a.dealericon +
                  ".png")
            : (this.imgGirl.source = ""),
            (this.lbGirl.text = a.dealername),
            this.ontick(),
            3 == i.tableLobbyid
              ? ((this.imgIcon.source =
                  "dz_jisu_tip_" + DataManager.LANG_TYPE + "_png"),
                (this.jisuIconGroup.visible = !0))
              : (this.jisuIconGroup.visible = !1);
          var _ = a.gameType == DataManager.GAME_TYPE_DRAGONTIGER;
          if (a.gameType != DataManager.GAME_TYPE_LUNPAGAME) {
            if (a.gameType == DataManager.GAME_TYPE_NIUNIU)
              return (
                this.niuniu_route ||
                  (this.niuniu_route = new dzxx.NiuRoteScreen(10, 4)),
                this.routegroup.addChild(this.niuniu_route),
                void this.niuniu_route.show(a.history2)
              );
            a.gameType == DataManager.GAME_TYPE_SICBO &&
              ((this.routegroup.width = 698),
              this.shaibao_route ||
                (this.shaibao_route = new dzxx.ShaiBaoRoteScreen(6, 8)),
              this.routegroup.addChild(this.shaibao_route),
              (this.shaibao_route.currType =
                dzxx.SHAIB_ROTE_SHOW_TYPE.SHAIBROTE_SHOW_TYPE_1),
              this.shaibao_route.show(a.history2)),
              this.route ||
                ((GameUtils.routeSize = 32),
                (this.route = new GameRoute(6, 6, 1)),
                this.routegroup.addChild(this.route)),
              this.route.parseDatum(a.history, !0, _);
          } else
            this.lunpan_route ||
              ((this.lunpan_route = new dzxx.MapRoteScreen(
                32,
                20,
                6,
                dzxx.MAPROTE_SHOW_TYPE.MAPROTE_SHOW_TYPE_ZHUPAN,
              )),
              this.routegroup.addChild(this.lunpan_route)),
              this.lunpan_route.show(a.history2);
        }
      }
    }),
    (e.prototype.setxiane = function (t, e, i) {
      for (var a = 0; a < this.xiane_num; a++) {
        var n = this["btn_xiane" + (a + 1)];
        if (i && i.length > a) {
          var s = t[a],
            r = e[a];
          (n.visible = !0), (n.label = s + "-" + r), (n.name = "limit_" + i[a]);
        } else n.visible = !1;
      }
    }),
    (e.prototype.seatbtntoseatnum = function (t) {
      var e = parseFloat(t.name.replace(/.*(\d).*/, "$1"));
      return e - 1;
    }),
    (e.prototype.onclickseatbtn = function (t) {
      var e = this.seatlist.selectedItem;
      if (e) {
        var i = e.seated;
        if (!i) {
          var a = e.seatid;
          this.choosemitable(a);
        }
      }
    }),
    (e.prototype.onclickxiane = function (t) {
      var e = t.currentTarget;
      this.selectedXianEBtn = e;
      var i = this.tableState;
      if (i.gameStyle == DataManager.LOBBY_ID_MI) {
        if (this.selectedXiaZhuBtn == this.btn_jingmixiazhu) {
          this.currentState = this.state_jingmixuanzhuostate;
          var a =
            (i.seats || "").split(",").length >=
            this.seatlist.dataProvider.length;
          a && Alert.show(LangUtils.get("noSeatPangGuanInstead"));
        }
        this.selectedXiaZhuBtn == this.btn_pangguanxiazhu &&
          this.choosemitable();
      }
    }),
    (e.prototype.choosemitable = function (t) {
      void 0 === t && (t = -1);
      var e = "";
      this.selectedXianEBtn && (e = this.selectedXianEBtn.name.split("_")[1]),
        (DataManager.currentLimitKey = e),
        (DataManager.enterTableType =
          -1 == t
            ? DataManager.ENTER_TABLE_TYPE_SIDE
            : DataManager.ENTER_TABLE_TYPE_SIT),
        (t = Math.max(t, 0)),
        MessageHandler.chooseTable(
          this.tableState.tableid,
          this.tableState.tableInfo.gameType,
          t,
        );
    }),
    (e.prototype.onclickpangguan = function (t) {
      void 0 === t && (t = !0);
      var e = this.tableState,
        i = e.tableInfo,
        a = i.tableid,
        n = i.gameType;
      return t &&
        1 == e.hasBet &&
        e.enterType == DataManager.ENTER_TABLE_TYPE_SIDE
        ? ((DataManager.currentLimitKey = e.lastlimitKey),
          (DataManager.enterTableType = DataManager.ENTER_TABLE_TYPE_SIDE),
          void MessageHandler.chooseTable(a, n))
        : (this.selectedXiaZhuBtn &&
            (this.selectedXiaZhuBtn.currentState = "up"),
          this.setxiane(i.aminlimit, i.amaxlimit, i.alimitKeys),
          (this.selectedXiaZhuBtn = this.btn_pangguanxiazhu),
          (this.selectedXiaZhuBtn.currentState = "down"),
          (this.selectedXianEBtn = this.btn_xiane1.visible
            ? this.btn_xiane1
            : null),
          void (
            t &&
            (i.alimitKeys
              ? (1 == i.alimitKeys.length || DataManager.isTrialUser) &&
                this.choosemitable()
              : Alert.tip(LangUtils.LANG_MAP.ENTER_GAME_TIPS))
          ));
    }),
    (e.prototype.onclickjingmi = function (t) {
      void 0 === t && (t = !0);
      var e = this.tableState,
        i = e.tableInfo,
        a = i.tableid,
        n = i.gameType;
      return 1 == e.hasBet && e.enterType == DataManager.ENTER_TABLE_TYPE_SIT
        ? ((DataManager.currentLimitKey = e.lastlimitKey),
          (DataManager.enterTableType = DataManager.ENTER_TABLE_TYPE_SIT),
          void MessageHandler.chooseTable(a, n, i.seatno))
        : void (
            this.canToMiBet() &&
            (this.selectedXiaZhuBtn &&
              (this.selectedXiaZhuBtn.currentState = "up"),
            this.setxiane(i.minlimit, i.maxlimit, i.limitKeys),
            (this.selectedXiaZhuBtn = this.btn_jingmixiazhu),
            (this.selectedXiaZhuBtn.currentState = "down"),
            (this.selectedXianEBtn = this.btn_xiane1.visible
              ? this.btn_xiane1
              : null),
            t &&
              (i.limitKeys
                ? 1 == i.limitKeys.length &&
                  (this.currentState = this.state_jingmixuanzhuostate)
                : Alert.tip(LangUtils.LANG_MAP.ENTER_GAME_TIPS)))
          );
    }),
    (e.prototype.canToMiBet = function () {
      var t = DataManager.MI_TABLE_MONEYs[MultiCurrencyManager.currencyType];
      return DataManager.sumAmount < t
        ? (Alert.show(
            LangUtils.get("CanNotToMIBetView_TIP1") +
              ShareUtils.toMoney(t) +
              "\n" +
              LangUtils.get("CanNotToMIBetView_TIP3"),
          ),
          !1)
        : !0;
    }),
    (e.prototype.updateJingMi = function (t) {
      var e = t.emceeicon;
      (this.dealerimg.source = e || "dealerIcon_mi_png"),
        (this.dealertxt.text = t.emcee),
        (this.btn_pangguanxiazhu.label = LangUtils.get("MI_BUTTON_TOBET_SIDE")),
        (this.btn_jingmixiazhu.label = LangUtils.get("MI_BUTTON_TOBET_MI"));
      var i =
        "RP" != this.tableState.tableInfo.tablestate &&
        "LOAD" != this.tableState.tableInfo.tablestate;
      (this.btn_pangguanxiazhu.touchEnabled =
        i && this.MI_btn(2, this.tableState.hasBet)),
        (this.btn_jingmixiazhu.touchEnabled =
          i && this.MI_btn(1, this.tableState.hasBet)),
        this.updateJingMiVisible();
    }),
    (e.prototype.MI_btn = function (t, e) {
      return 2 == t
        ? this.tableState
          ? e && this.tableState.enterType == DataManager.ENTER_TABLE_TYPE_SIT
            ? !1
            : !0
          : !1
        : this.tableState
          ? this.tableState.hasBet &&
            this.tableState.enterType == DataManager.ENTER_TABLE_TYPE_SIDE
            ? !1
            : !0
          : !1;
    }),
    (e.prototype.dispose = function () {
      EnterFrameRunner.getInstance().removeEventListener(
        TimerGameEvent.TICK,
        this.ontick,
        this,
      ),
        ButtonAction.removetap(
          this.btn_pangguanxiazhu,
          this.onclickpangguan,
          this,
        ),
        ButtonAction.removetap(this.btn_jingmixiazhu, this.onclickjingmi, this),
        ButtonAction.removetap(this.btn_xiane1, this.onclickxiane, this),
        ButtonAction.removetap(this.btn_xiane2, this.onclickxiane, this),
        ButtonAction.removetap(this.btn_xiane3, this.onclickxiane, this),
        LangUtils.removeEventListener(this.changeLang, this),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.GOOD_ROAD_CHANGE,
          this.updataHaoluFun,
          this,
        ),
        this.seatlist.removeEventListener(
          egret.Event.CHANGE,
          this.onclickseatbtn,
          this,
        ),
        this.routegroup.removeEventListener(
          egret.Event.RESIZE,
          this.onrouteresize,
          this,
        ),
        this.clock.dispose(),
        (this.routegroup = null),
        (this.labelgame = null),
        (this.labelgamenum = null),
        (this.labeltotalman = null),
        (this.txttotalman = null),
        (this.labelxue = null),
        (this.txtxue = null),
        (this.labelju = null),
        (this.txtju = null),
        (this.labelbanker = null),
        (this.txtbanker = null),
        (this.labelplayer = null),
        (this.txtplayer = null),
        (this.labelstate = null),
        (this.clockgroup = null),
        (this.clock = null),
        this.lunpan_route &&
          (this.lunpan_route.destroy(), (this.lunpan_route = null)),
        this.route && (this.route.dispose(), (this.route = null)),
        this.niuniu_route &&
          (this.niuniu_route.destroy(), (this.niuniu_route = null)),
        this.shaibao_route &&
          (this.shaibao_route.destroy(), (this.shaibao_route = null)),
        (this.btn_pangguanxiazhu = null),
        (this.btn_jingmixiazhu = null),
        (this.btn_xiane1 = null),
        (this.btn_xiane2 = null),
        (this.btn_xiane3 = null),
        (this.selectedXiaZhuBtn = null),
        (this.dealerimg = null),
        (this.dealertxt = null),
        (this.migroup = null),
        (this.mi_chooseseattxt = null),
        this.removeChildren();
    }),
    e
  );
})(eui.ItemRenderer);
__reflect(ChooseTableViewItem.prototype, "ChooseTableViewItem");
var CoinsBar = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.coinwidth = 100),
      (e.enableSelectedMark = !1),
      (e.enableCoinBG = !1),
      (e.enableScaleSelected = !0),
      (e.percentWidth = e.percentHeight = 100),
      e.init(),
      e
    );
  }
  return (
    __extends(e, t),
    (e.prototype.init = function () {
      (this.touchEnabled = !1),
        (this.coinUpContainer = new eui.Group()),
        (this.coinUpContainer.touchEnabled = !1);
      var t = new eui.HorizontalLayout();
      (t.horizontalAlign = "center"),
        (t.verticalAlign = "middle"),
        (t.gap = 0),
        (this.coinUpContainer.layout = t),
        (this.coinUpContainer.percentWidth =
          this.coinUpContainer.percentHeight =
            100),
        this.coinUpContainer.addEventListener(
          egret.Event.RESIZE,
          this.onCoinConResize,
          this,
        ),
        this.addChild(this.coinUpContainer),
        EventManager.getIns().addEventListener(
          DataChangeEvent.SET_CIONS,
          this.updateCoins,
          this,
        );
    }),
    (e.prototype.onCoinConResize = function (t) {
      void 0 === t && (t = null),
        this.coinBg &&
          this.selectedcoin &&
          (egret.Tween.removeTweens(this.coinBg),
          t
            ? this.coinUpContainer.addEventListener(
                egret.Event.ENTER_FRAME,
                this.onNextFrameUpdateCoinBG,
                this,
              )
            : this.onNextFrameUpdateCoinBG());
    }),
    (e.prototype.coinToPoint = function (t) {
      return new egret.Point(
        t.x + t.width / 2,
        this.coinUpContainer.height / 2,
      );
    }),
    (e.prototype.onNextFrameUpdateCoinBG = function (t) {
      if (
        (void 0 === t && (t = null),
        this.coinUpContainer.removeEventListener(
          egret.Event.ENTER_FRAME,
          this.onNextFrameUpdateCoinBG,
          this,
        ),
        this.coinBg)
      ) {
        var e = this.coinToPoint(this.selectedcoin);
        (this.coinBg.x = e.x), (this.coinBg.y = e.y);
      }
      this.selectedmark && (this.selectedmark.x = this.selectedcoin.x + 30);
    }),
    (e.prototype.show = function () {
      this.updateCoins();
    }),
    (e.prototype.updateCoins = function (t) {
      for (void 0 === t && (t = null); this.coinUpContainer.numChildren > 0; )
        this.coinUpContainer
          .removeChildAt(0)
          .removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.coinClick,
            this,
          );
      var e,
        i = DataManager.amount;
      DataManager.amount = 0;
      var a = DataManager.amountList;
      if (null != a) {
        for (var n = 0; n < a.length; n++) {
          var s = GameUtils.getCoin(a[n], !0, "", 1.5);
          (s.width = s.height = this.coinwidth),
            (e = new eui.Group()),
            e.addChild(s),
            (e.percentWidth = e.percentHeight = 100),
            (e.touchChildren = !1),
            (e.name = a[n] + "");
          var r = new eui.HorizontalLayout();
          (r.horizontalAlign = "center"),
            (r.verticalAlign = "middle"),
            (e.layout = r),
            this.coinUpContainer.addChild(e),
            e.addEventListener(
              egret.TouchEvent.TOUCH_TAP,
              this.coinClick,
              this,
            ),
            i == a[n] && ((i = -1), this.selectCoin(e));
        }
        -1 != i && this.selectCoin(this.coinUpContainer.getChildAt(0)),
          this.onCoinConResize(t);
      }
    }),
    (e.prototype.coinClick = function (t) {
      this.selectCoin(t.currentTarget);
    }),
    (e.prototype.selectCoin = function (t) {
      this.clearOldCoin(),
        (this.selectedcoin = t),
        this.enableScaleSelected &&
          (this.selectedcoin.scaleX = this.selectedcoin.scaleY = 1.25),
        (t.touchEnabled = !1),
        (DataManager.amount = parseInt(t.name)),
        !this.selectedmark &&
          this.enableSelectedMark &&
          ((this.selectedmark = new eui.Image("selectedmark_png")),
          this.addChild(this.selectedmark));
      var e = null != this.coinBg,
        i = this.coinBg ? this.coinBg.x : 0,
        a = this.coinBg ? this.coinBg.y : 0;
      if (
        (!this.coinBg &&
          this.enableCoinBG &&
          ((this.coinBg = new CoinBGAnim()),
          (this.coinBg.width = this.coinBg.height = 200),
          (this.coinBg.touchEnabled = !1),
          (this.coinBg.name = "coinBg"),
          (this.coinBg.anchorOffsetX = 92.5),
          (this.coinBg.anchorOffsetY = 92.5),
          this.addChildAt(this.coinBg, 0)),
        this.onCoinConResize(),
        e && this.coinBg)
      ) {
        (this.coinBg.x = i), (this.coinBg.y = a);
        var n = this.coinToPoint(this.selectedcoin);
        egret.Tween.get(this.coinBg).to(
          {
            x: n.x,
            y: n.y,
          },
          200,
        );
      }
    }),
    (e.prototype.clearOldCoin = function () {
      for (var t = 0; t < this.coinUpContainer.numChildren; t++)
        this.coinUpContainer.getChildAt(t).touchEnabled = !0;
      this.selectedcoin &&
        this.enableScaleSelected &&
        (this.selectedcoin.scaleX = this.selectedcoin.scaleY = 1),
        (this.selectedcoin = null);
    }),
    (e.prototype.dispose = function () {
      for (
        EventManager.getIns().removeEventListener(
          DataChangeEvent.SET_CIONS,
          this.updateCoins,
          this,
        );
        this.coinUpContainer.numChildren > 0;

      )
        this.coinUpContainer
          .removeChildAt(0)
          .removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.coinClick,
            this,
          );
      this.coinUpContainer.removeEventListener(
        egret.Event.ENTER_FRAME,
        this.onNextFrameUpdateCoinBG,
        this,
      ),
        (this.coinUpContainer = null),
        (this.selectedcoin = null),
        (this.selectedmark = null),
        (this.coinBg = null),
        this.removeChildren();
    }),
    e
  );
})(eui.Component);
__reflect(CoinsBar.prototype, "CoinsBar");
var CqGameItem = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (e.skinName = "resource/skins/CqGameItem.exml"), e;
  }
  return (
    __extends(e, t),
    (e.prototype.partAdded = function (e, i) {
      t.prototype.partAdded.call(this, e, i);
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this),
        LangUtils.addEventListener(this.changeLang, this);
    }),
    (e.prototype.changeLang = function (t) {
      void 0 === t && (t = null), this.dataChanged();
    }),
    (e.prototype.dataChanged = function () {
      if (this.data) {
        var t = "sc";
        (t = "en" == DataManager.LANG_TYPE ? "en" : "sc"),
          (this.item_bg.source =
            t + "_game_code_" + this.data.gamecode + "_png"),
          (this.game_name.text =
            LangUtils.LANG_MAP[
              StringUtils.Decode64Strig(DataManager.Y3E5) +
                "_game_name_" +
                this.data.gamecode
            ]);
      }
      this.selected;
    }),
    (e.prototype.selectTab = function (t) {
      this.data &&
        (this.data.tableid == t
          ? (this.item_bg.source = "lh_tab_2_png")
          : (this.item_bg.source = "lh_tab_1_png"));
    }),
    e
  );
})(eui.ItemRenderer);
__reflect(CqGameItem.prototype, "CqGameItem");
var DZChatLabel = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (e.bgvisible = !0), (e.label = "label"), e;
  }
  return (
    __extends(e, t),
    (e.prototype.partAdded = function (e, i) {
      t.prototype.partAdded.call(this, e, i);
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this);
    }),
    e
  );
})(eui.Component);
__reflect(DZChatLabel.prototype, "DZChatLabel", [
  "eui.UIComponent",
  "egret.DisplayObject",
]);
var DZCoin = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.coinurl = "DUICoin_5_png"),
      (e.coinlabel = " "),
      (e.autoplaytime = 5e3),
      (e.tweentime = 2500),
      (e.autoplayid = 0),
      (e._coinvalue = 5),
      (e._isselect = !1),
      (e._autolight = !1),
      (e.touchEnabled = e.touchChildren = !1),
      e
    );
  }
  return (
    __extends(e, t),
    (e.prototype.partAdded = function (e, i) {
      t.prototype.partAdded.call(this, e, i);
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this),
        (this.coinvalue = this._coinvalue),
        this.addEventListener(egret.Event.RESIZE, this.onresize, this);
    }),
    (e.prototype.onresize = function () {
      this.addEventListener(
        egret.Event.ENTER_FRAME,
        this.onnextframeresize,
        this,
      );
    }),
    (e.prototype.onnextframeresize = function () {
      this.removeEventListener(
        egret.Event.ENTER_FRAME,
        this.onnextframeresize,
        this,
      ),
        this._autolight && this.playlight();
    }),
    Object.defineProperty(e.prototype, "coinvalue", {
      get: function () {
        return Math.floor(this._coinvalue);
      },
      set: function (t) {
        (this._coinvalue = t),
          (this.coinurl =
            "DUICoin_" +
            DataManager.getCoinIndexInCoinAmountsByValue(t) +
            "_png"),
          (this.coinlabel = GameUtils.getNumberFormat(t)),
          this.coin_Label && (this.coin_Label.y = 40);
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(e.prototype, "isselect", {
      get: function () {
        return this._isselect;
      },
      set: function (t) {
        (this._isselect = t),
          this._isselect
            ? ((this.coinurl =
                "DUICoin_" +
                DataManager.getCoinIndexInCoinAmountsByValue(this.coinvalue) +
                "_up_png"),
              this.coin_Label && (this.coin_Label.y = 30))
            : this.coin_Label && (this.coin_Label.y = 55);
      },
      enumerable: !0,
      configurable: !0,
    }),
    (e.prototype.resetlightpos = function () {
      this.lightimg && ((this.lightimg.x = 0), (this.lightimg.y = 0));
    }),
    (e.prototype.playlight = function () {}),
    (e.prototype.stoplight = function () {
      this.lightimg && egret.Tween.removeTweens(this.lightimg),
        clearInterval(this.autoplayid),
        (this.autoplayid = 0),
        (this.lighttween = null),
        this.resetlightpos();
    }),
    Object.defineProperty(e.prototype, "autolight", {
      get: function () {
        return this._autolight;
      },
      set: function (t) {
        var e = this;
        this.stoplight(),
          (this._autolight = t),
          t &&
            ((this.autoplayid = setInterval(function () {
              e.playlight();
            }, this.autoplaytime)),
            this.playlight());
      },
      enumerable: !0,
      configurable: !0,
    }),
    e
  );
})(eui.Component);
__reflect(DZCoin.prototype, "DZCoin", [
  "eui.UIComponent",
  "egret.DisplayObject",
]);
var DZCoinsBar = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (e.lastitem = null), (e.coinsize = 100), (e.coinsize2 = 100), e;
  }
  return (
    __extends(e, t),
    (e.prototype.partAdded = function (e, i) {
      t.prototype.partAdded.call(this, e, i);
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this);
      var e,
        i = [],
        a = MultiCurrencyManager.coinsArray,
        n = DataManager.curTableState,
        s = DataManager.currentLimitKey,
        r = -1,
        o = -1;
      if (
        n &&
        n.enterType == DataManager.ENTER_TABLE_TYPE_SIDE &&
        n.tableInfo &&
        n.tableInfo.alimitKeys
      )
        for (var h = 0; h < n.tableInfo.alimitKeys.length; h++)
          if (n.tableInfo.alimitKeys[h] == s) {
            r = h;
            break;
          }
      if (
        n &&
        n.enterType != DataManager.ENTER_TABLE_TYPE_SIDE &&
        n.tableInfo &&
        n.tableInfo.limitKeys
      )
        for (var l = 0; l < n.tableInfo.limitKeys.length; l++)
          if (n.tableInfo.limitKeys[l] == s) {
            o = l;
            break;
          }
      var g = !0,
        u = n.tableInfo.aminlimit,
        c = n.tableInfo.amaxlimit,
        d = n.tableInfo.minlimit,
        p = n.tableInfo.maxlimit;
      for (var _ in a) {
        var b = a[_],
          m = {
            value: b,
            size: this.coinsize,
            autolight: !1,
            isselect: !1,
          };
        i.push(m),
          n
            ? g &&
              ((r > -1 && this.isinlimitrange(u, c, r, b)) ||
                (o > -1 && this.isinlimitrange(d, p, o, b))) &&
              ((e = m), (g = !1))
            : (e = m),
          b == DataManager.amount &&
            ((r > -1 && this.isinlimitrange(u, c, r, DataManager.amount)) ||
              (o > -1 && this.isinlimitrange(d, p, o, DataManager.amount))) &&
            (e = m);
      }
      (this.coinlist.dataProvider = this.coinlistAC =
        new eui.ArrayCollection(i)),
        this.coinlist.addEventListener(egret.Event.CHANGE, this.onselect, this),
        (this.coinlist.selectedItem = e),
        this.onselect(),
        (this.latershowselectedtimer = ShareUtils.callLater(
          500,
          this.onnextframeupdatesize,
          this,
        ));
    }),
    (e.prototype.isinlimitrange = function (t, e, i, a) {
      return t[i] <= a && a <= e[i];
    }),
    (e.prototype.onnextframeupdatesize = function () {
      ShareUtils.scrollHIfNotVisible(
        this.coinlist,
        this.coinlist.selectedIndex,
        this.coinlistAC.length,
        130,
        e.lastscrollh,
      );
    }),
    (e.prototype.onselect = function () {
      var t = this.lastitem;
      t && ((t.size = this.coinsize), (t.isselect = !1), (t.autolight = !1));
      var e = this.coinlist.selectedItem;
      (this.lastitem = e),
        e &&
          ((e.size = this.coinsize2),
          (e.isselect = !0),
          (e.autolight = !0),
          (DataManager.amount = e.value)),
        this.coinlistAC.itemUpdated(t),
        this.coinlistAC.itemUpdated(e);
    }),
    (e.prototype.dispose = function () {
      this.latershowselectedtimer.stop(),
        (this.latershowselectedtimer = null),
        this.coinlist && (e.lastscrollh = this.coinlist.scrollH),
        this.removeChildren(),
        (this.coinlist.dataProvider = null),
        this.parent && this.parent.removeChild(this),
        (this.arrowleft = null),
        (this.arrowright = null),
        (this.coinlist = null),
        (this.coinlistAC = null);
    }),
    (e.lastscrollh = 0),
    e
  );
})(eui.Component);
__reflect(DZCoinsBar.prototype, "DZCoinsBar", [
  "eui.UIComponent",
  "egret.DisplayObject",
]);
var DZJingMiPai = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.cardorder = -1),
      (e.allborders = []),
      (e.ARROW = 0),
      (e.dropShadow = ShareUtils.dropShadow({
        quality: 2,
        distance: 4,
        blurX: 15,
        blurY: 15,
        inner: !0,
      })),
      (e.dropShadow2 = ShareUtils.dropShadow({
        quality: 2,
        distance: 0,
        blurX: 10,
        blurY: 10,
        inner: !1,
        strength: 0.8,
      })),
      (e.issimplecardstyle = !1),
      (e._ismipai = !1),
      (e._ismipaiplaying = !1),
      (e.isdragstarted = !1),
      (e.delaysendnetactID = -1),
      (e.delaysendacttime = 50),
      (e.cardpoint = ""),
      (e.cardcolor = 0),
      e
    );
  }
  return (
    __extends(e, t),
    Object.defineProperty(e.prototype, "isPlayerOrBankerCard", {
      get: function () {
        return -1 != [0, 2, 4].indexOf(this.cardorder);
      },
      enumerable: !0,
      configurable: !0,
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this),
        (this.shape = new egret.Shape()),
        (this.shapeshou = new egret.Shape()),
        (this.shape_0 = new egret.Shape()),
        this.addChild(this.shape_0),
        this.mouseC.addChild(this.shape),
        this.mouseC.addChild(this.shapeshou),
        (this.DUI.mask = this.shape),
        (this.DUI_0.mask = this.shape_0),
        (this.shouzhigroup.mask = this.shapeshou),
        (this.mouseC.touchEnabled = this.mouseC.touchChildren = !1),
        (this.mouseC.touchThrough = !0),
        (this.shouzhigroup.touchThrough = !0),
        this.allborders.push(
          this.borderLT,
          this.borderT,
          this.borderRT,
          this.borderL,
          this.borderR,
          this.borderLB,
          this.borderB,
          this.borderRB,
        ),
        this.allborders.forEach(function (t, e, i) {
          (t.alpha = 0), (t.touchChildren = t.touchEnabled = !1);
        }),
        this.addEventListener(
          egret.TouchEvent.TOUCH_BEGIN,
          this.ontouchbegin,
          this,
        ),
        this.addEventListener(
          egret.TouchEvent.TOUCH_MOVE,
          this.ontouchmove,
          this,
        ),
        this.ontouchend(),
        this.setcard(this.cardpoint, this.cardcolor, this.cardorder),
        (this.ismipai = this._ismipai),
        (this.ismipaiplaying = this._ismipaiplaying);
    }),
    Object.defineProperty(e.prototype, "isMainUserMiThisCard", {
      get: function () {
        if (!DataManager.curTableState) return !1;
        var t = DataManager.curTableState,
          e = t.seatno,
          i = !1;
        return (
          (i = this.isPlayerOrBankerCard ? e == t.mi_player : e == t.mi_banker),
          (i =
            i &&
            DataManager.curTableState.enterType !=
              DataManager.ENTER_TABLE_TYPE_SIDE)
        );
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(e.prototype, "ismipai", {
      get: function () {
        return this._ismipai;
      },
      set: function (t) {
        (this._ismipai = t),
          this.card && (this.card.visible = !t),
          this.DUI && (this.DUI.visible = t),
          this.DUI_0 && (this.DUI_0.visible = t),
          this.shouzhigroup && (this.shouzhigroup.visible = t),
          this.ontouchend();
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(e.prototype, "ismipaiplaying", {
      get: function () {
        return this._ismipaiplaying;
      },
      set: function (t) {
        this._ismipaiplaying = t;
      },
      enumerable: !0,
      configurable: !0,
    }),
    (e.prototype.ontouchbegin = function (t) {
      if (this.ismipaiplaying) {
        ShareUtils.game_stage.addEventListener(
          egret.TouchEvent.TOUCH_MOVE,
          this.ontouchmove,
          this,
        ),
          ShareUtils.game_stage.addEventListener(
            egret.TouchEvent.TOUCH_END,
            this.ontouchend,
            this,
          );
        for (var e in this.allborders) {
          var i = this.allborders[e];
          if (i.hitTestPoint(t.stageX, t.stageY)) {
            (this.ARROW = parseInt(i.name.replace(/.*(\d)/, "$1"))),
              (this.isdragstarted = !0),
              this.checkstartdrag(t);
            break;
          }
        }
      }
    }),
    (e.prototype.ontouchend = function (t) {
      void 0 === t && (t = null),
        ShareUtils.game_stage.removeEventListener(
          egret.TouchEvent.TOUCH_MOVE,
          this.ontouchmove,
          this,
        ),
        ShareUtils.game_stage.removeEventListener(
          egret.TouchEvent.TOUCH_END,
          this.ontouchend,
          this,
        ),
        t ? this.checkstartdrag(t) : this.miCardAction(0, 0, e.UP),
        (this.ARROW = 0),
        (this.isdragstarted = !1);
    }),
    (e.prototype.ontouchmove = function (t) {
      this.checkstartdrag(t);
    }),
    (e.prototype.checkstartdrag = function (t) {
      var i = this;
      if (t && t.type == egret.TouchEvent.TOUCH_MOVE && t.currentTarget == this)
        return void (
          this.isdragstarted ||
          this.dispatchEvent(
            new egret.TouchEvent(
              egret.TouchEvent.TOUCH_BEGIN,
              !1,
              !1,
              t.stageX,
              t.stageY,
              t.touchPointID,
            ),
          )
        );
      var a = this.ARROW;
      if (a > 0) {
        var n = this.globalToLocal(t.stageX, t.stageY),
          s = this.width / 4,
          r = this.height / 4,
          o = 0 - s,
          h = 0 - r,
          l = this.width + s,
          g = this.height + r;
        a == e.LEFT_UP && ((o = 0.1), (h = 0.1)),
          a == e.RIGHT_UP && ((h = 0.1), (l = this.width - 0.1)),
          a == e.LEFT_DOWN && ((o = 0.1), (g = this.height - 0.1)),
          a == e.RIGHT_DOWN &&
            ((l = this.width - 0.1), (g = this.height - 0.1));
        var u = Math.max(o, Math.min(n.x, l)),
          c = Math.max(h, Math.min(n.y, g));
        a == e.LEFT_UP
          ? (u >= l || c >= g) &&
            ((a = e.OPEN_CARD_VALUE),
            this.ontouchend(),
            (this.DUI_0.source = this.DUI.source))
          : a == e.RIGHT_UP
            ? (o >= u || c >= g) &&
              ((a = e.OPEN_CARD_VALUE),
              this.ontouchend(),
              (this.DUI_0.source = this.DUI.source))
            : a == e.LEFT_DOWN
              ? (u >= l || h >= c) &&
                ((a = e.OPEN_CARD_VALUE),
                this.ontouchend(),
                (this.DUI_0.source = this.DUI.source))
              : a == e.RIGHT_DOWN
                ? (o >= u || h >= c) &&
                  ((a = e.OPEN_CARD_VALUE),
                  this.ontouchend(),
                  (this.DUI_0.source = this.DUI.source))
                : a == e.UP
                  ? c >= g &&
                    ((a = e.OPEN_CARD_VALUE),
                    this.ontouchend(),
                    (this.DUI_0.source = this.DUI.source))
                  : a == e.DOWN
                    ? h >= c &&
                      ((a = e.OPEN_CARD_VALUE),
                      this.ontouchend(),
                      (this.DUI_0.source = this.DUI.source))
                    : a == e.LEFT
                      ? u >= l &&
                        ((a = e.OPEN_CARD_VALUE),
                        this.ontouchend(),
                        (this.DUI_0.source = this.DUI.source))
                      : a == e.RIGHT &&
                        o >= u &&
                        ((a = e.OPEN_CARD_VALUE),
                        this.ontouchend(),
                        (this.DUI_0.source = this.DUI.source)),
          t.type == egret.TouchEvent.TOUCH_END &&
            a != e.OPEN_CARD_VALUE &&
            ((a = e.UP),
            (u = 0),
            (c = 0),
            (this.ismipaiplaying = this._ismipaiplaying)),
          this.miCardAction(u, c, a);
        var d = u / this.width,
          p = c / this.height,
          _ = o / this.width,
          b = h / this.height,
          m = l / this.width,
          T = g / this.height;
        _ > d && (d = _),
          (d = Math.max(_, Math.min(p, m))),
          (p = Math.max(b, Math.min(p, T))),
          (d = parseFloat(d.toFixed(3))),
          (p = parseFloat(p.toFixed(3))),
          null != this.onmipaiact &&
            (clearTimeout(this.delaysendnetactID),
            (this.delaysendnetactID = setTimeout(function () {
              i.onmipaiact(i.cardorder, d, p, a);
            }, this.delaysendacttime)));
      }
    }),
    (e.prototype.resettoorigin = function (t) {
      t &&
        ((t.anchorOffsetX = 0),
        (t.anchorOffsetY = 0),
        (t.rotation = 0),
        (t.scaleX = 1),
        (t.scaleY = 1),
        (t.x = 0),
        (t.y = 0),
        (t.width = this.width),
        (t.height = this.height));
    }),
    (e.prototype.setanchoroffset = function (t) {
      t &&
        ((t.anchorOffsetX = this.width / 2),
        (t.anchorOffsetY = this.height / 2));
    }),
    (e.prototype.miCardActionNet = function (t, i, a) {
      var n = t * this.width,
        s = i * this.height;
      (a == e.STOP_CARD_VALUE ||
        a == e.ROTATE_CARD_VALUE_H ||
        a == e.ROTATE_CARD_VALUE_V) &&
        ((n = 0), (s = 0), (a = e.UP)),
        this.miCardAction(n, s, a);
    }),
    (e.prototype.resetUIs = function () {
      this.resettoorigin(this.DUI),
        this.resettoorigin(this.DUI_0),
        this.resettoorigin(this.shape),
        this.resettoorigin(this.shapeshou),
        this.resettoorigin(this.shape_0),
        this.resettoorigin(this.mouseC),
        this.resettoorigin(this.shouzhigroup),
        this.setanchoroffset(this.DUI);
      var t = (0.5 / 131) * this.width,
        e = (0.5 / 158) * this.height,
        i = Math.max(0.001, Math.min(t, e));
      this.shouLT &&
        ((this.shouLT.x = 0),
        (this.shouLT.y = 0),
        (this.shouLT.scaleX = i),
        (this.shouLT.scaleY = i)),
        this.shouRB &&
          ((this.shouRB.x = this.width),
          (this.shouRB.y = this.height),
          (this.shouRB.scaleX = i),
          (this.shouRB.scaleY = i));
    }),
    (e.prototype.miCardAction = function (t, i, a) {
      this.resetUIs();
      var n = 0,
        s = 0;
      if (a % 2 == 0) {
        switch ((this.changeArrow(), a)) {
          case e.LEFT:
            this.dropShadow.angle = 0;
            break;
          case e.UP:
            this.dropShadow.angle = 90;
            break;
          case e.RIGHT:
            this.dropShadow.angle = 180;
            break;
          case e.DOWN:
            this.dropShadow.angle = 270;
        }
        (this.ARROW = a), this.onMove(t, i);
      } else {
        switch (a) {
          case e.LEFT_UP:
            this.leftUp(), (this.dropShadow.angle = 45);
            break;
          case e.RIGHT_UP:
            this.rightUp(), (this.dropShadow.angle = 135);
            break;
          case e.LEFT_DOWN:
            this.leftDown(), (this.dropShadow.angle = 315);
            break;
          case e.RIGHT_DOWN:
            this.rightDown(), (this.dropShadow.angle = 225);
        }
        switch (a) {
          case e.LEFT_UP:
            (n = t), (s = i);
            break;
          case e.RIGHT_UP:
            (n = this.width - t), (s = i);
            break;
          case e.LEFT_DOWN:
            (n = t), (s = this.height - i);
            break;
          case e.RIGHT_DOWN:
            (n = this.width - t), (s = this.height - i);
        }
        (this.mouseC.x = t),
          (this.mouseC.y = i),
          (this.ARROW = a),
          this.onMoveCorner(n, s);
      }
      this.shouzhigroup &&
        ((this.shouzhigroup.x = this.DUI.x - this.width / 2),
        (this.shouzhigroup.y = this.DUI.y - this.height / 2));
    }),
    (e.prototype.leftUp = function () {
      this.shape_0 &&
        ((this.shape_0.scaleX = 1),
        (this.shape_0.x = 0),
        (this.shape_0.scaleY = 1),
        (this.shape_0.y = 0),
        (this.DUI.x = 0.5 * -this.width),
        (this.DUI.y = 0.5 * this.height),
        (this.shape.scaleX = -1),
        (this.shapeshou.scaleX = -1));
    }),
    (e.prototype.rightUp = function () {
      this.shape_0 &&
        ((this.shape_0.scaleX = -1),
        (this.shape_0.x = this.width),
        (this.shape_0.scaleY = 1),
        (this.shape_0.y = 0),
        (this.DUI.x = 0.5 * this.width),
        (this.DUI.y = 0.5 * this.height),
        (this.shape.scaleX = 1),
        (this.shapeshou.scaleX = 1));
    }),
    (e.prototype.leftDown = function () {
      this.shape_0 &&
        ((this.shape_0.scaleX = 1),
        (this.shape_0.x = 0),
        (this.shape_0.scaleY = -1),
        (this.shape_0.y = this.height),
        (this.DUI.x = 0.5 * this.width),
        (this.DUI.y = 0.5 * this.height),
        (this.shape.scaleX = 1),
        (this.shapeshou.scaleX = 1));
    }),
    (e.prototype.rightDown = function () {
      this.shape_0 &&
        ((this.shape_0.scaleX = -1),
        (this.shape_0.x = this.width),
        (this.shape_0.scaleY = -1),
        (this.shape_0.y = this.height),
        (this.DUI.x = 0.5 * -this.width),
        (this.DUI.y = 0.5 * this.height),
        (this.shape.scaleX = -1),
        (this.shapeshou.scaleX = -1));
    }),
    (e.prototype.changeArrow = function () {
      this.shape_0 &&
        ((this.shape_0.scaleX = 1),
        (this.shape_0.scaleY = 1),
        (this.shape_0.x = 0),
        (this.shape_0.y = 0),
        (this.DUI.x = 0.5 * this.width),
        (this.DUI.y = 0.5 * this.height),
        (this.shape.scaleX = 1),
        (this.shapeshou.scaleX = 1),
        (this.mouseC.rotation = 0),
        (this.mouseC.x = 0),
        (this.mouseC.y = 0));
    }),
    (e.prototype.onMove = function (t, e) {
      this.shape_0 &&
        (this.shape_0.graphics.clear(),
        this.shape_0.graphics.beginFill(16777215, 1),
        this.shape.graphics.clear(),
        this.shapeshou.graphics.clear(),
        this.shape.graphics.beginFill(16777215, 1),
        this.shapeshou.graphics.beginFill(16777215, 1),
        this.mouseCArrow(t, e),
        this.shape_0.graphics.endFill(),
        this.shape.graphics.endFill(),
        this.shapeshou.graphics.endFill());
    }),
    (e.prototype.onMoveCorner = function (t, e) {
      var i = new egret.Point(0.5 * t, 0.5 * e),
        a = Math.atan2(i.y, i.x),
        n = Math.sin(a),
        s = i.y / n,
        r = Math.cos(a),
        o = s / r,
        h = Math.asin(s / o),
        l = Math.tan(h) * o,
        g = (180 * a) / Math.PI;
      (g = 2 * g),
        (g = Math.max(0, Math.min(g, 180))),
        this.mouseCAngle(g),
        this.shape_0.graphics.clear(),
        this.shape_0.graphics.beginFill(16711680, 1),
        this.shape_0.graphics.moveTo(o, 0),
        this.shape_0.graphics.lineTo(0, l),
        this.shape_0.graphics.lineTo(0, this.height),
        this.shape_0.graphics.lineTo(this.width, this.height),
        this.shape_0.graphics.lineTo(this.width, 0),
        this.shape_0.graphics.lineTo(o, 0),
        this.shape_0.graphics.endFill(),
        this.shape.graphics.clear(),
        this.shapeshou.graphics.clear(),
        this.shape.graphics.beginFill(255, 1),
        this.shapeshou.graphics.beginFill(255, 1),
        this.shape.graphics.moveTo(0, 0),
        this.shapeshou.graphics.moveTo(0, 0),
        this.shape.graphics.lineTo(o, 0),
        this.shapeshou.graphics.lineTo(o, 0),
        this.shape.graphics.lineTo(0, l),
        this.shapeshou.graphics.lineTo(0, l),
        this.shape.graphics.lineTo(0, 0),
        this.shapeshou.graphics.lineTo(0, 0),
        this.shape.graphics.endFill(),
        this.shapeshou.graphics.endFill();
    }),
    (e.prototype.mouseCAngle = function (t) {
      switch (this.ARROW) {
        case e.LEFT_UP:
          (t = t), (this.DUI.rotation = 0);
          break;
        case e.RIGHT_UP:
          (t = -t), (this.DUI.rotation = 0);
          break;
        case e.LEFT_DOWN:
          (t = 180 - t), (this.DUI.rotation = 180);
          break;
        case e.RIGHT_DOWN:
          (t = 180 + t), (this.DUI.rotation = 180);
      }
      this.mouseC.rotation = t;
    }),
    (e.prototype.mouseCArrow = function (t, i) {
      switch (this.ARROW) {
        case e.LEFT:
          this.shape_0.graphics.drawRect(0.5 * t, 0, this.width, this.height),
            this.shape.graphics.drawRect(
              this.width - 0.5 * t,
              0,
              this.width,
              this.height,
            ),
            this.shapeshou.graphics.drawRect(
              this.width - 0.5 * t,
              0,
              this.width,
              this.height,
            ),
            (this.mouseC.x = t - this.width),
            (this.DUI.rotation = 0);
          break;
        case e.RIGHT:
          this.shape_0.graphics.drawRect(
            0,
            0,
            t + 0.5 * (this.width - t),
            this.height,
          ),
            this.shape.graphics.drawRect(
              0,
              0,
              0.5 * (this.width - t),
              this.height,
            ),
            this.shapeshou.graphics.drawRect(
              0,
              0,
              0.5 * (this.width - t),
              this.height,
            ),
            (this.mouseC.x = t),
            (this.DUI.rotation = 0),
            (this.shouzhigroup.x = this.DUI.x);
          break;
        case e.UP:
          this.shape_0.graphics.drawRect(0, 0.5 * i, this.width, this.height),
            this.shape.graphics.drawRect(
              0,
              this.height - 0.5 * i,
              this.width,
              this.height,
            ),
            this.shapeshou.graphics.drawRect(
              0,
              this.height - 0.5 * i,
              this.width,
              this.height,
            ),
            (this.mouseC.y = i - this.height),
            (this.DUI.rotation = 180);
          break;
        case e.DOWN:
          this.shape_0.graphics.drawRect(
            0,
            0,
            this.width,
            i + 0.5 * (this.height - i),
          ),
            this.shape.graphics.drawRect(
              0,
              0,
              this.width,
              0.5 * (this.height - i),
            ),
            this.shapeshou.graphics.drawRect(
              0,
              0,
              this.width,
              0.5 * (this.height - i),
            ),
            (this.mouseC.y = i),
            (this.DUI.rotation = 180);
      }
    }),
    (e.prototype.setcard = function (t, e, i) {
      if (
        ((this.cardpoint = t),
        (this.cardcolor = e),
        (this.cardorder = i),
        this.DUI_0 &&
          (this.DUI_0.source = this.issimplecardstyle
            ? "card_redback_png"
            : "DUICard_0_0_1_png"),
        t && t.length > 0)
      ) {
        var a = "DUICard_" + e + "_" + t + "_png";
        this.issimplecardstyle && (a = "card_" + t + "-" + e + "_png"),
          this.card && (this.card.source = a),
          this.DUI && (this.DUI.source = a);
      } else this.clearcard();
    }),
    (e.prototype.clearcard = function () {
      this.ontouchend(),
        this.card && (this.card.source = ""),
        this.DUI && (this.DUI.source = "");
    }),
    (e.prototype.dispose = function () {
      (this.onmipaiact = null),
        this.removeEventListener(
          egret.TouchEvent.TOUCH_MOVE,
          this.ontouchmove,
          this,
        ),
        this.removeEventListener(
          egret.TouchEvent.TOUCH_BEGIN,
          this.ontouchbegin,
          this,
        ),
        ShareUtils.game_stage.removeEventListener(
          egret.TouchEvent.TOUCH_MOVE,
          this.ontouchmove,
          this,
        ),
        ShareUtils.game_stage.removeEventListener(
          egret.TouchEvent.TOUCH_END,
          this.ontouchend,
          this,
        );
    }),
    (e.LEFT_UP = 1),
    (e.UP = 2),
    (e.RIGHT_UP = 3),
    (e.RIGHT = 4),
    (e.RIGHT_DOWN = 5),
    (e.DOWN = 6),
    (e.LEFT_DOWN = 7),
    (e.LEFT = 8),
    (e.OPEN_CARD_RATE = 0),
    (e.OPEN_CARD_VALUE = -1),
    (e.STOP_CARD_VALUE = -2),
    (e.ROTATE_CARD_VALUE_H = -3),
    (e.ROTATE_CARD_VALUE_V = -4),
    e
  );
})(eui.Component);
__reflect(DZJingMiPai.prototype, "DZJingMiPai", [
  "eui.UIComponent",
  "egret.DisplayObject",
]);
var DZTimeCountBar = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.lobbyid = 0),
      (e.isfirstresize = !0),
      (e.lastselecteditem = null),
      (e.left = 0),
      (e.right = 0),
      (e.bottom = 96),
      e.addEventListener(egret.Event.ADDED_TO_STAGE, e.onadded, e),
      e.addEventListener(egret.Event.RESIZE, e.onresize, e),
      e
    );
  }
  return (
    __extends(e, t),
    Object.defineProperty(e, "inst", {
      get: function () {
        return (this._inst = this._inst || new e()), this._inst;
      },
      enumerable: !0,
      configurable: !0,
    }),
    (e.prototype.partAdded = function (e, i) {
      t.prototype.partAdded.call(this, e, i);
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this);
    }),
    (e.prototype.onresize = function () {
      this.isfirstresize
        ? ((this.isfirstresize = !1),
          ShareUtils.callLater(500, this.onnextframeupdatesize, this))
        : this.addEventListener(
            egret.Event.ENTER_FRAME,
            this.onnextframeupdatesize,
            this,
          );
    }),
    (e.prototype.onnextframeupdatesize = function () {
      this.removeEventListener(
        egret.Event.ENTER_FRAME,
        this.onnextframeupdatesize,
        this,
      ),
        ShareUtils.scrollHIfNotVisible(
          this.list,
          this.list.selectedIndex,
          this.tables.length,
          126,
          e.lastscrollh,
        );
    }),
    (e.prototype.onadded = function () {
      (this.list.dataProvider = this.tables),
        (this.list.selectedItem = DataManager.curTableState),
        this.list.validateNow(),
        (this.lastselecteditem = this.list.selectedItem),
        this.list.addEventListener(
          eui.ItemTapEvent.ITEM_TAP,
          this.onselect,
          this,
        ),
        this.onnextframeupdatesize(),
        this.onresize();
    }),
    (e.prototype.onselect = function (t) {
      var e = this.list.selectedItem;
      if (e != this.lastselecteditem) {
        if (!e || !e.tableInfo)
          return (
            Alert.tip(LangUtils.LANG_MAP.LOADING_HISTORY_ERROR),
            void (this.list.selectedItem = this.lastselecteditem)
          );
        if ("RP" == e.tableInfo.tablestate)
          return (
            Alert.tip(LangUtils.LANG_MAP.Maintaining_Table_Card),
            void (this.list.selectedItem = this.lastselecteditem)
          );
        (this.lastselecteditem = this.list.selectedItem),
          DataManager.curTableState &&
            DataManager.curTableState.hasBet &&
            Alert.tip(LangUtils.LANG_MAP.OP_TIP_1),
          MessageHandler.chooseTable(e.tableid, e.tableInfo.gameType);
      }
    }),
    (e.prototype.show = function (t, e) {
      (this.lobbyid = e),
        (this.tables = new eui.ArrayCollection(
          DataManager.getTableStatesByLobbyID_ignoreGameStype(
            this.lobbyid,
            DataManager.GAMESTYLE_mi,
          ),
        )),
        t.addChild(this);
    }),
    (e.prototype.hide = function () {
      this.list && (e.lastscrollh = this.list.scrollH),
        (this.lastselecteditem = null),
        this.tables && this.tables.removeAll(),
        this.parent && this.parent.removeChild(this);
    }),
    (e.prototype.dispose = function () {
      this.hide(), (this.list = null), this.removeChildren(), (e._inst = null);
    }),
    (e.lastscrollh = 0),
    e
  );
})(eui.Component);
__reflect(DZTimeCountBar.prototype, "DZTimeCountBar", [
  "eui.UIComponent",
  "egret.DisplayObject",
]);
var DZTimeCountBarItem = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (e.touchChildren = !1), e;
  }
  return (
    __extends(e, t),
    (e.prototype.partAdded = function (e, i) {
      t.prototype.partAdded.call(this, e, i);
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this);
    }),
    Object.defineProperty(e.prototype, "selected", {
      set: function (t) {
        egret.superSetter(e, this, "selected", t),
          (this.bg.visible = t),
          (this.bg2.visible = !t),
          (this.txtName.textColor = t
            ? DataManager.WHITE_COLOR
            : DataManager.DARKWHITE_COLOR),
          (this.txtTitle.textColor = t
            ? DataManager.WHITE_COLOR
            : DataManager.DARKWHITE_COLOR),
          (this.mcCount.textwhitecolor = t
            ? DataManager.WHITE_COLOR
            : DataManager.DARKWHITE_COLOR);
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(e.prototype, "tableState", {
      get: function () {
        return this.data;
      },
      enumerable: !0,
      configurable: !0,
    }),
    (e.prototype.dataChanged = function () {
      t.prototype.dataChanged.call(this),
        this.tableState
          ? (this.addEventListener(
              egret.Event.REMOVED_FROM_STAGE,
              this.onremoved,
              this,
            ),
            EnterFrameRunner.getInstance().addEventListener(
              TimerGameEvent.TICK,
              this.onTickChange,
              this,
            ),
            LangUtils.addEventListener(this.changeLang, this),
            this.changeLang())
          : this.remove();
    }),
    (e.prototype.changeLang = function (t) {
      if ((void 0 === t && (t = null), this.tableState)) {
        var e = DataManager.getLobbyTableData(this.tableState.tableid);
        e &&
          ((this.txtName.text = LangUtils.LANG_MAP[e.gameType]),
          (this.txtTitle.text = e.tableSeqInt));
      }
    }),
    (e.prototype.onTickChange = function (t) {
      if (
        (void 0 === t && (t = null), this.parent && this.stage && this.mcCount)
      ) {
        var e = 0,
          i = 0,
          a = 0,
          n = this.tableState;
        n.tableInfo
          ? ((i = n.tableInfo.shoeSeq), (a = n.tableInfo.gameSeq))
          : n.betStart && ((i = n.betStart.shoeSeq), (a = n.betStart.gameSeq)),
          (e = DataManager.getCountMaxTime(i, a) / 1e3),
          this.mcCount.tick(e, this.tableState.betzfbTime);
      }
    }),
    (e.prototype.onremoved = function () {
      this.remove();
    }),
    (e.prototype.remove = function () {
      (this.selected = !1),
        LangUtils.removeEventListener(this.changeLang, this),
        this.removeEventListener(
          egret.Event.REMOVED_FROM_STAGE,
          this.onremoved,
          this,
        ),
        EnterFrameRunner.getInstance().removeEventListener(
          TimerGameEvent.TICK,
          this.onTickChange,
          this,
        );
    }),
    e
  );
})(eui.ItemRenderer);
__reflect(DZTimeCountBarItem.prototype, "DZTimeCountBarItem");
var DaShangPanel = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (e.percentWidth = 100), (e.percentHeight = 100), e;
  }
  return (
    __extends(e, t),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this),
        ButtonAction.addtap(this.btnfasong, this.onclickfasong, this),
        this.iconlist.addEventListener(
          egret.Event.CHANGE,
          this.onselecticon,
          this,
        ),
        LangUtils.addEventListener(this.onlang, this),
        this.onlang();
    }),
    (e.prototype.onlang = function () {
      (this.btnfasong.label = LangUtils.get("CHAT_SEND_STRING")),
        (this.onlytxt.text = LangUtils.get("PlayGiveBottomTip")),
        this.refreshlist();
    }),
    (e.prototype.refreshlist = function () {
      var t = this.iconlist.dataProvider,
        e = MultiCurrencyManager.coinsArray.slice(1, t.length + 1);
      if (t) {
        for (
          var i = void 0, a = DataManager.sumAmount, n = 0;
          n < t.length;
          n++
        )
          (i = t.getItemAt(n)),
            (i.name = LangUtils.get(i.langkey)),
            (i.price = e[n]),
            (i.disabled = i.price > 0.1 * a);
        t.refresh();
      }
    }),
    (e.prototype.onselecticon = function () {
      var t = this,
        e = this.iconlist.selectedItem;
      e
        ? e.disabled
          ? ((this.btnfasong.touchEnabled = !1),
            ShareUtils.callLater(
              50,
              function () {
                t.iconlist.selectedItem = null;
              },
              this,
            ))
          : (this.btnfasong.touchEnabled = !0)
        : (this.btnfasong.touchEnabled = !1);
    }),
    (e.prototype.onclickfasong = function () {
      var t = this.iconlist.selectedItem;
      if (t) {
        var e = parseFloat(t.price);
        if (e > 0) {
          var i = DataManager.curTableState;
          MessageHandler.userGive(
            i.tableInfo.emcee,
            DataManager.GAME_TYPE_BACCARAT,
            i.tableInfo.shoeSeq,
            i.tableInfo.gameSeq,
            e,
          ),
            this.hide();
        }
      }
    }),
    (e.prototype.show = function (e) {
      t.prototype.show.call(this, e),
        (this.iconlist.selectedIndex = -1),
        (this.btnfasong.touchEnabled = !1);
    }),
    (e.prototype.dispose = function () {
      LangUtils.removeEventListener(this.onlang, this),
        ButtonAction.removetap(this.btnfasong, this.onclickfasong, this),
        (this.btnfasong = null),
        (this.iconlist.dataProvider = null),
        (this.iconlist = null),
        t.prototype.dispose.call(this);
    }),
    e
  );
})(dzxx.DZAutoHidePanel);
__reflect(DaShangPanel.prototype, "DaShangPanel");
var DateUI = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.oDate = new Date()), (e.skinName = "resource/skins/DateUISkin.exml"), e
    );
  }
  return (
    __extends(e, t),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this),
        (this.oDate = new Date()),
        (this.year = this.oDate.getFullYear()),
        (this.month = this.oDate.getMonth() + 1),
        (this.nowday = new Date().getDate()),
        (this.nowyear = new Date().getFullYear()),
        (this.nowmonth = new Date().getMonth() + 1),
        (this.twoWeekDate = new Date(new Date().getTime() - 12096e5)),
        (this.Nowadays = new Date(this.twoWeekDate.getTime() + 1296e6)),
        this.showDate(this.year, this.month, this.nowday),
        this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
    }),
    (e.prototype.onClick = function (t) {
      switch (t.target) {
        case this.nextMPic:
          "1" == this.nextM.name && (this.year += 1),
            this.showDate(this.year, Number(this.nextM.name), this.day);
          break;
        case this.prevMPic:
          "12" == this.prevM.name && (this.year -= 1),
            this.showDate(this.year, Number(this.prevM.name), this.day);
          break;
        case this.nextM:
          "1" == this.nextM.name && (this.year += 1),
            this.showDate(this.year, Number(this.nextM.name), this.day);
          break;
        case this.prevM:
          "12" == this.prevM.name && (this.year -= 1),
            this.showDate(this.year, Number(this.prevM.name), this.day);
          break;
        case this.bg:
          this.visible = !1;
          break;
        default:
          var e = t.target;
          if (null == e || void 0 == e || Number(e.name) <= 0) return;
          var i = new Date();
          i.setFullYear(this.year),
            i.setMonth(this.month - 1),
            i.setDate(Number(e.name)),
            "end" == this.selectTime
              ? i.setHours(23, 59, 59, 0)
              : i.setHours(0, 0, 0, 0),
            this.dispatchEventWith("SELECT_DATE", !1, {
              date: i,
              time: this.selectTime,
            }),
            (this.visible = !1);
      }
    }),
    (e.prototype.onGetDate = function (t, e) {
      var i = window.innerWidth,
        a = window.innerHeight,
        n = Math.min(i / 750),
        s = Math.min(a / 1334),
        r = Math.max(n, s),
        o = Math.max(r, 1.2);
      (this.mainGroup.scaleX = this.mainGroup.scaleY = o),
        (this.visible = !0),
        (this.selectTime = e),
        (this.nowday = t.getDate()),
        (this.nowmonth = t.getMonth() + 1),
        (this.nowyear = t.getFullYear()),
        this.showDate(this.nowyear, this.nowmonth, this.nowday);
    }),
    (e.prototype.showDate = function (t, e, i) {
      if (!(void 0 == t || void 0 == e || 0 >= t || 0 >= e)) {
        this.removGroup(), (this.year = t), (this.month = e), (this.day = i);
        var a = e - 1,
          n = e + 1;
        1 == e ? (a = 12) : 12 == e && (n = 1),
          (this.oTitle.text =
            t +
            LangUtils.LANG_MAP.dzg_main_35 +
            "   " +
            e +
            LangUtils.LANG_MAP.dzg_main_36 +
            "   "),
          (this.prevM.text = a + LangUtils.LANG_MAP.dzg_main_37),
          (this.prevM.name = a + ""),
          (this.nextM.text = n + LangUtils.LANG_MAP.dzg_main_37),
          (this.nextM.name = n + "");
        var s = 0;
        (s =
          1 == e || 3 == e || 5 == e || 7 == e || 8 == e || 10 == e || 12 == e
            ? 31
            : 4 == e || 6 == e || 9 == e || 11 == e
              ? 30
              : 2 == e && this.isLeapYear(t)
                ? 29
                : 28),
          this.oDate.setFullYear(t),
          this.oDate.setMonth(e - 1),
          this.oDate.setDate(1);
        for (var r = this.oDate.getDay(), o = 0; r > o; o++) {
          var h = new eui.Group();
          (h.width = 50), (h.height = 30), this.group0.addChild(h);
        }
        var l = new Date();
        l.setMonth(e - 1), l.setFullYear(t);
        for (var o = 0; s > o; o++) {
          var g = new eui.Group();
          (g.width = 50), (g.height = 30);
          var u = new eui.Label();
          (u.fontFamily = "Microsoft YaHei"),
            (u.size = 24),
            (u.width = 50),
            (u.text = o + 1 + ""),
            (u.textAlign = egret.HorizontalAlign.CENTER),
            (u.name = o + 1 + ""),
            g.addChild(u),
            this["group" + Math.floor(r / 7)].addChild(g),
            l.setDate(o + 1),
            t == this.nowyear &&
              e == this.nowmonth &&
              o == this.nowday - 1 &&
              ((u.background = !0), (u.backgroundColor = 14423100)),
            r++;
        }
      }
    }),
    (e.prototype.isLeapYear = function (t) {
      return t % 100 == 0 && t % 400 == 0
        ? !0
        : t % 100 != 0 && t % 4 == 0
          ? !0
          : !1;
    }),
    (e.prototype.removGroup = function () {
      for (var t = 0; 6 > t; t++)
        for (; this["group" + t].numChildren > 0; ) {
          var e = this["group" + t].removeChildAt(0);
          e = null;
        }
    }),
    (e.prototype.onClosed = function () {
      for (
        this.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onClick,
          this,
        ),
          this.removGroup();
        this.numChildren > 0;

      ) {
        var t = this.removeChildAt(0);
        t = null;
      }
    }),
    e
  );
})(eui.Component);
__reflect(DateUI.prototype, "DateUI");
var DzGameItem = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (e.skinName = "resource/skins/DzGameItem.exml"), e;
  }
  return (
    __extends(e, t),
    (e.prototype.partAdded = function (e, i) {
      t.prototype.partAdded.call(this, e, i);
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this);
    }),
    (e.prototype.dataChanged = function () {
      this.data &&
        ((this.item_bg.source = "game_type_" + this.data.game_type + "_png"),
        (this.game_name.text = "")),
        this.selected;
    }),
    (e.prototype.selectTab = function (t) {
      this.data &&
        (this.data.tableid == t
          ? (this.item_bg.source = "lh_tab_2_png")
          : (this.item_bg.source = "lh_tab_1_png"));
    }),
    e
  );
})(eui.ItemRenderer);
__reflect(DzGameItem.prototype, "DzGameItem");
var GameLHView = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.routeChangeType = 0),
      (e.bet_allWidthHeight_hash = {}),
      (e.betChildDict = {}),
      (e.cardSize = 1.6),
      (e.coinSize = 1.5),
      (e._playerPoint = 0),
      (e._bankerPoint = 0),
      (e.tableid = 0),
      (e.is_wenlu = !1),
      (e.updateSoundTimeID = 0),
      (e.updateSoundTimeID2 = 0),
      (e.updateSoundTimeID3 = 0),
      (e.bo_player = !1),
      (e.bo_banker = !1),
      (e.isMI_same_time = !1),
      (e.is_create = !1),
      (e.cur_gameSeq = -1),
      (e.save_time_deal = 0),
      (e.top = 0),
      (e.bottom = 0),
      (e.left = 0),
      (e.right = 0),
      e
    );
  }
  return (
    __extends(e, t),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this),
        (this.is_create = !0),
        this.init(),
        1 == window.lhmulti
          ? ((this.gComNo.visible = !1), (this.gComNo2.visible = !0))
          : ((this.gComNo2.visible = !1), (this.gComNo.visible = !0)),
        this.gComNo.visible && this.gComNo.initUI(),
        this.gComNo2.visible && this.gComNo2.initUI();
    }),
    (e.prototype.init = function () {
      if (this.is_create) {
        (this.skinName = "resource/skins/GameLHView.exml"),
          (this.tableid = DataManager.curTable.tableid),
          (this.card_back_rect.visible = !1),
          this.btnbackgroup.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onBack,
            this,
          ),
          this.btnmenugroup.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onMenu,
            this,
          ),
          (this.btnSelectTable.visible = !1),
          this.tsVideo.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onVideo,
            this,
          ),
          this.btnLimit_fb.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onShowLimit,
            this,
          ),
          this.btnAskB.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onAskBRoute,
            this,
          ),
          this.btnAskP.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onAskPRoute,
            this,
          ),
          this.roteChangeBtn.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.roteChangeFun,
            this,
          ),
          ButtonAction.addtap(this.btntongji, this.ontongji, this),
          this.routegroup.addEventListener(
            egret.Event.RESIZE,
            this.onRouteGroupResize,
            this,
          ),
          this.video_zoom.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onVideoZoom,
            this,
          ),
          (this.routeChangeType = 0),
          (GameUtils.routeSize = 40),
          (GameUtils.scaleRoute =
            this.card_back_rect.height / (6 * GameUtils.routeSize)),
          (this.route = GameRoute.getIns()),
          (this.route.cur_type = 0),
          this.initRoteChange(),
          this.routegroup.addChildAt(this.route, 0),
          SelectTable.getIns().show(
            DataManager.GAME_TYPE_DRAGONTIGER,
            this.topGroup,
          ),
          (this.pointList = new Array()),
          (this.seatDealList = new Array()),
          (this.timer = new egret.Timer(500, 6)),
          this.timer.addEventListener(
            egret.TimerEvent.TIMER,
            this.timerSeatDeal,
            this,
          ),
          this.setNOCOMEnable(!1),
          (this.lblMoney.text = ShareUtils.toMoney2_oo(DataManager.sumAmount)),
          this.showIsNOCOM(),
          this.uodataTabInfo(),
          this.initInfo(),
          EventManager.getIns().addEventListener(
            DataChangeEvent.BET_START,
            this.betStart,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.BET_RESULT,
            this.betResult,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.SEAT_DEAL,
            this.seatDeal,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.BET_RESPONSE,
            this.betResponse,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.BET_AMOUNT,
            this.betAmount,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.TABLE_INFO,
            this.tableInfo,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.SEAT_BETTING,
            this.seatBetting,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.RESET,
            this.clearData,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.User_INFO,
            this.onMoneyChange,
            this,
          ),
          this.langChange(),
          (this.tsVideo.selected = DataManager.autoShowVideo),
          this.showHideVideo();
        var t = [];
        (this.bet_allWidthHeight_hash = {}),
          1 == window.lhmulti
            ? ((t = this.gComNo2.getbetList()),
              (this.bet_allWidthHeight_hash =
                this.gComNo2.getbet_allWidthHeight_hash()),
              (this.betChildDict = this.gComNo2.getbetChildDict()))
            : ((t = this.gComNo.getbetList()),
              (this.bet_allWidthHeight_hash =
                this.gComNo.getbet_allWidthHeight_hash()),
              (this.betChildDict = this.gComNo.getbetChildDict())),
          (this.gameBetAction = new GameBetAction(
            this,
            t,
            DataManager.curTableState,
            !0,
            this.bet_allWidthHeight_hash,
          )),
          this.onRouteGroupResize();
        var e = DataManager.getLobbyTableData(
          DataManager.curTableState.tableid,
        );
        e &&
          (e.tableLobbyid == DataManager.LOBBY_ID_FLAGSHIP
            ? ((this.greenBGret.source = "blus_hxbg_203_png"),
              (this.greenBGret.scale9Grid = new egret.Rectangle(
                27,
                95,
                691,
                305,
              )))
            : e.tableLobbyid == DataManager.LOBBY_ID_VIP
              ? ((this.greenBGret.source = "blus_hxbg_202_png"),
                (this.greenBGret.scale9Grid = new egret.Rectangle(
                  27,
                  95,
                  691,
                  305,
                )))
              : e.tableLobbyid == DataManager.LOBBY_ID_GUOJI
                ? ((this.greenBGret.source = "blus_hxbg_201_png"),
                  (this.greenBGret.scale9Grid = new egret.Rectangle(
                    27,
                    95,
                    691,
                    305,
                  )))
                : ((this.greenBGret.source = "blus_hxbg_201_png"),
                  (this.greenBGret.scale9Grid = new egret.Rectangle(
                    27,
                    95,
                    691,
                    305,
                  ))),
          this.isTableName("WM1")
            ? ((this.greenBGret.source = "blus_hxbg_301_png"),
              (this.greenBGret.scale9Grid = new egret.Rectangle(
                27,
                95,
                691,
                305,
              )))
            : this.isTableName("WM31")
              ? ((this.greenBGret.source = "blus_hxbg_303_png"),
                (this.greenBGret.scale9Grid = new egret.Rectangle(
                  27,
                  95,
                  691,
                  305,
                )))
              : this.isTableName("WM3") &&
                ((this.greenBGret.source = "913861_hxbg_000_png"),
                (this.greenBGret.scale9Grid = new egret.Rectangle(
                  27,
                  95,
                  691,
                  305,
                ))),
          this.isTableName("WM3")
            ? (this.tableBg.source = "913861_bg_png")
            : this.isTableName("WM1")
              ? (this.tableBg.source = "301_bg_png")
              : this.isTableName("WM31")
                ? (this.tableBg.source = "303_bg_png")
                : (this.tableBg.source = "green_bg_png")),
          (this.isLDRoom() ||
            DataManager.cur_lobby_id == DataManager.LOBBY_ID_EUROPE) &&
            ((this.totalbetgroup.right = 0 / 0),
            (this.totalbetgroup.left = 0),
            (this.timergroup.top = 150),
            (this.timergroup.scaleX = 0.8),
            (this.timergroup.scaleY = 0.8));
      }
    }),
    (e.prototype.isLDRoom = function () {
      var t = /^(LD|DT)/,
        e = DataManager.getTableStr1(
          DataManager.curTableState.tableInfo.tableid,
        );
      return t.test(e);
    }),
    (e.prototype.updatebetnumgroups = function () {
      this.gComNo.visible &&
        this.gComNo.updatebetnumgroups(this.betChildDict, this.gameBetAction),
        this.gComNo2.visible &&
          this.gComNo2.updatebetnumgroups(
            this.betChildDict,
            this.gameBetAction,
          );
    }),
    (e.prototype.getCardChildByName = function (t) {
      return "BANKER" == t
        ? this.cardresultbgBANKER
        : "PLAYER" == t
          ? this.cardresultbgPLAYER
          : null;
    }),
    (e.prototype.getBetChildByName = function (t) {
      return this.betChildDict[t];
    }),
    (e.prototype.isTableName = function (t) {
      var e = DataManager.getTableStr1(
        DataManager.curTableState.tableInfo.tableid,
      );
      return e === t;
    }),
    (e.prototype.onRouteGroupResize = function (t) {
      void 0 === t && (t = null),
        this.route && ((GameUtils.routeSize = 40), this.route.update()),
        this.change_size(this.contentGroup, this.viewGroup);
    }),
    (e.prototype.onVideo = function (t) {
      this.showHideVideo(t);
    }),
    (e.prototype.showHideVideo = function (t) {
      void 0 === t && (t = null),
        this.tsVideo.selected
          ? (DZTimeCountBar.inst.hide(), dzxx.LiveVideo.playvideo())
          : (dzxx.LiveVideo.stopvideo(),
            DZTimeCountBar.inst.show(
              this.videogroup,
              DataManager.getLobbyTableData(this.tableid).lobbyid,
            ));
    }),
    (e.prototype.onMoneyChange = function (t) {
      (this.lblMoney.text = ShareUtils.toMoney2_oo(DataManager.sumAmount)),
        this.gameBetAction.checkBtnRepeat();
    }),
    (e.prototype.langChange = function () {
      (this.lblLimit.text =
        LangUtils.LANG_MAP.INFO_LIMIT +
        ":" +
        GameUtils.getNumberFormat(DataManager.curTable.minlimit) +
        "-" +
        GameUtils.getNumberFormat(DataManager.curTable.maxlimit)),
        (this.lblTitle.text = DataManager.getTableStr(
          DataManager.curTableState.tableid,
        ));
      DataManager.LANG_TYPE == DataManager.LANG_EN;
      (this.tsVideo.yesLabel = this.tsVideo.noLabel = ""),
        this.tsVideo.updateLabel(),
        (this.btnSelectTable.label = LangUtils.LANG_MAP.GAME_SELECT_TABLE),
        (this.lblResultP.text = LangUtils.LANG_MAP.M_TIGER),
        (this.lblResultB.text = LangUtils.LANG_MAP.M_DRAGON),
        (this.lblRoute_B.text = LangUtils.LANG_MAP.M_DRAGON),
        (this.lblRoute_P.text = LangUtils.LANG_MAP.M_TIGER),
        (this.lblRoute_T.text = LangUtils.LANG_MAP.M_TILE),
        (this.lblRoute_A.text = LangUtils.LANG_MAP.TOTAL),
        DataManager.curTableState && (this.is_wenlu || this.routeBTip()),
        (this.labeltotalbet.text = LangUtils.get("dzg_game_bjl_5")),
        (this.btntongji.label = LangUtils.get("btn_tongjilabel")),
        (this.tongjititletxt.text = LangUtils.get("StatisticsView_TITLE")),
        (this.langLab0.text = LangUtils.LANG_MAP.dzg_main_10001 + ":"),
        (this.langLab2.text = LangUtils.LANG_MAP.dzg_game_longhu_6),
        (this.langLab3.text = LangUtils.LANG_MAP.dzg_game_longhu_8),
        (this.langLab4.text = LangUtils.LANG_MAP.dzg_game_longhu_7),
        (this.langLab5.text = LangUtils.LANG_MAP.dzg_main_10002 + ":"),
        (this.dzg_bjl_lab_10.text = LangUtils.LANG_MAP.dzg_game_longhu_9),
        (this.dzg_bjl_lab_11.text = LangUtils.LANG_MAP.dzg_game_longhu_10),
        (this.btnRepet.radio_pic_up.source =
          "hxbg_37_" + DataManager.LANG_TYPE + "_png"),
        (this.btnRepet.radio_pic_down.source =
          "hxbg_37_" + DataManager.LANG_TYPE + "_png"),
        (this.btnRepet.radio_pic_disabled.source =
          "hxbg_42_" + DataManager.LANG_TYPE + "_png"),
        (this.btnSure.radio_pic_up.source =
          "hxbg_36_" + DataManager.LANG_TYPE + "_png"),
        (this.btnSure.radio_pic_down.source =
          "hxbg_36_" + DataManager.LANG_TYPE + "_png"),
        (this.btnSure.radio_pic_disabled.source =
          "hxbg_41_" + DataManager.LANG_TYPE + "_png"),
        (this.btnCancel.radio_pic_up.source =
          "hxbg_35_" + DataManager.LANG_TYPE + "_png"),
        (this.btnCancel.radio_pic_down.source =
          "hxbg_35_" + DataManager.LANG_TYPE + "_png"),
        (this.btnCancel.radio_pic_disabled.source =
          "hxbg_40_" + DataManager.LANG_TYPE + "_png"),
        (this.dzg_bjl_lab_2.text = LangUtils.LANG_MAP.dzg_main_50),
        (this.dzg_bjl_lab_3.text = LangUtils.LANG_MAP.dzg_main_51);
      var t = DataManager.curTableState.tableInfo;
      DataManager.getGameNameWithGameStyle(
        DataManager.curTableState.tableInfo.gameType,
        DataManager.curTableState.tableInfo.gamestyle,
      ) + DataManager.getTableStr1(DataManager.curTableState.tableInfo.tableid);
      (this.lblJuNum.text =
        t.shoeSeq.toString() +
        "/" +
        DataManager.curTableState.tableInfo.gameSeq.toString()),
        (this.limitLable.text = LangUtils.LANG_MAP.INFO_LIMIT),
        DataManager.LANG_TYPE == DataManager.LANG_EN
          ? ((this.langLab0.size = 20),
            (this.labeltotalbet.size = 20),
            (this.dzg_bjl_lab_2.size = 20),
            (this.dzg_bjl_lab_3.size = 20),
            (this.lblMoney.size = 24),
            (this.txttotalbet.size = 24),
            (this.lblJuNum.size = 24),
            (this.lblJuNum3.size = 24))
          : DataManager.LANG_TYPE == DataManager.LANG_KN
            ? ((this.langLab0.size = 16),
              (this.labeltotalbet.size = 14),
              (this.dzg_bjl_lab_2.size = 18),
              (this.dzg_bjl_lab_3.size = 18),
              (this.lblMoney.size = 24),
              (this.txttotalbet.size = 24),
              (this.lblJuNum.size = 24),
              (this.lblJuNum3.size = 24))
            : DataManager.LANG_TYPE == DataManager.LANG_VL
              ? ((this.langLab0.size = 16),
                (this.labeltotalbet.size = 14),
                (this.dzg_bjl_lab_2.size = 18),
                (this.dzg_bjl_lab_3.size = 18),
                (this.lblMoney.size = 24),
                (this.txttotalbet.size = 24),
                (this.lblJuNum.size = 24),
                (this.lblJuNum3.size = 24),
                (this.limitLable.size = 16))
              : DataManager.LANG_TYPE == DataManager.LANG_HN ||
                  DataManager.LANG_TYPE == DataManager.LANG_JPN ||
                  DataManager.LANG_TYPE == DataManager.LANG_KR
                ? ((this.langLab0.size = 16),
                  (this.labeltotalbet.size = 14),
                  (this.dzg_bjl_lab_2.size = 18),
                  (this.dzg_bjl_lab_3.size = 18),
                  (this.lblMoney.size = 24),
                  (this.txttotalbet.size = 24),
                  (this.lblJuNum.size = 24),
                  (this.lblJuNum3.size = 24))
                : ((this.langLab0.size = 24),
                  (this.labeltotalbet.size = 24),
                  (this.dzg_bjl_lab_2.size = 24),
                  (this.dzg_bjl_lab_3.size = 24),
                  (this.lblMoney.size = 24),
                  (this.txttotalbet.size = 24),
                  (this.lblJuNum.size = 24),
                  (this.lblJuNum3.size = 24));
    }),
    (e.prototype.routeBTip = function () {
      var t = this;
      (this.is_wenlu = !0),
        setTimeout(function () {
          t &&
            t.route &&
            ((GameUtils.routeSize = 40),
            t.route.parseDatum(
              DataManager.curTableState.tableInfo.history,
              !1,
              !0,
              !1,
            ),
            t.showRouteBTip(),
            t.showRoutePTip(),
            t.route.parseDatum(
              DataManager.curTableState.tableInfo.history,
              !1,
              !0,
              !1,
            ));
        }, 1e3);
    }),
    (e.prototype.selectTable = function (t) {}),
    (e.prototype.openDeal = function (t) {
      var e = parseInt(t.point);
      (this.pointList[t.order] = e),
        (this.playerPoint = 0),
        (this.bankerPoint = 0);
      for (var i = 0; i < this.pointList.length; i++)
        i % 2 == 0
          ? (this.playerPoint += this.pointList[i] || 0)
          : (this.bankerPoint += this.pointList[i] || 0);
      var a = this["card_" + t.order];
      if (a) {
        a.removeChildren();
        var n = GameUtils.createBitmapFromSheet(
          "card_" + t.point + "-" + t.color + "_png",
          "card_json",
        );
        n && ((n.width = a.width), (n.height = a.height), a.addChild(n));
      }
    }),
    Object.defineProperty(e.prototype, "bankerPoint", {
      get: function () {
        return this._bankerPoint;
      },
      set: function (t) {
        (this._bankerPoint = t || 0),
          (this.labelBankerPoint.text = this._bankerPoint + "");
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(e.prototype, "playerPoint", {
      get: function () {
        return this._playerPoint;
      },
      set: function (t) {
        (this._playerPoint = t || 0),
          (this.labelPlayerPoint.text = this._playerPoint + "");
      },
      enumerable: !0,
      configurable: !0,
    }),
    (e.prototype.clearCard = function () {
      for (var t, e = 0; 2 > e; e++)
        (t = this["card_" + e]), t.removeChildren();
      (this.pointList.length = 0),
        (this.seatDealList.length = 0),
        (this.bo_player = !1),
        (this.bo_banker = !1),
        (this.isMI_same_time = !1),
        clearTimeout(this.updateSoundTimeID),
        clearTimeout(this.updateSoundTimeID2),
        clearTimeout(this.updateSoundTimeID3);
    }),
    (e.prototype.setNOCOMbuttonState = function () {
      var t,
        e = 0,
        i = this.gameBetAction.state == GameBetAction.STATE_ACCEPT_BET;
      if (this.gameBetAction.curList) {
        if (((e = this.gameBetAction.curList.BANKER), e > 0))
          return void this.setNOCOMEnable(!1);
        if (((e = this.gameBetAction.curList.SS), e > 0))
          return void this.setNOCOMEnable(!1);
      }
      if ((t = this.gameBetAction.joinResponseList)) {
        if (((e = t.BANKER), e > 0)) return void this.setNOCOMEnable(!1);
        if (((e = t.SS), e > 0)) return void this.setNOCOMEnable(!1);
      }
      this.setNOCOMEnable(i && !DataManager.hasTableStates_B_S());
    }),
    (e.prototype.setNOCOMEnable = function (t) {}),
    (e.prototype.onServarnt = function (t) {
      (DataManager.isNOCOM = DataManager.isNOCOM ? !1 : !0), this.showIsNOCOM();
    }),
    (e.prototype.showIsNOCOM = function () {}),
    (e.prototype.onBack = function () {
      var t = DataManager.getLobbyTableData(this.tableid).lobbyid;
      (DataManager.curTableState = null),
        (DataManager.curTable = null),
        (ShareUtils.main.gameView = null),
        this.dispose(),
        ChooseTableView.inst.show(t);
    }),
    (e.prototype.onMenu = function () {
      MenuView.getIns().showhide();
    }),
    (e.prototype.betStart = function (t) {
      var e = t.data[0];
      if (e.tableid == DataManager.curTable.tableid)
        if (0 == e.bettype) {
          if (this.cur_gameSeq == e.gameSeq) return;
          (this.cur_gameSeq = e.gameSeq),
            this.gameBetAction.betStart(e),
            (this.card_back_rect.visible = !1),
            this.setNOCOMbuttonState(),
            this.clearCard(),
            e.countdown > 500 &&
              (this.setResultTip(16243228, "BET_START"),
              dzxx.SoundManager.inst.playBetting(
                dzxx.SoundManager.bettingStart,
              ));
        } else 3 == e.bettype && this.gameBetAction.betStart(e);
    }),
    (e.prototype.betAmount = function (t) {
      var e = t.data;
      this.tableid == e && this.uodataTabInfo(!0);
    }),
    (e.prototype.betAmountConfig = function () {}),
    (e.prototype.initInfo = function (t) {
      void 0 === t && (t = null);
      var e = DataManager.curTableState.tableInfo.history3[0] || 0,
        i = DataManager.curTableState.tableInfo.history3[1] || 0,
        a = DataManager.curTableState.tableInfo.history3[2] || 0;
      "S" == t && (a = i = e = 0),
        (this.lblRouteB.text = e + ""),
        (this.lblRouteP.text = i + ""),
        (this.lblRouteT.text = a + ""),
        (this.lblRouteAll.text = e + i + a + "");
      var n = e + i + a;
      n > 0 ? Math.floor((e / n) * 100) : 0,
        n > 0 ? Math.floor((i / n) * 100) : 0;
      (this.lblRouteB_line.width = 120 * (0 == n ? 0 : e / n)),
        (this.lblRouteP_line.width = 120 * (0 == n ? 0 : i / n)),
        (this.lblRouteT_line.width = 120 * (0 == n ? 0 : a / n));
      var s = DataManager.curTableState.tableInfo;
      DataManager.getGameNameWithGameStyle(
        DataManager.curTableState.tableInfo.gameType,
        DataManager.curTableState.tableInfo.gamestyle,
      ) + DataManager.getTableStr1(DataManager.curTableState.tableInfo.tableid);
      (this.lblJuNum.text =
        s.shoeSeq.toString() +
        "/" +
        DataManager.curTableState.tableInfo.gameSeq.toString()),
        "" == s.tableSeq || void 0 == s.tableSeq || null == s.tableSeq
          ? (this.lblJuNum3.text = "--")
          : (this.lblJuNum3.text =
              DataManager.curTableState.tableInfo.tableSeq.toString());
    }),
    (e.prototype.tableInfo = function (t) {
      if (
        t.data.tableid == DataManager.curTable.tableid &&
        ((GameUtils.routeSize = 40),
        this.showRouteBTip(),
        this.showRoutePTip(),
        this.route.parseDatum(
          DataManager.curTableState.tableInfo.history,
          !0,
          !0,
          !1,
        ),
        this.gameBetAction.tableInfo(DataManager.curTableState.tableInfo),
        this.initInfo(DataManager.curTableState.tableInfo.tablestate),
        "S" == DataManager.curTableState.tableInfo.tablestate &&
          ((this.card_back_rect.visible = !1),
          this.setNOCOMbuttonState(),
          this.clearCard()),
        "RP" == DataManager.curTableState.tableInfo.tablestate)
      ) {
        var e = new ErrorMessage(-132);
        DataManager.errorMessage(e);
      }
    }),
    (e.prototype.uodataTabInfo = function (t) {
      if ((void 0 === t && (t = !0), DataManager.curTableState)) {
        var e = new RegExp(",", "g"),
          i = void 0,
          a = void 0,
          n = void 0,
          s = DataManager.curTableState.tablePool,
          r = String(s.BANKER).split("/");
        (this.tongjibankertxt.text = r[0] + "/" + r[1]),
          (i = Number(r[0].replace(e, "")));
        var o = String(s.PLAYER).split("/");
        (this.tongjiplayertxt.text = o[0] + "/" + o[1]),
          (a = Number(o[0].replace(e, "")));
        var h = String(s.TILE).split("/");
        (this.tongjitietxt.text = h[0] + "/" + h[1]),
          (n = Number(h[0].replace(e, "")));
        var l = i + a + n,
          g = 160 * (0 == l ? 0 : i / l),
          u = 160 * (0 == l ? 0 : a / l),
          c = 160 * (0 == l ? 0 : n / l);
        (this.preBet_B.visible = 0 == g ? !1 : !0),
          (this.preBet_P.visible = 0 == u ? !1 : !0),
          (this.preBet_T.visible = 0 == c ? !1 : !0),
          egret.Tween.get(this.preBet_B)
            .to(
              {
                width: g,
              },
              300,
            )
            .call(function () {}, this),
          egret.Tween.get(this.preBet_P)
            .to(
              {
                width: u,
              },
              300,
            )
            .call(function () {}, this),
          egret.Tween.get(this.preBet_T)
            .to(
              {
                width: c,
              },
              300,
            )
            .call(function () {}, this);
      } else
        (this.tongjibankertxt.text = ""),
          (this.tongjiplayertxt.text = ""),
          (this.tongjitietxt.text = "");
    }),
    (e.prototype.betResponse = function (t) {
      this.gameBetAction.betResponse(t.data),
        1 == t.data.result
          ? this.setResultTip(16243228, "BET_SUCCESS")
          : 2 == t.data.result
            ? this.setResultTip(16243228, "BET_UNDER_MUCH")
            : -112 == t.data.result
              ? (this.setResultTip(16243228, "BET_UNDER_MUCH"),
                this.gameBetAction.checkBtnSure(),
                this.setNOCOMbuttonState())
              : -113 == t.data.result
                ? this.setResultTip(16243228, "BET_UNDER_MUCH")
                : -95 == t.data.result
                  ? Alert.tipGame("dzg_game_bjl_30", 16243228)
                  : -96 == t.data.result
                    ? Alert.tipGame("dzg_game_bjl_31", 16243228)
                    : -122 == t.data.result
                      ? this.setResultTip(16243228, "BET_TOO_MUCH")
                      : -123 == t.data.result
                        ? this.setResultTip(
                            16243228,
                            "BET_TOO_MUCH_OF_ALL_TABLE",
                          )
                        : -140 == t.data.result
                          ? Alert.showCaptcha()
                          : (this.setResultTip(16243228, "BET_FAILE"),
                            this.gameBetAction.checkBtnSure(),
                            this.setNOCOMbuttonState());
    }),
    (e.prototype.setResultTip = function (t, e) {
      return Alert.tipGame(LangUtils.LANG_MAP[e] || e, t);
    }),
    (e.prototype.betResult = function (t) {
      if (
        t.data.winOptions &&
        0 != t.data.winOptions.length &&
        !(t.data.winOptions.indexOf("NULL") >= 0) &&
        this.gameBetAction.state != GameBetAction.STATE_RESULT &&
        this.gameBetAction.state != GameBetAction.STATE_ACCEPT_BET
      ) {
        if (
          (this.playPointSound(),
          this.gameBetAction.betResult(t.data),
          t.data.winOptions && t.data.winOptions.length > 0)
        ) {
          var e = t.data;
          e.winOptions.indexOf("BANKER") > -1 &&
            ((this.lblWin.source = "hxbg_47_" + DataManager.LANG_TYPE + "_png"),
            (this.updateSoundTimeID2 = setTimeout(function () {
              dzxx.SoundManager.inst.playDragonTigerWin(
                dzxx.SoundManager.Dragon_win,
              );
            }, 4e3))),
            e.winOptions.indexOf("PLAYER") > -1 &&
              ((this.lblWin.source =
                "hxbg_48_" + DataManager.LANG_TYPE + "_png"),
              (this.updateSoundTimeID2 = setTimeout(function () {
                dzxx.SoundManager.inst.playDragonTigerWin(
                  dzxx.SoundManager.Tiger_win,
                );
              }, 4e3))),
            e.winOptions.indexOf("TILE") > -1 &&
              ((this.lblWin.source =
                "hxbg_9_" + DataManager.LANG_TYPE + "_png"),
              (this.updateSoundTimeID2 = setTimeout(function () {
                dzxx.SoundManager.inst.playDragonTigerWin(
                  dzxx.SoundManager.Tile_win,
                );
              }, 4e3)));
        }
        this.lblWin.visible = !0;
      }
    }),
    (e.prototype.seatBetting = function (t) {
      var e = t.data;
      DataManager.curTable.tableid == e.tableid &&
        DataManager.userid == e.userid &&
        ShareUtils.callLater(
          200,
          function () {
            this.gameBetAction && this.gameBetAction.seatBetting(t.data);
          },
          this,
        );
    }),
    (e.prototype.seatDeal = function (t) {
      var e = t.data;
      DataManager.curTableState.tableid == e.tableid &&
        (this.gameBetAction.seatDeal(),
        (this.card_back_rect.visible = !0),
        (this.lblWin.visible = !1),
        this.showCard(e),
        this.checkCards(e, this.seatDealList, this.showCard, this));
    }),
    (e.prototype.showCard = function (t) {
      (t.order < this.seatDealList.length &&
        this.seatDealList[t.order] &&
        ShareUtils.timeByMessageID(t.messageID) <
          ShareUtils.timeByMessageID(this.seatDealList[t.order].messageID)) ||
        ((this.seatDealList[t.order] = t),
        0 == this.timer.currentCount && this.timer.start(),
        t.order < this.timer.currentCount
          ? (this.openDeal(t),
            this.timer.currentCount < this.timer.repeatCount &&
              t.order == this.timer.currentCount - 1 &&
              this.timer.start())
          : this.timer.currentCount > 4 && this.openDeal(t));
    }),
    (e.prototype.timerSeatDeal = function (t) {
      null != this.seatDealList &&
        (this.seatDealList[this.timer.currentCount - 1]
          ? this.openDeal(this.seatDealList[this.timer.currentCount - 1])
          : 5 == this.timer.currentCount &&
              this.seatDealList[this.timer.currentCount]
            ? (this.openDeal(this.seatDealList[this.timer.currentCount]),
              this.timer.stop())
            : this.timer.stop());
    }),
    (e.prototype.playPointSound = function () {
      var t = this;
      dzxx.SoundManager.inst.playDragonTigerPoint(
        dzxx.SoundManager.Dragon_point,
        this.bankerPoint,
      ),
        clearTimeout(this.updateSoundTimeID),
        (this.updateSoundTimeID = setTimeout(function () {
          dzxx.SoundManager.inst.playDragonTigerPoint(
            dzxx.SoundManager.Tiger_point,
            t.playerPoint,
          );
        }, 2e3));
    }),
    (e.prototype.checkCards = function (t, e, i, a) {
      var n = ShareUtils.timeByMessageID(t.messageID);
      if (!(this.save_time_deal > n)) {
        var s = t.cardresult;
        if (s) {
          var r = s.split(";");
          if (0 != r.length) {
            var o,
              h,
              l,
              g = 0,
              u = 0,
              c = !1;
            n > this.save_time_deal && (this.save_time_deal = n);
            for (var d = 0; d < r.length; d++)
              if (((o = r[d].split("-")), !(o.length < 2))) {
                (h = o[0]),
                  (g = parseInt(o[1])),
                  (u = parseInt(o[2])),
                  (c = !1),
                  (l = null);
                for (var p = 0; p < e.length; p++)
                  (l = e[p]),
                    l &&
                      l.order == u &&
                      ((c = !0),
                      (l.point != h || l.color != g || 1 == l.state) &&
                        ((l.point = h),
                        (l.color = g),
                        (l.messageID = t.messageID),
                        i.call(a, l)));
                0 == c &&
                  parseInt(h) > 0 &&
                  ((l = new SeatDealMessage(t.tableid, 0, g, h, u, -1)),
                  (l.messageID = t.messageID),
                  i.call(a, l));
              }
          }
        }
      }
    }),
    (e.prototype.onAskRoute = function (t) {
      this.route.askWay(t.target == this.btnAskB ? 1 : 2);
    }),
    (e.prototype.onAskBRoute = function (t) {
      this.route.askWay(1);
    }),
    (e.prototype.onAskPRoute = function (t) {
      this.route.askWay(2);
    }),
    (e.prototype.onVideoZoom = function () {
      this.changeZoom(dzxx.LiveVideo.switchZoom());
    }),
    (e.prototype.changeZoom = function (t) {
      t
        ? (this.video_zoom.source = "video_normal_png")
        : (this.video_zoom.source = "video_card_png");
    }),
    (e.prototype.ontongji = function () {}),
    (e.prototype.clearData = function (t) {
      this.clearCard(), this.gameBetAction.pause(), this.setNOCOMEnable(!1);
    }),
    (e.prototype.showRouteBTip = function () {
      this.route.getLongHUWayResult(1),
        this.route.route2.nTmpWinner > 0 &&
          (this.gAckB.getChildAt(0).source =
            "rt2Check_f" + this.route.route2.nTmpWinner + "_png"),
        this.route.route3.nTmpWinner > 0 &&
          (this.gAckB.getChildAt(1).source =
            "rt3Check_f" + this.route.route3.nTmpWinner + "_png"),
        this.route.route4.nTmpWinner > 0 &&
          (this.gAckB.getChildAt(2).source =
            "rt4Check_f" + this.route.route4.nTmpWinner + "_png");
    }),
    (e.prototype.showRoutePTip = function () {
      this.route.getLongHUWayResult(2),
        this.route.route2.nTmpWinner > 0 &&
          (this.gAckP.getChildAt(0).source =
            "rt2Check_f" + this.route.route2.nTmpWinner + "_png"),
        this.route.route3.nTmpWinner > 0 &&
          (this.gAckP.getChildAt(1).source =
            "rt3Check_f" + this.route.route3.nTmpWinner + "_png"),
        this.route.route4.nTmpWinner > 0 &&
          (this.gAckP.getChildAt(2).source =
            "rt4Check_f" + this.route.route4.nTmpWinner + "_png");
    }),
    (e.prototype.roteChangeFun = function () {
      return 0 == this.routeChangeType
        ? ((this.routeChangeType = 1),
          this.updataRoteType(),
          void this.initRoteChange())
        : 1 == this.routeChangeType
          ? ((this.routeChangeType = 0),
            this.updataRoteType(),
            void this.initRoteChange())
          : void 0;
    }),
    (e.prototype.initRoteChange = function () {
      return 0 == this.routeChangeType
        ? ((this.roteChangeImg.visible = !0),
          void (this.roteChangeImgleft.visible = !1))
        : 1 == this.routeChangeType
          ? ((this.roteChangeImg.visible = !1),
            void (this.roteChangeImgleft.visible = !0))
          : void 0;
    }),
    (e.prototype.updataRoteType = function () {
      this.route &&
        ((GameUtils.routeSize = 40),
        this.route.changeRoteType(this.routeChangeType));
    }),
    (e.prototype.onShowLimit = function () {
      null == this.gameLimit && (this.gameLimit = new game.GameLimitUI()),
        this.addChild(this.gameLimit),
        this.gameLimit.showUI(DataManager.curTable.gameType);
    }),
    (e.prototype.dispose = function () {
      MessageHandler.leaveTable(this.tableid),
        (this.cur_gameSeq = -1),
        clearTimeout(this.updateSoundTimeID),
        clearTimeout(this.updateSoundTimeID2),
        clearTimeout(this.updateSoundTimeID3),
        dzxx.SoundManager.inst.stopSoundChanel(),
        LangUtils.removeEventListener(this.langChange, this),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.BET_START,
          this.betStart,
          this,
        ),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.BET_RESULT,
          this.betResult,
          this,
        ),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.SEAT_DEAL,
          this.seatDeal,
          this,
        ),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.BET_RESPONSE,
          this.betResponse,
          this,
        ),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.BET_AMOUNT,
          this.betAmount,
          this,
        ),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.TABLE_INFO,
          this.tableInfo,
          this,
        ),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.SEAT_BETTING,
          this.seatBetting,
          this,
        ),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.RESET,
          this.clearData,
          this,
        ),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.User_INFO,
          this.onMoneyChange,
          this,
        ),
        this.btnbackgroup.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onBack,
          this,
        ),
        this.btnmenugroup.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onMenu,
          this,
        ),
        this.tsVideo.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onVideo,
          this,
        ),
        this.btnAskB.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onAskBRoute,
          this,
        ),
        this.btnAskP.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onAskPRoute,
          this,
        ),
        this.btnLimit_fb.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onShowLimit,
          this,
        ),
        this.video_zoom.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onVideoZoom,
          this,
        ),
        SelectTable.getIns().remove(),
        DZTimeCountBar.inst.hide(),
        this.coinsBar.dispose(),
        this.gameBetAction.dispose(),
        this.timer &&
          (this.timer.reset(),
          this.timer.removeEventListener(
            egret.TimerEvent.TIMER,
            this.timerSeatDeal,
            this,
          )),
        (this.gameBetAction = null),
        (this.coinsBar = null),
        this.route && ((this.routeChangeType = 0), this.updataRoteType()),
        (this.route = null),
        (this.timer = null),
        (this.seatDealList = null),
        (this.pointList = null),
        (this.btnmenugroup = null),
        (this.btnbackgroup = null),
        (this.tongjigroup = null),
        (this.tongjibankertxt = null),
        (this.tongjiplayertxt = null),
        (this.tongjitietxt = null),
        dzxx.LiveVideo.ifStopVideo(),
        this.removeChildren(),
        this.parent && this.parent.removeChild(this);
    }),
    e
  );
})(ViewAbstract);
__reflect(GameLHView.prototype, "GameLHView", [
  "eui.UIComponent",
  "egret.DisplayObject",
]);
var Timer = egret.Timer,
  GameView = (function (t) {
    function e() {
      var e = t.call(this) || this;
      return (
        (e.routeChangeType = 0),
        (e.cardSize = 1.6),
        (e.coinSize = 1.5),
        (e._playerPoint = 0),
        (e._bankerPoint = 0),
        (e.tableid = 0),
        (e.is_wenlu = !1),
        (e.cardselectedmarkoffset = 4),
        (e.allcarduis = []),
        (e.bet_allWidthHeight_hash = {}),
        (e.updateSoundTimeID = 0),
        (e.updateSoundTimeID2 = 0),
        (e.updateSoundTimeID3 = 0),
        (e.bo_player = !1),
        (e.bo_banker = !1),
        (e.isMI_same_time = !1),
        (e.cards_banker = []),
        (e.cards_player = []),
        (e.cards_open = []),
        (e.cards_opened = []),
        (e.state_normal = "normal"),
        (e.state_jingmi = "jingmi"),
        (e.temp_tableSeq = ""),
        (e.currentMiBetType = 0),
        (e.mipaipanelvisibletimeoutid = 0),
        (e.banker_num = 0),
        (e.player_num = 0),
        (e.openSetTimeSetcard = 0),
        (e.cur_gameSeq = -1),
        (e.miSeatDict = {
          banker: -1,
          bankername: "",
          player: -1,
          playername: "",
        }),
        (e.mi_lv = 0),
        (e.save_time_deal = 0),
        e.init(),
        (e.top = 0),
        (e.bottom = 0),
        (e.left = 0),
        (e.right = 0),
        e
      );
    }
    return (
      __extends(e, t),
      (e.prototype.childrenCreated = function () {
        t.prototype.childrenCreated.call(this);
      }),
      (e.prototype.init = function () {
        var t = this;
        (this.skinName = "resource/skins/GameViewUI.exml"),
          (this.tableid = DataManager.curTable.tableid),
          (this.bet_allWidthHeight_hash = {}),
          (this.bet_allWidthHeight_hash.PLAYER = this.btn_xian),
          (this.bet_allWidthHeight_hash.BANKER = this.btn_zhuang),
          (this.bet_allWidthHeight_hash.PP = this.btn_xiandui),
          (this.bet_allWidthHeight_hash.BP = this.btn_zhuangdui),
          (this.bet_allWidthHeight_hash.TILE = this.btn_he),
          (this.bet_allWidthHeight_hash.LS = this.btn_super),
          (this.bet_allWidthHeight_hash.BIG = this.btn_BIG),
          (this.bet_allWidthHeight_hash.SMALL = this.btn_SMALL),
          (this.bet_allWidthHeight_hash.PFP = this.btn_PFP),
          (this.bet_allWidthHeight_hash.PDB = this.btn_PDB),
          (this.bet_allWidthHeight_hash.AP = this.btn_AP),
          (this.bet_allWidthHeight_hash.BDB = this.btn_BDB),
          (this.bet_allWidthHeight_hash.PN = this.btn_PN),
          (this.bet_allWidthHeight_hash.BN = this.btn_BN);
        var e = [
          this.btn_BIG,
          this.btn_SMALL,
          this.btn_PFP,
          this.btn_PDB,
          this.btn_AP,
          this.btn_BDB,
          this.btn_PN,
          this.btn_BN,
          this.btn_xian,
          this.btn_zhuang,
          this.btn_xiandui,
          this.btn_zhuangdui,
          this.btn_he,
          this.btn_super,
        ];
        (this.gameBetAction = new GameBetAction(
          this,
          e,
          DataManager.curTableState,
          !1,
          this.bet_allWidthHeight_hash,
        )),
          (this.card_back_rect.visible = !1),
          (this.tongjigroup.visible = !0),
          this.btnbackgroup.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onBack,
            this,
          ),
          this.btnmenugroup.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onMenu,
            this,
          ),
          (this.btnSelectTable.visible = !1),
          this.tsNoCom.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onServarnt,
            this,
          ),
          this.tsVideo.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onVideo,
            this,
          ),
          this.video_zoom.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onVideoZoom,
            this,
          ),
          this.btnAskB.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onAskBRoute,
            this,
          ),
          this.btnAskP.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onAskPRoute,
            this,
          ),
          this.roteChangeBtn.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.roteChangeFun,
            this,
          ),
          this.btnLimit_fb.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onShowLimit,
            this,
          ),
          this.btnVerify.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onVerify,
            this,
          ),
          this.routegroup.addEventListener(
            egret.Event.RESIZE,
            this.onRouteGroupResize,
            this,
          ),
          this.bpSizeGroup.addEventListener(
            egret.Event.RESIZE,
            this.onppSizeFun,
            this,
          ),
          this.btn_he.addEventListener(
            egret.Event.RESIZE,
            this.ontiebetbtnresize,
            this,
          ),
          this.playercardresultgroup.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.playercardresultClick,
            this,
          ),
          this.bankercardresultgroup.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.bankercardresultClick,
            this,
          ),
          (this.betChildDict = {
            PP: this.btn_xiandui,
            TILE: this.btn_he,
            LS: this.btn_super,
            BP: this.btn_zhuangdui,
            PLAYER: this.btn_xian,
            BANKER: this.btn_zhuang,
            BIG: this.btn_BIG,
            SMALL: this.btn_SMALL,
            BDB: this.btn_BDB,
            PFP: this.btn_PFP,
            PDB: this.btn_PDB,
            AP: this.btn_AP,
            PN: this.btn_PN,
            BN: this.btn_BN,
            PP_bg: this.btn_bg_xiandui,
            TILE_bg: this.btn_bg_he,
            SS_bg: this.btn_bg_super,
            BP_bg: this.btn_bg_zhuangdui,
            PLAYER_bg: this.btn_bg_xian,
            BANKER_bg: this.btn_bg_zhuang,
            BIG_bg: this.btn_bg_BIG,
            SMALL_bg: this.btn_bg_SMALL,
            BDB_bg: this.btn_bg_BDB,
            PFP_bg: this.btn_bg_PFP,
            PDB_bg: this.btn_bg_PDB,
            AP_bg: this.btn_bg_AP,
            PN_bg: this.btn_bg_PN,
            BN_bg: this.btn_bg_BN,
          }),
          (this.routeChangeType = 0),
          (GameUtils.routeSize = 40),
          (GameUtils.scaleRoute =
            this.card_back_rect.height / (6 * GameUtils.routeSize)),
          (this.route = GameRoute.getIns()),
          (this.route.cur_type = 0),
          this.initRoteChange(),
          this.routegroup.addChildAt(this.route, 0),
          SelectTable.getIns().show(
            DataManager.GAME_TYPE_BACCARAT,
            this.topGroup,
          ),
          (this.pointList = new Array()),
          (this.seatDealList = new Array()),
          (this.timer = new egret.Timer(500, 6)),
          this.timer.addEventListener(
            egret.TimerEvent.TIMER,
            this.timerSeatDeal,
            this,
          ),
          this.setNOCOMEnable(!1),
          (this.lblMoney.text = ShareUtils.toMoney2_oo(DataManager.sumAmount)),
          this.uodataTabInfo();
        var i = DataManager.getLobbyTableData(
          DataManager.curTableState.tableid,
        );
        if (
          ((this.temp_tableSeq = DataManager.curTableState.tableInfo.tableSeq),
          i &&
            ((this.lblB.textColor = 16758884),
            (this.lblP.textColor = 16758884),
            (this.lblT.textColor = 16758884),
            (this.lblTS.textColor = 16758884),
            (this.lblBB.textColor = 16758884),
            (this.lblPP.textColor = 16758884),
            i.tableLobbyid == DataManager.LOBBY_ID_FLAGSHIP
              ? (this.greenBGret.source = "blus_hxbg_203_png")
              : i.tableLobbyid == DataManager.LOBBY_ID_VIP
                ? (this.greenBGret.source = "blus_hxbg_202_png")
                : i.tableLobbyid == DataManager.LOBBY_ID_GUOJI
                  ? (this.greenBGret.source = "blus_hxbg_201_png")
                  : (this.greenBGret.source = "blus_hxbg_201_png"),
            this.isAATRoom()
              ? ((this.greenBGret.source = "blus_hxbg_204_png"),
                (this.lblB.textColor = 16777215),
                (this.lblP.textColor = 16777215),
                (this.lblT.textColor = 16777215),
                (this.lblTS.textColor = 16777215),
                (this.lblBB.textColor = 16777215),
                (this.lblPP.textColor = 16777215))
              : this.isSMRoom() &&
                ((this.greenBGret.source = "blus_hxbg_205_png"),
                (this.lblB.textColor = 16777215),
                (this.lblP.textColor = 16777215),
                (this.lblT.textColor = 16777215),
                (this.lblTS.textColor = 16777215),
                (this.lblBB.textColor = 16777215),
                (this.lblPP.textColor = 16777215)),
            this.isTableName("LV01")
              ? (this.greenBGret.source = "456f9f_hxbg_000_png")
              : this.isTableName("LV02")
                ? (this.greenBGret.source = "141a24_hxbg_000_png")
                : this.isTableName("LV03")
                  ? (this.greenBGret.source = "141a24_hxbg_000_png")
                  : this.isTableName("LV04")
                    ? (this.greenBGret.source = "141a24_hxbg_000_png")
                    : this.isTableName("LV05")
                      ? (this.greenBGret.source = "141a24_hxbg_000_png")
                      : this.isTableName("LV06")
                        ? (this.greenBGret.source = "141a24_hxbg_000_png")
                        : this.isTableName("LV07")
                          ? (this.greenBGret.source = "blus_hxbg_lv7_png")
                          : this.isTableName("LV08") &&
                            (this.greenBGret.source = "blus_hxbg_lv8_png"),
            (this.greenBGret.scale9Grid = new egret.Rectangle(
              27,
              95,
              691,
              305,
            ))),
          EventManager.getIns().addEventListener(
            DataChangeEvent.BET_START,
            this.betStart,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.BET_RESULT,
            this.betResult,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.SEAT_DEAL,
            this.seatDeal,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.BET_RESPONSE,
            this.betResponse,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.BET_AMOUNT,
            this.betAmount,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.TABLE_INFO,
            this.tableInfo,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.SEAT_BETTING,
            this.seatBetting,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.RESET,
            this.clearData,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.User_INFO,
            this.onMoneyChange,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.MICARD_ACTION_MESSAGE,
            this.onmiactionnet,
            this,
          ),
          this.langChange(),
          (this.tsVideo.selected = DataManager.autoShowVideo),
          this.showHideVideo(),
          (this.bet_allWidthHeight_hash = {}),
          (this.bet_allWidthHeight_hash.PLAYER = this.btn_xian),
          (this.bet_allWidthHeight_hash.BANKER = this.btn_zhuang),
          (this.bet_allWidthHeight_hash.PP = this.btn_xiandui),
          (this.bet_allWidthHeight_hash.BP = this.btn_zhuangdui),
          (this.bet_allWidthHeight_hash.TILE = this.btn_he),
          (this.bet_allWidthHeight_hash.LS = this.btn_super),
          (this.bet_allWidthHeight_hash.BIG = this.btn_BIG),
          (this.bet_allWidthHeight_hash.SMALL = this.btn_SMALL),
          (this.bet_allWidthHeight_hash.PFP = this.btn_PFP),
          (this.bet_allWidthHeight_hash.PDB = this.btn_PDB),
          (this.bet_allWidthHeight_hash.AP = this.btn_AP),
          (this.bet_allWidthHeight_hash.BDB = this.btn_BDB),
          (this.bet_allWidthHeight_hash.PN = this.btn_PN),
          (this.bet_allWidthHeight_hash.BN = this.btn_BN),
          this.updatebetnumgroups(),
          this.initInfo(),
          (this.mipaipanel.visible = !1),
          (this.mipaipanel.touchEnabled = !1),
          (this.cardselectedmark.visible = !1),
          this.curtableisMi)
        ) {
          (this.currentState = this.state_jingmi),
            (this.bigmicard.issimplecardstyle = !1),
            this.bigmicard.addEventListener(
              egret.TouchEvent.TOUCH_BEGIN,
              this.ontouchbigmicard,
              this,
            ),
            (this.bigmicard.onmipaiact = function (e, i, a, n) {
              t.onmipaiact(e, i, a, n);
            }),
            (this.bigmicard1.issimplecardstyle = !1),
            this.bigmicard1.addEventListener(
              egret.TouchEvent.TOUCH_BEGIN,
              this.ontouchbigmicard,
              this,
            ),
            (this.bigmicard1.onmipaiact = function (e, i, a, n) {
              t.onmipaiact(e, i, a, n);
            });
          DataManager.getchathistorys(this.tableid);
        }
        DataManager.cur_lobby_id == DataManager.LOBBY_ID_EUROPE ||
        this.isLGRoom()
          ? ((this.btnVerify.visible = !0),
            (this.totalbetgroup.right = 0 / 0),
            (this.totalbetgroup.left = 0),
            (this.ncgroup.right = 0 / 0),
            (this.ncgroup.left = 6),
            (this.timergroup.top = 175),
            (this.timergroup.scaleX = 0.8),
            (this.timergroup.scaleY = 0.8))
          : (this.btnVerify.visible = !1),
          this.onRouteGroupResize();
      }),
      Object.defineProperty(e.prototype, "curtableisMi", {
        get: function () {
          return (
            DataManager.curTableState.gameStyle == DataManager.GAMESTYLE_mi
          );
        },
        enumerable: !0,
        configurable: !0,
      }),
      (e.prototype.getBetChildByName = function (t) {
        return this.betChildDict[t];
      }),
      (e.prototype.getCardChildByName = function (t) {
        return "BANKER" == t
          ? this.cardresultbgBANKER
          : "PLAYER" == t
            ? this.cardresultbgPLAYER
            : null;
      }),
      (e.prototype.onppSizeFun = function () {
        this.ontiebetbtnresize();
      }),
      (e.prototype.ontiebetbtnresize = function () {
        this.gameBetAction && this.gameBetAction.fixbetcoinsinbetpointrect();
      }),
      (e.prototype.onVideoZoom = function () {
        this.changeZoom(dzxx.LiveVideo.switchZoom());
      }),
      (e.prototype.changeZoom = function (t) {
        t
          ? (this.video_zoom.source = "video_normal_png")
          : (this.video_zoom.source = "video_card_png");
      }),
      (e.prototype.isLVRoom = function () {
        var t = /^LV/,
          e = DataManager.getTableStr1(
            DataManager.curTableState.tableInfo.tableid,
          );
        return t.test(e);
      }),
      (e.prototype.isAATRoom = function () {
        var t = /^AAT/,
          e = DataManager.getTableStr1(
            DataManager.curTableState.tableInfo.tableid,
          );
        return t.test(e);
      }),
      (e.prototype.isSMRoom = function () {
        var t = /^(SM|WM)/,
          e = DataManager.getTableStr1(
            DataManager.curTableState.tableInfo.tableid,
          );
        return t.test(e);
      }),
      (e.prototype.isLGRoom = function () {
        var t = /^(LG|G01|G02|G03|G04|G05|G06|G07|G08|G09|G10|G11|G12|G13)/,
          e = DataManager.getTableStr1(
            DataManager.curTableState.tableInfo.tableid,
          );
        return t.test(e);
      }),
      (e.prototype.isTableName = function (t) {
        var e = DataManager.getTableStr1(
          DataManager.curTableState.tableInfo.tableid,
        );
        return e === t;
      }),
      (e.prototype.onRouteGroupResize = function (t) {
        void 0 === t && (t = null),
          this.route && ((GameUtils.routeSize = 40), this.route.update()),
          this.isAATRoom()
            ? (this.tableBg.source = "yellow_bg_png")
            : this.isSMRoom()
              ? (this.tableBg.source = "red_bg_png")
              : (this.tableBg.source = "green_bg_png"),
          this.isTableName("LV01")
            ? (this.tableBg.source = "456f9f_bg_png")
            : this.isTableName("LV02")
              ? (this.tableBg.source = "141a24_bg_png")
              : this.isTableName("LV03")
                ? (this.tableBg.source = "141a24_bg_png")
                : this.isTableName("LV04")
                  ? (this.tableBg.source = "141a24_bg_png")
                  : this.isTableName("LV05")
                    ? (this.tableBg.source = "141a24_bg_png")
                    : this.isTableName("LV06")
                      ? (this.tableBg.source = "141a24_bg_png")
                      : this.isTableName("LV07")
                        ? (this.tableBg.source = "lv7_bg_png")
                        : this.isTableName("LV08") &&
                          (this.tableBg.source = "lv8_bg_png"),
          this.change_size(this.contentGroup, this.viewGroup);
      }),
      (e.prototype.onVideo = function (t) {
        this.showHideVideo(t);
      }),
      (e.prototype.showHideVideo = function (t) {
        void 0 === t && (t = null),
          this.tsVideo.selected
            ? (DZTimeCountBar.inst.hide(), dzxx.LiveVideo.playvideo())
            : (dzxx.LiveVideo.stopvideo(),
              this.curtableisMi ||
                DZTimeCountBar.inst.show(
                  this.videogroup,
                  DataManager.getLobbyTableData(this.tableid).lobbyid,
                ));
      }),
      (e.prototype.onMoneyChange = function (t) {
        (this.lblMoney.text = ShareUtils.toMoney2_oo(DataManager.sumAmount)),
          this.gameBetAction.checkBtnRepeat();
      }),
      (e.prototype.setstateto0andopendeal = function (t, e) {
        for (var i in t) {
          var a = t[i];
          if (a && a.order == e) {
            (a.state = 0), this.openDeal(a, !1);
            break;
          }
        }
      }),
      (e.prototype.ontouchbigmicard = function (t) {
        t.type == egret.TouchEvent.TOUCH_BEGIN
          ? this.bigmicard.ismipaiplaying &&
            ShareUtils.game_stage.addEventListener(
              egret.TouchEvent.TOUCH_END,
              this.ontouchbigmicard,
              this,
            )
          : ShareUtils.game_stage.removeEventListener(
              egret.TouchEvent.TOUCH_END,
              this.ontouchbigmicard,
              this,
            );
      }),
      (e.prototype.tap = function (t) {
        t.dispatchEvent(new egret.TouchEvent(egret.TouchEvent.TOUCH_TAP));
      }),
      (e.prototype.onmipaiact = function (t, e, i, a) {
        if (a == DZJingMiPai.OPEN_CARD_VALUE) {
          var n = this.seatDealList[t];
          n && (n.state = 0),
            this.refreshpoints(),
            2 == t || 3 == t
              ? ((this.bigmicard1.ismipai = !1),
                (this.bigmicard1.ismipaiplaying = !1))
              : ((this.bigmicard.ismipai = !1),
                (this.bigmicard.ismipaiplaying = !1)),
            this.showCard(n);
        }
      }),
      (e.prototype.onmiactionnet = function (t) {
        var e = t.data,
          i = e.order,
          a = this.seatDealList[i];
        if (a) {
          var n = this.getcarduibyorder(i),
            s = this.bigmicard.isMainUserMiThisCard;
          s ||
            (((n.isPlayerOrBankerCard &&
              this.selectedmipaibtn == this.kanxianmibtn) ||
              (!n.isPlayerOrBankerCard &&
                this.selectedmipaibtn == this.kanzhuangmibtn)) &&
              ((this.bigmicard.cardorder = i),
              (this.bigmicard.ismipai = !0),
              this.bigmicard.setcard(a.point, a.color, a.order),
              this.bigmicard.miCardActionNet(e.mouseX, e.mouseY, e.ARROW),
              this.selectmicarduibyorder(i))),
            n &&
              this.bigmicard.cardorder != i &&
              n.miCardActionNet(e.mouseX, e.mouseY, e.ARROW),
            e.ARROW == DZJingMiPai.OPEN_CARD_VALUE &&
              (this.setstateto0andopendeal(this.cards_player, i),
              this.setstateto0andopendeal(this.cards_banker, i),
              (this.cards_open[e.order] = 1),
              this.bigmicard.cardorder == i &&
                ((this.bigmicard.ismipai = !1),
                (this.bigmicard.ismipaiplaying = !1),
                (this.fanpaibtn.visible = !1)),
              4 == e.order ||
              5 == e.order ||
              this.cards_banker[2] ||
              this.cards_player[2]
                ? ((!this.bo_banker ||
                    (this.cards_banker[2] && 0 != this.cards_banker[2].state) ||
                    this.isMI_same_time) &&
                    (!this.bo_player ||
                      (this.cards_player[2] &&
                        0 != this.cards_player[2].state) ||
                      this.bo_banker ||
                      this.isMI_same_time) &&
                    (!this.isMI_same_time ||
                      (this.cards_banker[2] &&
                        0 != this.cards_banker[2].state) ||
                      (this.cards_player[2] &&
                        0 != this.cards_player[2].state))) ||
                  this.stopmipaipanelandreturntoseatdeal()
                : 0 == this.cards_player[0].state &&
                  0 == this.cards_player[1].state &&
                  0 == this.cards_banker[0].state &&
                  0 == this.cards_banker[1].state &&
                  this.stopmipaipanelandreturntoseatdeal());
        }
      }),
      (e.prototype.setmipaipanelvisible = function (t) {
        var e = this;
        clearTimeout(this.mipaipanelvisibletimeoutid),
          t
            ? (this.mipaipanel.visible = t)
            : (this.mipaipanelvisibletimeoutid = setTimeout(function () {
                e.mipaipanel && (e.mipaipanel.visible = t),
                  e.bigmicard && e.bigmicard.clearcard(),
                  e.bigmicard1 && e.bigmicard1.clearcard();
              }, 2e3));
      }),
      (e.prototype.stopmipaipanelandreturntoseatdeal = function () {
        this.setmipaipanelvisible(!1),
          (this.tellothesMIwrap.visible = !1),
          (this.cardselectedmark.visible = !1),
          (this.counttipstxt.textColor = DataManager.BANKER_COLOR),
          (this.counttipstxt.text = LangUtils.get("SB2")),
          (this.counttipstxt_bg.width = this.counttipstxt.width + 40),
          this.gameBetAction.timerStop();
      }),
      (e.prototype.onmichange = function () {}),
      (e.prototype.langChange = function () {
        (this.btnRepet.radio_pic_up.source =
          "hxbg_37_" + DataManager.LANG_TYPE + "_png"),
          (this.btnRepet.radio_pic_down.source =
            "hxbg_37_" + DataManager.LANG_TYPE + "_png"),
          (this.btnRepet.radio_pic_disabled.source =
            "hxbg_42_" + DataManager.LANG_TYPE + "_png"),
          (this.btnSure.radio_pic_up.source =
            "hxbg_36_" + DataManager.LANG_TYPE + "_png"),
          (this.btnSure.radio_pic_down.source =
            "hxbg_36_" + DataManager.LANG_TYPE + "_png"),
          (this.btnSure.radio_pic_disabled.source =
            "hxbg_41_" + DataManager.LANG_TYPE + "_png"),
          (this.btnCancel.radio_pic_up.source =
            "hxbg_35_" + DataManager.LANG_TYPE + "_png"),
          (this.btnCancel.radio_pic_down.source =
            "hxbg_35_" + DataManager.LANG_TYPE + "_png"),
          (this.btnCancel.radio_pic_disabled.source =
            "hxbg_40_" + DataManager.LANG_TYPE + "_png"),
          (this.txtVerify.text = LangUtils.LANG_MAP.verify_label_txt),
          (this.langPng15.text = LangUtils.LANG_MAP.M_PP + "1:11"),
          (this.langPng18.text = LangUtils.LANG_MAP.M_BP + "1:11"),
          (this.langPng14.text = LangUtils.LANG_MAP.M_PLAYER + "\n1:1"),
          (this.langPng30.text = LangUtils.LANG_MAP.M_TILE + "\n1:8"),
          (this.langPng29.text =
            LangUtils.LANG_MAP.dzg_bjl_limit_SS + "\n1:12"),
          (this.txt_xiandui.visible = !1),
          (this.txt_zhuangdui.visible = !1),
          (this.langPng30.visible = !1),
          (this.langPng29.visible = !1),
          (this.yong_banker_bg.visible = !1),
          (this.txt_zhuang.visible = !1),
          (this.langPng15.visible = !1),
          (this.langPng18.visible = !1),
          (this.langPng0.visible = !1),
          (this.langPng4.visible = !1),
          (this.langPng1.visible = !1),
          (this.langPng2.visible = !1),
          (this.langPng5.visible = !1),
          (this.langPng6.visible = !1),
          (this.langPng7.visible = !1),
          (this.langPng3.visible = !1),
          (this.langPng14.visible = !1),
          (this.txt_BIG.visible = !1),
          (this.txt_SMALL.visible = !1),
          (this.txt_PFP.visible = !1),
          (this.txt_PDB.visible = !1),
          (this.txt_AP.visible = !1),
          (this.txt_BDB.visible = !1),
          (this.txt_PN.visible = !1),
          (this.txt_BN.visible = !1),
          (this.lblB.visible = !1),
          (this.lblP.visible = !1),
          (this.lblT.visible = !1),
          (this.lblTS.visible = !1),
          (this.lblBB.visible = !1),
          (this.lblPP.visible = !1),
          (this.lblLimit.text =
            LangUtils.LANG_MAP.INFO_LIMIT +
            ":" +
            GameUtils.getNumberFormat(DataManager.curTable.minlimit) +
            "-" +
            GameUtils.getNumberFormat(DataManager.curTable.maxlimit)),
          (this.lblTitle.text = DataManager.getTableStr(
            DataManager.curTableState.tableid,
          ));
        DataManager.LANG_TYPE == DataManager.LANG_EN;
        (this.tsVideo.yesLabel = this.tsVideo.noLabel = ""),
          this.tsVideo.updateLabel(),
          (this.tsNoCom.yesLabel = LangUtils.LANG_MAP.GAME_NOCOM_NO),
          (this.tsNoCom.noLabel = LangUtils.LANG_MAP.BACCARAT_NOCOMM),
          this.tsNoCom.updateLabel(),
          (this.btnSelectTable.label = LangUtils.LANG_MAP.GAME_SELECT_TABLE),
          (this.txt_xiandui.text = LangUtils.LANG_MAP.M_PP),
          (this.txt_zhuangdui.text = LangUtils.LANG_MAP.M_BP),
          (this.txt_super.text = LangUtils.LANG_MAP.M_SS),
          (this.txt_he.text = LangUtils.LANG_MAP.TILE),
          (this.txt_xian.text = LangUtils.LANG_MAP.PLAYER),
          (this.txt_zhuang.text = LangUtils.LANG_MAP.BANKER),
          (this.lblResultP.text = LangUtils.LANG_MAP.M_PLAYER),
          (this.lblResultB.text = LangUtils.LANG_MAP.M_BANKER),
          (this.lblRoute_B.text = LangUtils.LANG_MAP.M_BANKER),
          (this.lblRoute_P.text = LangUtils.LANG_MAP.M_PLAYER),
          (this.lblRoute_T.text = LangUtils.LANG_MAP.M_TILE),
          (this.lblRoute_A.text = LangUtils.LANG_MAP.TOTAL),
          (this.langLab0.text = LangUtils.LANG_MAP.dzg_main_10001 + ":"),
          (this.langLab1.text = LangUtils.LANG_MAP.dzg_main_10002 + ":"),
          (this.langLab2.text = LangUtils.LANG_MAP.M_BANKER + ":"),
          (this.langLab3.text = LangUtils.LANG_MAP.M_TILE + ":"),
          (this.langLab4.text = LangUtils.LANG_MAP.M_PLAYER + ":"),
          (this.langLab5.text = LangUtils.LANG_MAP.dzg_game_bjl_19),
          (this.langLab6.text = LangUtils.LANG_MAP.dzg_game_bjl_20),
          (this.dzg_bjl_lab_10.text = LangUtils.LANG_MAP.dzg_game_bjl_14),
          (this.dzg_bjl_lab_11.text = LangUtils.LANG_MAP.dzg_game_bjl_15),
          (this.labeltotalbet.text = LangUtils.get("dzg_game_bjl_5")),
          (this.limitLable.text = LangUtils.LANG_MAP.INFO_LIMIT),
          (this.tellMiWord.text = LangUtils.LANG_MAP.Tell_Other_Mi),
          DataManager.LANG_TYPE == DataManager.LANG_EN
            ? ((this.langLab0.size = 20),
              (this.labeltotalbet.size = 20),
              (this.dzg_bjl_lab_2.size = 20),
              (this.dzg_bjl_lab_3.size = 20),
              (this.lblMoney.size = 24),
              (this.txttotalbet.size = 24),
              (this.lblJuNum.size = 24),
              (this.lblJuNum3.size = 24),
              (this.lblB.size = 24),
              (this.lblP.size = 24),
              (this.lblT.size = 24),
              (this.lblTS.size = 24),
              (this.lblBB.size = 24),
              (this.lblPP.size = 24))
            : DataManager.LANG_TYPE == DataManager.LANG_KN
              ? ((this.langLab0.size = 16),
                (this.labeltotalbet.size = 14),
                (this.dzg_bjl_lab_2.size = 18),
                (this.dzg_bjl_lab_3.size = 18),
                (this.lblMoney.size = 24),
                (this.txttotalbet.size = 24),
                (this.lblJuNum.size = 24),
                (this.lblJuNum3.size = 24),
                (this.lblB.size = 24),
                (this.lblP.size = 24),
                (this.lblT.size = 24),
                (this.lblTS.size = 24),
                (this.lblBB.size = 24),
                (this.lblPP.size = 24))
              : DataManager.LANG_TYPE == DataManager.LANG_VL
                ? ((this.langLab0.size = 16),
                  (this.labeltotalbet.size = 14),
                  (this.dzg_bjl_lab_2.size = 18),
                  (this.dzg_bjl_lab_3.size = 18),
                  (this.lblMoney.size = 24),
                  (this.txttotalbet.size = 24),
                  (this.lblJuNum.size = 24),
                  (this.lblJuNum3.size = 24),
                  (this.lblB.size = 24),
                  (this.lblP.size = 24),
                  (this.lblT.size = 24),
                  (this.lblTS.size = 24),
                  (this.lblBB.size = 24),
                  (this.lblPP.size = 24),
                  (this.limitLable.size = 16),
                  (this.dzg_bjl_lab_11.size = 22))
                : DataManager.LANG_TYPE == DataManager.LANG_HN ||
                    DataManager.LANG_TYPE == DataManager.LANG_JPN ||
                    DataManager.LANG_TYPE == DataManager.LANG_KR
                  ? ((this.langLab0.size = 16),
                    (this.labeltotalbet.size = 14),
                    (this.dzg_bjl_lab_2.size = 18),
                    (this.dzg_bjl_lab_3.size = 18),
                    (this.lblMoney.size = 24),
                    (this.txttotalbet.size = 24),
                    (this.lblJuNum.size = 24),
                    (this.lblJuNum3.size = 24),
                    (this.lblB.size = 24),
                    (this.lblP.size = 24),
                    (this.lblT.size = 24),
                    (this.lblTS.size = 24),
                    (this.lblBB.size = 24),
                    (this.lblPP.size = 24))
                  : ((this.langLab0.size = 24),
                    (this.labeltotalbet.size = 24),
                    (this.dzg_bjl_lab_2.size = 24),
                    (this.dzg_bjl_lab_3.size = 24),
                    (this.lblMoney.size = 24),
                    (this.txttotalbet.size = 24),
                    (this.lblJuNum.size = 24),
                    (this.lblJuNum3.size = 24),
                    (this.lblB.size = 24),
                    (this.lblP.size = 24),
                    (this.lblT.size = 24),
                    (this.lblTS.size = 24),
                    (this.lblBB.size = 24),
                    (this.lblPP.size = 24)),
          DataManager.curTableState && (this.is_wenlu || this.routeBTip()),
          (this.tongjititletxt.text = LangUtils.get("StatisticsView_TITLE")),
          (this.dzg_bjl_lab_2.text = LangUtils.LANG_MAP.dzg_main_50),
          (this.dzg_bjl_lab_3.text = LangUtils.LANG_MAP.dzg_main_51);
        var t = DataManager.curTableState.tableInfo;
        DataManager.getGameNameWithGameStyle(
          DataManager.curTableState.tableInfo.gameType,
          DataManager.curTableState.tableInfo.gamestyle,
        ) +
          DataManager.getTableStr1(DataManager.curTableState.tableInfo.tableid);
        (this.lblJuNum.text =
          t.shoeSeq.toString() +
          "/" +
          DataManager.curTableState.tableInfo.gameSeq.toString()),
          this.showIsNOCOM(),
          this.curtableisMi && this.updateMiPaiPanelUI();
      }),
      (e.prototype.routeBTip = function () {
        var t = this;
        (this.is_wenlu = !0),
          setTimeout(function () {
            t &&
              t.route &&
              ((GameUtils.routeSize = 40),
              t.route.parseDatum(
                DataManager.curTableState.tableInfo.history,
                !1,
              ),
              t.showRouteBTip(),
              t.showRoutePTip(),
              t.route.parseDatum(
                DataManager.curTableState.tableInfo.history,
                !1,
              ));
          }, 1e3);
      }),
      (e.prototype.updateMiPaiPanelUI = function () {}),
      (e.prototype.updateMiPaiQuanUI = function () {
        var t = DataManager.curTableState;
        if (t.betData) {
          var e =
              t.mi_banker >= 0
                ? t.GetKeyAmount("BANKER", t.mi_banker).amount
                : 0,
            i =
              t.mi_player >= 0
                ? t.GetKeyAmount("PLAYER", t.mi_player).amount
                : 0,
            a = DataManager.userInfoData[t.mi_banker],
            n = DataManager.userInfoData[t.mi_player],
            s = t.seatno,
            r = a ? MultiCurrencyManager.moneyConversion(e, a.currencyid) : 0,
            o = n ? MultiCurrencyManager.moneyConversion(i, n.currencyid) : 0;
          if (s == t.mi_banker) this.banker_num = 0;
          else {
            var h = s == t.mi_player ? t.playerBets : 0;
            this.banker_num = Math.max(h + 1, r + 1) - t.bankerBets;
          }
          if (s == t.mi_player) this.player_num = 0;
          else {
            var l = s == t.mi_banker ? t.bankerBets : 0;
            this.player_num = Math.max(l, o + 1) - t.playerBets;
          }
        } else (this.banker_num = 1), (this.player_num = 1);
        var g =
            DataManager.curTableState.enterType ==
            DataManager.ENTER_TABLE_TYPE_SIDE,
          u = t.mi_player >= 0 && t.seatno == t.mi_player && !g,
          c = t.mi_banker >= 0 && t.seatno == t.mi_banker && !g;
        (this.mipaizhuangicongroup.visible = c),
          (this.mipaixianicongroup.visible = u);
      }),
      (e.prototype.selectTable = function (t) {}),
      (e.prototype.resetPoint = function () {
        (this.playerPoint = 0), (this.bankerPoint = 0);
      }),
      (e.prototype.refreshpoints = function () {
        if (((this.playerPoint = 0), (this.bankerPoint = 0), this.pointList))
          for (var t = 0; t < this.pointList.length; t++) {
            var e = this.pointList[t] || 0;
            if (this.curtableisMi) {
              var i = this.seatDealList[t];
              i && 1 == i.state && (e = 0);
            }
            if (t % 2 == 0)
              for (this.playerPoint += e; this.playerPoint >= 10; )
                this.playerPoint -= 10;
            else
              for (this.bankerPoint += e; this.bankerPoint >= 10; )
                this.bankerPoint -= 10;
          }
      }),
      (e.prototype.openDeal = function (t, e) {
        var i = this;
        void 0 === e && (e = !0);
        var a = parseInt(t.point);
        a >= 10 && (a = 0), (this.pointList[t.order] = a), this.refreshpoints();
        var n = this.getcarduibyorder(t.order);
        n &&
          ((n.ismipai = 0 != t.state),
          (this.openSetTimeSetcard = setTimeout(function () {
            try {
              i.card_back_rect &&
                i.card_back_rect.visible &&
                (n.setcard(t.point, t.color, t.order),
                0 != i.seatDealList[0].state ||
                0 != i.seatDealList[2].state ||
                (1 != i.seatDealList[1].state && 1 != i.seatDealList[3].state)
                  ? 0 != i.seatDealList[1].state ||
                    0 != i.seatDealList[3].state ||
                    (1 != i.seatDealList[0].state &&
                      1 != i.seatDealList[2].state) ||
                    i.playercardresultClick()
                  : i.bankercardresultClick());
            } catch (e) {}
          }, 1e3))),
          4 == this.pointList.length &&
            ((this.bo_player = !1),
            (this.bo_banker = !1),
            (this.isMI_same_time = !1),
            this.isNeedBO(),
            this.bo_player || this.bo_banker || this.isMI_same_time),
          5 == this.pointList.length &&
            (this.bo_player || this.bo_banker || this.isMI_same_time) &&
            (this.isNeedBO(),
            this.isMI_same_time
              ? e &&
                dzxx.SoundManager.inst.playBankerPlayerDrawcard(
                  dzxx.SoundManager.Player_drawcard,
                )
              : (!this.bo_banker && !this.bo_player) ||
                this.isMI_same_time ||
                (this.isOnLYBOBank()
                  ? e &&
                    dzxx.SoundManager.inst.playBankerPlayerDrawcard(
                      dzxx.SoundManager.Banker_drawcard,
                    )
                  : this.bo_banker
                    ? this.bo_player
                      ? e &&
                        dzxx.SoundManager.inst.playBankerPlayerDrawcard(
                          dzxx.SoundManager.Player_drawcard,
                        )
                      : e &&
                        dzxx.SoundManager.inst.playBankerPlayerDrawcard(
                          dzxx.SoundManager.Banker_drawcard,
                        )
                    : this.bo_player &&
                      e &&
                      dzxx.SoundManager.inst.playBankerPlayerDrawcard(
                        dzxx.SoundManager.Player_drawcard,
                      ))),
          6 == this.pointList.length &&
            (this.isOnLYBOBank()
              ? e &&
                dzxx.SoundManager.inst.playBankerPlayerDrawcard(
                  dzxx.SoundManager.Banker_drawcard,
                )
              : (this.isMI_same_time || (this.bo_banker && this.bo_player)) &&
                (this.updateSoundTimeID3 = setTimeout(function () {
                  e &&
                    dzxx.SoundManager.inst.playBankerPlayerDrawcard(
                      dzxx.SoundManager.Banker_drawcard,
                    );
                }, 1e3)));
      }),
      (e.prototype.isNeedBO = function () {
        var t = this.getPKCardNum(this.pointList),
          e = this.getPKCardNum(this.pointList, !0);
        (this.bo_player = 5 >= t),
          (this.bo_player = 8 == e || 9 == e ? !1 : this.bo_player),
          (this.bo_banker =
            8 == t || 9 == t ? !1 : this.is_bo_banker(e, this.pointList[4])),
          (this.isMI_same_time = 5 >= t && 2 >= e);
      }),
      (e.prototype.isOnLYBOBank = function () {
        var t = this.getPKCardNum(this.pointList),
          e = this.getPKCardNum(this.pointList, !0);
        return e >= 0 && 5 >= e && (6 == t || 7 == t) ? !0 : !1;
      }),
      (e.prototype.is_bo_banker = function (t, e) {
        var i;
        switch ((null == e && (e = 0), t)) {
          case 0:
          case 1:
          case 2:
            return !0;
          case 3:
            return (i = e), !e || 8 != i;
          case 4:
            return (i = e), !e || [0, 1, 8, 9].indexOf(i) < 0;
          case 5:
            return (i = e), !e || [0, 1, 2, 3, 8, 9].indexOf(i) < 0;
          case 6:
            return (i = e), e && [6, 7].indexOf(i) >= 0;
        }
        return !1;
      }),
      (e.prototype.getPKCardNum = function (t, e) {
        void 0 === e && (e = !1);
        var i, a;
        return (
          e ? ((i = t[1]), (a = t[3])) : ((i = t[0]), (a = t[2])),
          (i = 0 > i ? 0 : i),
          (a = 0 > a ? 0 : a),
          (i + a) % 10
        );
      }),
      (e.prototype.onVerify = function () {
        for (
          var t = this,
            e = 0,
            i = function (i) {
              Object.keys(a.gameBetAction._responseList[i]).forEach(
                function (a) {
                  e += t.gameBetAction._repeatList[i][a];
                },
              );
            },
            a = this,
            n = 0;
          n < this.gameBetAction._responseList.length;
          n++
        )
          i(n);
        DataManager.verifyTable(e, this.btnVerify);
      }),
      Object.defineProperty(e.prototype, "bankerPoint", {
        get: function () {
          return this._bankerPoint;
        },
        set: function (t) {
          (this._bankerPoint = t || 0),
            (this.labelBankerPoint.text = this._bankerPoint + "");
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(e.prototype, "playerPoint", {
        get: function () {
          return this._playerPoint;
        },
        set: function (t) {
          (this._playerPoint = t || 0),
            (this.labelPlayerPoint.text = this._playerPoint + "");
        },
        enumerable: !0,
        configurable: !0,
      }),
      (e.prototype.clearCard = function (t) {
        void 0 === t && (t = !1),
          this.timer && t && (this.timer.stop(), this.timer.reset());
        for (var e, i = 0; 6 > i; i++)
          (e = this.getcarduibyorder(i)), (e.ismipai = !1), e.clearcard();
        this.bigmicard &&
          ((this.bigmicard.ismipaiplaying = !1),
          (this.bigmicard.ismipai = !1),
          this.bigmicard.clearcard()),
          this.bigmicard1 &&
            ((this.bigmicard1.ismipaiplaying = !1),
            (this.bigmicard1.ismipai = !1),
            this.bigmicard1.clearcard()),
          (this.pointList = []),
          (this.seatDealList = []),
          (this.bo_player = !1),
          (this.bo_banker = !1),
          (this.isMI_same_time = !1),
          this.updateMiPaiQuanUI(),
          clearTimeout(this.updateSoundTimeID),
          clearTimeout(this.updateSoundTimeID2),
          clearTimeout(this.updateSoundTimeID3);
      }),
      (e.prototype.setNOCOMbuttonState = function () {
        var t,
          e = 0,
          i = this.gameBetAction.state == GameBetAction.STATE_ACCEPT_BET;
        if (this.gameBetAction.curList) {
          if (((e = this.gameBetAction.curList.BANKER), e > 0))
            return void this.setNOCOMEnable(!1);
          if (((e = this.gameBetAction.curList.LS), e > 0))
            return void this.setNOCOMEnable(!1);
        }
        if ((t = this.gameBetAction.joinResponseList)) {
          if (((e = t.BANKER), e > 0)) return void this.setNOCOMEnable(!1);
          if (((e = t.LS), e > 0)) return void this.setNOCOMEnable(!1);
        }
        this.setNOCOMEnable(
          i &&
            !DataManager.hasTableStates_B_S_bystate(DataManager.curTableState),
        );
      }),
      (e.prototype.setNOCOMEnable = function (t) {
        this.tsNoCom.touchEnabled = this.tsNoCom.touchChildren = t;
      }),
      (e.prototype.onServarnt = function (t) {
        (DataManager.isNOCOM = DataManager.isNOCOM ? !1 : !0),
          this.showIsNOCOM();
      }),
      (e.prototype.showIsNOCOM = function () {
        this.superssgroup.visible || (this.superssgroup.visible = !0);
        this.btn_he.percentHeight;
        this.bigAndSmallParent.addChild(this.smallChild),
          (this.bigChild.percentWidth = this.smallChild.percentWidth = 50),
          (this.bigChild.height = this.smallChild.height = 80),
          (this.superssgroup.percentHeight = 100),
          (this.superssgroup.height = 72),
          (this.btn_bg_SMALL.left = -6),
          (this.btn_bg_SMALL.right = 0),
          (this.btn_bg_BIG.left = -12),
          (this.btn_bg_BIG.right = -2),
          (this.btn_bg_BIG.source = "xin_hxbg_da2_png"),
          (this.btn_bg_SMALL.source = "xin_hxbg_xiao2_png"),
          DataManager.isNOCOM
            ? ((this.lblLimitB.text =
                OddsPlace.BettingMultiple.ALL_BANKER + ":1"),
              (this.langPng30.text = LangUtils.LANG_MAP.M_TILE + "\n1:8"),
              (this.allbetBg.source =
                "bjl_betRegPng_mian_" + DataManager.LANG_TYPE + "_png"))
            : ((this.lblLimitB.text = OddsPlace.BettingMultiple.BANKER + ":1"),
              (this.langPng30.text = LangUtils.LANG_MAP.M_TILE + "\n1:8"),
              (this.allbetBg.source =
                "bjl_betRegPng_" + DataManager.LANG_TYPE + "_png")),
          (this.tsNoCom.selected = DataManager.isNOCOM),
          this.tsNoCom.updateLabel(),
          this.gameBetAction.checkBtnRepeat();
      }),
      (e.prototype.onBack = function () {
        var t = DataManager.getLobbyTableData(this.tableid).lobbyid;
        (DataManager.curTableState = null),
          (DataManager.curTable = null),
          (ShareUtils.main.gameView = null),
          this.dispose(),
          ChooseTableView.inst.show(t);
      }),
      (e.prototype.onMenu = function () {
        MenuView.getIns().showhide();
      }),
      (e.prototype.betStart = function (t) {
        var e = t.data[0];
        if (e.tableid == DataManager.curTable.tableid)
          if (0 == e.bettype) {
            if (this.cur_gameSeq == e.gameSeq) return;
            (this.temp_tableSeq = DataManager.curTableState.tableInfo.tableSeq),
              (this.cur_gameSeq = e.gameSeq),
              this.gameBetAction.betStart(e),
              (this.card_back_rect.visible = !1),
              this.setNOCOMbuttonState(),
              this.clearCard(!0),
              this.setmipaipanelvisible(!1),
              (this.tellothesMIwrap.visible = !1),
              (this.cardselectedmark.visible = !1),
              e.countdown > 500 &&
                (this.setResultTip(16243228, "BET_START"),
                dzxx.SoundManager.inst.playBetting(
                  dzxx.SoundManager.bettingStart,
                )),
              this.resetPoint(),
              this.curtableisMi &&
                (this.gameBetAction.setBtnState(3, !0),
                this.gameBetAction.setBtnState(5, !0)),
              (this.btnVerify.touchEnabled = !0),
              ShareUtils.setGrayFilter(this.btnVerify, !1);
          } else
            1 == e.bettype
              ? this.gameBetAction.setBetStartTimeCount(e)
              : 2 == e.bettype
                ? this.gameBetAction.setMiTimeCount(e)
                : 3 == e.bettype
                  ? (this.setNOCOMEnable(!1), this.gameBetAction.betStart(e))
                  : 20 == e.bettype
                    ? ((this.currentMiBetType = 20),
                      this.gameBetAction.setMiTimeCount(e),
                      this.gameBetAction._responseList.length > 0
                        ? (this.setmipaipanelvisible(!0),
                          this.paiWrap.addChild(this.bigmicard1))
                        : (this.tellothesMIwrap.visible = !0),
                      this.initMicardState(e))
                    : 21 == e.bettype
                      ? ((this.currentMiBetType = 21),
                        this.gameBetAction.setMiTimeCount(e),
                        this.gameBetAction._responseList.length > 0
                          ? (this.setmipaipanelvisible(!0),
                            this.paiWrap.removeChild(this.bigmicard1))
                          : (this.tellothesMIwrap.visible = !0),
                        this.initMicardState(e))
                      : 22 == e.bettype &&
                        ((this.currentMiBetType = 22),
                        this.gameBetAction.setMiTimeCount(e),
                        this.gameBetAction._responseList.length > 0
                          ? (this.setmipaipanelvisible(!0),
                            this.paiWrap.removeChild(this.bigmicard1))
                          : (this.tellothesMIwrap.visible = !0),
                        this.initMicardState(e));
      }),
      (e.prototype.betAmount = function (t) {
        this.uodataTabInfo(!0);
      }),
      (e.prototype.betAmountConfig = function () {}),
      (e.prototype.initInfo = function (t) {
        void 0 === t && (t = null);
        var e = DataManager.curTableState.tableInfo.history3[0] || 0,
          i = DataManager.curTableState.tableInfo.history3[1] || 0,
          a = DataManager.curTableState.tableInfo.history3[2] || 0,
          n = DataManager.curTableState.tableInfo.history3[3] || 0,
          s = DataManager.curTableState.tableInfo.history3[4] || 0;
        "S" == t && (s = n = a = i = e = 0),
          (this.lblRouteB.text = e + ""),
          (this.lblRouteP.text = i + ""),
          (this.lblRouteT.text = a + ""),
          (this.lblRouteAll.text = e + i + a + ""),
          (this.lblRoute_B_All.text = n + ""),
          (this.lblRoute_P_All.text = s + "");
        var r = e + i + a;
        r > 0 ? Math.floor((e / r) * 100) : 0,
          r > 0 ? Math.floor((i / r) * 100) : 0;
        (this.lblRouteB_line.width = 120 * (0 == r ? 0 : e / r)),
          (this.lblRouteP_line.width = 120 * (0 == r ? 0 : i / r)),
          (this.lblRouteT_line.width = 120 * (0 == r ? 0 : a / r));
        var o = DataManager.curTableState.tableInfo;
        DataManager.getGameNameWithGameStyle(
          DataManager.curTableState.tableInfo.gameType,
          DataManager.curTableState.tableInfo.gamestyle,
        ) +
          DataManager.getTableStr1(DataManager.curTableState.tableInfo.tableid);
        (this.lblJuNum.text =
          o.shoeSeq.toString() +
          "/" +
          DataManager.curTableState.tableInfo.gameSeq.toString()),
          "" == o.tableSeq || void 0 == o.tableSeq || null == o.tableSeq
            ? (this.lblJuNum3.text = "--")
            : (this.lblJuNum3.text =
                DataManager.curTableState.tableInfo.tableSeq.toString());
      }),
      (e.prototype.tableInfo = function (t) {
        if (
          t.data.tableid == DataManager.curTable.tableid &&
          ((GameUtils.routeSize = 40),
          this.showRouteBTip(),
          this.showRoutePTip(),
          this.route.parseDatum(
            DataManager.curTableState.tableInfo.history,
            !0,
          ),
          this.gameBetAction.tableInfo(DataManager.curTableState.tableInfo),
          this.initInfo(DataManager.curTableState.tableInfo.tablestate),
          "S" == DataManager.curTableState.tableInfo.tablestate &&
            ((this.card_back_rect.visible = !1),
            this.setNOCOMbuttonState(),
            this.clearCard(!0),
            this.setmipaipanelvisible(!1),
            (this.cardselectedmark.visible = !1),
            (this.tellothesMIwrap.visible = !1),
            this.resetPoint()),
          "RP" == DataManager.curTableState.tableInfo.tablestate)
        ) {
          var e = new ErrorMessage(-132);
          DataManager.errorMessage(e);
        }
      }),
      (e.prototype.uodataTabInfo = function (t) {
        if ((void 0 === t && (t = !0), DataManager.curTableState)) {
          var e = new RegExp(",", "g"),
            i = void 0,
            a = void 0,
            n = void 0,
            s = DataManager.curTableState.tablePool,
            r = String(s.BANKER).split("/");
          (this.tongjibankertxt.text = r[0] + "/" + r[1]),
            (i = Number(r[0].replace(e, "")));
          var o = String(s.PLAYER).split("/");
          (this.tongjiplayertxt.text = o[0] + "/" + o[1]),
            (a = Number(o[0].replace(e, "")));
          var h = String(s.TILE).split("/");
          (this.tongjitietxt.text = h[0] + "/" + h[1]),
            (n = Number(h[0].replace(e, "")));
          var l = i + a + n,
            g = 160 * (0 == l ? 0 : i / l),
            u = 160 * (0 == l ? 0 : a / l),
            c = 160 * (0 == l ? 0 : n / l);
          (this.preBet_B.visible = 0 == g ? !1 : !0),
            (this.preBet_P.visible = 0 == u ? !1 : !0),
            (this.preBet_T.visible = 0 == c ? !1 : !0),
            egret.Tween.get(this.preBet_B)
              .to(
                {
                  width: g,
                },
                300,
              )
              .call(function () {}, this),
            egret.Tween.get(this.preBet_P)
              .to(
                {
                  width: u,
                },
                300,
              )
              .call(function () {}, this),
            egret.Tween.get(this.preBet_T)
              .to(
                {
                  width: c,
                },
                300,
              )
              .call(function () {}, this);
        } else
          (this.tongjibankertxt.text = ""),
            (this.tongjiplayertxt.text = ""),
            (this.tongjitietxt.text = "");
      }),
      (e.prototype.betResponse = function (t) {
        this.gameBetAction.betResponse(t.data),
          1 == t.data.result
            ? this.setResultTip(16243228, "BET_SUCCESS")
            : 2 == t.data.result
              ? this.setResultTip(16243228, "BET_UNDER_MUCH")
              : -112 == t.data.result
                ? (this.setResultTip(16243228, "BET_UNDER_MUCH"),
                  this.gameBetAction.checkBtnSure(),
                  this.setNOCOMbuttonState())
                : -113 == t.data.result
                  ? this.setResultTip(16243228, "BET_UNDER_MUCH")
                  : -95 == t.data.result
                    ? Alert.tipGame(
                        LangUtils.LANG_MAP.dzg_game_bjl_30,
                        16243228,
                      )
                    : -96 == t.data.result
                      ? Alert.tipGame(
                          LangUtils.LANG_MAP.dzg_game_bjl_31,
                          16243228,
                        )
                      : -122 == t.data.result
                        ? this.setResultTip(16243228, "BET_TOO_MUCH")
                        : -123 == t.data.result
                          ? this.setResultTip(
                              16243228,
                              "BET_TOO_MUCH_OF_ALL_TABLE",
                            )
                          : -140 == t.data.result
                            ? Alert.showCaptcha()
                            : (this.setResultTip(16243228, "BET_FAILE"),
                              this.gameBetAction.checkBtnSure(),
                              this.setNOCOMbuttonState());
      }),
      (e.prototype.updatebetnumgroups = function () {
        (this.betnumgroupPP.visible = !1),
          (this.betnumgroupT.visible = !1),
          (this.betnumgroupSS.visible = !1),
          (this.betnumgroupBB.visible = !1),
          (this.betnumgroupP.visible = !1),
          (this.betnumgroupB.visible = !1),
          (this.betnumgroupBIG.visible = !1),
          (this.betnumgroupSMALL.visible = !1),
          (this.betnumgroupBDB.visible = !1),
          (this.betnumgroupPFP.visible = !1),
          (this.betnumgroupPDB.visible = !1),
          (this.betnumgroupAP.visible = !1),
          (this.betnumgroupPN.visible = !1),
          (this.betnumgroupBN.visible = !1);
        for (var t in this.betChildDict) {
          var e = this.gameBetAction.joinResponseList[t] || 0,
            i = this.gameBetAction.tempbetlist[t] || 0;
          "PP" == t && this.setbetnumgroup(this.betnumgroupPP, e, i),
            "TILE" == t && this.setbetnumgroup(this.betnumgroupT, e, i),
            "LS" == t && this.setbetnumgroup(this.betnumgroupSS, e, i),
            "BP" == t && this.setbetnumgroup(this.betnumgroupBB, e, i),
            "PLAYER" == t && this.setbetnumgroup(this.betnumgroupP, e, i),
            "BANKER" == t && this.setbetnumgroup(this.betnumgroupB, e, i),
            "BIG" == t && this.setbetnumgroup(this.betnumgroupBIG, e, i),
            "SMALL" == t && this.setbetnumgroup(this.betnumgroupSMALL, e, i),
            "BDB" == t && this.setbetnumgroup(this.betnumgroupBDB, e, i),
            "PFP" == t && this.setbetnumgroup(this.betnumgroupPFP, e, i),
            "PDB" == t && this.setbetnumgroup(this.betnumgroupPDB, e, i),
            "AP" == t && this.setbetnumgroup(this.betnumgroupAP, e, i),
            "PN" == t && this.setbetnumgroup(this.betnumgroupPN, e, i),
            "BN" == t && this.setbetnumgroup(this.betnumgroupBN, e, i);
        }
      }),
      (e.prototype.setbetnumgroup = function (t, e, i) {
        (t.betnum = e),
          (t.tempbetnum = i),
          (t.initbetnum = e),
          (t.betnumvisible = e > 0),
          (t.tempbetnumvisible = i > 0),
          (t.visible = e > 0 || i > 0);
      }),
      (e.prototype.setResultTip = function (t, e) {
        return Alert.tipGame(LangUtils.LANG_MAP[e] || e, t);
      }),
      (e.prototype.betResult = function (t) {
        var e = this;
        !t.data.winOptions ||
          0 == t.data.winOptions.length ||
          t.data.winOptions.indexOf("NULL") >= 0 ||
          this.gameBetAction.state == GameBetAction.STATE_RESULT ||
          this.gameBetAction.state == GameBetAction.STATE_ACCEPT_BET,
          this.setNOCOMEnable(!1),
          this.setmipaipanelvisible(!1),
          (this.tellothesMIwrap.visible = !1),
          (this.cardselectedmark.visible = !1),
          (this.mipaixianicongroup.visible = !1),
          (this.mipaizhuangicongroup.visible = !1),
          (this.mi_lv = 0),
          (this.isMI_same_time = !1),
          (this.bo_player = !1),
          (this.bo_banker = !1),
          (this.cards_open = []),
          (this.cards_opened = []),
          (this.cards_banker = []),
          (this.cards_player = []),
          this.gameBetAction.setBtnState(3, !1),
          this.gameBetAction.setBtnState(5, !1);
        var i = t.data;
        if (i.tableid == DataManager.curTableState.tableid) {
          var a = i.cardresult.split(";");
          a.forEach(function (t) {
            var a = t.split("-"),
              n = a[0],
              s = parseInt(a[1]),
              r = parseInt(a[2]);
            if ("0" != n) {
              var o = new SeatDealMessage(i.tableid, 0, s, n, r, 0);
              e.openDeal(o);
            }
          }),
            this.playPointSound(),
            this.gameBetAction.betResult(t.data),
            t.data.winOptions &&
              t.data.winOptions.length > 0 &&
              ("PLAYER" == t.data.winOptions[0]
                ? ((this.lblWin.source =
                    "hxbg_16_" + DataManager.LANG_TYPE + "_png"),
                  (this.updateSoundTimeID2 = setTimeout(function () {
                    dzxx.SoundManager.inst.playBankerPlayerWin(
                      dzxx.SoundManager.Player_win,
                    );
                  }, 3e3)))
                : "TILE" == t.data.winOptions[0]
                  ? ((this.lblWin.source =
                      "hxbg_9_" + DataManager.LANG_TYPE + "_png"),
                    (this.updateSoundTimeID2 = setTimeout(function () {
                      dzxx.SoundManager.inst.playBankerPlayerWin(
                        dzxx.SoundManager.Tile_win,
                      );
                    }, 3e3)))
                  : "BANKER" == t.data.winOptions[0] &&
                    ((this.lblWin.source =
                      "hxbg_10_" + DataManager.LANG_TYPE + "_png"),
                    (this.updateSoundTimeID2 = setTimeout(function () {
                      dzxx.SoundManager.inst.playBankerPlayerWin(
                        dzxx.SoundManager.Banker_win,
                      );
                    }, 3e3)))),
            (this.lblWin.visible = !0);
        }
      }),
      (e.prototype.seatBetting = function (t) {
        var e = this,
          i = t.data;
        if (this.curtableisMi && i.seatid < 7) {
          var a = (i.miseat || "").split(",");
          (this.miSeatDict.player = parseInt(a[0])),
            (this.miSeatDict.banker = parseInt(a[1])),
            this.miSeatDict.player == i.seatid &&
              (this.miSeatDict.playername = i.nickname),
            this.miSeatDict.banker == i.seatid &&
              (this.miSeatDict.bankername = i.nickname),
            this.updateMiPaiQuanUI();
        }
        if (
          DataManager.curTable.tableid == i.tableid &&
          DataManager.userid == i.userid
        ) {
          ShareUtils.callLater(
            200,
            function () {
              e.gameBetAction && e.gameBetAction.seatBetting(t.data);
            },
            this,
          );
          var n = i.option;
          ("LS" == n || "BANKER" == n) &&
            ((DataManager.isNOCOM = 1 == i.sbanker),
            this.showIsNOCOM(),
            this.setNOCOMEnable(!1));
        }
      }),
      (e.prototype.getcarduibyorder = function (t) {
        return (
          !(
            this.isLVRoom() ||
            this.isSMRoom() ||
            this.isAATRoom() ||
            this.isLGRoom()
          ) ||
            (0 != t && 2 != t) ||
            (t = (t + 2) % 4),
          this["card_" + t]
        );
      }),
      (e.prototype.seatDeal = function (t) {
        var e = t.data;
        if (DataManager.curTableState.tableid == e.tableid) {
          DataManager.getTableStates(e.tableid);
          this.gameBetAction.seatDeal(),
            (this.card_back_rect.visible = !0),
            (this.lblWin.visible = !1),
            this.showCard(e),
            this.checkCards(e, this.seatDealList, this.showCard, this);
        }
      }),
      (e.prototype.checkNoOpen = function () {}),
      (e.prototype.openLiteCard = function (t, e) {}),
      (e.prototype.hideOpenButton = function () {}),
      (e.prototype.setBPCard = function (t) {
        switch (t.order) {
          case 0:
            this.cards_player[0] = t;
            break;
          case 2:
            this.cards_player[1] = t;
            break;
          case 4:
            "0" != t.point
              ? (this.cards_player[2] = t)
              : (this.getcarduibyorder(t.order).visible = !1);
            break;
          case 1:
            this.cards_banker[0] = t;
            break;
          case 3:
            this.cards_banker[1] = t;
            break;
          case 5:
            "0" != t.point
              ? (this.cards_banker[2] = t)
              : (this.getcarduibyorder(t.order).visible = !1);
        }
      }),
      (e.prototype.showCard = function (t) {
        (t.order < this.seatDealList.length &&
          this.seatDealList[t.order] &&
          ShareUtils.timeByMessageID(t.messageID) <
            ShareUtils.timeByMessageID(this.seatDealList[t.order].messageID)) ||
          ((this.seatDealList[t.order] = t), this.openDeal(t));
      }),
      (e.prototype.timerSeatDeal = function (t) {
        null != this.seatDealList &&
          (this.seatDealList[this.timer.currentCount - 1]
            ? this.openDeal(this.seatDealList[this.timer.currentCount - 1])
            : 5 == this.timer.currentCount &&
                this.seatDealList[this.timer.currentCount]
              ? (this.openDeal(this.seatDealList[this.timer.currentCount]),
                this.timer.stop())
              : this.timer.stop());
      }),
      (e.prototype.playPointSound = function () {
        var t = this;
        dzxx.SoundManager.inst.playBankerPlayerPoint(
          dzxx.SoundManager.Banker_point,
          this.bankerPoint,
        ),
          clearTimeout(this.updateSoundTimeID),
          (this.updateSoundTimeID = setTimeout(function () {
            dzxx.SoundManager.inst.playBankerPlayerPoint(
              dzxx.SoundManager.Player_point,
              t.playerPoint,
            );
          }, 1200));
      }),
      (e.prototype.checkCards = function (t, e, i, a) {
        var n = ShareUtils.timeByMessageID(t.messageID);
        if (!(this.save_time_deal > n)) {
          var s = t.cardresult;
          if (s) {
            var r = s.split(";");
            if (0 != r.length) {
              var o,
                h,
                l,
                g = 0,
                u = 0,
                c = !1;
              n > this.save_time_deal && (this.save_time_deal = n);
              for (var d = 0; d < r.length; d++)
                if (((o = r[d].split("-")), !(o.length < 2))) {
                  (h = o[0]),
                    (g = parseInt(o[1])),
                    (u = parseInt(o[2])),
                    (c = !1),
                    (l = null);
                  for (var p = 0; p < e.length; p++)
                    (l = e[p]),
                      l &&
                        l.order == u &&
                        ((c = !0),
                        (l.point != h || l.color != g || 1 == l.state) &&
                          ((l.point = h),
                          (l.color = g),
                          (l.messageID = t.messageID),
                          i.call(a, l)));
                  0 == c &&
                    parseInt(h) > 0 &&
                    ((l = new SeatDealMessage(t.tableid, 0, g, h, u, -1)),
                    (l.messageID = t.messageID),
                    i.call(a, l));
                }
            }
          }
        }
      }),
      (e.prototype.onAskRoute = function (t) {
        this.route.askWay(t.target == this.btnAskB ? 1 : 2),
          (this.tongjigroup.visible = !0);
      }),
      (e.prototype.onAskBRoute = function (t) {
        this.route.askWay(1);
      }),
      (e.prototype.onAskPRoute = function (t) {
        this.route.askWay(2);
      }),
      (e.prototype.ontongji = function () {}),
      (e.prototype.onclickdengwo = function () {}),
      (e.prototype.onclickkaipai = function () {}),
      (e.prototype.onclickdashang = function () {
        return DataManager.sumAmount < 100
          ? void Alert.tip(LangUtils.LANG_MAP.PlayGiveError2)
          : (this.dashangpanel || (this.dashangpanel = new DaShangPanel()),
            void this.dashangpanel.show(this.dashanggroup));
      }),
      (e.prototype.onclickliaotian = function () {
        this.chatpanel.show(this.chatgroup);
      }),
      (e.prototype.onclickshijiao = function () {}),
      (e.prototype.tapMiPaiIfStateIs1 = function (t) {
        var e = this.seatDealList[t];
        return e && 1 == e.state
          ? (this.tap(this.getcarduibyorder(t)), !0)
          : !1;
      }),
      (e.prototype.setselectedmipaibtn = function (t) {
        this.selectedmipaibtn && (this.selectedmipaibtn.currentState = "up"),
          (this.selectedmipaibtn = t),
          t && (this.selectedmipaibtn.currentState = "down");
      }),
      (e.prototype.onclickmipaibtn = function (t) {
        this.setselectedmipaibtn(t.currentTarget);
        switch (this.selectedmipaibtn) {
          case this.xianmibtn:
          case this.kanxianmibtn:
            this.tapMiPaiIfStateIs1(0) ||
              this.tapMiPaiIfStateIs1(2) ||
              this.tapMiPaiIfStateIs1(4);
            break;
          case this.zhuangmibtn:
          case this.kanzhuangmibtn:
            this.tapMiPaiIfStateIs1(1) ||
              this.tapMiPaiIfStateIs1(3) ||
              this.tapMiPaiIfStateIs1(5);
            break;
          case this.xianallopenbtn:
            MessageHandler.miCardAction(0, 0, 0, DZJingMiPai.OPEN_CARD_VALUE),
              MessageHandler.miCardAction(2, 0, 0, DZJingMiPai.OPEN_CARD_VALUE),
              MessageHandler.miCardAction(4, 0, 0, DZJingMiPai.OPEN_CARD_VALUE);
            break;
          case this.zhuangallopenbtn:
            MessageHandler.miCardAction(1, 0, 0, DZJingMiPai.OPEN_CARD_VALUE),
              MessageHandler.miCardAction(3, 0, 0, DZJingMiPai.OPEN_CARD_VALUE),
              MessageHandler.miCardAction(5, 0, 0, DZJingMiPai.OPEN_CARD_VALUE);
        }
      }),
      (e.prototype.onclickfanpaibtn = function () {}),
      (e.prototype.initMicardState = function (t) {
        var e = this;
        if (20 == this.currentMiBetType) {
          for (
            var i = [], a = 0;
            a < this.gameBetAction._responseList.length;
            a++
          ) {
            var n = this.gameBetAction._responseList[a];
            i.push(Object.keys(n)[0]);
          }
          var s = i.join();
          if (
            -1 != s.indexOf("PLAYER") ||
            -1 != s.indexOf("PP") ||
            -1 != s.indexOf("PDB") ||
            -1 != s.indexOf("PN") ||
            (-1 == s.indexOf("BANKER") &&
              -1 == s.indexOf("BP") &&
              -1 == s.indexOf("LS") &&
              -1 == s.indexOf("BDB") &&
              -1 == s.indexOf("BN"))
          ) {
            if (
              ((this.xianjb.visible = !0),
              (this.zhuangjb.visible = !1),
              (this.mipaiTipImg.source = "xian_png"),
              this.mipaipanel && this.mipaipanel.visible && this.bigmicard)
            ) {
              var r = this.seatDealList[0];
              if (!r) return;
              var o = 1 == r.state;
              this.bigmicard.ismipai = o;
              var h = o;
              (this.bigmicard.ismipaiplaying = h),
                this.bigmicard.ismipaiplaying &&
                  this.bigmicard.setcard(r.point, r.color, r.order);
            }
            if (this.mipaipanel && this.mipaipanel.visible && this.bigmicard1) {
              var r = this.seatDealList[2];
              if (!r) return;
              var o = 1 == r.state;
              this.bigmicard1.ismipai = o;
              var h = o;
              (this.bigmicard1.ismipaiplaying = h),
                this.bigmicard1.ismipaiplaying &&
                  this.bigmicard1.setcard(r.point, r.color, r.order);
            }
          } else {
            if (
              ((this.xianjb.visible = !1),
              (this.zhuangjb.visible = !0),
              (this.mipaiTipImg.source = "zhuang_png"),
              this.mipaipanel && this.mipaipanel.visible && this.bigmicard)
            ) {
              var r = this.seatDealList[1];
              if (!r) return;
              var o = 1 == r.state;
              this.bigmicard.ismipai = o;
              var h = o;
              (this.bigmicard.ismipaiplaying = h),
                this.bigmicard.ismipaiplaying &&
                  this.bigmicard.setcard(r.point, r.color, r.order);
            }
            if (this.mipaipanel && this.mipaipanel.visible && this.bigmicard1) {
              var r = this.seatDealList[3];
              if (!r) return;
              var o = 1 == r.state;
              this.bigmicard1.ismipai = o;
              var h = o;
              (this.bigmicard1.ismipaiplaying = h),
                this.bigmicard1.ismipaiplaying &&
                  this.bigmicard1.setcard(r.point, r.color, r.order);
            }
          }
          setTimeout(function () {
            e.onmipaiact(0, 0, 0, DZJingMiPai.OPEN_CARD_VALUE),
              e.onmipaiact(1, 0, 0, DZJingMiPai.OPEN_CARD_VALUE),
              e.onmipaiact(2, 0, 0, DZJingMiPai.OPEN_CARD_VALUE),
              e.onmipaiact(3, 0, 0, DZJingMiPai.OPEN_CARD_VALUE);
          }, t.countdown);
        } else if (21 == this.currentMiBetType) {
          if (
            ((this.xianjb.visible = !0),
            (this.zhuangjb.visible = !1),
            (this.mipaiTipImg.source = "xian_png"),
            this.mipaipanel && this.mipaipanel.visible && this.bigmicard)
          ) {
            var r = this.seatDealList[4];
            if (!r) return;
            var o = 1 == r.state;
            this.bigmicard.ismipai = o;
            var h = o;
            (this.bigmicard.ismipaiplaying = h),
              this.bigmicard.ismipaiplaying &&
                this.bigmicard.setcard(r.point, r.color, r.order);
          }
          setTimeout(function () {
            e.onmipaiact(4, 0, 0, DZJingMiPai.OPEN_CARD_VALUE);
          }, t.countdown);
        } else {
          if (22 != this.currentMiBetType) return;
          if (
            ((this.xianjb.visible = !1),
            (this.zhuangjb.visible = !0),
            (this.mipaiTipImg.source = "zhuang_png"),
            this.seatDealList[5])
          ) {
            if (this.mipaipanel && this.mipaipanel.visible && this.bigmicard) {
              var r = this.seatDealList[5];
              if (!r) return;
              var o = 1 == r.state;
              this.bigmicard.ismipai = o;
              var h = o;
              (this.bigmicard.ismipaiplaying = h),
                this.bigmicard.ismipaiplaying &&
                  this.bigmicard.setcard(r.point, r.color, r.order);
            }
            setTimeout(function () {
              e.onmipaiact(5, 0, 0, DZJingMiPai.OPEN_CARD_VALUE);
            }, t.countdown);
          } else {
            if (this.mipaipanel && this.mipaipanel.visible && this.bigmicard) {
              var r = this.seatDealList[4];
              if (!r) return;
              var o = 1 == r.state;
              this.bigmicard.ismipai = o;
              var h = o;
              (this.bigmicard.ismipaiplaying = h),
                this.bigmicard.ismipaiplaying &&
                  this.bigmicard.setcard(r.point, r.color, r.order);
            }
            setTimeout(function () {
              e.onmipaiact(4, 0, 0, DZJingMiPai.OPEN_CARD_VALUE);
            }, t.countdown);
          }
        }
      }),
      (e.prototype.playercardresultClick = function () {
        if (
          (0 != this.seatDealList[0].state ||
            0 != this.seatDealList[2].state) &&
          20 == this.currentMiBetType
        ) {
          if (
            ((this.xianjb.visible = !0),
            (this.zhuangjb.visible = !1),
            (this.mipaiTipImg.source = "xian_png"),
            this.mipaipanel && this.mipaipanel.visible && this.bigmicard)
          ) {
            var t = this.seatDealList[0];
            if (!t) return;
            var e = 1 == t.state;
            this.bigmicard.ismipai = e;
            var i = e;
            (this.bigmicard.ismipaiplaying = i),
              this.bigmicard.setcard(t.point, t.color, t.order);
          }
          if (this.mipaipanel && this.mipaipanel.visible && this.bigmicard1) {
            var t = this.seatDealList[2];
            if (!t) return;
            var e = 1 == t.state;
            this.bigmicard1.ismipai = e;
            var i = e;
            (this.bigmicard1.ismipaiplaying = i),
              this.bigmicard1.setcard(t.point, t.color, t.order);
          }
        }
      }),
      (e.prototype.bankercardresultClick = function () {
        if (
          (0 != this.seatDealList[1].state ||
            0 != this.seatDealList[3].state) &&
          20 == this.currentMiBetType
        ) {
          if (
            ((this.xianjb.visible = !1),
            (this.zhuangjb.visible = !0),
            (this.mipaiTipImg.source = "zhuang_png"),
            this.mipaipanel && this.mipaipanel.visible && this.bigmicard)
          ) {
            var t = this.seatDealList[1];
            if (!t) return;
            var e = 1 == t.state;
            this.bigmicard.ismipai = e;
            var i = e;
            (this.bigmicard.ismipaiplaying = i),
              this.bigmicard.setcard(t.point, t.color, t.order);
          }
          if (this.mipaipanel && this.mipaipanel.visible && this.bigmicard1) {
            var t = this.seatDealList[3];
            if (!t) return;
            var e = 1 == t.state;
            this.bigmicard1.ismipai = e;
            var i = e;
            (this.bigmicard1.ismipaiplaying = i),
              this.bigmicard1.setcard(t.point, t.color, t.order);
          }
        }
      }),
      (e.prototype.onclickcardui = function (t) {
        var e = t.currentTarget;
        if (
          this.curtableisMi &&
          this.mipaipanel &&
          this.mipaipanel.visible &&
          this.bigmicard
        ) {
          var i = e.cardorder,
            a = this.seatDealList[i];
          if (!a) return;
          var n = 1 == a.state;
          20 != this.currentMiBetType || (1 != i && 3 != i)
            ? (this.bigmicard.cardorder = i)
            : (this.bigmicard1.cardorder = i),
            (this.bigmicard.ismipai = n);
          var s = (DataManager.curTableState.seatno, n);
          (this.bigmicard.ismipaiplaying = s),
            this.bigmicard.ismipaiplaying
              ? (20 != this.currentMiBetType || (1 != i && 3 != i)) &&
                this.bigmicard.setcard(a.point, a.color, a.order)
              : this.openDeal(a);
        }
      }),
      (e.prototype.selectmicarduibyorder = function (t) {
        var e = this.getcarduibyorder(t);
        if (e) {
          var i = e.localToGlobal();
          (i = this.card_back_rect.globalToLocal(i.x, i.y)),
            (this.cardselectedmark.width =
              e.width +
              this.cardselectedmarkoffset +
              this.cardselectedmarkoffset),
            (this.cardselectedmark.height =
              e.height +
              this.cardselectedmarkoffset +
              this.cardselectedmarkoffset),
            (this.cardselectedmark.anchorOffsetX = this.cardselectedmarkoffset),
            (this.cardselectedmark.anchorOffsetY = this.cardselectedmarkoffset),
            (this.cardselectedmark.x = i.x),
            (this.cardselectedmark.y = i.y),
            (this.cardselectedmark.rotation = e.rotation),
            (this.cardselectedmark.visible = !0);
        }
      }),
      (e.prototype.clearData = function (t) {
        this.clearCard(), this.gameBetAction.pause(), this.setNOCOMEnable(!1);
      }),
      (e.prototype.onchat = function (e) {
        t.prototype.onchat.call(this, e),
          this.curtableisMi && this.chatpanel.onchat(e);
      }),
      (e.prototype.showRouteBTip = function () {
        this.route.getkWayResult(1),
          this.route.route2.nTmpWinner > 0 &&
            (this.gAckB.getChildAt(0).source =
              "rt2Check_f" + this.route.route2.nTmpWinner + "_png"),
          this.route.route3.nTmpWinner > 0 &&
            (this.gAckB.getChildAt(1).source =
              "rt3Check_f" + this.route.route3.nTmpWinner + "_png"),
          this.route.route4.nTmpWinner > 0 &&
            (this.gAckB.getChildAt(2).source =
              "rt4Check_f" + this.route.route4.nTmpWinner + "_png");
      }),
      (e.prototype.showRoutePTip = function () {
        this.route.getkWayResult(2),
          this.route.route2.nTmpWinner > 0 &&
            (this.gAckP.getChildAt(0).source =
              "rt2Check_f" + this.route.route2.nTmpWinner + "_png"),
          this.route.route3.nTmpWinner > 0 &&
            (this.gAckP.getChildAt(1).source =
              "rt3Check_f" + this.route.route3.nTmpWinner + "_png"),
          this.route.route4.nTmpWinner > 0 &&
            (this.gAckP.getChildAt(2).source =
              "rt4Check_f" + this.route.route4.nTmpWinner + "_png");
      }),
      (e.prototype.roteChangeFun = function () {
        return 0 == this.routeChangeType
          ? ((this.routeChangeType = 1),
            this.updataRoteType(),
            void this.initRoteChange())
          : 1 == this.routeChangeType
            ? ((this.routeChangeType = 0),
              this.updataRoteType(),
              void this.initRoteChange())
            : void 0;
      }),
      (e.prototype.initRoteChange = function () {
        return 0 == this.routeChangeType
          ? ((this.roteChangeImg.visible = !0),
            void (this.roteChangeImgleft.visible = !1))
          : 1 == this.routeChangeType
            ? ((this.roteChangeImg.visible = !1),
              void (this.roteChangeImgleft.visible = !0))
            : void 0;
      }),
      (e.prototype.updataRoteType = function () {
        this.route &&
          ((GameUtils.routeSize = 40),
          this.route.changeRoteType(this.routeChangeType));
      }),
      (e.prototype.onShowLimit = function () {
        null == this.gameLimit && (this.gameLimit = new game.GameLimitUI()),
          this.addChild(this.gameLimit),
          this.gameLimit.showUI(
            DataManager.curTable.gameType,
            DataManager.isNOCOM,
          );
      }),
      (e.prototype.dispose = function () {
        for (var t = 0; t < this.gameBetAction._responseList.length; t++)
          for (
            var e = this.gameBetAction._responseList[t], i = 0;
            i < DataManager.betAllname.length;
            i++
          )
            if (
              e[DataManager.betAllname[i]] &&
              e[DataManager.betAllname[i]] > 0
            ) {
              var a = DataManager.betAllname[i],
                n = e[DataManager.betAllname[i]];
              DataManager.addDuotaiBetCoin(n, a, this.temp_tableSeq);
            }
        MessageHandler.leaveTable(this.tableid),
          clearTimeout(this.updateSoundTimeID),
          clearTimeout(this.updateSoundTimeID2),
          clearTimeout(this.updateSoundTimeID3),
          (this.cur_gameSeq = -1),
          dzxx.SoundManager.inst.stopSoundChanel(),
          LangUtils.removeEventListener(this.langChange, this),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.BET_START,
            this.betStart,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.BET_RESULT,
            this.betResult,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.SEAT_DEAL,
            this.seatDeal,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.BET_RESPONSE,
            this.betResponse,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.BET_AMOUNT,
            this.betAmount,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.TABLE_INFO,
            this.tableInfo,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.SEAT_BETTING,
            this.seatBetting,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.RESET,
            this.clearData,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.User_INFO,
            this.onMoneyChange,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.MICARD_ACTION_MESSAGE,
            this.onmiactionnet,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.MI_CHANGE,
            this.onmichange,
            this,
          ),
          this.btnbackgroup.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onBack,
            this,
          ),
          this.btnmenugroup.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onMenu,
            this,
          ),
          this.bpSizeGroup.removeEventListener(
            egret.Event.RESIZE,
            this.onppSizeFun,
            this,
          ),
          this.btnLimit_fb.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onShowLimit,
            this,
          ),
          this.btnVerify.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onVerify,
            this,
          ),
          this.tsNoCom.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onServarnt,
            this,
          ),
          this.tsVideo.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onVideo,
            this,
          ),
          this.btnAskB.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onAskBRoute,
            this,
          ),
          this.btnAskP.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onAskPRoute,
            this,
          ),
          this.routegroup.removeEventListener(
            egret.Event.RESIZE,
            this.onRouteGroupResize,
            this,
          ),
          this.btn_he.removeEventListener(
            egret.Event.RESIZE,
            this.ontiebetbtnresize,
            this,
          ),
          this.playercardresultgroup.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.playercardresultClick,
            this,
          ),
          this.bankercardresultgroup.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.bankercardresultClick,
            this,
          ),
          this.video_zoom.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onVideoZoom,
            this,
          ),
          this.bigmicard &&
            this.bigmicard.removeEventListener(
              egret.TouchEvent.TOUCH_BEGIN,
              this.ontouchbigmicard,
              this,
            ),
          this.bigmicard1 &&
            this.bigmicard1.removeEventListener(
              egret.TouchEvent.TOUCH_BEGIN,
              this.ontouchbigmicard,
              this,
            ),
          this.roteChangeBtn.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.roteChangeFun,
            this,
          ),
          SelectTable.getIns().remove(),
          DZTimeCountBar.inst.hide(),
          this.coinsBar.dispose(),
          this.dashangpanel &&
            (this.dashangpanel.dispose(), (this.dashangpanel = null)),
          (this.dashanggroup = null),
          this.bigmicard && (this.bigmicard.dispose(), (this.bigmicard = null)),
          this.bigmicard1 &&
            (this.bigmicard1.dispose(), (this.bigmicard1 = null)),
          this.gameBetAction.dispose(),
          this.timer &&
            (this.timer.reset(),
            this.timer.removeEventListener(
              egret.TimerEvent.TIMER,
              this.timerSeatDeal,
              this,
            )),
          (this.gameBetAction = null),
          (this.coinsBar = null),
          this.route && ((this.routeChangeType = 0), this.updataRoteType()),
          (this.route = null),
          (this.timer = null),
          (this.seatDealList = null),
          (this.pointList = null),
          (this.btnmenugroup = null),
          (this.btnbackgroup = null),
          (this.tongjigroup = null),
          (this.tongjibankertxt = null),
          (this.tongjiplayertxt = null),
          (this.tongjitietxt = null),
          (this.allcarduis = null),
          (this.counttipstxt = null),
          (this.counter = null),
          (this.micounter = null),
          (this.selectedmipaibtn = null),
          dzxx.LiveVideo.ifStopVideo(),
          this.removeChildren(),
          this.parent && this.parent.removeChild(this);
      }),
      (e.OPEN_CARD_VALUE = -1),
      (e.STOP_CARD_VALUE = -2),
      (e.ROTATE_CARD_VALUE_H = -3),
      (e.ROTATE_CARD_VALUE_V = -4),
      e
    );
  })(ViewAbstract);
__reflect(GameView.prototype, "GameView");
var GameWinTips = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (e.text = "tips"), (e.textcolor = DataManager.WHITE_COLOR), e;
  }
  return (
    __extends(e, t),
    (e.prototype.partAdded = function (e, i) {
      t.prototype.partAdded.call(this, e, i);
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this);
    }),
    (e.prototype.show = function () {
      var t = this;
      (this.horizontalCenter = 0),
        (this.verticalCenter = -200),
        ShareUtils.main.addChild(this),
        ShareUtils.callLater(
          2e3,
          function () {
            t.parent && t.parent.removeChild(t);
          },
          this,
        );
    }),
    e
  );
})(eui.Component);
__reflect(GameWinTips.prototype, "GameWinTips", [
  "eui.UIComponent",
  "egret.DisplayObject",
]);
var HeadScreen = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.langs = []),
      (e.totalLen = 3),
      (e.islangshow = !1),
      (e.skinName = "resource/skins/HeadScreen.exml"),
      (e.percentWidth = 100),
      (e.percentHeight = 100),
      e
    );
  }
  return (
    __extends(e, t),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this),
        this.onChange(),
        this.changeLang(),
        LangUtils.addEventListener(this.changeLang, this),
        EventManager.getIns().addEventListener(
          DataChangeEvent.User_INFO,
          this.onChange,
          this,
        ),
        this.btnmenugroup.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.btn_menu_click,
          this,
        ),
        DataManager.Q1E5_login &&
          DataManager.ActivityList &&
          ((this.activityWrap.visible = !0), this.activitybanner()),
        this.activelist.addEventListener(
          egret.Event.CHANGE,
          this.ActivityListGoUrl,
          this,
        ),
        this.onMoneyBiZhongChange(),
        this.inintLangConfig(),
        EventManager.getIns().addEventListener(
          DataChangeEvent.CHECK_USER_BIZHONG_CHANGE,
          this.onMoneyBiZhongChange,
          this,
        ),
        this.btnCocos.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onCocos,
          this,
        ),
        window.cocos_http || (this.btnCocos.visible = !1);
    }),
    (e.prototype.changeLang = function (t) {
      switch (
        (void 0 === t && (t = null),
        (this.lblChange.text = LangUtils.LANG_MAP.SWITCH_NEW_VERSION),
        DataManager.LANG_TYPE)
      ) {
        case DataManager.LANG_SC:
        case DataManager.LANG_TC:
          this.lblChange.size = 18;
          break;
        default:
          this.lblChange.size = 14;
      }
    }),
    (e.prototype.onCocos = function () {
      var t = DataManager.ccData,
        e = document.location.protocol + "//" + window.location.host + "/new",
        i = LangUtils.getCocosLan();
      document.URL.indexOf("app") > 0
        ? (window.location.href = t
            ? e + ("?app=1&eData=" + t + "&language=" + i)
            : e + ("?language=" + i))
        : (window.location.href = t
            ? e + ("?eData=" + t + "&language=" + i)
            : e + ("?language=" + i));
    }),
    (e.getIns = function () {
      return e.ins || (e.ins = new e()), e.ins;
    }),
    (e.prototype.activitybanner = function () {
      this.nextmovetimer && this.nextmovetimer.stop(),
        this.activelist && egret.Tween.removeTweens(this.activelist);
      var t = [];
      (t = DataManager.ActivityList),
        (this.totalLen = t.length),
        this.totalLen > 2 && ((t = t.concat(t)), t.push(t[0], t[1])),
        (this.activelist.itemRenderer = ActivityPicItem),
        (this.activelist.dataProvider = new eui.ArrayCollection(t)),
        this.totalLen > 2 && this.movenext();
    }),
    (e.prototype.movenext = function () {
      this.nextmovetimer = ShareUtils.callLater(3e3, this.moveBan, this);
    }),
    (e.prototype.lastmovenext = function () {
      this.nextmovetimer = ShareUtils.callLater(0, this.moveBan, this);
    }),
    (e.prototype.moveBan = function () {
      egret.Tween.removeTweens(this.activelist);
      var t = Math.floor(this.activelist.scrollV / this.activityWrap.height);
      t++, t > this.totalLen && (t = 0);
      var e = this.activityWrap.height * t;
      0 === e
        ? egret.Tween.get(this.activelist)
            .to(
              {
                scrollV: e,
              },
              0,
              egret.Ease.sineInOut,
            )
            .call(this.lastmovenext, this)
        : egret.Tween.get(this.activelist)
            .to(
              {
                scrollV: e,
              },
              1e3,
              egret.Ease.sineInOut,
            )
            .call(this.movenext, this);
    }),
    (e.prototype.ActivityListGoUrl = function (t) {
      var e = this.activelist.selectedItem;
      window.open(e.promourl);
    }),
    (e.prototype.showLangBtn = function (t) {
      this.langgroup.visible = t;
    }),
    (e.prototype.onChange = function (t) {
      void 0 === t && (t = null),
        (this.lblNick.text = StringUtils.stringTransstrBYnum(
          DataManager.showName,
        )),
        (this.lblMoney.text = ShareUtils.toMoney2_oo(DataManager.sumAmount)),
        (this.lblMoney_bg.width = this.lblMoney.width + 20);
    }),
    (e.prototype.btn_menu_click = function (t) {
      MenuView.getIns().showhide();
    }),
    (e.prototype.inintLangConfig = function () {
      var t = window.dz_langArr;
      if (
        t.length <= 1 ||
        DataManager.fast_login ||
        DataManager.Q1E5_login ||
        DataManager.API168_login ||
        DataManager.GT_login
      )
        return void (this.langgroup.visible = !1);
      if (!(this.langs.length > 0)) {
        for (var e = 0, i = t.length; i > e; ++e) {
          var a = t[e],
            n = new eui.Image();
          (n.source = "lang_" + a + "_png"),
            (n.width = n.height = 48),
            (n.name = DataManager.langKey2[a]),
            n.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onLang, this),
            this.langs.push(n),
            this.langgroup.addChild(n);
        }
        (this.langgroup.visible = !0),
          this.selectlang(DataManager.langKey2[DataManager.LANG_TYPE]);
      }
    }),
    (e.prototype.selectlang = function (t) {
      for (var e in this.langs) {
        var i = this.langs[e];
        t && i.name != t
          ? (i.visible = i.includeInLayout = !1)
          : (i.visible = i.includeInLayout = !0);
      }
      (this.islangshow = !1),
        t
          ? ((this.islangshow = !1),
            t != LangUtils.saveUrl &&
              (LangUtils.getInstance().loadLang(
                t,
                !0,
                !0,
                DataManager.langKey[t],
              ),
              (DataManager.LANG_TYPE = DataManager.langKey[t]),
              LocalData.save(),
              DataManager.saveCookieLang()))
          : (this.islangshow = !0);
    }),
    (e.prototype.onMoneyBiZhongChange = function (t) {
      void 0 === t && (t = null);
    }),
    (e.prototype.onLang = function (t) {
      this.islangshow ? this.selectlang(t.target.name) : this.selectlang(null);
    }),
    e
  );
})(eui.Component);
__reflect(HeadScreen.prototype, "HeadScreen");
var HistoryView = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.gameType_id = "1"),
      (e.selected = 1),
      (e.title_list_1 = [
        "HISTORY_1_ITEM0",
        "HISTORY_1_ITEM1",
        "HISTORY_1_ITEM2",
        "HISTORY_1_ITEM4",
        "HISTORY_1_ITEM3",
      ]),
      (e.title_list_2 = [
        "HISTORY_2_ITEM0",
        "HISTORY_2_ITEM1",
        "HISTORY_2_ITEM2",
        "HISTORY_2_ITEM3",
      ]),
      (e.title_list_3 = [
        "HISTORY_1_ITEM0",
        "HISTORY_1_ITEM1",
        "dzg_main_10003",
        "HISTORY_1_ITEM4",
        "dzg_main_10004",
      ]),
      (e.colors = {}),
      (e.txtFormat = {
        BP: "M_BP",
        PP: "M_PP",
      }),
      (e.page_size = 200),
      e.init(),
      (e.top = 0),
      (e.bottom = 0),
      (e.left = 0),
      (e.right = 0),
      e
    );
  }
  return (
    __extends(e, t),
    (e.prototype.init = function () {
      (this.skinName = "resource/skins/HistoryViewUI.exml"),
        LangUtils.addEventListener(this.changeLang, this),
        this.btnXZ.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.tabebar,
          this,
        ),
        this.btnED.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.tabebar,
          this,
        ),
        this.btnbackgroup.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onBack,
          this,
        ),
        (this.datas = []),
        (this.gTotal.visible = !1),
        this.changeLang(),
        (this.tb.visible = !1),
        this.btnmenugroup.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.btn_menu_click,
          this,
        ),
        this.backPageBtn.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.backPageFun,
          this,
        ),
        this.nextPageBtn.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.nextPageFun,
          this,
        ),
        this.goPageBtn.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.goPageFun,
          this,
        ),
        this.btnTime.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onChangeTime,
          this,
        ),
        this.btnStartTime.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onStartTime,
          this,
        ),
        this.btnEndTime.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onEndTime,
          this,
        ),
        this.shixunGroup.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.selectSXGameFun,
          this,
        ),
        this.qipaiGroup.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.selectQPGameFun,
          this,
        ),
        this.dianziGroup.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.selectDZGameFun,
          this,
        ),
        this.dateUI.addEventListener("SELECT_DATE", this.onSelectDate, this),
        (this.dateUI.visible = !1),
        (this.qipaiGroup.visible = !(
          DataManager.fast_login ||
          DataManager.Q1E5_login ||
          DataManager.API168_login ||
          DataManager.VG_login ||
          DataManager.GT_login
        )),
        (this.dianziGroup.visible = !(
          DataManager.fast_login ||
          DataManager.Q1E5_login ||
          DataManager.API168_login ||
          DataManager.VG_login ||
          DataManager.GT_login
        )),
        new Date().toLocaleTimeString;
      var t = StringUtils.format(new Date(), "h"),
        e = Number(t);
      if (e >= 12) {
        var i = new Date();
        i = new Date(
          new Date(
            StringUtils.format(new Date(), "yyyy-MM-dd").replace(/-/g, "/"),
          ).getTime() + 864e5,
        );
        var a = StringUtils.format(i, "yyyy-MM-dd");
        (this.lbEndTime.text = a), (this.endTime = i);
        var n = void 0;
        n = new Date(
          new Date(
            StringUtils.format(new Date(), "yyyy-MM-dd").replace(/-/g, "/"),
          ).getTime(),
        );
        var s = StringUtils.format(n, "yyyy-MM-dd");
        (this.lbStartTime.text = s), (this.startTime = n);
      } else {
        var i = new Date();
        i = new Date(
          new Date(
            StringUtils.format(new Date(), "yyyy-MM-dd").replace(/-/g, "/"),
          ).getTime(),
        );
        var a = StringUtils.format(i, "yyyy-MM-dd");
        (this.lbEndTime.text = a), (this.endTime = i);
        var n = void 0;
        n = new Date(
          new Date(
            StringUtils.format(new Date(), "yyyy-MM-dd").replace(/-/g, "/"),
          ).getTime() - 864e5,
        );
        var s = StringUtils.format(n, "yyyy-MM-dd");
        (this.lbStartTime.text = s), (this.startTime = n);
      }
    }),
    (e.prototype.onChangeTime = function () {
      this.load();
    }),
    (e.prototype.onStartTime = function () {
      (this.imgStartArrow.source = "blue_screenbg_10_png"),
        this.dateUI.onGetDate(this.startTime, "start");
    }),
    (e.prototype.onEndTime = function () {
      (this.imgEndArrow.source = "blue_screenbg_10_png"),
        this.dateUI.onGetDate(this.endTime, "end");
    }),
    (e.prototype.onSelectDate = function (t) {
      var e = t.data.date;
      null != e &&
        ("start" == t.data.time
          ? ((this.lbStartTime.text = StringUtils.format(e, "yyyy-MM-dd")),
            (this.startTime = e),
            (this.imgStartArrow.source = "blue_data_bg7_png"))
          : ((this.lbEndTime.text = StringUtils.format(e, "yyyy-MM-dd")),
            (this.endTime = e),
            (this.imgStartArrow.source = "blue_data_bg7_png")));
    }),
    (e.prototype.btn_menu_click = function (t) {
      MenuView.getIns().showhide();
    }),
    (e.prototype.show = function () {
      ShareUtils.viewGroup.addChild(this), this.selectTab(1);
    }),
    (e.prototype.changeLang = function (t) {
      void 0 === t && (t = null),
        (this.cur_page = 1),
        (this.all_page = 1),
        (this.pageEdi_lab.text = ""),
        this.setPageCongig(),
        (this.btnXZ.label = LangUtils.LANG_MAP.HISTORY_TITLE_BUTTON1),
        (this.btnED.label = LangUtils.LANG_MAP.HISTORY_TITLE_BUTTON2),
        (this.btnTime.label = LangUtils.LANG_MAP.HISTORY_BTN_SEARCH),
        (this.shixunTxt.text = LangUtils.LANG_MAP.dzg_main_28),
        (this.qipaiTxt.text = LangUtils.LANG_MAP.dzg_main_29),
        (this.dianziTxt.text = LangUtils.LANG_MAP.dzg_main_303),
        (this.backPageBtn.label = LangUtils.LANG_MAP.dzg_main_32),
        (this.nextPageBtn.label = LangUtils.LANG_MAP.dzg_main_33),
        (this.goPageBtn.label = LangUtils.LANG_MAP.dzg_main_34),
        (this.langLab5.text = LangUtils.LANG_MAP.dzg_main_10015),
        (this.langLab6.text = LangUtils.LANG_MAP.dzg_main_10016),
        (this.tb.dataProvider = new eui.ArrayCollection(
          LangUtils.LANG_MAP.HISTORY_TITLE_LIST.split(","),
        )),
        t && this.load(),
        (this.lblTip.text = LangUtils.LANG_MAP.HISTORY_DATA_NULL),
        (this.titletxt.text = LangUtils.LANG_MAP.historyViewTitle),
        DataManager.LANG_TYPE == DataManager.LANG_EN
          ? ((this.backPageBtn.labelDisplay.size = 18),
            (this.nextPageBtn.labelDisplay.size = 16))
          : DataManager.LANG_TYPE == DataManager.LANG_KN
            ? ((this.backPageBtn.labelDisplay.size = 16),
              (this.nextPageBtn.labelDisplay.size = 16))
            : DataManager.LANG_TYPE == DataManager.LANG_VL
              ? ((this.backPageBtn.labelDisplay.size = 16),
                (this.nextPageBtn.labelDisplay.size = 16))
              : DataManager.LANG_TYPE == DataManager.LANG_HN ||
                  DataManager.LANG_TYPE == DataManager.LANG_JPN ||
                  DataManager.LANG_TYPE == DataManager.LANG_KR
                ? ((this.backPageBtn.labelDisplay.size = 16),
                  (this.nextPageBtn.labelDisplay.size = 16))
                : ((this.backPageBtn.labelDisplay.size = 22),
                  (this.nextPageBtn.labelDisplay.size = 22));
    }),
    (e.prototype.selectSXGameFun = function () {
      (this.cur_page = 1),
        (this.all_page = 1),
        (this.pageEdi_lab.text = ""),
        this.setPageCongig(),
        this.selectGameTypeFun("1"),
        this.load();
    }),
    (e.prototype.selectQPGameFun = function () {
      (this.cur_page = 1),
        (this.all_page = 1),
        (this.pageEdi_lab.text = ""),
        this.setPageCongig(),
        this.selectGameTypeFun("2"),
        this.load();
    }),
    (e.prototype.selectDZGameFun = function () {
      (this.cur_page = 1),
        (this.all_page = 1),
        (this.pageEdi_lab.text = ""),
        this.setPageCongig(),
        this.selectGameTypeFun("3"),
        this.load();
    }),
    (e.prototype.tbChange = function (t) {
      this.load();
    }),
    (e.prototype.tabebar = function (t) {
      switch (t.target) {
        case this.btnXZ:
          if (1 == this.selected) return;
          this.selectTab(1);
          break;
        case this.btnED:
          if (2 == this.selected) return;
          this.selectTab(2);
      }
    }),
    (e.prototype.selectTab = function (t) {
      1 == t
        ? ((this.list.itemRendererSkinName = "history_video_renderer"),
          (this.dgTitleBar.itemRendererSkinName = "history_video_renderer"),
          (this.btnXZ.currentState = "down"),
          (this.btnED.currentState = "up"),
          (this.betZJLab.visible = !0),
          (this.reZJLab.visible = !0),
          (this.ximaZJLab.visible = !0),
          (this.betZJLab.text = ""),
          (this.reZJLab.text = ""),
          (this.ximaZJLab.text = ""),
          (this.betZJLab_xiao.visible = !0),
          (this.reZJLab_xiao.visible = !0),
          (this.ximaZJLab_xiao.visible = !0),
          (this.betZJLab_xiao.text = ""),
          (this.reZJLab_xiao.text = ""),
          (this.ximaZJLab_xiao.text = ""),
          (this.gameTypeGroup.visible = !0),
          (this.gameTypeGroup.height = 60),
          this.selectGameTypeFun("1"))
        : ((this.list.itemRendererSkinName = "history_credit_renderer"),
          (this.dgTitleBar.itemRendererSkinName = "history_credit_renderer"),
          (this.btnXZ.currentState = "up"),
          (this.btnED.currentState = "down"),
          (this.betZJLab.visible = !1),
          (this.reZJLab.visible = !1),
          (this.ximaZJLab.visible = !1),
          (this.betZJLab_xiao.visible = !1),
          (this.reZJLab_xiao.visible = !1),
          (this.ximaZJLab_xiao.visible = !1),
          (this.gameTypeGroup.visible = !1),
          (this.gameTypeGroup.height = 0)),
        (this.selected = t),
        this.load();
    }),
    (e.prototype.selectGameTypeFun = function (t) {
      void 0 === t && (t = "1"),
        (this.gameType_id = t),
        "1" == t
          ? ((this.shixunBgImg.source = "blue_screenbg_16_png"),
            (this.qipaiBgImg.source = "blue_screenbg_17_png"),
            (this.dianziBgImg.source = "blue_screenbg_17_png"),
            (this.shixunTxt.textColor = 0),
            (this.qipaiTxt.textColor = 16777215),
            (this.dianziTxt.textColor = 16777215))
          : "2" == t
            ? ((this.shixunBgImg.source = "blue_screenbg_17_png"),
              (this.qipaiBgImg.source = "blue_screenbg_16_png"),
              (this.dianziBgImg.source = "blue_screenbg_17_png"),
              (this.shixunTxt.textColor = 16777215),
              (this.qipaiTxt.textColor = 0),
              (this.dianziTxt.textColor = 16777215))
            : "3" == t &&
              ((this.shixunBgImg.source = "blue_screenbg_17_png"),
              (this.qipaiBgImg.source = "blue_screenbg_17_png"),
              (this.dianziBgImg.source = "blue_screenbg_16_png"),
              (this.shixunTxt.textColor = 16777215),
              (this.qipaiTxt.textColor = 16777215),
              (this.dianziTxt.textColor = 0));
    }),
    (e.prototype.backPageFun = function () {
      this.cur_page > 1 && ((this.cur_page = this.cur_page - 1), this.load());
    }),
    (e.prototype.nextPageFun = function () {
      this.cur_page < this.all_page &&
        ((this.cur_page = this.cur_page + 1), this.load());
    }),
    (e.prototype.goPageFun = function () {
      var t = this.pageEdi_lab.text;
      if (null == t || void 0 == t || "" == t)
        return void Alert.tip(LangUtils.LANG_MAP.dzg_main_55);
      var e = parseInt(t);
      return e > this.all_page
        ? void Alert.tip(LangUtils.LANG_MAP.dzg_main_55)
        : e == this.cur_page
          ? void Alert.tip(LangUtils.LANG_MAP.dzg_main_55)
          : 0 >= e
            ? void Alert.tip(LangUtils.LANG_MAP.dzg_main_55)
            : void this.load(e);
    }),
    (e.prototype.load = function (t) {
      void 0 === t && (t = -1),
        (this.datas.length = 0),
        (this.lblTip.visible = !1);
      var e = 1 == this.selected ? this.title_list_1 : this.title_list_2;
      1 == this.selected
        ? ((this.titleGroup0.visible = !0),
          (this.titleGroup1.visible = !1),
          "2" == this.gameType_id || "3" == this.gameType_id
            ? ((e = this.title_list_3),
              (this.fbLab_0.text = LangUtils.LANG_MAP[e[0]].replace(" ", "\n")),
              (this.fbLab_1.text = LangUtils.LANG_MAP[e[1]]),
              (this.fbLab_2.text = LangUtils.LANG_MAP[e[2]].replace(" ", "\n")),
              (this.fbLab_3.text = LangUtils.LANG_MAP[e[3]]),
              (this.fbLab_4.text = LangUtils.LANG_MAP[e[4]]),
              DataManager.LANG_TYPE == DataManager.LANG_VL
                ? ((this.fbLab_0.size = 22),
                  (this.fbLab_1.size = 22),
                  (this.fbLab_2.size = 22),
                  (this.fbLab_3.size = 22),
                  (this.fbLab_4.size = 22))
                : ((this.fbLab_0.size = 30),
                  (this.fbLab_1.size = 30),
                  (this.fbLab_2.size = 30),
                  (this.fbLab_3.size = 30),
                  (this.fbLab_4.size = 30)))
            : ((this.fbLab_0.text = LangUtils.LANG_MAP[e[0]].replace(
                " ",
                "\n",
              )),
              (this.fbLab_1.text = LangUtils.LANG_MAP[e[1]]),
              (this.fbLab_2.text = LangUtils.LANG_MAP[e[2]]),
              (this.fbLab_3.text = LangUtils.LANG_MAP[e[3]]),
              (this.fbLab_4.text = LangUtils.LANG_MAP[e[4]]),
              DataManager.LANG_TYPE == DataManager.LANG_VL
                ? ((this.fbLab_0.size = 22),
                  (this.fbLab_1.size = 22),
                  (this.fbLab_2.size = 22),
                  (this.fbLab_3.size = 22),
                  (this.fbLab_4.size = 22))
                : ((this.fbLab_0.size = 30),
                  (this.fbLab_1.size = 30),
                  (this.fbLab_2.size = 30),
                  (this.fbLab_3.size = 30),
                  (this.fbLab_4.size = 30))))
        : ((this.titleGroup0.visible = !1),
          (this.titleGroup1.visible = !0),
          (this.fbLab2_0.text = LangUtils.LANG_MAP[e[0]]),
          (this.fbLab2_1.text = LangUtils.LANG_MAP[e[1]]),
          (this.fbLab2_2.text = LangUtils.LANG_MAP[e[2]]),
          (this.fbLab2_3.text = LangUtils.LANG_MAP[e[3]])),
        (this.list.dataProvider = null),
        Alert.loading(),
        "3" == this.gameType_id
          ? t > 0
            ? new HttpPostHandle(
                DataManager.HTTP_HOST +
                  (1 == this.selected
                    ? "/client/api/slotBetRecord"
                    : "/client/ClientAccountChanges.jsp") +
                  this.parmStr2(t),
                null,
                1 == this.selected ? this.laohujiresult : this.result,
                this,
                egret.URLRequestMethod.GET,
              )
            : new HttpPostHandle(
                DataManager.HTTP_HOST +
                  (1 == this.selected
                    ? "/client/api/slotBetRecord"
                    : "/client/ClientAccountChanges.jsp") +
                  this.parmStr(),
                null,
                1 == this.selected ? this.laohujiresult : this.result,
                this,
                egret.URLRequestMethod.GET,
              )
          : t > 0
            ? new HttpPostHandle(
                DataManager.HTTP_HOST +
                  (1 == this.selected
                    ? "/client/ClientbettingInfo.jsp"
                    : "/client/ClientAccountChanges.jsp") +
                  this.parmStr2(t),
                null,
                this.result,
                this,
                egret.URLRequestMethod.GET,
              )
            : new HttpPostHandle(
                DataManager.HTTP_HOST +
                  (1 == this.selected
                    ? "/client/ClientbettingInfo.jsp"
                    : "/client/ClientAccountChanges.jsp") +
                  this.parmStr(),
                null,
                this.result,
                this,
                egret.URLRequestMethod.GET,
              );
    }),
    (e.prototype.setPageCongig = function () {
      (this.backPageBtn.enabled = !0),
        (this.nextPageBtn.enabled = !0),
        1 == this.cur_page && (this.backPageBtn.enabled = !1),
        this.cur_page == this.all_page && (this.nextPageBtn.enabled = !1),
        ShareUtils.setGrayFilter(this.backPageBtn, !this.backPageBtn.enabled),
        ShareUtils.setGrayFilter(this.nextPageBtn, !this.nextPageBtn.enabled),
        (this.pageLab.text =
          this.cur_page.toString() + "/" + this.all_page.toString()),
        (this.betScroller.viewport.scrollV = 0);
    }),
    (e.prototype.parmStr2 = function (t) {
      return (
        void 0 === t && (t = 1),
        1 == this.selected
          ? "?userId=" +
            DataManager.userid +
            "&pageIndex=" +
            t +
            "&pageSize=" +
            this.page_size +
            "&name=" +
            DataManager.userName +
            "&startTime=" +
            this.lbStartTime.text +
            "&endTime=" +
            this.lbEndTime.text +
            "&t=" +
            new Date().getTime() +
            "&queryType=" +
            this.gameType_id
          : "?userId=" +
            DataManager.userid +
            "&pageIndex=" +
            t +
            "&pageSize=" +
            this.page_size +
            "&name=" +
            DataManager.userName +
            "&startTime=" +
            this.lbStartTime.text +
            "&endTime=" +
            this.lbEndTime.text +
            "&t=" +
            new Date().getTime()
      );
    }),
    (e.prototype.parmStr = function () {
      return 1 == this.selected
        ? "?userId=" +
            DataManager.userid +
            "&pageIndex=" +
            this.cur_page +
            "&pageSize=" +
            this.page_size +
            "&name=" +
            DataManager.userName +
            "&startTime=" +
            this.lbStartTime.text +
            "&endTime=" +
            this.lbEndTime.text +
            "&t=" +
            new Date().getTime() +
            "&queryType=" +
            this.gameType_id
        : "?userId=" +
            DataManager.userid +
            "&pageIndex=" +
            this.cur_page +
            "&pageSize=" +
            this.page_size +
            "&name=" +
            DataManager.userName +
            "&startTime=" +
            this.lbStartTime.text +
            "&endTime=" +
            this.lbEndTime.text +
            "&t=" +
            new Date().getTime();
    }),
    (e.prototype.getTime = function () {
      var t,
        e,
        i = new Date();
      switch (this.tb.selectedIndex) {
        case 0:
          (t = StringUtils.formatDate(
            "%Y-%m-%d",
            new Date(i.getTime() - 864e5),
          )),
            (e = StringUtils.formatDate(
              "%Y-%m-%d",
              new Date(i.getTime() + 864e5),
            ));
          break;
        case 1:
          (t = StringUtils.formatDate(
            "%Y-%m-%d",
            new Date(i.getTime() - 6048e5),
          )),
            (e = StringUtils.formatDate(
              "%Y-%m-%d",
              new Date(i.getTime() + 864e5),
            ));
          break;
        case 2:
          (t = StringUtils.formatDate(
            "%Y-%m-%d",
            new Date(i.getTime() - 2592e6),
          )),
            (e = StringUtils.formatDate(
              "%Y-%m-%d",
              new Date(i.getTime() + 864e5),
            ));
      }
      return [t, e];
    }),
    (e.prototype.result = function (t) {
      if ((Alert.hideLoading(), !t))
        return void Alert.show(LangUtils.LANG_MAP.LOADING_HISTORY_ERROR);
      this.list.itemRenderer = null;
      var e = t.children,
        i = e[0].children[0],
        a = e[1].children[0].text,
        n = e[3].children[0].text;
      if (
        ((this.cur_page = Math.max(1, parseInt(a))),
        (this.all_tiao = Math.max(1, parseInt(n))),
        (this.all_page = Math.ceil(this.all_tiao / this.page_size)),
        (this.gTotal.visible = !1),
        (this.gTotal.includeInLayout = !1),
        this.setPageCongig(),
        "0" == i.text)
      ) {
        var s = void 0;
        if (1 == this.selected) {
          var r = e[4],
            o = 0,
            h = 0,
            l = 0;
          for (s = 0; s < r.children.length; s++) {
            var g = r.children[s],
              u = parseFloat(g.$GAMETYPE),
              c = g.$STATE,
              d = "C" == c,
              p = new HistoryItem(
                g.$INNINGID + "\n(" + g.$ORDERID + ")",
                g.$CREATETIME,
                "",
                "",
              ),
              _ = s % 2 == 0,
              b = _ ? DataManager.BLUE_COLOR : DataManager.BLUE_COLOR;
            (p.bgcolor = _ ? 2236962 : 0), (p.textColor = b);
            var m = g.$COMMAMOUNT,
              T = g.$WINLOST,
              v = g.$BETPOINT,
              E = g.$BETAMOUNT,
              f = g.$RESULT;
            if (
              ((v = this.txtFormat[v] || v),
              (o += Number(T.toString())),
              (h += Number(E)),
              (l += Number(m.toString())),
              u == DataManager.GAME_TYPE_DRAGONTIGER &&
                ("BANKER" == v && (v = "DRAGON"),
                "BANKER" == f && (f = "DRAGON"),
                "PLAYER" == v && (v = "TIGER"),
                "PLAYER" == f && (f = "TIGER"),
                "BO" == v && (v = "DO"),
                "BO" == f && (f = "DO"),
                "BE" == v && (v = "DE"),
                "BE" == f && (f = "DE"),
                "BB" == v && (v = "DB"),
                "BB" == f && (f = "DB"),
                "BR" == v && (v = "DR"),
                "BR" == f && (f = "DR"),
                "PO" == v && (v = "TO"),
                "PO" == f && (f = "TO"),
                "PE" == v && (v = "TE"),
                "PE" == f && (f = "TE"),
                "PB" == v && (v = "TB"),
                "PB" == f && (f = "TB"),
                "PR" == v && (v = "TR"),
                "PR" == f && (f = "TR")),
              u == DataManager.GAME_TYPE_NIUNIU)
            ) {
              if (void 0 != v && null != v && -1 != v.indexOf("YAJIN"))
                continue;
              if (
                ((v = "dzg_niuniu_limit_" + v),
                "" != f && null != f && void 0 != f)
              ) {
                for (var L = "", y = JSON.parse(f), M = 0; M < y.length; M++) {
                  var A = y[M];
                  0 == M
                    ? ((L += LangUtils.get("Corrida_BANKER") + " "),
                      (L += this.judgeNiu(A)))
                    : ((L += "、" + LangUtils.get("Corrida_PLAYER") + M + " "),
                      (L += this.judgeNiu(A)));
                }
                f = L;
              }
            }
            var D = LangUtils.get(v);
            if (/YAJIN\d/.test(v)) {
              var S = LangUtils.get(v.replace(/(.*)YAJIN\d/, "$1")),
                C = LangUtils.get("foregift"),
                I = v.replace(/.*(\d)/, "$1");
              D = S + C + I;
            }
            var w = d
              ? {
                  text: LangUtils.get("RESULT_CANCELED"),
                  style: {
                    textColor: DataManager.WHITE_COLOR,
                  },
                }
              : null;
            u == DataManager.GAME_TYPE_BACCARAT &&
              "1" == g.$JP &&
              "BANKER" == v &&
              (D = D + "(" + LangUtils.LANG_MAP.dzg_main_10018 + ")"),
              "1" == this.gameType_id
                ? (p.betPoint_textFlow = [
                    {
                      text: D,
                      style: {
                        bold: !0,
                        textColor: this.colors[v] || DataManager.BLUE_COLOR,
                      },
                    },
                    {
                      text: "\n",
                    },
                    {
                      text: E,
                      style: {
                        textColor: b,
                      },
                    },
                  ])
                : "2" == this.gameType_id
                  ? ((D =
                      null != DataManager.dzGameNameHash[u] &&
                      "" != DataManager.dzGameNameHash[u]
                        ? DataManager.dzGameNameHash[u]
                        : u.toString()),
                    (p.betPoint_textFlow = [
                      {
                        text: D,
                        style: {
                          bold: !0,
                          textColor: this.colors[v] || DataManager.BLUE_COLOR,
                        },
                      },
                      {
                        text: "\n",
                      },
                      {
                        text: E,
                        style: {
                          textColor: b,
                        },
                      },
                    ]))
                  : "3" == this.gameType_id &&
                    ((D =
                      null != DataManager.dzGameNameHash[u] &&
                      "" != DataManager.dzGameNameHash[u]
                        ? DataManager.dzGameNameHash[u]
                        : u.toString()),
                    (p.betPoint_textFlow = [
                      {
                        text: D,
                        style: {
                          bold: !0,
                          textColor: this.colors[v] || DataManager.BLUE_COLOR,
                        },
                      },
                      {
                        text: "\n",
                      },
                      {
                        text: E,
                        style: {
                          textColor: b,
                        },
                      },
                    ]));
            m > 0 ? DataManager.BLUE_COLOR : DataManager.RED_COLOR,
              parseFloat(this.colors[f] || DataManager.WHITE_COLOR);
            p.betXima_textFlow = [
              {
                text: m,
                style: {
                  bold: !1,
                  textColor: this.colors[v] || DataManager.BLUE_COLOR,
                },
              },
              {
                text: "",
                style: {
                  textColor: b,
                },
              },
            ];
            var P = T > 0 ? DataManager.BLUE_COLOR : DataManager.RED_COLOR,
              B = parseFloat(this.colors[f] || DataManager.BLUE_COLOR);
            if ("1" == this.gameType_id) {
              var R = LangUtils.get(f);
              u == DataManager.GAME_TYPE_LUNPAGAME && (R = f),
                (p.betResult_textFlow = [
                  w || {
                    text: R,
                    style: {
                      bold: !0,
                      textColor: B,
                    },
                  },
                  {
                    text: "\n",
                  },
                  {
                    text: T,
                    style: {
                      textColor: P,
                    },
                  },
                ]);
            } else
              "2" == this.gameType_id
                ? (p.betResult_textFlow = [
                    w || {
                      text: "",
                      style: {
                        bold: !0,
                        textColor: B,
                      },
                    },
                    {
                      text: T,
                      style: {
                        textColor: P,
                      },
                    },
                  ])
                : "3" == this.gameType_id &&
                  (p.betResult_textFlow = [
                    w || {
                      text: "",
                      style: {
                        bold: !0,
                        textColor: B,
                      },
                    },
                    {
                      text: T,
                      style: {
                        textColor: P,
                      },
                    },
                  ]);
            this.datas.push(p);
          }
          var N = 0,
            x = 0,
            O = 0,
            G = e[5];
          (N = Number(G.$SUM_WINLOST)),
            (x = Number(G.$SUM_COMMAMOUNT)),
            (O = Number(G.$SUM_BETAMOUNT)),
            (this.betZJLab.text =
              LangUtils.LANG_MAP.dzg_main_10005 +
              " :" +
              ShareUtils.toMoney(G.$SUM_BETAMOUNT)),
            (this.reZJLab.text =
              LangUtils.LANG_MAP.dzg_main_10006 +
              " :" +
              ShareUtils.toMoney(G.$SUM_WINLOST)),
            (this.ximaZJLab.text =
              LangUtils.LANG_MAP.dzg_main_10007 +
              " :" +
              ShareUtils.toMoney(G.$SUM_COMMAMOUNT)),
            (this.betZJLab.textColor =
              O > 0 ? DataManager.BLUE_COLOR : DataManager.RED_COLOR),
            (this.reZJLab.textColor =
              N > 0 ? DataManager.BLUE_COLOR : DataManager.RED_COLOR),
            (this.ximaZJLab.textColor =
              x > 0 ? DataManager.BLUE_COLOR : DataManager.RED_COLOR),
            (this.betZJLab_xiao.text =
              LangUtils.LANG_MAP.dzg_main_10008 +
              ":" +
              ShareUtils.toMoney2_oo(h)),
            (this.reZJLab_xiao.text =
              LangUtils.LANG_MAP.dzg_main_10009 +
              ":" +
              ShareUtils.toMoney2_oo(o)),
            (this.ximaZJLab_xiao.text =
              LangUtils.LANG_MAP.dzg_main_10010 +
              ":" +
              ShareUtils.toMoney2_oo(l)),
            (this.betZJLab_xiao.textColor =
              h > 0 ? DataManager.BLUE_COLOR : DataManager.RED_COLOR),
            (this.reZJLab_xiao.textColor =
              o > 0 ? DataManager.BLUE_COLOR : DataManager.RED_COLOR),
            (this.ximaZJLab_xiao.textColor =
              l > 0 ? DataManager.BLUE_COLOR : DataManager.RED_COLOR),
            (this.gTotal.height = 120),
            (this.gTotal.visible = !0),
            (this.gTotal.includeInLayout = !0),
            (this.list.dataProvider = new eui.ArrayCollection(this.datas)),
            0 == r.children.length && (this.lblTip.visible = !0);
        } else {
          var U = e[4];
          for (s = 0; s < U.children.length; s++) {
            var g = U.children[s],
              H = g.$amount;
            if ("create" != g.$CODE) {
              var k = LangUtils.LANG_MAP["dzg_" + g.$CODE],
                p = new HistoryItem(g.$CREATETIME, k, H.toString(), g.$Aamount),
                _ = s % 2 == 0;
              (p.textColor = _
                ? DataManager.BLUE_COLOR
                : DataManager.BLUE_COLOR),
                (p.bgcolor = _ ? 2236962 : 0),
                (p.amountcolor =
                  H > 0 ? DataManager.BLUE_COLOR : DataManager.RED_COLOR),
                this.datas.push(p);
            }
          }
          (this.list.dataProvider = new eui.ArrayCollection(this.datas)),
            0 == U.children.length && (this.lblTip.visible = !0);
        }
      }
    }),
    (e.prototype.laohujiresult = function (t) {
      if ((Alert.hideLoading(), !t))
        return void Alert.show(LangUtils.LANG_MAP.LOADING_HISTORY_ERROR);
      if (0 == t.state) {
        var e = t.value.page.gameRecords;
        (this.list.itemRenderer = RecordlistItem),
          (this.list.dataProvider = new eui.ArrayCollection(e)),
          0 == e.length && (this.lblTip.visible = !0);
        var i = 0,
          a = 0,
          n = 0;
        e.forEach(function (t) {
          (i += t.amount), (a += t.comAmount), (n += t.result);
        });
        var s = t.value.total.amount,
          r = t.value.total.comAmount,
          o = t.value.total.result;
        (this.betZJLab.text =
          LangUtils.LANG_MAP.dzg_main_10005 + " :" + ShareUtils.toMoney(s)),
          (this.ximaZJLab.text =
            LangUtils.LANG_MAP.dzg_main_10007 + " :" + ShareUtils.toMoney(r)),
          (this.reZJLab.text =
            LangUtils.LANG_MAP.dzg_main_10006 + " :" + ShareUtils.toMoney(o)),
          (this.betZJLab.textColor =
            i > 0 ? DataManager.BLUE_COLOR : DataManager.RED_COLOR),
          (this.reZJLab.textColor =
            n > 0 ? DataManager.BLUE_COLOR : DataManager.RED_COLOR),
          (this.ximaZJLab.textColor =
            a > 0 ? DataManager.BLUE_COLOR : DataManager.RED_COLOR),
          (this.betZJLab_xiao.text =
            LangUtils.LANG_MAP.dzg_main_10008 +
            ":" +
            ShareUtils.toMoney2_oo(i)),
          (this.reZJLab_xiao.text =
            LangUtils.LANG_MAP.dzg_main_10009 +
            ":" +
            ShareUtils.toMoney2_oo(n)),
          (this.ximaZJLab_xiao.text =
            LangUtils.LANG_MAP.dzg_main_10010 +
            ":" +
            ShareUtils.toMoney2_oo(a)),
          (this.betZJLab_xiao.textColor =
            i > 0 ? DataManager.BLUE_COLOR : DataManager.RED_COLOR),
          (this.reZJLab_xiao.textColor =
            n > 0 ? DataManager.BLUE_COLOR : DataManager.RED_COLOR),
          (this.ximaZJLab_xiao.textColor =
            a > 0 ? DataManager.BLUE_COLOR : DataManager.RED_COLOR),
          (this.gTotal.height = 120),
          (this.gTotal.visible = !0),
          (this.gTotal.includeInLayout = !0);
      } else (this.lblTip.visible = !0), (this.gTotal.visible = !1);
    }),
    (e.prototype.judgeNiu = function (t) {
      var e = "";
      return (e += t.fullNiu
        ? "(" + LangUtils.get("dzg_niuniu_10") + ")"
        : t.hasNiu
          ? 0 == t.point
            ? "(" + LangUtils.get("dzg_niuniu_0") + ")"
            : "(" + LangUtils.get("dzg_niuniu_" + t.point) + ")"
          : "(" + LangUtils.get("dzg_niuniu_11") + ")");
    }),
    (e.prototype.onBack = function (t) {
      this.dispose();
    }),
    (e.prototype.dispose = function () {
      this.removeChildren(),
        LangUtils.removeEventListener(this.changeLang, this),
        this.btnXZ.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.tabebar,
          this,
        ),
        this.btnED.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.tabebar,
          this,
        ),
        this.btnbackgroup.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onBack,
          this,
        ),
        this.btnmenugroup.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.btn_menu_click,
          this,
        ),
        this.btnTime.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onChangeTime,
          this,
        ),
        this.btnStartTime.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onStartTime,
          this,
        ),
        this.btnEndTime.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onEndTime,
          this,
        ),
        this.dateUI.removeEventListener("SELECT_DATE", this.onSelectDate, this),
        this.backPageBtn.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.backPageFun,
          this,
        ),
        this.nextPageBtn.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.nextPageFun,
          this,
        ),
        this.goPageBtn.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.goPageFun,
          this,
        ),
        this.shixunGroup.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.selectSXGameFun,
          this,
        ),
        this.qipaiGroup.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.selectQPGameFun,
          this,
        ),
        this.dianziGroup.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.selectDZGameFun,
          this,
        ),
        (this.dgTitleBar.dataProvider = null),
        (this.list.dataProvider = null),
        (this.btnXZ = null),
        (this.btnED = null),
        (this.btnBack = null),
        (this.btn_menu = null),
        (this.txtFormat = null),
        (this.dgTitleBar = null),
        (this.list = null),
        (this.btnmenugroup = null),
        (this.btnbackgroup = null),
        this.parent && this.parent.removeChild(this);
    }),
    e
  );
})(eui.Component);
__reflect(HistoryView.prototype, "HistoryView");
var LabyGameItem = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.skinName = "resource/skins/LabyGameItem.exml"),
      (e.percentWidth = e.percentHeight = 100),
      e
    );
  }
  return (
    __extends(e, t),
    (e.prototype.partAdded = function (e, i) {
      t.prototype.partAdded.call(this, e, i);
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this),
        LangUtils.addEventListener(this.changeLang, this);
    }),
    (e.prototype.dataChanged = function () {
      this.data &&
        (this.item_bg.source =
          this.data.icon + "_" + DataManager.LANG_TYPE + "_png");
    }),
    (e.prototype.changeLang = function (t) {
      void 0 === t && (t = null), this.dataChanged();
    }),
    (e.prototype.selectTab = function (t) {}),
    e
  );
})(eui.ItemRenderer);
__reflect(LabyGameItem.prototype, "LabyGameItem");
var LobbyView = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.lobbys = []),
      (e.m_notcie_show = !1),
      (e.cur_temp_xml = {}),
      (e.isShowHotGroup = !1),
      e.init(),
      (e.top = 0),
      (e.bottom = 0),
      (e.left = 0),
      (e.right = 0),
      e
    );
  }
  return (
    __extends(e, t),
    (e.prototype.init = function () {
      (this.skinName = "resource/skins/LobbyUI.exml"),
        (this.listLobby.itemRenderer = LabyGameItem),
        EventManager.getIns().addEventListener(
          DataChangeEvent.LOBBY,
          this.showList,
          this,
        ),
        EventManager.getIns().addEventListener(
          DataChangeEvent.NOTICE_MESSAGE,
          this.noticeFun,
          this,
        ),
        EventManager.getIns().addEventListener(
          DataChangeEvent.DUOTAI_SELECT_TABLE_INFO,
          this.duotaiSelectFun,
          this,
        ),
        EventManager.getIns().addEventListener(
          DataChangeEvent.LUNBO_CHANGE,
          this.lunbochangeFun,
          this,
        ),
        this.listLobby.addEventListener(
          egret.Event.CHANGE,
          this.onListChange,
          this,
        ),
        this.btnbackgroup.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onBack,
          this,
        ),
        this.btn_liclose.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onClose,
          this,
        ),
        this.btn_licloseAll.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onClose,
          this,
        ),
        (this.gameListGroup.visible = !1),
        (this.gameListGroup.percentHeight = 0),
        (this.hotGroup.height = 200),
        (this.hotGroup.visible = !1),
        (this.hotGroup.includeInLayout = !1),
        (this.scrollerGroup.visible = !0),
        (this.scrollerGroup.percentHeight = 100),
        this.hotGroup.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onHotFun,
          this,
        ),
        this.btn_1.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.selectLimit,
          this,
        ),
        this.btn_2.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.selectLimit,
          this,
        ),
        this.btn_3.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.selectLimit,
          this,
        ),
        LangUtils.addEventListener(this.changeLang, this),
        this.changeLang(),
        this.banGroup.addEventListener(
          egret.Event.RESIZE,
          this.onBanResize,
          this,
        ),
        (this.limit_group.visible = !1),
        (this.txtNotice.mask = this.imgMask),
        this.onGetNotice(),
        this.onClose(),
        (this.btnbackgroup.visible = !1),
        this.initConfig();
    }),
    (e.prototype.initConfig = function () {
      (this.listLobby.selectedItem = null),
        DataManager.vector_login ||
          this.topScreen.contains(HeadScreen.getIns()) ||
          this.topScreen.addChild(HeadScreen.getIns()),
        HeadScreen.getIns().showLangBtn(!0),
        DataManager.vector_login &&
          ((this.mainGroup.visible = !1),
          (this.btnbackgroup.visible = !1),
          (this.btn_licloseAll.visible = !1),
          this.vector_choseView(DataManager.vector_login_token));
    }),
    (e.prototype.vector_choseView = function (t) {
      var e = this;
      (this.listLobby.selectedItem = null),
        t == DataManager.LOBBY_ID_DUOTAI
          ? (this.topScreen.contains(HeadScreen.getIns()) ||
              this.topScreen.addChild(HeadScreen.getIns()),
            setTimeout(function () {
              (e.btn_liclose.visible = !1), e.enterDuotaiView();
            }, 2e3))
          : ((DataManager.cur_lobby_id = t),
            EventManager.getIns().dispatchEvent(
              new GotoViewEvent(
                GotoViewEvent.GOTO_VIEW,
                View.CHOOSE_TABLE_VIEW,
              ),
            ));
    }),
    (e.prototype.onBanResize = function (t) {
      this.banGroup.addEventListener(
        egret.Event.ENTER_FRAME,
        this.onNextFrameUpdateBan,
        this,
      );
    }),
    (e.prototype.lunbochangeFun = function () {
      SwitcherPicUtil.getInstance().setdata(
        this.banGroup,
        this.banlist,
        DataManager.getBannerMessageArrLength(DataManager.LANG_TYPE),
      );
    }),
    (e.prototype.onNextFrameUpdateBan = function (t) {
      void 0 === t && (t = null),
        this.banGroup.removeEventListener(
          egret.Event.ENTER_FRAME,
          this.onNextFrameUpdateBan,
          this,
        ),
        this.lunbochangeFun();
    }),
    (e.prototype.btn_menu_click = function (t) {
      MenuView.getIns().showhide();
    }),
    (e.prototype.onHotFun = function () {
      (this.listLobby.selectedItem = null),
        (DataManager.cur_lobby_id = 6),
        EventManager.getIns().dispatchEvent(
          new GotoViewEvent(GotoViewEvent.GOTO_VIEW, View.CHOOSE_TABLE_VIEW),
        );
    }),
    (e.prototype.changeLang = function (t) {
      void 0 === t && (t = null),
        (this.lblLimitTitle.text = LangUtils.LANG_MAP.dzg_main_46),
        DataManager.LANG_TYPE == DataManager.LANG_VL
          ? (this.lblLimitTitle.size = 20)
          : (this.lblLimitTitle.size = 29),
        (this.dz_langimg0.source =
          "screen_111_" + DataManager.LANG_TYPE + "_png"),
        (this.dz_langimg1.source =
          "lobbyicon_6_" + DataManager.LANG_TYPE + "_png"),
        this.lunbochangeFun(),
        this.isShowHotGroup && (this.hotGroup.visible = !1),
        1 == DataManager.regular_login &&
          (this.lobbys.push({
            id: 2e3,
            name: LangUtils.LANG_MAP.dzg_main_menu_4,
            icon: "lobbyicon_7",
            quan: 20,
          }),
          this.lobbys.push({
            id: 2100,
            name: LangUtils.LANG_MAP.dzg_main_menu_5,
            icon: "lobbyicon_8",
            quan: 21,
          }),
          this.lobbys.push({
            id: 2200,
            name: LangUtils.LANG_MAP.dzg_main_menu_11,
            icon: "lobbyicon_11",
            quan: 22,
          }));
      var e = this.lobbys.length;
      e > 0 &&
        e % 2 != 0 &&
        this.lobbys.push({
          id: 1e4,
          name: "10000",
          icon: "lobbyicon_10000",
          quan: 1e4,
        });
    }),
    (e.prototype.showList = function (t) {
      this.updateLobbyList(t.data);
    }),
    (e.prototype.updateLobbyList = function (t) {
      if (t.gameList && 0 != t.gameList.length) {
        var e = !1,
          i = t.lobbyid,
          a = t.lobbyid;
        DataManager.Q1E5_login ||
          DataManager.API168_login ||
          (2 == t.lobbyid && ((i = 89), (a = 5.5)));
        var n = {
          id: t.lobbyid,
          name: LangUtils.get("LOBBY_" + t.lobbyid),
          icon: "lobbyicon_" + i,
          quan: a,
        };
        if (
          t.lobbyid == DataManager.LOBBY_ID_FLAGSHIP ||
          t.lobbyid == DataManager.LOBBY_ID_VIP
        )
          e ||
            (this.lobbys.push({
              id: DataManager.LOBBY_ID_FLAGSHIP,
              name: LangUtils.get("LOBBY_" + t.temp_lobbyid),
              icon: "lobbyicon_" + t.temp_lobbyid,
              quan: t.temp_lobbyid,
            }),
            (e = !0));
        else if (
          t.lobbyid == DataManager.LOBBY_ID_YAZHOU &&
          t.gameList &&
          t.gameList.length > 0
        )
          this.lobbys.push({
            id: DataManager.LOBBY_ID_YAZHOU,
            name: LangUtils.LANG_MAP.dzg_main_menu_10,
            icon: "lobbyicon_101",
            quan: 0.8,
          });
        else if (
          t.lobbyid == DataManager.LOBBY_ID_EUROPE &&
          t.gameList &&
          t.gameList.length > 0
        )
          this.lobbys.push({
            id: DataManager.LOBBY_ID_EUROPE,
            name: LangUtils.LANG_MAP.dzg_main_menu_301,
            icon: "lobbyicon_301",
            quan: 0.8,
          });
        else if (
          t.lobbyid == DataManager.LOBBY_ID_MIPAI &&
          t.gameList &&
          t.gameList.length > 0
        ) {
          if (DataManager.Q1E5_login) return;
          this.lobbys.push({
            id: DataManager.LOBBY_ID_MIPAI,
            name: LangUtils.LANG_MAP.dzg_main_menu_20,
            icon: "lobbyicon_20",
            quan: 1.5,
          });
        } else
          t.lobbyid == DataManager.LOBBY_ID_DUOTAI &&
          t.gameList &&
          t.gameList.length > 0
            ? this.lobbys.push({
                id: 5,
                name: LangUtils.LANG_MAP.dzg_main_menu_3,
                icon: "lobbyicon_88",
                quan: 5,
              })
            : t.lobbyid == DataManager.LOBBY_ID_SHAIBAO &&
                t.gameList &&
                t.gameList.length > 0
              ? DataManager.Q1E5_login && DataManager.API168_login
                ? this.lobbys.push({
                    id: DataManager.LOBBY_ID_SHAIBAO,
                    name: LangUtils.LANG_MAP.dzg_main_menu_8,
                    icon: "lobbyicon_99",
                    quan: 9,
                  })
                : this.lobbys.push({
                    id: DataManager.LOBBY_ID_SHAIBAO,
                    name: LangUtils.LANG_MAP.dzg_main_menu_8,
                    icon: "lobbyicon_90",
                    quan: 9,
                  })
              : t.lobbyid != DataManager.LOBBY_ID_VIP &&
                (t.lobbyid != DataManager.LOBBY_ID_GUOJI &&
                  t.gameList &&
                  t.gameList.length > 0 &&
                  this.lobbys.push(n),
                t.lobbyid == DataManager.LOBBY_ID_GUOJI &&
                  t.gameList &&
                  t.gameList.length > 0 &&
                  ((this.hotGroup.visible = !0),
                  (this.hotGroup.includeInLayout = !0)));
        this.lobbys.sort(this.sortFun),
          (this.scrollerGroup.viewport.scrollV = 0),
          (this.listLobby.dataProvider = new eui.ArrayCollection(this.lobbys)),
          -1 != DataManager.ax_lobbyid &&
            -1 != DataManager.ax_tableid &&
            t.lobbyid == DataManager.ax_lobbyid &&
            (this.vector_choseView(DataManager.ax_lobbyid),
            (DataManager.currentLimitKey = "CA"),
            DataManager.ax_lobbyid == DataManager.LOBBY_ID_DUOTAI
              ? MessageHandler.chooseTableDuotai(
                  DataManager.ax_tableid,
                  t.lobbyType,
                )
              : MessageHandler.chooseTable(DataManager.ax_tableid, t.lobbyType),
            (DataManager.ax_lobbyid = -1),
            (DataManager.ax_tableid = -1));
      }
    }),
    (e.prototype.sortFun = function (t, e) {
      return t.quan - e.quan;
    }),
    (e.prototype.selectLimit = function (t) {
      var e = t.target.name.split("_"),
        i = e[0];
      (DataManager.currentLimitKey = i),
        EventManager.getIns().dispatchEvent(
          new DataChangeEvent(DataChangeEvent.DUOTAI_SELECT_TABLE_INFO, i),
        ),
        this.onClose();
    }),
    (e.prototype.onListChange = function (t) {
      var e = this.listLobby.selectedItem;
      if (e) {
        if (e.id == DataManager.LOBBY_ID_LUNPAN && DataManager.Q1E5_login)
          return (
            (this.listLobby.selectedIndex = -1),
            void Alert.tip(LangUtils.LANG_MAP.dzg_main_10)
          );
        if (
          (e.id == DataManager.LOBBY_ID_YAZHOU,
          20 == e.id ||
            9 == e.id ||
            1 == e.id ||
            3 == e.id ||
            2 == e.id ||
            6 == e.id ||
            e.id == DataManager.LOBBY_ID_LUNPAN ||
            e.id == DataManager.LOBBY_ID_EGAMES ||
            e.id == DataManager.LOBBY_ID_YAZHOU ||
            e.id == DataManager.LOBBY_ID_EUROPE)
        )
          (DataManager.cur_lobby_id = e.id),
            EventManager.getIns().dispatchEvent(
              new GotoViewEvent(
                GotoViewEvent.GOTO_VIEW,
                View.CHOOSE_TABLE_VIEW,
              ),
            );
        else if (1e4 == e.id) Alert.tip(LangUtils.LANG_MAP.dzg_main_10);
        else if (5 == e.id) {
          if (!this.enterDuotaiView()) return;
        } else if (2e3 == e.id && "1" == window.dz_sx_game)
          DataManager.fast_login ||
          DataManager.Q1E5_login ||
          DataManager.API168_login ||
          DataManager.VG_login ||
          DataManager.GT_login
            ? Alert.tip(LangUtils.LANG_MAP.dzg_main_10)
            : this.showDianziGameList(1);
        else if (2100 == e.id && "1" == window.dz_buyu_game)
          DataManager.fast_login ||
          DataManager.Q1E5_login ||
          DataManager.API168_login ||
          DataManager.VG_login ||
          DataManager.GT_login
            ? Alert.tip(LangUtils.LANG_MAP.dzg_main_10)
            : this.showDianziGameList(3);
        else {
          if (2200 != e.id || "1" != window.dz_laohuji_game)
            return (
              (this.listLobby.selectedIndex = -1),
              void Alert.tip(LangUtils.LANG_MAP.dzg_main_11)
            );
          DataManager.fast_login ||
          DataManager.Q1E5_login ||
          DataManager.API168_login ||
          DataManager.VG_login ||
          DataManager.GT_login
            ? Alert.tip(LangUtils.LANG_MAP.dzg_main_10)
            : this.showDianziGameList(4);
        }
      }
      this.listLobby.selectedIndex = -1;
    }),
    (e.prototype.enterDuotaiView = function () {
      if (
        ((DataManager.cur_lobby_id = DataManager.LOBBY_ID_DUOTAI),
        DataManager.enterLobby(),
        DataManager.isOpenDuotai &&
          DataManager.curTable &&
          (MessageHandler.leaveTable(DataManager.curTable.tableid),
          (DataManager.curTableState = null),
          (DataManager.curTable = null)),
        DataManager.isOpenDuotai && !DataManager.is_goto_duotai)
      )
        for (var t = 0, e = DataManager.tableStates.length; e > t; ++t) {
          var i = DataManager.tableStates[t],
            a = i.tableInfo;
          if (
            (a.gameType == DataManager.GAME_TYPE_BACCARAT ||
              a.gameType == DataManager.GAME_TYPE_DRAGONTIGER ||
              a.gameType == DataManager.GAME_TYPE_SICBO) &&
            "RP" != a.tablestate &&
            DataManager.getTabArrHaveByLabid(a.tableid)
          )
            return (
              (DataManager.is_goto_duotai = !1),
              a.limitKeys && 1 == a.limitKeys.length
                ? (EventManager.getIns().dispatchEvent(
                    new DataChangeEvent(
                      DataChangeEvent.DUOTAI_SELECT_TABLE_INFO,
                      a.limitKeys[0],
                    ),
                  ),
                  !1)
                : DataManager.currentLimitKey && DataManager.isReconnect
                  ? void EventManager.getIns().dispatchEvent(
                      new DataChangeEvent(
                        DataChangeEvent.DUOTAI_SELECT_TABLE_INFO,
                        DataManager.currentLimitKey,
                      ),
                    )
                  : (!a.limitKeys || a.limitKeys.length <= 0
                      ? Alert.tip(LangUtils.LANG_MAP.UNSELECT_LIMIT_TIP)
                      : ((this.listLobby.selectedIndex = -1),
                        this.showLimit(a)),
                    !1)
            );
        }
      else
        (this.listLobby.selectedIndex = -1),
          DataManager.is_goto_duotai
            ? Alert.tip(LangUtils.LANG_MAP.dzg_main_10011)
            : Alert.tip(LangUtils.LANG_MAP.dzg_main_10);
      return !0;
    }),
    (e.prototype.showDianziGameList = function (t) {
      void 0 === t && (t = 1),
        (this.gameListScroller.viewport.scrollV = 0),
        (this.DZgameList.itemRenderer = 4 == t ? CqGameItem : DzGameItem),
        this.DZgameList.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.gameSelectFun,
          this,
        ),
        (this.gameListGroup.visible = !0),
        (this.gameListGroup.percentHeight = 100),
        (this.scrollerGroup.percentHeight = 0),
        (this.scrollerGroup.visible = !1),
        (this.hotGroup.height = 0),
        (this.hotGroup.visible = !1),
        (this.isShowHotGroup = !0),
        (this.btnbackgroup.visible = !0),
        this.destoryHttpHandle(),
        Alert.loading(LangUtils.LANG_MAP.dzg_main_12),
        (this.DZgameList.selectedItem = null),
        (this.DZgameList.dataProvider = null),
        this.cur_temp_xml[t]
          ? this.gameListBackFun(this.cur_temp_xml[t])
          : 4 == t
            ? (this.gamelist_httpHandle = new HttpPostHandle(
                DataManager.HTTP_HOST_PF +
                  "/client/api/slotGameList?userid=" +
                  DataManager.userid +
                  "&play_type=" +
                  t,
                null,
                this.gameListBackFun,
                this,
                "get",
              ))
            : (this.gamelist_httpHandle = new HttpPostHandle(
                DataManager.HTTP_HOST_PF +
                  "/client/api/gamelist?userid=" +
                  DataManager.userid +
                  "&play_type=" +
                  t,
                null,
                this.gameListBackFun,
                this,
                "get",
              ));
    }),
    (e.prototype.destoryHttpHandle = function () {
      this.gamelist_httpHandle &&
        (this.gamelist_httpHandle.dispose(), (this.gamelist_httpHandle = null)),
        this.goGame_httpHandle &&
          (this.goGame_httpHandle.dispose(), (this.goGame_httpHandle = null));
    }),
    (e.prototype.gameListBackFun = function (t) {
      Alert.hideLoading(),
        console.log("===gameListBackFun==xml=>" + JSON.stringify(t)),
        t &&
          (0 == t.state
            ? null != t.value && "" != t.value && void 0 != t.value
              ? ((this.myCollection = new eui.ArrayCollection(t.value)),
                this.myCollection.length > 4
                  ? (this.DZgameList.layout.columnAlign = "justifyUsingWidth")
                  : (this.DZgameList.layout.columnAlign = "left"),
                (this.DZgameList.dataProvider = this.myCollection),
                t.value.length > 0 &&
                  (this.cur_temp_xml[t.value[0].play_type] = t))
              : Alert.show(LangUtils.LANG_MAP.dzg_main_13)
            : Alert.show(LangUtils.LANG_MAP.dzg_main_14));
    }),
    (e.prototype.gameSelectFun = function (t) {
      var e = this.DZgameList.selectedItem;
      e &&
        (e.gamehall == StringUtils.Decode64Strig(DataManager.Y3E5)
          ? (this.goGame_httpHandle = new HttpPostHandle(
              DataManager.HTTP_HOST_PF +
                "/client/api/slotGameUrl?gamecode=" +
                e.gamecode +
                "&userId=" +
                DataManager.userid +
                "&gamehall=" +
                e.gamehall +
                "&gameplat=Desktop",
              null,
              this.go_Y3E5diangame,
              this,
              "get",
            ))
          : (this.goGame_httpHandle = new HttpPostHandle(
              DataManager.HTTP_HOST_PF +
                "/client/api/login?gametype=" +
                e.game_type +
                "&userid=" +
                DataManager.userid,
              null,
              this.go_diangame,
              this,
              "get",
            ))),
        (this.DZgameList.selectedItem = null);
    }),
    (e.prototype.go_diangame = function (t) {
      Alert.hideLoading(),
        t &&
          0 == t.state &&
          null != t.value &&
          DataManager.openIFrameWebByURL(t.value);
    }),
    (e.prototype.go_Y3E5diangame = function (t) {
      Alert.hideLoading(),
        t &&
          (0 == t.state
            ? null != t.value && DataManager.openIFrameWebByURL(t.value)
            : -5 == t.state
              ? Alert.tip(LangUtils.LANG_MAP.dzg_main_67)
              : -102 == t.state
                ? Alert.tip(LangUtils.LANG_MAP.dzg_main_68)
                : 100004 == t.state
                  ? Alert.tip(LangUtils.LANG_MAP.dzg_main_69)
                  : Alert.tip(LangUtils.LANG_MAP.dzg_main_67));
    }),
    (e.prototype.onBack = function (t) {
      (this.gameListGroup.visible = !1),
        (this.gameListGroup.percentHeight = 0),
        (this.scrollerGroup.visible = !0),
        (this.scrollerGroup.percentHeight = 100),
        (this.btnbackgroup.visible = !1),
        (this.isShowHotGroup = !1),
        this.destoryHttpHandle(),
        this.DZgameList.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.gameSelectFun,
          this,
        ),
        DataManager.enterLobbys();
    }),
    (e.prototype.showLimit = function (t) {
      for (var e, i, a = 0; 3 > a; a++)
        (e = this["btn_" + (a + 1)]),
          t.limitKeys.length > a
            ? ((i = DataManager.getLimitByTableId(t.tableid, t.limitKeys[a])),
              (e.name = t.limitKeys[a] + "_" + t.tableid + "_" + t.gameType),
              (e.label = i[0] + " - " + i[1]),
              (e.visible = !0))
            : (e.visible = !1);
      (this.limit_group.visible = !0),
        (this.lblLimitTableTitle.text = LangUtils.LANG_MAP.dzg_main_menu_3);
    }),
    (e.prototype.duotaiSelectFun = function (t) {
      DataManager.currentLimitKey = t.data;
      for (var e = 0, i = DataManager.tableStates.length; i > e; ++e) {
        var a = DataManager.tableStates[e],
          n = a.tableInfo;
        (n.gameType != DataManager.GAME_TYPE_BACCARAT &&
          n.gameType != DataManager.GAME_TYPE_DRAGONTIGER &&
          n.gameType != DataManager.GAME_TYPE_SICBO) ||
          "RP" == n.tablestate ||
          !DataManager.getTabArrHaveByLabid(n.tableid) ||
          (DataManager.duotai_OKID_arr.length > 0
            ? DataManager.duotai_OKID_arr.indexOf(n.tableid) > -1 &&
              ((DataManager.is_goto_duotai = !0),
              this.enterDuotaitable(n.limitKeys[0], n.tableid, n.gameType))
            : ((DataManager.is_goto_duotai = !0),
              this.enterDuotaitable(n.limitKeys[0], n.tableid, n.gameType)));
      }
    }),
    (e.prototype.enterDuotaitable = function (t, e, i) {
      MessageHandler.chooseTableDuotai(e, i), (this.limit_group.visible = !1);
    }),
    (e.prototype.noticeFun = function (t) {
      var e = t.data;
      e.ntype == DataManager.NOTICE_STYPE_2 && this.onGetNotice();
    }),
    (e.prototype.onGetNotice = function () {
      var t = DataManager.getNoticeStr(DataManager.NOTICE_STYPE_2);
      if (t && t.length > 0) {
        for (var e = [], i = 0; i < t.length; i++) {
          var a = t[i];
          e.push(a);
        }
        this.setNotice(e.join("       ")), (this.m_notcie_show = !0);
      } else this.m_notcie_show = !1;
    }),
    (e.prototype.setNotice = function (t) {
      this.txtNotice.text = t;
      var e,
        i = window.innerWidth;
      egret.Tween.removeTweens(this.txtNotice);
      var a = function () {
        this.txtNotice.x <= -this.txtNotice.width &&
          ((this.txtNotice.x = window.innerWidth),
          this.m_notcie_show || (e.pause(), (this.txtNotice.text = "")));
      };
      (e = egret.Tween.get(this.txtNotice, {
        loop: !0,
        onChange: a,
        onChangeObj: this,
      })),
        (this.txtNotice.x = i),
        e.to(
          {
            x: -this.txtNotice.width - 100,
          },
          6e3 + 200 * t.length,
        ),
        e.play();
    }),
    (e.prototype.onClose = function () {
      this.limit_group.visible = !1;
    }),
    (e.prototype.checkTableState = function (t) {
      return 0 == MessageHandler.connected
        ? (Alert.tip(LangUtils.LANG_MAP.DISCON_TIP), !1)
        : null == t || null == t.tableInfo
          ? !1
          : null == t.tableInfo.limitKeys || 0 == t.tableInfo.limitKeys.length
            ? (Alert.tip(LangUtils.LANG_MAP.ENTER_GAME_TIPS), !1)
            : !0;
    }),
    (e.prototype.updateSize = function () {}),
    (e.prototype.dispose = function () {}),
    e
  );
})(eui.Component);
__reflect(LobbyView.prototype, "LobbyView");
var Login = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.langs = []),
      (e.v_length = 0),
      (e.v_index = 0),
      (e.islangshow = !1),
      (e.nolay = new eui.BasicLayout()),
      (e.vlay = new eui.VerticalLayout()),
      (e.top = 0),
      (e.left = 0),
      (e.right = 0),
      (e.bottom = 0),
      e.init(),
      e
    );
  }
  return (
    __extends(e, t),
    (e.prototype.init = function () {
      null != document.getElementById("login_back") &&
        (document.getElementById("login_back").style.display = ""),
        (this.skinName = "resource/skins/LoginUI.exml"),
        this.btnOK.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.loginEgret,
          this,
        ),
        this.checkBtn.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.updataCheckIconEgret,
          this,
        ),
        (this.txtPwd.inputType = egret.TextFieldInputType.PASSWORD),
        (this.lblV.text = "V" + ShareUtils.VERSION),
        e.isApp
          ? ((this.loginForm.visible = !0),
            EventManager.getIns().addEventListener(
              DataChangeEvent.CHECK_YANZHENG_MESSAGE,
              this.updataCheckIconEgret,
              this,
            ),
            this.updataCheckIconEgret())
          : (EventManager.getIns().addEventListener(
              DataChangeEvent.CHECK_YANZHENG_MESSAGE,
              e.updataCheckIconFun,
              this,
            ),
            e.updataCheckIconFun()),
        this.changeLang(),
        LangUtils.addEventListener(this.changeLang, this),
        ShareUtils.htmlvar_inapp && (this.lblbrowser.visible = !1),
        (this.yaxing_img.visible = !1),
        DataManager.Q1E5_login || DataManager.fast_login
          ? ((this.yaxing_img.source = "logo_png"),
            (this.yaxing_img.width = 150),
            (this.yaxing_img.height = 100))
          : DataManager.API168_login || DataManager.fast_login
            ? ((this.yaxing_img.source = "168APILogo_png"),
              (this.yaxing_img.width = 250),
              (this.yaxing_img.height = 95))
            : DataManager.VG_login
              ? ((this.yaxing_img.source = "vgLogo_png"),
                (this.yaxing_img.width = 112),
                (this.yaxing_img.height = 86))
              : ((this.yaxing_img.source = "logo_png"),
                (this.yaxing_img.width = 150),
                (this.yaxing_img.height = 100)),
        DataManager.GT_login &&
          ((this.yaxing_img.source = "gtLogo_png"),
          (this.yaxing_img.width = 250),
          (this.yaxing_img.height = 86));
    }),
    (e.prototype.onClick = function (t) {}),
    (e.prototype.changeLang = function (t) {
      void 0 === t && (t = null),
        e.isApp
          ? ((this.btnOK.label = LangUtils.LANG_MAP.dzg_login_4),
            (this.txtName.prompt = LangUtils.LANG_MAP.LOGIN_VIEW_NAME),
            (this.txtPwd.prompt = LangUtils.LANG_MAP.LOGIN_VIEW_PWD),
            (this.txtCheck.prompt = LangUtils.LANG_MAP.dzg_login_3))
          : (document
              .getElementById("login_btn")
              .setAttribute("value", LangUtils.LANG_MAP.dzg_login_4),
            document
              .getElementById("userName")
              .setAttribute("placeholder", LangUtils.LANG_MAP.LOGIN_VIEW_NAME),
            document
              .getElementById("pwd")
              .setAttribute("placeholder", LangUtils.LANG_MAP.LOGIN_VIEW_PWD),
            document
              .getElementById("code")
              .setAttribute("placeholder", LangUtils.LANG_MAP.dzg_login_3),
            null != document.getElementById("appDown_btn") &&
              document
                .getElementById("appDown_btn")
                .setAttribute("value", LangUtils.LANG_MAP.dzg_main_61),
            document
              .getElementById("cocos_btn")
              .setAttribute("value", LangUtils.LANG_MAP.SWITCH_NEW_VERSION),
            window.cocos_http || document.getElementById("cocos_btn").remove()),
        document
          .getElementById("app_suggestion")
          .setAttribute("value", LangUtils.get("browser_suggestion")),
        document
          .getElementById("app_version")
          .setAttribute("value", "V" + ShareUtils.VERSION);
    }),
    (e.prototype.inintLangConfig = function () {
      var t = window.dz_langArr;
      if (t.length <= 1 || DataManager.fast_login || DataManager.Q1E5_login)
        return void (this.langgroup.visible = !1);
      if (!(this.langs.length > 0)) {
        for (var e = 0, i = t.length; i > e; ++e) {
          var a = t[e],
            n = new eui.Image();
          (n.source = "lang_" + a + "_png"),
            (n.name = DataManager.langKey2[a]),
            n.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onLang, this),
            this.langs.push(n),
            this.langgroup.addChild(n);
        }
        (this.langgroup.visible = !0),
          this.selectlang(DataManager.langKey2[DataManager.LANG_TYPE]);
      }
    }),
    (e.prototype.selectlang = function (t) {
      for (var e in this.langs) {
        var i = this.langs[e];
        t && i.name != t
          ? (i.visible = i.includeInLayout = !1)
          : (i.visible = i.includeInLayout = !0);
      }
      (this.islangshow = !1),
        t
          ? ((this.islangshow = !1),
            t != LangUtils.saveUrl &&
              (LangUtils.getInstance().loadLang(
                t,
                !0,
                !0,
                DataManager.langKey[t],
              ),
              (DataManager.LANG_TYPE = DataManager.langKey[t]),
              LocalData.save()))
          : (this.islangshow = !0);
    }),
    (e.prototype.onLang = function (t) {
      this.islangshow ? this.selectlang(t.target.name) : this.selectlang(null);
    }),
    (e.loginWithParams = function (t, i, a) {
      return null == t || void 0 == t || "" == t
        ? void alert("请输入账号")
        : null == i || void 0 == i || "" == i
          ? void alert("请输入密码")
          : null == a || void 0 == a || "" == a
            ? void alert("请输入验证码")
            : void (t && i && a
                ? (Alert.loading(LangUtils.LANG_MAP.CONNECT_LOGIN, !0, !0),
                  new HttpPostHandle(
                    DataManager.HTTP_HOST_PF +
                      "/client/loginMobile.jsp" +
                      this.getParm(t, i, a),
                    null,
                    e.result,
                    this,
                    "get",
                  ))
                : alert(LangUtils.LANG_MAP.LOGIN_VIEW_CHECK));
    }),
    (e.prototype.loginEgret = function (t) {
      e.loginWithParams(
        this.txtName.text,
        this.txtPwd.text,
        this.txtCheck.text,
      );
    }),
    (e.login = function (t) {
      var i = document.getElementById("userName"),
        a = document.getElementById("pwd"),
        n = document.getElementById("code");
      e.loginWithParams(i.value, a.value, n.value);
    }),
    (e.result = function (t) {
      if (t)
        if (0 == t.state) {
          if (t.value) {
            var i = JSON.parse(t.value);
            e.setLoginData(i);
          }
        } else {
          var a = t.state,
            n = void 0;
          (n =
            -4 == a
              ? LangUtils.LANG_MAP.dzg_login_10
              : -100 == a
                ? LangUtils.LANG_MAP.dzg_login_11
                : -1 == a
                  ? LangUtils.LANG_MAP.dzg_login_12
                  : -103 == a
                    ? LangUtils.LANG_MAP.dzg_login_13
                    : 100006 == a
                      ? LangUtils.LANG_MAP.dzg_main_52
                      : 100003 == a
                        ? LangUtils.LANG_MAP.dzg_main_53
                        : 100010 == a
                          ? LangUtils.LANG_MAP.dzg_main_54
                          : 100009 == a
                            ? LangUtils.LANG_MAP.dzg_login_12
                            : LangUtils.LANG_MAP.dzg_login_14),
            DataManager.fast_login ||
            DataManager.Q1E5_login ||
            DataManager.API168_login ||
            DataManager.VG_login ||
            DataManager.GT_login ||
            DataManager.ccData
              ? Alert.show(n, "", this.fastBackFun, !1, !0)
              : alert(n),
            EventManager.getIns().dispatchEvent(
              new DataChangeEvent(DataChangeEvent.CHECK_YANZHENG_MESSAGE),
            ),
            Alert.hideLoading();
        }
      else
        alert(LangUtils.LANG_MAP["EGAMES_FRAME_ERROR_-3"]), Alert.hideLoading();
    }),
    (e.setLoginData = function (t) {
      if (
        ((DataManager.USER_NAME = t.UserName),
        (DataManager.CODE = t.Code),
        (DataManager.apiUserToken = t.apiUserToken),
        DataManager.ccData || (DataManager.ccData = btoa(JSON.stringify(t))),
        e.clearUrlParam(),
        void 0 != t.Gametype &&
          null != t.Gametype &&
          "" != t.Gametype &&
          ((DataManager.vector_login_token = t.Gametype),
          (DataManager.vector_login = !0)),
        (Connector.socket_host_arr = []),
        (Connector.socket_port_arr = []),
        (Connector.socket_host_index = 0),
        void 0 != t.Promot && null != t.Promot && "" != t.Promot)
      ) {
        DataManager.ActivityList = t.Promot;
        for (var i = t.Promot, a = 0; a < i.length; a++) {
          var n = i[a];
          n.name ==
            StringUtils.Decode64Strig(DataManager.Q1E5) +
              " 亚星真人打码换红包" &&
            ((DataManager.PROMO_URL = n.promourl),
            (DataManager.IMAGE_URL = n.imageurl));
        }
      }
      var s = t.BailuLineList || t.LineList;
      if (s) {
        var a = 0,
          r = s.length;
        for (
          Connector.socket_obj_arr || (Connector.socket_obj_arr = []);
          r > a;
          ++a
        ) {
          var o = s[a];
          Connector.socket_obj_arr.push({
            host: o.IP,
            port: o.Port,
          });
        }
      }
      Connector.pingHost(),
        Alert.loading(LangUtils.LANG_MAP.CONNECT_LOGIN, !0, !0),
        dzxx.SoundManager.inst.playBGMusic(),
        DataManager.initCookieHaolu(),
        DataManager.configCookieSound(),
        DataManager.configCookieLang(),
        MessageHandler.getIns().connect(),
        e.isApp ||
          (null != document.getElementById("login_back") &&
            (document.getElementById("login_back").style.display = "none"));
    }),
    (e.clearUrlParam = function () {
      var t = window.location.href,
        e = new URLSearchParams(window.location.search);
      if (e.has("ccData")) {
        e["delete"]("ccData");
        var i = t.split("?")[0];
        history.replaceState(null, null, i);
      }
    }),
    (e.fastBackFun = function () {
      (DataManager.ccData = null), (window.location.href = DZUtils.getWebURL());
    }),
    (e.getParm = function (t, e, i) {
      return (
        "?username=" +
        t.toUpperCase() +
        "&host=192.168.3.53&action=loginMobile&secret=DZ&type=0&random=" +
        i +
        "&lang=" +
        DataManager.langCodes[DataManager.LANG_TYPE] +
        "&password=" +
        hex_md5(e).toUpperCase() +
        "&agent=RMB1&clientType=1&phoneType=" +
        encodeURIComponent(window.phoneType)
      );
    }),
    (e.updataCheckIconFun = function (t) {
      void 0 === t && (t = null);
      var e =
          DataManager.HTTP_HOST_PF + "/client/varifycode.jsp?v=" + Date.now(),
        i = document.getElementById("img-container");
      i.style.backgroundImage = "url(" + e + ")";
    }),
    (e.prototype.updataCheckIconEgret = function (t) {
      void 0 === t && (t = null),
        this.checkIcon &&
          this.checkIcon.texture &&
          this.checkIcon.texture.dispose(),
        (this.checkIcon = null),
        DZUtils.loadImageByUrl(
          DataManager.HTTP_HOST_PF + "/client/varifycode.jsp?v=" + Date.now(),
          function (t) {
            if (t) {
              var e = new egret.Texture();
              (e.bitmapData = t),
                (this.checkIcon = new eui.Image(e)),
                (this.checkIcon.width = 100),
                (this.checkIcon.height = 50),
                this.checkBtn.addChild(this.checkIcon),
                (this.checkIcon.x = 2),
                (this.checkIcon.y = 10);
            }
          },
          this,
        );
    }),
    (e.prototype.loadVideo = function (t, e) {}),
    (e.prototype.videoFinish = function () {}),
    (e.prototype.changeScreen = function () {}),
    (e.prototype.updateSize = function () {}),
    (e.appBtn = function (t) {
      ShareUtils.openURL_popWin(
        DataManager.HTTP_HOST_PF + "/download/index.html",
      );
    }),
    (e.prototype.dispose = function () {
      LangUtils.removeEventListener(this.changeLang, this),
        e.isApp ||
          (null != document.getElementById("login_back") &&
            (document.getElementById("login_back").style.display = "none")),
        (this.txtName = null),
        (this.txtPwd = null),
        (this.btnOK = null),
        (this.lblV = null),
        (this.lblbrowser = null),
        (this.langgroup = null),
        (this.langs = null),
        this.removeChildren();
    }),
    (e.isApp = !1),
    e
  );
})(eui.Component);
__reflect(Login.prototype, "Login");
var MenuView = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (e.ignorefirsttap = !1), e.init(), e;
  }
  return (
    __extends(e, t),
    (e.getIns = function () {
      return e.ins || (e.ins = new e()), e.ins;
    }),
    (e.prototype.init = function () {
      (this.skinName = "resource/skins/MenuViewUI.exml"),
        LangUtils.addEventListener(this.changeLang, this),
        this.changeLang(),
        this.btnHistory.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.btnHisory_click,
          this,
        ),
        this.btnSet.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.btnSet_click,
          this,
        ),
        this.btnIM.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.btnIM_click,
          this,
        ),
        this.btnpassword.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.btnpass_click,
          this,
        ),
        this.btnGameOut.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.btnGameOutFun,
          this,
        ),
        ButtonAction.addtap(this.btnGameRule, this.onclickrule, this),
        0 == DataManager.regular_login &&
          ((this.btnpasswordGroup.visible = !1),
          (this.btnIMGroup.visible = !1),
          (this.btnpasswordGroup.includeInLayout = !1),
          (this.btnIMGroup.includeInLayout = !1),
          window.self != window.top ||
            ((this.btnGameOutGroup.visible = !1),
            (this.btnGameOutGroup.includeInLayout = !1))),
        DataManager.Q1E5_login || DataManager.fast_login
          ? ((this.yaxing_img.source = "logo_png"),
            (this.yaxing_img.width = 154),
            (this.yaxing_img.height = 99))
          : DataManager.API168_login || DataManager.fast_login
            ? ((this.yaxing_img.source = "168APILogo_png"),
              (this.yaxing_img.width = 187),
              (this.yaxing_img.height = 69))
            : DataManager.VG_login
              ? ((this.yaxing_img.source = "vgLogo_png"),
                (this.yaxing_img.width = 112),
                (this.yaxing_img.height = 86))
              : DataManager.GT_login
                ? ((this.yaxing_img.source = "gtLogo_png"),
                  (this.yaxing_img.width = 187),
                  (this.yaxing_img.height = 64))
                : ((this.yaxing_img.source = "logo_png"),
                  (this.yaxing_img.width = 154),
                  (this.yaxing_img.height = 99));
    }),
    (e.prototype.btnpass_click = function (t) {
      this.hide(), dzxx.PwdUI.inst.show();
    }),
    (e.prototype.onclickrule = function () {
      var t = ShareUtils.appendHttpIfNoProto(DataManager.HTTP_HOST),
        e = "";
      (e =
        DataManager.LANG_TYPE == DataManager.LANG_SC
          ? t + "/gameRule/msc/baccarat.html"
          : DataManager.LANG_TYPE == DataManager.LANG_TC
            ? t + "/gameRule/zh-tw/baccarat.html"
            : t + "/gameRule/en/baccarat.html"),
        this.hide(),
        ShareUtils.openURL_popWin(e);
    }),
    (e.prototype.showhide = function () {
      this.parent ? this.hide() : this.show();
    }),
    (e.prototype.show = function (t) {
      void 0 === t && (t = null),
        (this.left = 0),
        (this.top = 0),
        (this.bottom = 0),
        (this.right = 0),
        (this.bg_blue.right = null),
        ShareUtils.main.addChild(this),
        (this.ignorefirsttap = !0),
        this.bgBtn.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.stageTap,
          this,
        ),
        DataManager.is_goto_duotai || DataManager.curTable
          ? ((this.switch_line_group.visible = !0), this.videoSwitch.init())
          : (this.switch_line_group.visible = !1);
    }),
    (e.prototype.stageTap = function (t) {
      this.ignorefirsttap, this.hide(), t.preventDefault();
    }),
    (e.prototype.changeLang = function (t) {
      void 0 === t && (t = null),
        (this.btnHistory.source =
          "blue_menu_2_" + DataManager.LANG_TYPE + "_png"),
        (this.btnSet.source = "blue_menu_1_" + DataManager.LANG_TYPE + "_png"),
        (this.btnIM.source = "blue_menu_5_" + DataManager.LANG_TYPE + "_png"),
        (this.btnpassword.source =
          "blue_menu_3_" + DataManager.LANG_TYPE + "_png"),
        (this.btnGameRule.source =
          "blue_menu_4_" + DataManager.LANG_TYPE + "_png"),
        (this.btnGameOut.source =
          "blue_menu_10_" + DataManager.LANG_TYPE + "_png"),
        DataManager.LANG_TYPE == DataManager.LANG_EN
          ? (this.mainGroup.width = 600)
          : (this.mainGroup.width = 500),
        DataManager.LANG_TYPE == DataManager.LANG_JPN
          ? (this.leftGroup.left = 50)
          : (this.leftGroup.left = 85);
    }),
    (e.prototype.btnLobby_click = function (t) {
      void 0 === t && (t = null),
        this.hide(),
        EventManager.getIns().dispatchEvent(
          new GotoViewEvent(GotoViewEvent.GOTO_VIEW, View.LOBBY_VIEW),
        );
    }),
    (e.prototype.btnHisory_click = function (t) {
      if (
        (void 0 === t && (t = null),
        this.hide(),
        DataManager.Q1E5_login || DataManager.API168_login)
      ) {
        var e = window.open("", "_blank"),
          i = DZUtils.getQueryString("language");
        ("" == i || null == i || void 0 == i) && (i = "zh-cn");
        var a = void 0;
        DataManager.Q1E5_login
          ? (a =
              DataManager.HTTP_HOST_PF +
              "/client/api/" +
              StringUtils.Decode64Strig(DataManager.Y3E5) +
              "/playerorder?token=" +
              DataManager.Q1E5_login_token +
              "&language=" +
              i)
          : DataManager.API168_login &&
            (a =
              DataManager.HTTP_HOST_PF +
              "/client/api/168api/playerorder?token=" +
              DataManager.API168_login_token +
              "&language=zh-tw"),
          new HttpPostHandle(
            a,
            null,
            function (t) {
              var a = t.value;
              t.value.indexOf("?") > -1
                ? DataManager.Q1E5_login
                  ? "en" == i
                    ? (a = a + "&language=" + i)
                    : (a += "&language=zh-cn")
                  : DataManager.API168_login
                    ? (a += "&language=zh-tw")
                    : (a = a + "&language=" + i)
                : (a = a + "?language=" + i),
                (e.location.href = a);
            },
            this,
            "get",
          );
      } else new HistoryView().show();
    }),
    (e.prototype.btnSet_click = function (t) {
      void 0 === t && (t = null), this.hide(), new SetView().show();
    }),
    (e.prototype.btnIM_click = function (t) {
      void 0 === t && (t = null), this.hide();
      var e = ShareUtils.appendHttpIfNoProto(window.dz_kefu_http);
      ShareUtils.openURL_popWin(e);
    }),
    (e.prototype.hide = function () {
      this.bgBtn.removeEventListener(
        egret.TouchEvent.TOUCH_TAP,
        this.stageTap,
        this,
      ),
        this.parent && this.parent.removeChild(this);
    }),
    (e.prototype.btnGameOutFun = function () {
      if (
        DataManager.fast_login ||
        DataManager.Q1E5_login ||
        DataManager.API168_login ||
        DataManager.VG_login ||
        DataManager.GT_login
      ) {
        var t = window.top.document.URL;
        return (
          MessageHandler.close(),
          EnterFrameRunner.getInstance().dispose(),
          void ShareUtils.openURL_self(t)
        );
      }
      if (document.URL.indexOf("app") > 0) {
        var t = document.URL;
        return (
          MessageHandler.close(),
          EnterFrameRunner.getInstance().dispose(),
          void ShareUtils.openURL_self(t)
        );
      }
      MessageHandler.close(),
        EnterFrameRunner.getInstance().dispose(),
        DataManager.callReferrer();
    }),
    e
  );
})(eui.Component);
__reflect(MenuView.prototype, "MenuView");
var MiPaiPanel = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (e.save_action_time = 0), (e.cardorder = -1), e;
  }
  return (
    __extends(e, t),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this);
    }),
    (e.prototype.onmiaction = function (t) {
      (this.bigmicard.ismipai = !0),
        this.bigmicard.miCardActionNet(t.mouseX, t.mouseY, t.ARROW);
    }),
    (e.prototype.dispose = function () {
      this.bigmicard && this.bigmicard.dispose(),
        (this.bigmicard = null),
        this.parent && this.parent.removeChild(this),
        this.removeChildren();
    }),
    e
  );
})(eui.Component);
__reflect(MiPaiPanel.prototype, "MiPaiPanel", [
  "eui.UIComponent",
  "egret.DisplayObject",
]);
var RecordlistItem = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.skinName = "resource/skins/RecordlistItem.exml"),
      (e.percentWidth = e.percentHeight = 100),
      e
    );
  }
  return (
    __extends(e, t),
    (e.prototype.partAdded = function (e, i) {
      t.prototype.partAdded.call(this, e, i);
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this),
        LangUtils.addEventListener(this.changeLang, this);
    }),
    (e.prototype.dataChanged = function () {
      if (this.data) {
        (this.gamenumber.text = this.data.id + "\n(" + this.data.xid + ")"),
          (this.timenmber.text = StringUtils.format(
            new Date(this.data.betTime),
            "yy-MM-dd \n hh:mm:ss",
          )),
          (this.gamegold.text =
            LangUtils.LANG_MAP[
              StringUtils.Decode64Strig(DataManager.Y3E5) +
                "_game_name_" +
                this.data.gameName
            ] +
            "\n" +
            this.data.amount),
          (this.ximaliang.text =
            this.data.comAmount.toString().split(".")[1] &&
            this.data.comAmount.toString().split(".")[1].length > 2
              ? (parseInt(String(100 * this.data.comAmount)) / 100).toFixed(2)
              : this.data.comAmount);
        var t =
          this.data.result > 0 ? DataManager.BLUE_COLOR : DataManager.RED_COLOR;
        (this.shuying.textColor = t),
          (this.shuying.text =
            this.data.result.toString().split(".")[1] &&
            this.data.result.toString().split(".")[1].length > 2
              ? (parseInt(String(100 * this.data.result)) / 100).toFixed(2)
              : this.data.result);
      }
    }),
    (e.prototype.changeLang = function (t) {
      void 0 === t && (t = null), this.dataChanged();
    }),
    (e.prototype.selectTab = function (t) {}),
    e
  );
})(eui.ItemRenderer);
__reflect(RecordlistItem.prototype, "RecordlistItem");
var SetView = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return e.init(), e;
  }
  return (
    __extends(e, t),
    (e.prototype.init = function () {
      (this.top = 0),
        (this.bottom = 0),
        (this.left = 0),
        (this.right = 0),
        (this.skinName = "resource/skins/SetUI.exml"),
        LangUtils.addEventListener(this.changeLang, this),
        (this.tb.dataProvider = new eui.ArrayCollection([
          {
            name: "ch_ZN_txt",
            label: "简体中文",
            img1: "ch_ZN_png",
            img2: "ch_ZN1_png",
          },
          {
            name: "tw_ZN_txt",
            label: "繁体中文",
            img1: "tw_ZN_png",
            img2: "tw_ZN1_png",
          },
          {
            name: "us_EN_txt",
            label: "English",
            img1: "us_EN_png",
            img2: "us_EN1_png",
          },
        ])),
        (this.tb.selectedIndex = DataManager.langValue.indexOf(
          DataManager.LANG_TYPE,
        )),
        this.tb.addEventListener(
          egret.Event.CHANGE,
          this.onClickLangChange,
          this,
        ),
        this.btnbackgroup.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onBack,
          this,
        ),
        (this.tsAutoVideo.selected = DataManager.autoShowVideo),
        this.tsAutoVideo.addEventListener(
          egret.Event.CHANGE,
          this.autoVideo,
          this,
        ),
        this.btnmenugroup.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.btn_menu_click,
          this,
        ),
        this.soundSwitcher.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onSoundChange,
          this,
        ),
        (this.soundSwitcher.selected =
          dzxx.SoundManager.inst.effectsoundEnabled),
        this.musicSwitcher.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onMusicChange,
          this,
        ),
        (this.musicSwitcher.selected = sound.SoundManager.getInstance().bgOn),
        this.changeLang();
    }),
    (e.prototype.changeLang = function (t) {
      void 0 === t && (t = null),
        (this.changeTxt.text = LangUtils.get("SYSTEM_SET_YUYAN")),
        (this.txtTitle.text = LangUtils.get("FUNC_SETTING")),
        (this.txtVideoSet.text = LangUtils.LANG_MAP.SET_VIEW_VIDEO_TITLE),
        (this.langImg0.source =
          "blue_menu_6_" + DataManager.LANG_TYPE + "_png"),
        (this.langImg1.source =
          "blue_menu_8_" + DataManager.LANG_TYPE + "_png"),
        (this.langImg2.source =
          "blue_menu_9_" + DataManager.LANG_TYPE + "_png"),
        DataManager.LANG_TYPE == DataManager.LANG_EN
          ? (this.langImg0.left = this.langImg1.left = this.langImg2.left = 47)
          : DataManager.LANG_TYPE == DataManager.LANG_KN
            ? ((this.langImg0.left = 72),
              (this.langImg1.left = 22),
              (this.langImg2.left = 70))
            : DataManager.LANG_TYPE == DataManager.LANG_VL
              ? ((this.langImg0.left = 68),
                (this.langImg1.left = 58),
                (this.langImg2.left = 73))
              : DataManager.LANG_TYPE == DataManager.LANG_HN ||
                  DataManager.LANG_TYPE == DataManager.LANG_JPN ||
                  DataManager.LANG_TYPE == DataManager.LANG_KR
                ? (this.langImg0.left =
                    this.langImg1.left =
                    this.langImg2.left =
                      47)
                : (this.langImg0.left =
                    this.langImg1.left =
                    this.langImg2.left =
                      47);
    }),
    (e.prototype.show = function () {
      (this.num = 5),
        ShareUtils.viewGroup.addChild(this),
        this.updateSelected();
    }),
    (e.prototype.onMusicChange = function () {
      sound.SoundManager.getInstance().setBgOn(this.musicSwitcher.selected),
        DataManager.saveCookieSound();
    }),
    (e.prototype.onSoundChange = function () {
      dzxx.SoundManager.inst.enableEffectSound(this.soundSwitcher.selected),
        DataManager.saveCookieSound();
    }),
    (e.prototype.btn_menu_click = function (t) {
      MenuView.getIns().showhide();
    }),
    (e.prototype.createCoins = function () {
      for (
        var t = MultiCurrencyManager.coinsArray,
          e = DataManager.amountList,
          i = 0,
          a = 0,
          n = 0;
        n < t.length;
        n++
      ) {
        var s = t[n],
          r = new eui.Component();
        (r.name = s.toString()),
          (r.touchChildren = !1),
          (r.touchEnabled = !0),
          r.addEventListener(egret.TouchEvent.TOUCH_TAP, this.coinPickup, this);
        var o = GameUtils.getCoin(s, !0, "", 2);
        (o.name = "coin"),
          (o.width = 100),
          (o.height = 100),
          (r.width = o.width),
          (r.height = o.height),
          r.addChild(o);
        var h = new eui.Image("coinselect_png");
        (h.y = -33),
          (h.name = "bg"),
          (h.touchEnabled = !1),
          -1 == e.indexOf(s) ? (h.alpha = 0) : (h.alpha = 1),
          r.addChildAt(h, 0),
          4 == a ? (i++, (a = 0)) : a++,
          this.groupCoins.addChild(r),
          (o = null),
          (h = null);
      }
    }),
    (e.prototype.coinPickup = function (t) {
      var e = t.currentTarget,
        i = e.getChildByName("bg");
      e.getChildByName("coin");
      (this.num >= 5 && !i.alpha) ||
        (i.alpha > 0
          ? ((i.alpha = 0), this.num--)
          : ((i.alpha = 1), this.num++),
        this.updateSelected());
    }),
    (e.prototype.updateSelected = function () {}),
    (e.prototype.onClickLangChange = function (t) {
      var e = this.tb.selectedItem.name;
      e != LangUtils.saveUrl &&
        (LangUtils.getInstance().loadLang(e),
        (DataManager.LANG_TYPE = DataManager.langKey[e]),
        LocalData.save());
    }),
    (e.prototype.confirm = function (t) {
      for (var e = new Array(), i = 0; i < this.groupCoins.numChildren; i++) {
        var a = this.groupCoins.getChildAt(i);
        a.getChildByName("bg").alpha && e.push(Number(a.name));
      }
      (DataManager.amountList = e),
        Alert.show(LangUtils.LANG_MAP.SET_VIEW_TIP),
        EventManager.getIns().dispatchEvent(
          new DataChangeEvent(DataChangeEvent.SET_CIONS),
        ),
        LocalData.save();
    }),
    (e.prototype.autoVideo = function (t) {
      (DataManager.autoShowVideo = this.tsAutoVideo.selected), LocalData.save();
    }),
    (e.prototype.onBack = function (t) {
      this.dispose();
    }),
    (e.prototype.dispose = function () {
      this.removeChildren(),
        LangUtils.removeEventListener(this.changeLang, this),
        this.tb.removeEventListener(
          egret.Event.CHANGE,
          this.onClickLangChange,
          this,
        ),
        this.btnbackgroup.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onBack,
          this,
        ),
        this.tsAutoVideo.removeEventListener(
          egret.Event.CHANGE,
          this.autoVideo,
          this,
        ),
        this.btnmenugroup.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.btn_menu_click,
          this,
        ),
        (this.btn_menu = null),
        (this.btnmenugroup = null),
        (this.btnbackgroup = null),
        (this.tb = null),
        (this.btnBack = null),
        (this.changeTxt = null),
        (this.txtTitle = null),
        this.parent && this.parent.removeChild(this),
        (this.tsAutoVideo = null);
    }),
    e
  );
})(eui.Component);
__reflect(SetView.prototype, "SetView", [
  "eui.UIComponent",
  "egret.DisplayObject",
]);
var dzxx;
!(function (t) {
  var e = (function (t) {
    function e() {
      var e = t.call(this) || this;
      return (
        (e.my_select_arr = {}),
        (e.skinName = "resource/skins/haolu/TableLuziSelectScreen.exml"),
        (e.percentHeight = 100),
        (e.percentWidth = 100),
        e
      );
    }
    return (
      __extends(e, t),
      (e.prototype.childrenCreated = function () {
        t.prototype.childrenCreated.call(this);
      }),
      (e.prototype.show = function (t) {
        (this.m_infoAny = t), this.openEventsLister(), this.initConfig();
      }),
      (e.prototype.openEventsLister = function () {
        this.allBtn.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.allBtnFun,
          this,
        ),
          this.introBtn.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.introBtnFun,
            this,
          ),
          this.okBtn.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.okBtnFun,
            this,
          ),
          this.cancelBtn.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.closeFun,
            this,
          );
        for (var t = 0; t < e.m_len; ++t)
          this["haolu_" + t].addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.itemSelectFun,
            this,
          );
      }),
      (e.prototype.clearEventsLister = function () {
        ShareUtils.game_stage.removeEventListener(
          egret.TouchEvent.TOUCH_BEGIN,
          this.closeIntroFun,
          this,
        ),
          this.allBtn.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.allBtnFun,
            this,
          ),
          this.introBtn.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.introBtnFun,
            this,
          ),
          this.okBtn.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.okBtnFun,
            this,
          ),
          this.cancelBtn.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.closeFun,
            this,
          );
        for (var t = 0; t < e.m_len; ++t)
          this["haolu_" + t].removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.itemSelectFun,
            this,
          );
      }),
      (e.prototype.initConfig = function () {
        this.my_select_arr = {};
        var t = DataManager.getCookie(
          DataManager.userName + DataManager.GAME_TYPE_BACCARAT.toString(),
        );
        if ("" == t || null == t || void 0 == t)
          for (var i = 0; i < e.m_len; ++i)
            this.my_select_arr[i.toString()] = !0;
        else if ("-1" == t);
        else
          for (var a = t.split(""), i = 0, n = a.length; n > i; ++i)
            this.my_select_arr[a[i]] = !0;
        this.changeLang(),
          this.showCurSelectFun(),
          this.showIsSelectAll(),
          this.showPanel(1);
      }),
      (e.prototype.changeLang = function (t) {
        void 0 === t && (t = null),
          (this.langLab0.text = LangUtils.LANG_MAP.dzg_main_45);
        for (var i = 0; i < e.m_len; ++i)
          this["haolu_" + i].source =
            "haolu_" + i + "_" + DataManager.LANG_TYPE + "_png";
        (this.langLab1.text = LangUtils.LANG_MAP.allSelece_tip_sc),
          (this.haolu_10.source =
            "tab_luzi_22_" + DataManager.LANG_TYPE + "_png"),
          (this.okBtn.radio_pic_up.source =
            "tab_luzi_15_" + DataManager.LANG_TYPE + "_png"),
          (this.okBtn.radio_pic_down.source =
            "tab_luzi_16_" + DataManager.LANG_TYPE + "_png"),
          (this.okBtn.radio_pic_disabled.source =
            "tab_luzi_15_" + DataManager.LANG_TYPE + "_png"),
          (this.cancelBtn.radio_pic_up.source =
            "tab_luzi_17_" + DataManager.LANG_TYPE + "_png"),
          (this.cancelBtn.radio_pic_down.source =
            "tab_luzi_18_" + DataManager.LANG_TYPE + "_png"),
          (this.cancelBtn.radio_pic_disabled.source =
            "tab_luzi_17_" + DataManager.LANG_TYPE + "_png");
      }),
      (e.prototype.showCurSelectFun = function () {
        for (var t = 0; t < e.m_len; ++t)
          this.isContainerHaolu(t.toString())
            ? (this["haolu_ok_" + t].visible = !0)
            : (this["haolu_ok_" + t].visible = !1);
      }),
      (e.prototype.isContainerHaolu = function (t) {
        return 1 == this.my_select_arr[t];
      }),
      (e.prototype.isAllSelHaolu = function () {
        for (var t = 0; t < e.m_len; ++t)
          if (!this.isContainerHaolu(t.toString())) return !1;
        return !0;
      }),
      (e.prototype.itemSelectFun = function (t) {
        var e = t.currentTarget.name,
          i = e.split("_")[1];
        this.isContainerHaolu(i.toString())
          ? (delete this.my_select_arr[i],
            (this["haolu_ok_" + i].visible = !1),
            this.showIsSelectAll())
          : ((this.my_select_arr[i] = !0),
            (this["haolu_ok_" + i].visible = !0),
            this.showIsSelectAll());
      }),
      (e.prototype.showIsSelectAll = function () {
        this.isAllSelHaolu()
          ? (this.haolu_all.visible = !0)
          : (this.haolu_all.visible = !1);
      }),
      (e.prototype.allBtnFun = function () {
        if (this.isAllSelHaolu()) {
          for (var t = 0; t < e.m_len; ++t)
            (this.my_select_arr = {}), (this["haolu_ok_" + t].visible = !1);
          this.haolu_all.visible = !1;
        } else {
          for (var t = 0; t < e.m_len; ++t)
            (this.my_select_arr[t.toString()] = !0),
              (this["haolu_ok_" + t].visible = !0);
          this.haolu_all.visible = !0;
        }
      }),
      (e.prototype.closeIntroFun = function () {
        this.showPanel(1);
      }),
      (e.prototype.showPanel = function (t) {
        1 == t
          ? ((this.introBtn.touchEnabled = !0),
            (this.luziGraoup.visible = !0),
            (this.IntroGraoup.visible = !1),
            ShareUtils.game_stage.removeEventListener(
              egret.TouchEvent.TOUCH_BEGIN,
              this.closeIntroFun,
              this,
            ))
          : 2 == t &&
            ((this.introBtn.touchEnabled = !1),
            (this.IntroGraoup.visible = !0),
            ShareUtils.game_stage.addEventListener(
              egret.TouchEvent.TOUCH_BEGIN,
              this.closeIntroFun,
              this,
            ));
      }),
      (e.prototype.introBtnFun = function () {
        this.showPanel(2);
      }),
      (e.prototype.okBtnFun = function () {
        var t = "";
        for (var e in this.my_select_arr) t += e;
        "" == t && (t = "-1"),
          DataManager.setCookie(
            DataManager.userName + DataManager.GAME_TYPE_BACCARAT.toString(),
            t,
          ),
          EventManager.getIns().dispatchEvent(
            new DataChangeEvent(DataChangeEvent.GOOD_ROAD_CHANGE),
          ),
          this.destroy();
      }),
      (e.prototype.closeFun = function () {
        this.destroy();
      }),
      (e.prototype.destroy = function () {
        this.clearEventsLister(),
          (this.my_select_arr = {}),
          this.parent && this.parent.removeChild(this);
      }),
      (e.m_len = 10),
      e
    );
  })(eui.Component);
  (t.TableLuziSelectScreen = e),
    __reflect(e.prototype, "dzxx.TableLuziSelectScreen", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(dzxx || (dzxx = {}));
var TopScreenUI = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return e.init(), e;
  }
  return (
    __extends(e, t),
    (e.prototype.init = function () {
      (this.width = window.innerWidth),
        (this.height = window.innerHeight),
        (this.bg = new eui.Image(RES.getRes("black_png"))),
        this.addChild(this.bg),
        (this.bg.width = window.innerWidth),
        (this.bg.height = window.innerHeight),
        (this.bg.alpha = 0.9),
        (this.tip_img = new eui.Image(RES.getRes("screen_113_png"))),
        this.addChild(this.tip_img),
        (this.lbMsg = new eui.Label()),
        this.addChild(this.lbMsg),
        (this.lbMsg.size = 48),
        (this.lbMsg.fontFamily = "微软雅黑"),
        (this.lbMsg.textColor = 16777215),
        (this.lbMsg.textAlign = "center"),
        (this.lbMsg.verticalAlign = "middle"),
        (this.lbMsg.lineSpacing = 5),
        (this.lbMsg.width = 500),
        (this.lbMsg.height = 50),
        (this.lbMsg.rotation = 90),
        (this.lbMsg.anchorOffsetX = 250),
        (this.lbMsg.anchorOffsetY = 25),
        this.onResize();
    }),
    (e.prototype.onResize = function () {
      (this.width = ShareUtils.main.stage.stageWidth),
        (this.height = ShareUtils.main.stage.stageHeight),
        (this.bg.width = this.width),
        (this.bg.height = this.height),
        (this.tip_img.y = (this.height - 577) / 2),
        (this.tip_img.x = (this.width - 239) / 2),
        (this.lbMsg.y = this.height / 2),
        (this.lbMsg.x = this.tip_img.x + 45);
    }),
    (e.prototype.showWait = function (t) {
      (this.visible = !0),
        (this.tip_img.y = (this.height - 577) / 2),
        (this.tip_img.x = (this.width - 239) / 2),
        (this.lbMsg.text = t),
        (this.lbMsg.y = this.height / 2),
        (this.lbMsg.x = this.tip_img.x + 45);
    }),
    (e.prototype.onEnterFrame = function () {}),
    (e.prototype.hideWait = function () {
      this.visible = !1;
    }),
    e
  );
})(egret.Sprite);
__reflect(TopScreenUI.prototype, "TopScreenUI");
var WaitReconnectUI = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return e.init(), e;
  }
  return (
    __extends(e, t),
    (e.prototype.init = function () {
      (this.width = window.innerWidth),
        (this.height = window.innerHeight),
        (this.bg = new eui.Image(RES.getRes("black_png"))),
        this.addChild(this.bg),
        (this.bg.width = window.innerWidth),
        (this.bg.height = window.innerHeight),
        (this.bg.alpha = 0),
        this.onResize();
    }),
    (e.prototype.onResize = function () {
      (this.width = ShareUtils.main.stage.stageWidth),
        (this.height = ShareUtils.main.stage.stageHeight),
        (this.bg.width = this.width),
        (this.bg.height = this.height);
    }),
    (e.prototype.showWait = function () {
      (this.visible = !0),
        this.addEventListener(
          egret.TouchEvent.TOUCH_BEGIN,
          this.onTouchMask,
          this,
        );
    }),
    (e.prototype.onTouchMask = function () {
      Alert.tipGame(
        LangUtils.LANG_MAP.SOCKET_RECONNECT || "SOCKET_RECONNECT",
        16243228,
      );
    }),
    (e.prototype.hideWait = function () {
      (this.visible = !1),
        this.removeEventListener(
          egret.TouchEvent.TOUCH_BEGIN,
          this.onTouchMask,
          this,
        );
    }),
    e
  );
})(egret.Sprite);
__reflect(WaitReconnectUI.prototype, "WaitReconnectUI");
var WaitUI = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return e.init(), e;
  }
  return (
    __extends(e, t),
    (e.prototype.init = function () {
      (this.width = window.innerWidth),
        (this.height = window.innerHeight),
        (this.bg = new eui.Image(RES.getRes("black_png"))),
        this.addChild(this.bg),
        (this.bg.width = window.innerWidth),
        (this.bg.height = window.innerHeight),
        (this.bg.alpha = 0.5),
        (this.lbMsg = new eui.Label()),
        this.addChild(this.lbMsg),
        (this.lbMsg.size = 30),
        (this.lbMsg.fontFamily = "微软雅黑"),
        (this.lbMsg.text = "网络连接中，请稍候！"),
        (this.imgLoading = new eui.Image(RES.getRes("waitloading_png"))),
        this.addChild(this.imgLoading),
        (this.imgLoading.anchorOffsetX = 73),
        (this.imgLoading.anchorOffsetY = 72),
        (this.imgLoading.x = this.width / 2),
        (this.imgLoading.y = this.height / 2),
        (this.lbMsg.y = this.imgLoading.y + 100),
        (this.lbMsg.x = (this.width - this.lbMsg.width) / 2),
        this.onResize();
    }),
    (e.prototype.onResize = function () {
      (this.width = ShareUtils.main.stage.stageWidth),
        (this.height = ShareUtils.main.stage.stageHeight),
        (this.bg.width = this.width),
        (this.bg.height = this.height),
        (this.imgLoading.x = this.width / 2),
        (this.imgLoading.y = this.height / 2),
        (this.lbMsg.y = this.imgLoading.y + 72),
        (this.lbMsg.x = (this.width - this.lbMsg.width) / 2);
    }),
    (e.prototype.showWait = function (t) {
      (this.visible = !0),
        (this.lbMsg.text = t),
        (this.lbMsg.x =
          (ShareUtils.main.stage.stageWidth - this.lbMsg.width) / 2),
        this.addEventListener(egret.Event.ENTER_FRAME, this.onEnterFrame, this);
    }),
    (e.prototype.onEnterFrame = function () {
      this.imgLoading.rotation += 2;
    }),
    (e.prototype.hideWait = function () {
      (this.visible = !1),
        this.removeEventListener(
          egret.Event.ENTER_FRAME,
          this.onEnterFrame,
          this,
        );
    }),
    e
  );
})(egret.Sprite);
__reflect(WaitUI.prototype, "WaitUI");
var game;
!(function (t) {
  var e = (function (e) {
    function i() {
      var t = e.call(this) || this;
      return (
        (t.roteWH = 40),
        (t.isVideoOpen = !0),
        (t.tableid = 0),
        (t._playerPoint = 0),
        (t._bankerPoint = 0),
        (t.tempbetlist = {}),
        (t._responseList = []),
        (t.bet_length = 0),
        (t.notBetCount = 0),
        (t.gameState = -1),
        (t.isCanBet = !1),
        (t.is_wenlu = !1),
        (t.isNOCOM = !1),
        (t.isTeshuzhudian = !1),
        (t.cur_gameSeq = -1),
        (t.save_time_deal = 0),
        (t.skinName = "resource/skins/duotai/DouTaiLongHuItem.exml"),
        (t.percentWidth = 100),
        t
      );
    }
    return (
      __extends(i, e),
      (i.prototype.partAdded = function (t, i) {
        e.prototype.partAdded.call(this, t, i);
      }),
      (i.prototype.childrenCreated = function () {
        e.prototype.childrenCreated.call(this);
      }),
      (i.prototype.updataView = function (t, e) {
        (this.fbEnetrTable = e),
          (this.fbTableState = t),
          (this.isNOCOM = DataManager.isNOCOM),
          this.setButtonEnable(!1),
          (this.gameState = -1),
          (this.gCards.visible = !1),
          (this.gComNo.visible = !0),
          (this.gComNo.fbEnetrTable = e),
          (this.gComNo.curTableState = this.fbTableState),
          this.showHideVideo(),
          (GameUtils.routeSize = this.roteWH),
          (this.tableid = this.fbTableState.tableInfo.tableid),
          (this.route = new GameRoute(6, 6, 3)),
          this.gRote.addChild(this.route),
          this.onRouteGroupResize(),
          this.fbTableState && (this.is_wenlu || this.routeBTip()),
          this.initInfo(),
          this.gameInit(),
          (this.isCanBet = !1),
          this.changeLang(),
          this.uodataTabInfo(),
          this.closeTongjiGroupFun(),
          EventManager.getIns().addEventListener(
            DataChangeEvent.CHECK_USER_HAVE_BET,
            this.checkUserhaveBet,
            this,
          ),
          this.addEventListener("OnHitBetTable", this.betClick, this),
          this.gameTime.addEventListener(
            "TimeComplete",
            this.onTimeComplete,
            this,
          ),
          this.btnLimit.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onShowLimit,
            this,
          ),
          this.btnSure.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onBetSure,
            this,
          ),
          this.btnCancel.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onBetCancel,
            this,
          ),
          this.btnAskB.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onAskBRoute,
            this,
          ),
          this.btnAskP.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onAskPRoute,
            this,
          ),
          this.showTongjiGroup.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.showTongjiGroupFun,
            this,
          ),
          this.closeTongjiGroup.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.closeTongjiGroupFun,
            this,
          ),
          this.enterGame.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.enterGameFun,
            this,
          ),
          this.gRote.addEventListener(
            egret.Event.RESIZE,
            this.onRouteGroupResize,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.BET_AMOUNT,
            this.betAmount,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.BET_START,
            this.betStart,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.BET_RESULT,
            this.betResult,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.SEAT_DEAL,
            this.seatDeal,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.BET_RESPONSE,
            this.betResponse,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.TABLE_INFO,
            this.tableInfo,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.SEAT_BETTING,
            this.seatBetting,
            this,
          );
      }),
      (i.prototype.changeLang = function (t) {
        void 0 === t && (t = null),
          (this.dzg_duotai_lab_1.text = LangUtils.LANG_MAP.dzg_game_duotai_1),
          (this.dzg_duotai_lab_2.text = LangUtils.LANG_MAP.dzg_game_longhu_9),
          (this.dzg_duotai_lab_3.text = LangUtils.LANG_MAP.dzg_game_longhu_10),
          (this.dzg_duotai_lab_4.text =
            LangUtils.LANG_MAP.duotai_tongji_longhu_1),
          (this.dzg_duotai_lab_5.text =
            LangUtils.LANG_MAP.duotai_tongji_longhu_2),
          (this.dzg_duotai_lab_6.text =
            LangUtils.LANG_MAP.duotai_tongji_longhu_2),
          (this.dzg_duotai_lab_7.text =
            LangUtils.LANG_MAP.duotai_tongji_longhu_3),
          (this.dzg_duotai_lab_8.text =
            LangUtils.LANG_MAP.duotai_tongji_longhu_1),
          (this.langLab2.text =
            LangUtils.LANG_MAP.duotai_tongji_longhu_1 + ":"),
          (this.langLab3.text =
            LangUtils.LANG_MAP.duotai_tongji_longhu_3 + ":"),
          (this.langLab4.text =
            LangUtils.LANG_MAP.duotai_tongji_longhu_2 + ":"),
          (this.enterGame.label = LangUtils.LANG_MAP.FUNC_LOGINGAME),
          (this.tongjititletxt.text = LangUtils.get("StatisticsView_TITLE")),
          (this.langLab1.text = LangUtils.LANG_MAP.dzg_main_10002 + ":"),
          (this.lblRoute_A.text = LangUtils.LANG_MAP.TOTAL),
          (this.btnSure.source = "hxbg_36_" + DataManager.LANG_TYPE + "_png"),
          (this.btnCancel.source = "hxbg_35_" + DataManager.LANG_TYPE + "_png"),
          this.gameTime.changeLang(),
          DataManager.LANG_TYPE == DataManager.LANG_EN
            ? ((this.TableNameLab.size = 24),
              (this.dzg_duotai_lab_1.size = 18),
              (this.dzg_duotai_lab_4.size = 42),
              (this.dzg_duotai_lab_5.size = 42),
              (this.dzg_duotai_lab_2.size = 20),
              (this.dzg_duotai_lab_3.size = 20))
            : DataManager.LANG_TYPE == DataManager.LANG_VL
              ? ((this.TableNameLab.size = 24),
                (this.dzg_duotai_lab_1.size = 16),
                (this.dzg_duotai_lab_4.size = 42),
                (this.dzg_duotai_lab_5.size = 42),
                (this.dzg_duotai_lab_2.size = 18),
                (this.dzg_duotai_lab_3.size = 18))
              : DataManager.LANG_TYPE == DataManager.LANG_KN
                ? ((this.TableNameLab.size = 24),
                  (this.dzg_duotai_lab_1.size = 20),
                  (this.dzg_duotai_lab_4.size = 42),
                  (this.dzg_duotai_lab_5.size = 42),
                  (this.dzg_duotai_lab_2.size = 18),
                  (this.dzg_duotai_lab_3.size = 18))
                : DataManager.LANG_TYPE == DataManager.LANG_HN ||
                    DataManager.LANG_TYPE == DataManager.LANG_JPN ||
                    DataManager.LANG_TYPE == DataManager.LANG_KR
                  ? ((this.TableNameLab.size = 24),
                    (this.dzg_duotai_lab_1.size = 20),
                    (this.dzg_duotai_lab_4.size = 42),
                    (this.dzg_duotai_lab_5.size = 42),
                    (this.dzg_duotai_lab_2.size = 18),
                    (this.dzg_duotai_lab_3.size = 18))
                  : ((this.TableNameLab.size = 24),
                    (this.dzg_duotai_lab_1.size = 22),
                    (this.dzg_duotai_lab_4.size = 42),
                    (this.dzg_duotai_lab_5.size = 42),
                    (this.dzg_duotai_lab_2.size = 20),
                    (this.dzg_duotai_lab_3.size = 20));
      }),
      (i.prototype.initInfo = function (t) {
        void 0 === t && (t = null);
        var e = this.fbTableState.tableInfo.history3[0] || 0,
          i = this.fbTableState.tableInfo.history3[1] || 0,
          a = this.fbTableState.tableInfo.history3[2] || 0,
          n = DataManager.curTableState.tableInfo.history3[3] || 0,
          s = DataManager.curTableState.tableInfo.history3[4] || 0;
        "S" == t && (s = n = a = i = e = 0),
          (this.lblRouteB.text = e + ""),
          (this.lblRouteP.text = i + ""),
          (this.lblRouteT.text = a + ""),
          (this.lblRouteAll.text = e + i + a + "");
        var r = e + i + a;
        r > 0 ? Math.floor((e / r) * 100) : 0,
          r > 0 ? Math.floor((i / r) * 100) : 0;
        (this.lblRouteB_line.width = 120 * (0 == r ? 0 : e / r)),
          (this.lblRouteP_line.width = 120 * (0 == r ? 0 : i / r)),
          (this.lblRouteT_line.width = 120 * (0 == r ? 0 : a / r));
        var o =
          DataManager.getGameNameWithGameStyle(
            this.fbTableState.tableInfo.gameType,
            this.fbTableState.tableInfo.gamestyle,
          ) + DataManager.getTableStr1(this.fbTableState.tableInfo.tableid);
        (this.TableNameLab.text = o),
          (this.TableIDLab.text =
            this.fbTableState.tableInfo.shoeSeq.toString() +
            "/" +
            this.fbTableState.tableInfo.gameSeq.toString()),
          (this.gComNo.curTableState = this.fbTableState);
      }),
      (i.prototype.uodataTabInfo = function (t) {
        if ((void 0 === t && (t = !0), this.fbTableState)) {
          var e = new RegExp(",", "g"),
            i = void 0,
            a = void 0,
            n = void 0,
            s = this.fbTableState.tablePool,
            r = String(s.BANKER).split("/");
          (this.tongjibankertxt.text = r[0] + "/" + r[1]),
            (i = Number(r[0].replace(e, "")));
          var o = String(s.PLAYER).split("/");
          (this.tongjiplayertxt.text = o[0] + "/" + o[1]),
            (a = Number(o[0].replace(e, "")));
          var h = String(s.TILE).split("/");
          (this.tongjitietxt.text = h[0] + "/" + h[1]),
            (n = Number(h[0].replace(e, "")));
          var l = i + a + n,
            g = 160 * (0 == l ? 0 : i / l),
            u = 160 * (0 == l ? 0 : a / l),
            c = 160 * (0 == l ? 0 : n / l);
          (this.preBet_B.visible = 0 == g ? !1 : !0),
            (this.preBet_P.visible = 0 == u ? !1 : !0),
            (this.preBet_T.visible = 0 == c ? !1 : !0),
            egret.Tween.get(this.preBet_B)
              .to(
                {
                  width: g,
                },
                300,
              )
              .call(function () {}, this),
            egret.Tween.get(this.preBet_P)
              .to(
                {
                  width: u,
                },
                300,
              )
              .call(function () {}, this),
            egret.Tween.get(this.preBet_T)
              .to(
                {
                  width: c,
                },
                300,
              )
              .call(function () {}, this);
        } else
          (this.tongjibankertxt.text = ""),
            (this.tongjiplayertxt.text = ""),
            (this.tongjitietxt.text = "");
      }),
      (i.prototype.gameInit = function () {
        this.pointList || (this.pointList = new Array()),
          (this.pointList.length = 0),
          this.seatDealList || (this.seatDealList = new Array()),
          (this.seatDealList.length = 0),
          this.timer ||
            ((this.timer = new egret.Timer(500, 6)),
            this.timer.addEventListener(
              egret.TimerEvent.TIMER,
              this.timerSeatDeal,
              this,
            )),
          this.timer.reset();
        for (var t = 0; 6 > t; t++) this["card" + t].source = "";
        (this.playerPoint = this.bankerPoint = 0),
          (this.gCards.visible = !1),
          this.gComNo.initUI();
      }),
      (i.prototype.routeBTip = function () {
        var t = this;
        (this.is_wenlu = !0),
          setTimeout(function () {
            (GameUtils.routeSize = t.roteWH),
              t.route.parseDatum(t.fbTableState.tableInfo.history, !1),
              t.showRouteBTip(),
              t.showRoutePTip(),
              t.route.parseDatum(t.fbTableState.tableInfo.history, !1);
          }, 1e3);
      }),
      (i.prototype.tableInfo = function (t) {
        var e = t.data;
        if (e.tableid == this.fbTableState.tableInfo.tableid) {
          this.showRouteBTip(),
            this.showRoutePTip(),
            (GameUtils.routeSize = this.roteWH),
            this.route.parseDatum(this.fbTableState.tableInfo.history, !0),
            this.initInfo(this.fbTableState.tableInfo.tablestate);
          var i = "";
          "S" == e.tablestate || "RP" == e.tablestate
            ? (this.gameTime.startTime(0),
              (i =
                "RP" == e.tablestate
                  ? "Maintaining_Table_Card"
                  : "M_Clear_Table_Card"),
              this.gameTime.stopTime(),
              this.gameTime.showState(i),
              "RP" == e.tablestate && this.setButtonEnable(!1),
              "S" == e.tablestate && this.gameInit())
            : "Maintaining_Table_Card" == i ||
              "D" == e.tablestate ||
              ("WOP" == e.tablestate && this.gameTime.showState("SB0"));
        }
      }),
      (i.prototype.showRouteBTip = function () {
        this.route.getkWayDuotaiResult(this.fbTableState, 1),
          this.route.route2.nTmpWinner > 0
            ? (this.gAckB.getChildAt(0).source =
                "rt2Check_f" + this.route.route2.nTmpWinner + "_png")
            : (this.gAckB.getChildAt(0).source = ""),
          this.route.route3.nTmpWinner > 0
            ? (this.gAckB.getChildAt(1).source =
                "rt3Check_f" + this.route.route3.nTmpWinner + "_png")
            : (this.gAckB.getChildAt(1).source = ""),
          this.route.route4.nTmpWinner > 0
            ? (this.gAckB.getChildAt(2).source =
                "rt4Check_f" + this.route.route4.nTmpWinner + "_png")
            : (this.gAckB.getChildAt(2).source = "");
      }),
      (i.prototype.showRoutePTip = function () {
        this.route.getkWayDuotaiResult(this.fbTableState, 2),
          this.route.route2.nTmpWinner > 0
            ? (this.gAckP.getChildAt(0).source =
                "rt2Check_f" + this.route.route2.nTmpWinner + "_png")
            : (this.gAckP.getChildAt(0).source = ""),
          this.route.route3.nTmpWinner > 0
            ? (this.gAckP.getChildAt(1).source =
                "rt3Check_f" + this.route.route3.nTmpWinner + "_png")
            : (this.gAckP.getChildAt(1).source = ""),
          this.route.route4.nTmpWinner > 0
            ? (this.gAckP.getChildAt(2).source =
                "rt4Check_f" + this.route.route4.nTmpWinner + "_png")
            : (this.gAckP.getChildAt(2).source = "");
      }),
      (i.prototype.onTimeComplete = function () {
        (this.isCanBet = !1), this.setButtonEnable(!1);
      }),
      (i.prototype.betStart = function (e) {
        var i = e.data[0];
        if (i.tableid == this.fbTableState.tableInfo.tableid)
          if (0 == i.bettype) {
            if (this.cur_gameSeq == i.gameSeq) return;
            (this.cur_gameSeq = i.gameSeq),
              (this.isTeshuzhudian = !1),
              (this.tempbetlist = {}),
              (this._responseList = []),
              this.gameInit(),
              (this.isCanBet = !0),
              this.setButtonEnable(!1),
              (this.gameState = t.GameAction.STATE_ACCEPT_BET);
            var a = egret.getTimer() + i.countdown;
            this.gameTime.startTime(a), this.checkBetCount();
          } else
            3 == i.bettype && ((this.isCanBet = !1), this.cleartempcoins());
      }),
      (i.prototype.join_curList_send = function () {
        this._curList_send || (this._curList_send = {});
        var t = {},
          e = 0;
        for (var i in this._curList)
          (e = this._curList[i]),
            this._curList_send[i] &&
              (e = this._curList[i] - this._curList_send[i]),
            e > 0 && (t[i] = e),
            (this._curList_send[i] =
              (this._curList_send[i] ? this._curList_send[i] : 0) + e);
        return t;
      }),
      (i.prototype.ok_curList_send = function (t) {
        if (
          t.tableid == this.fbTableState.tableInfo.tableid &&
          this._curList_send
        ) {
          var e = 0,
            i = 0;
          for (var a in this._curList_send)
            t.option.indexOf(a) >= 0
              ? ((e = t.amount[t.option.indexOf(a)]),
                (this._curList_send[a] = this._curList_send[a] - e),
                (i = this._curList && this._curList[a] ? this._curList[a] : 0),
                i > 0 &&
                  ((this._curList[a] = 0 > i - e ? 0 : i - e),
                  this._curList[a] <= 0 && delete this._curList[a]),
                this._curList_send[a] <= 0 && delete this._curList_send[a])
              : (delete this._curList_send[a],
                this._curList && this._curList[a] && delete this._curList[a]);
        }
      }),
      (i.prototype.onBetSure = function (t) {
        (DataManager.xAxis = t.stageX),
          (DataManager.yAxis = t.stageY),
          this.sendBet(this.join_curList_send());
      }),
      (i.prototype.sendBet = function (t) {
        var e = new Array(),
          i = new Array();
        for (var a in t) {
          GameUtils.getOppoPoint(this.fbTableState.tableInfo.gameType, a);
          e.push(a), i.push(Math.floor(t[a]));
        }
        if (0 == e.length) {
          var n = new BetResponseMessage(
            0,
            this.fbTableState.tableid,
            null,
            null,
            0,
          );
          return void this.betResponseFun(n);
        }
        (this.bet_length = e.length),
          MessageHandler.bet(
            this.fbTableState.tableid,
            e,
            i,
            this.isNOCOM ? 1 : 0,
            this.fbTableState.tableInfo.gameSeq,
          );
      }),
      (i.prototype.betResponseFun = function (e) {
        e.tableid == this.fbTableState.tableid &&
          (1 == e.result &&
            e.option &&
            (e.result = this.bet_length == e.option.length ? 1 : 2),
          1 == e.result || 2 == e.result
            ? (e.option &&
                DataManager.selectBetCoinDisByTabshid(
                  e.option,
                  this.fbTableState.tableInfo.tableSeq,
                ),
              (this._repeatList = this._responseList),
              2 == e.result && this.cleartempcoins(),
              this.ok_curList_send(e),
              (this.notBetCount = 0),
              dzxx.SoundManager.inst.playSound(dzxx.SoundManager.Bet_success),
              (t.DuotaiView.DuotaiGameTime = egret.getTimer()))
            : (this.cleartempcoins(),
              (this._curList = null),
              (this._curList_send = null)));
      }),
      (i.prototype.onBetCancel = function () {
        this.cleartempcoins(), (this._curList = null);
      }),
      (i.prototype.cleartempcoins = function () {
        (this.tempbetlist = {}),
          this.gComNo.clearTmpCoins(),
          this.updataCoinInfo();
      }),
      (i.prototype.onBetRepet = function () {
        var t = this.clearSuper6Repeat();
        (this._curList = this.joinList(t)),
          this.updateTempCoins(t),
          this.updataCoinInfo();
      }),
      (i.prototype.updateTempCoins = function (t) {
        this.cleartempcoins();
        var e = this.joinList(t);
        for (var i in e)
          this.addBetCoin(e[i], {
            name: i,
          }),
            (this.tempbetlist[i] = this.tempbetlist[i] || 0),
            (this.tempbetlist[i] += e[i]);
      }),
      (i.prototype.setNOCOMbuttonState = function () {
        var e,
          i = 0,
          a = this.gameState == t.GameAction.STATE_ACCEPT_BET;
        if (this.curList) {
          if (((i = this.curList.BANKER), i > 0))
            return void this.setNOCOMEnable(!1);
          if (((i = this.curList.SS), i > 0))
            return void this.setNOCOMEnable(!1);
        }
        if ((e = this.joinResponseList)) {
          if (((i = e.BANKER), i > 0)) return void this.setNOCOMEnable(!1);
          if (((i = e.SS), i > 0)) return void this.setNOCOMEnable(!1);
        }
        this.setNOCOMEnable(
          a && !DataManager.hasTableStates_B_S_bystate(this.fbTableState),
        );
      }),
      (i.prototype.setNOCOMEnable = function (t) {
        (this.gComOpt.touchEnabled = this.gComOpt.touchChildren = t),
          ShareUtils.setGrayFilter(this.gComOpt, !t),
          t || (this.lbComNo.textColor = 16777215);
      }),
      (i.prototype.checkUserhaveBet = function (t) {
        t.data.t_id == this.fbEnetrTable.tableid &&
          this.setButtonEnable(t.data.isShow);
      }),
      (i.prototype.setButtonEnable = function (t) {
        this.btnSure;
        (this.btnSure.touchEnabled = this.btnCancel.touchEnabled = t),
          ShareUtils.setGrayFilter(this.btnSure, !t),
          ShareUtils.setGrayFilter(this.btnCancel, !t),
          (this.betShowGroup.visible = t);
      }),
      (i.prototype.clearData = function () {
        (this.tempbetlist = {}), (this._responseList.length = 0);
      }),
      (i.prototype.betClick = function (e) {
        if (
          0 != this.isCanBet &&
          this.gameState == t.GameAction.STATE_ACCEPT_BET
        ) {
          var i = DataManager.amount,
            a = this.curTotalBet;
          if (DataManager.sumAmount <= a)
            return void this.setResultTip(
              16243228,
              LangUtils.LANG_MAP.BET_NO_BALANCE,
            );
          if (DataManager.sumAmount < 1)
            return void this.setResultTip(
              16243228,
              LangUtils.LANG_MAP.BET_NO_BALANCE,
            );
          var n = e.data.name;
          if (
            (DataManager.Q1E5_login || DataManager.API168_login) &&
            DataManager.Q1E5_BET_MUTEX
          )
            if ("PLAYER" == n) {
              if (this.responseHaveBetByName("BANKER"))
                return void this.setResultTip(
                  16243228,
                  LangUtils.LANG_MAP.dzg_main_59,
                );
            } else if ("BANKER" == n && this.responseHaveBetByName("PLAYER"))
              return void this.setResultTip(
                16243228,
                LangUtils.LANG_MAP.dzg_main_59,
              );
          null == this.curList[n] && (this._curList[n] = 0);
          var s = this.curList[n],
            r = this.responseTotalBetByName(n),
            o = i + this._curList[n] + r,
            h = Opposite.getName(this.fbTableState.tableInfo.gameType, n),
            l = 0;
          if (
            (h &&
              (l = (this._curList[h] || 0) + this.responseTotalBetByName(h)),
            (o = BetLimitAction.getIns().getGameLimit(
              this.fbTableState.tableInfo.tableid,
              n,
              o,
              h,
              l,
            )),
            o > 0)
          )
            if (a - this._curList[n] + o - r > DataManager.sumAmount) {
              if (
                ((o = DataManager.sumAmount - a + this._curList[n] + r),
                (o = Math.floor(o)),
                !BetLimitAction.getIns().checkMultiTableLimit(
                  this.fbTableState.tableInfo.tableid,
                  n,
                  o,
                  h,
                  l,
                ))
              )
                return void this.setResultTip(
                  16243228,
                  LangUtils.LANG_MAP.BET_NO_BALANCE_TO_LIMIT,
                );
              this.setResultTip(16243228, LangUtils.LANG_MAP.BET_NO_BALANCE);
            } else
              i + this._curList[n] + r > o &&
                this.setResultTip(16243228, LangUtils.LANG_MAP.BET_TOO_MUCH);
          switch (o) {
            case -1:
              return void this.setResultTip(
                16243228,
                LangUtils.LANG_MAP.OPERATE_FAIL,
              );
            case -2:
              return void this.setResultTip(
                16243228,
                LangUtils.LANG_MAP.OPERATE_FAIL,
              );
            default:
              (this._curList[n] = o - r),
                this._curList[n] <= 0 && (this._curList[n] = 0);
          }
          if (this._curList[n] > 0) {
            var g = this._curList[n] - s;
            g > 0 &&
              (this.addBetCoin(g, e.data, !0),
              (this.tempbetlist[n] = this.tempbetlist[n] || 0),
              (this.tempbetlist[n] += g));
          }
          dzxx.SoundManager.inst.playSound(dzxx.SoundManager.Click_CoinBtn),
            this.updataCoinInfo();
        }
      }),
      (i.prototype.addBetCoin = function (t, e, i) {
        void 0 === i && (i = !1),
          this.gComNo.visible && this.gComNo.addBetCoin(t, e, i);
      }),
      (i.prototype.updataCoinInfo = function (t) {
        void 0 === t && (t = !1),
          this.gComNo.visible &&
            this.gComNo.updataCoinInfo(
              this.joinResponseList,
              this.tempbetlist,
              t,
            );
      }),
      (i.prototype.betResult = function (e) {
        var i = e.data;
        if (i.tableid == this.fbTableState.tableid) {
          this.setButtonEnable(!1),
            this.cleartempcoins(),
            (this.gameState = t.GameAction.STATE_RESULT),
            this.onActionResult(i);
          var a = [];
          i.winOptions.indexOf("BANKER") > -1 &&
            (a.push("B"),
            (this.lblWin.source = "hxbg_47_" + DataManager.LANG_TYPE + "_png")),
            i.winOptions.indexOf("PLAYER") > -1 &&
              (a.push("P"),
              (this.lblWin.source =
                "hxbg_48_" + DataManager.LANG_TYPE + "_png")),
            i.winOptions.indexOf("TILE") > -1 &&
              (a.push("T"),
              (this.lblWin.source =
                "hxbg_9_" + DataManager.LANG_TYPE + "_png")),
            (this.lblWin.visible = !0),
            this.gComNo.visible && this.gComNo.showWin(a);
        }
      }),
      (i.prototype.onActionResult = function (e) {
        e.tableid == this.fbTableState.tableid &&
          (this._responseList.length && (this._repeatList = this._responseList),
          (this.tempbetlist = {}),
          (this._responseList = []),
          this.gameState != t.GameAction.STATE_RESULT &&
            (this.notBetCount += 1),
          (this.gameState = t.GameAction.STATE_RESULT),
          this._curList_send && (this._curList_send = {}),
          (this._curList = null),
          0 != e.winAmount && (e.winAmount > 0 || e.winAmount < 0));
      }),
      (i.prototype.playResultSound = function () {}),
      (i.prototype.betResponse = function (t) {
        this.betResponseFun(t.data),
          t.data.tableid == this.fbTableState.tableid &&
            (1 == t.data.result
              ? this.setResultTip(16243228, LangUtils.LANG_MAP.BET_SUCCESS)
              : 2 == t.data.result
                ? this.setResultTip(16243228, LangUtils.LANG_MAP.BET_UNDER_MUCH)
                : -112 == t.data.result
                  ? this.setResultTip(
                      16243228,
                      LangUtils.LANG_MAP.BET_UNDER_MUCH,
                    )
                  : -113 == t.data.result
                    ? this.setResultTip(
                        16243228,
                        LangUtils.LANG_MAP.BET_UNDER_MUCH,
                      )
                    : -95 == t.data.result
                      ? Alert.tipGame(
                          LangUtils.LANG_MAP.dzg_game_bjl_30,
                          16243228,
                        )
                      : -96 == t.data.result
                        ? Alert.tipGame(
                            LangUtils.LANG_MAP.dzg_game_bjl_31,
                            16243228,
                          )
                        : -122 == t.data.result
                          ? this.setResultTip(
                              16243228,
                              LangUtils.LANG_MAP.BET_TOO_MUCH,
                            )
                          : -123 == t.data.result
                            ? this.setResultTip(
                                16243228,
                                LangUtils.LANG_MAP.BET_TOO_MUCH_OF_ALL_TABLE,
                              )
                            : -140 == t.data.result
                              ? Alert.showCaptcha()
                              : this.setResultTip(
                                  16243228,
                                  LangUtils.LANG_MAP.BET_FAILE,
                                ));
      }),
      (i.prototype.seatBetting = function (t) {
        var e = t.data;
        if (
          e.tableid == this.fbTableState.tableid &&
          this.fbEnetrTable.tableid == e.tableid &&
          DataManager.userid == e.userid
        ) {
          if (!e.option || "" == e.option || 0 == e.amount) return;
          var i = e.option,
            a = {};
          (a[i] = e.amount),
            this._responseList.push(a),
            (this.tempbetlist = {}),
            this.updataCoinInfo(!0),
            ("SS" == e.option || "BANKER" == e.option) &&
              (this.isTeshuzhudian = !0),
            this.isTeshuzhudian &&
              (1 == e.sbanker ? (this.isNOCOM = !0) : (this.isNOCOM = !1),
              this.gComNo.visible &&
                this.gComNo.showBetInfo(DataManager.curTableState));
        }
      }),
      (i.prototype.betAmount = function (t) {
        var e = t.data;
        this.tableid == e &&
          this.gComNo.visible &&
          this.gComNo.showBetInfo(this.fbTableState),
          this.uodataTabInfo(!0);
      }),
      (i.prototype.seatDeal = function (t) {
        var e = t.data;
        if (this.fbTableState.tableid == e.tableid) {
          this.gCards.visible = !0;
          DataManager.getTableStates(e.tableid);
          (this.lblWin.visible = !1),
            this.showCard(e),
            this.checkCards(e, this.seatDealList, this.showCard, this);
        }
      }),
      (i.prototype.showCard = function (t) {
        (t.order < this.seatDealList.length &&
          this.seatDealList[t.order] &&
          ShareUtils.timeByMessageID(t.messageID) <
            ShareUtils.timeByMessageID(this.seatDealList[t.order].messageID)) ||
          ((this.seatDealList[t.order] = t),
          0 == this.timer.currentCount && this.timer.start(),
          t.order < this.timer.currentCount
            ? (this.openDeal(t),
              this.timer.currentCount < this.timer.repeatCount &&
                t.order == this.timer.currentCount - 1 &&
                this.timer.start())
            : this.timer.currentCount > 4 && this.openDeal(t));
      }),
      (i.prototype.timerSeatDeal = function (t) {
        null != this.seatDealList &&
          (this.seatDealList[this.timer.currentCount - 1]
            ? this.openDeal(this.seatDealList[this.timer.currentCount - 1])
            : 5 == this.timer.currentCount &&
                this.seatDealList[this.timer.currentCount]
              ? (this.openDeal(this.seatDealList[this.timer.currentCount]),
                this.timer.stop())
              : this.timer.stop());
      }),
      (i.prototype.openDeal = function (t, e) {
        void 0 === e && (e = !0);
        var i = parseInt(t.point);
        (this.pointList[t.order] = i),
          (this.playerPoint = 0),
          (this.bankerPoint = 0);
        for (var a = 0; a < this.pointList.length; a++)
          a % 2 == 0
            ? (this.playerPoint += this.pointList[a] || 0)
            : (this.bankerPoint += this.pointList[a] || 0);
        (this["card" + t.order].source =
          "DUICard_" + t.color + "_" + t.point + "_png"),
          5 == this.pointList.length,
          6 == this.pointList.length;
      }),
      (i.prototype.refreshpoints = function () {
        (this.playerPoint = 0), (this.bankerPoint = 0);
        for (var t = 0; t < this.pointList.length; t++) {
          var e = this.pointList[t] || 0;
          if (t % 2 == 0)
            for (this.playerPoint += e; this.playerPoint >= 10; )
              this.playerPoint -= 10;
          else
            for (this.bankerPoint += e; this.bankerPoint >= 10; )
              this.bankerPoint -= 10;
        }
      }),
      (i.prototype.checkCards = function (t, e, i, a) {
        var n = ShareUtils.timeByMessageID(t.messageID);
        if (!(this.save_time_deal > n)) {
          var s = t.cardresult;
          if (s) {
            var r = s.split(";");
            if (0 != r.length) {
              var o,
                h,
                l,
                g = 0,
                u = 0,
                c = !1;
              n > this.save_time_deal && (this.save_time_deal = n);
              for (var d = 0; d < r.length; d++)
                if (((o = r[d].split("-")), !(o.length < 2))) {
                  (h = o[0]),
                    (g = parseInt(o[1])),
                    (u = parseInt(o[2])),
                    (c = !1),
                    (l = null);
                  for (var p = 0; p < e.length; p++)
                    (l = e[p]),
                      l &&
                        l.order == u &&
                        ((c = !0),
                        (l.point != h || l.color != g || 1 == l.state) &&
                          ((l.point = h),
                          (l.color = g),
                          (l.messageID = t.messageID),
                          i.call(a, l)));
                  0 == c &&
                    parseInt(h) > 0 &&
                    ((l = new SeatDealMessage(t.tableid, 0, g, h, u, -1)),
                    (l.messageID = t.messageID),
                    i.call(a, l));
                }
            }
          }
        }
      }),
      (i.prototype.onRouteGroupResize = function (t) {
        void 0 === t && (t = null),
          this.route &&
            ((GameUtils.routeSize = this.roteWH), this.route.update());
      }),
      (i.prototype.onShowLimit = function () {
        null == this.gameLimit && (this.gameLimit = new t.GameLimitUI()),
          this.parentGroup.addChild(this.gameLimit),
          this.gameLimit.showUI(
            this.fbTableState.tableInfo.gameType,
            this.isNOCOM,
            !0,
            this.fbTableState.tableInfo.tableid,
          );
      }),
      (i.prototype.onAskBRoute = function (t) {
        this.route.askWayDuotai(this.fbTableState, 1);
      }),
      (i.prototype.onAskPRoute = function (t) {
        this.route.askWayDuotai(this.fbTableState, 2);
      }),
      (i.prototype.onChangeCom = function () {
        this.isNOCOM = this.isNOCOM ? !1 : !0;
      }),
      (i.prototype.onChangeTable = function () {
        this.dispatchEvent(new egret.Event("OnChangeTable", !0, !0));
      }),
      (i.prototype.showComState = function () {
        this.isNOCOM
          ? ((this.imgComNo.visible = !1), (this.gComNo.visible = !1))
          : ((this.imgComNo.visible = !0), (this.gComNo.visible = !0)),
          this.updataCoinInfo();
      }),
      (i.prototype.onChangeVideo = function () {}),
      (i.prototype.showHideVideo = function () {}),
      (i.prototype.showTongjiGroupFun = function () {
        this.tongjigroup.visible = !0;
      }),
      (i.prototype.closeTongjiGroupFun = function () {
        this.tongjigroup.visible = !1;
      }),
      (i.prototype.responseHaveBetByName = function (t) {
        var e = 0;
        for (var i in this._responseList) {
          var a = this._responseList[i];
          e += a[t] || 0;
        }
        return e > 0 ? !0 : this.tempbetlist[t] > 0 ? !0 : !1;
      }),
      (i.prototype.responseTotalBetByName = function (t) {
        var e = 0;
        for (var i in this._responseList) {
          var a = this._responseList[i];
          e += a[t] || 0;
        }
        return e;
      }),
      Object.defineProperty(i.prototype, "curList", {
        get: function () {
          return null == this._curList && (this._curList = {}), this._curList;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "curTotalBet", {
        get: function () {
          var t = 0;
          for (var e in this._curList) t += this._curList[e] || 0;
          return t;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "bankerPoint", {
        get: function () {
          return this._bankerPoint;
        },
        set: function (t) {
          (this._bankerPoint = t || 0),
            (this.lbResultB.text = this._bankerPoint + "");
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "playerPoint", {
        get: function () {
          return this._playerPoint;
        },
        set: function (t) {
          (this._playerPoint = t || 0),
            (this.lbResultP.text = this._playerPoint + "");
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "joinResponseList", {
        get: function () {
          return this.joinList(this._responseList);
        },
        enumerable: !0,
        configurable: !0,
      }),
      (i.prototype.joinList = function (t) {
        var e = {};
        for (var i in t) {
          var a = t[i];
          for (var n in a) null == e[n] && (e[n] = 0), (e[n] += a[n]);
        }
        return e;
      }),
      (i.prototype.clearSuper6Repeat = function () {
        var t = [];
        for (var e in this._repeatList)
          (null == this._repeatList[e].SS || 0 != this.isNOCOM) &&
            ((null != this._repeatList[e].BANKER &&
              this._repeatList[e].BANKER > 0 &&
              this._repeatList[e].BANKER > DataManager.curTable.maxlimit) ||
              this._repeatList[e].BANKER < DataManager.curTable.minlimit ||
              (null != this._repeatList[e].PLAYER &&
                this._repeatList[e].PLAYER > 0 &&
                this._repeatList[e].PLAYER > DataManager.curTable.maxlimit) ||
              this._repeatList[e].PLAYER < DataManager.curTable.minlimit ||
              (null != this._repeatList[e].TILE &&
                this._repeatList[e].TILE > 0 &&
                this._repeatList[e].TILE > DataManager.curTable.maxlimit) ||
              this._repeatList[e].TILE < DataManager.curTable.minlimit ||
              (null != this._repeatList[e].BP &&
                this._repeatList[e].BP > 0 &&
                this._repeatList[e].BP > DataManager.curTable.maxlimit) ||
              this._repeatList[e].BP < DataManager.curTable.minlimit ||
              (null != this._repeatList[e].PP &&
                this._repeatList[e].PP > 0 &&
                this._repeatList[e].PP > DataManager.curTable.maxlimit) ||
              this._repeatList[e].PP < DataManager.curTable.minlimit ||
              t.push(this._repeatList[e]));
        return t;
      }),
      (i.prototype.setResultTip = function (t, e) {
        return Alert.tipGame(LangUtils.LANG_MAP[e] || e, t);
      }),
      (i.prototype.checkBetCount = function () {
        if (1 != ShareUtils.inWhiteList()) {
          var e = egret.getTimer(),
            i = e - t.DuotaiView.DuotaiGameTime;
          i > 9e5
            ? (t.DuotaiView.DuotaiGameTip ||
                ((this.notBetCount = 0),
                dzxx.LiveVideo.ifStopVideo(),
                EventManager.getIns().dispatchEvent(
                  new GotoViewEvent(GotoViewEvent.GOTO_VIEW, View.LOBBY_VIEW),
                ),
                Alert.show(LangUtils.LANG_MAP.dzg_main_44)),
              (t.DuotaiView.DuotaiGameTip = !0))
            : (t.DuotaiView.DuotaiGameTip = !1);
        }
      }),
      (i.prototype.enterGameFun = function () {
        return (
          this.fbTableState.tableInfo,
          this.fbTableState
            ? "RP" == this.fbTableState.tableInfo.tablestate
              ? void Alert.tipGame(LangUtils.LANG_MAP.Maintaining_Table_Card)
              : (DataManager.curTableState &&
                  DataManager.curTableState.hasBet &&
                  Alert.tipGame(LangUtils.LANG_MAP.OP_TIP_1),
                (DataManager.currentLimitKey = DataManager.currentLimitKey),
                void MessageHandler.chooseTable(
                  this.tableid,
                  this.fbTableState.tableInfo.gameType,
                ))
            : void Alert.tipGame(LangUtils.LANG_MAP.LOADING_HISTORY_ERROR)
        );
      }),
      (i.prototype.dispose = function (t) {
        void 0 === t && (t = !1),
          t
            ? MessageHandler.leaveTable(this.tableid)
            : ((DataManager.curTableState = null),
              (DataManager.curTable = null)),
          (this.cur_gameSeq = -1),
          this.gComNo.dispose(),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.CHECK_USER_HAVE_BET,
            this.checkUserhaveBet,
            this,
          ),
          this.btnSure.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onBetSure,
            this,
          ),
          this.btnCancel.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onBetCancel,
            this,
          ),
          this.btnLimit.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onShowLimit,
            this,
          ),
          this.btnAskB.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onAskBRoute,
            this,
          ),
          this.btnAskP.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onAskPRoute,
            this,
          ),
          this.gRote.removeEventListener(
            egret.Event.RESIZE,
            this.onRouteGroupResize,
            this,
          ),
          this.showTongjiGroup.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.showTongjiGroupFun,
            this,
          ),
          this.closeTongjiGroup.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.closeTongjiGroupFun,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.BET_AMOUNT,
            this.betAmount,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.BET_START,
            this.betStart,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.BET_RESULT,
            this.betResult,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.SEAT_DEAL,
            this.seatDeal,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.BET_RESPONSE,
            this.betResponse,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.TABLE_INFO,
            this.tableInfo,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.SEAT_BETTING,
            this.seatBetting,
            this,
          ),
          this.gameTime.removeEventListener(
            "TimeComplete",
            this.onTimeComplete,
            this,
          ),
          this.enterGame.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.enterGameFun,
            this,
          ),
          this.gameTime.stopTime(),
          this.route && this.route.dispose(),
          (this.route = null),
          (this.timer = null),
          (this.seatDealList = null),
          (this.pointList = null),
          this.parent && this.parent.removeChild(this);
      }),
      i
    );
  })(eui.Component);
  (t.DouTaiLongHuItem = e),
    __reflect(e.prototype, "game.DouTaiLongHuItem", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(game || (game = {}));
var game;
!(function (t) {
  var e = (function (e) {
    function i() {
      var t = e.call(this) || this;
      return (
        (t.roteWH = 40),
        (t.isVideoOpen = !0),
        (t.tableid = 0),
        (t._playerPoint = 0),
        (t._bankerPoint = 0),
        (t.tempbetlist = {}),
        (t._responseList = []),
        (t.bet_length = 0),
        (t.notBetCount = 0),
        (t.gameState = -1),
        (t.isCanBet = !1),
        (t.is_wenlu = !1),
        (t.isNOCOM = !1),
        (t.isTeshuzhudian = !1),
        (t.cur_gameSeq = -1),
        (t.save_time_deal = 0),
        (t.skinName = "resource/skins/duotai/DouTaiSciboItem.exml"),
        (t.percentWidth = 100),
        t
      );
    }
    return (
      __extends(i, e),
      (i.prototype.partAdded = function (t, i) {
        e.prototype.partAdded.call(this, t, i);
      }),
      (i.prototype.childrenCreated = function () {
        e.prototype.childrenCreated.call(this);
      }),
      (i.prototype.updataView = function (t, e) {
        (this.fbEnetrTable = e),
          (this.fbTableState = t),
          (this.isNOCOM = DataManager.isNOCOM),
          this.setButtonEnable(!1),
          (this.gameState = -1),
          (this.gCards.visible = !1),
          (this.gComNo.visible = !0),
          (this.gComNo.fbEnetrTable = e),
          (this.gComNo.curTableState = this.fbTableState),
          this.showHideVideo(),
          (GameUtils.routeSize = this.roteWH),
          (this.tableid = this.fbTableState.tableInfo.tableid),
          this.route || (this.route = new dzxx.ShaiBaoRoteScreen(6, 6)),
          this.gRote.addChild(this.route),
          (this.route.currType =
            dzxx.SHAIB_ROTE_SHOW_TYPE.SHAIBROTE_SHOW_TYPE_1),
          this.route.show(this.fbTableState.tableInfo.history2),
          this.onRouteGroupResize(),
          this.fbTableState,
          this.initInfo(),
          this.gameInit(),
          (this.isCanBet = !1),
          this.changeLang(),
          this.uodataTabInfo(),
          this.closeTongjiGroupFun(),
          EventManager.getIns().addEventListener(
            DataChangeEvent.CHECK_USER_HAVE_BET,
            this.checkUserhaveBet,
            this,
          ),
          this.addEventListener("OnHitBetTable", this.betClick, this),
          this.gameTime.addEventListener(
            "TimeComplete",
            this.onTimeComplete,
            this,
          ),
          this.btnLimit.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onShowLimit,
            this,
          ),
          this.btnSure.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onBetSure,
            this,
          ),
          this.btnCancel.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onBetCancel,
            this,
          ),
          this.showTongjiGroup.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.showTongjiGroupFun,
            this,
          ),
          this.closeTongjiGroup.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.closeTongjiGroupFun,
            this,
          ),
          this.enterGame.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.enterGameFun,
            this,
          ),
          this.gRote.addEventListener(
            egret.Event.RESIZE,
            this.onRouteGroupResize,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.BET_AMOUNT,
            this.betAmount,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.BET_START,
            this.betStart,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.BET_RESULT,
            this.betResult,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.SEAT_DEAL,
            this.seatDeal,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.BET_RESPONSE,
            this.betResponse,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.TABLE_INFO,
            this.tableInfo,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.SEAT_BETTING,
            this.seatBetting,
            this,
          );
      }),
      (i.prototype.changeLang = function (t) {
        void 0 === t && (t = null),
          (this.dzg_duotai_lab_1.text = LangUtils.LANG_MAP.dzg_game_duotai_1),
          (this.dzg_duotai_lab_6.text =
            LangUtils.LANG_MAP.duotai_tongji_sicbo_2),
          (this.dzg_duotai_lab_7.text =
            LangUtils.LANG_MAP.duotai_tongji_sicbo_3),
          (this.dzg_duotai_lab_8.text =
            LangUtils.LANG_MAP.duotai_tongji_sicbo_1),
          (this.langLab2.text = LangUtils.LANG_MAP.duotai_tongji_sicbo_1 + ":"),
          (this.langLab3.text = LangUtils.LANG_MAP.duotai_tongji_sicbo_3 + ":"),
          (this.langLab4.text = LangUtils.LANG_MAP.duotai_tongji_sicbo_2 + ":"),
          (this.langLab0.text = LangUtils.LANG_MAP.duotai_tongji_sicbo_4 + ":"),
          (this.langLab5.text = LangUtils.LANG_MAP.duotai_tongji_sicbo_5 + ":"),
          (this.enterGame.label = LangUtils.LANG_MAP.FUNC_LOGINGAME),
          (this.tongjititletxt.text = LangUtils.get("StatisticsView_TITLE")),
          (this.langLab1.text = LangUtils.LANG_MAP.dzg_main_10002 + ":"),
          (this.lblRoute_A.text = LangUtils.LANG_MAP.TOTAL),
          (this.btnSure.source = "hxbg_36_" + DataManager.LANG_TYPE + "_png"),
          (this.btnCancel.source = "hxbg_35_" + DataManager.LANG_TYPE + "_png"),
          this.gameTime.changeLang(),
          DataManager.LANG_TYPE == DataManager.LANG_EN
            ? ((this.TableNameLab.size = 24), (this.dzg_duotai_lab_1.size = 18))
            : DataManager.LANG_TYPE == DataManager.LANG_VL
              ? ((this.TableNameLab.size = 24),
                (this.dzg_duotai_lab_1.size = 16))
              : DataManager.LANG_TYPE == DataManager.LANG_KN
                ? ((this.TableNameLab.size = 24),
                  (this.dzg_duotai_lab_1.size = 20))
                : DataManager.LANG_TYPE == DataManager.LANG_HN ||
                    DataManager.LANG_TYPE == DataManager.LANG_JPN ||
                    DataManager.LANG_TYPE == DataManager.LANG_KR
                  ? ((this.TableNameLab.size = 24),
                    (this.dzg_duotai_lab_1.size = 20))
                  : ((this.TableNameLab.size = 24),
                    (this.dzg_duotai_lab_1.size = 22));
      }),
      (i.prototype.initInfo = function (t) {
        void 0 === t && (t = null);
        var e = this.fbTableState.tableInfo.history3[0] || 0,
          i = this.fbTableState.tableInfo.history3[1] || 0,
          a = this.fbTableState.tableInfo.history3[2] || 0,
          n = this.fbTableState.tableInfo.history3[3] || 0,
          s = this.fbTableState.tableInfo.history3[4] || 0;
        "S" == t && (n = a = s = i = e = 0),
          (this.lblRouteB.text = e + ""),
          (this.lblRouteP.text = i + ""),
          (this.lblRouteT.text = s + ""),
          (this.lblRouteAll.text = e + i + s + ""),
          (this.lblRoute_B_All.text = a + ""),
          (this.lblRoute_P_All.text = n + "");
        var r = e + i + s;
        r > 0 ? Math.floor((e / r) * 100) : 0,
          r > 0 ? Math.floor((i / r) * 100) : 0;
        (this.lblRouteB_line.width = 120 * (0 == r ? 0 : e / r)),
          (this.lblRouteP_line.width = 120 * (0 == r ? 0 : i / r)),
          (this.lblRouteT_line.width = 120 * (0 == r ? 0 : s / r));
        var o =
          DataManager.getGameNameWithGameStyle(
            this.fbTableState.tableInfo.gameType,
            this.fbTableState.tableInfo.gamestyle,
          ) + DataManager.getTableStr1(this.fbTableState.tableInfo.tableid);
        (this.TableNameLab.text = o),
          (this.TableIDLab.text =
            this.fbTableState.tableInfo.shoeSeq.toString() +
            "/" +
            this.fbTableState.tableInfo.gameSeq.toString()),
          (this.gComNo.curTableState = this.fbTableState);
      }),
      (i.prototype.uodataTabInfo = function (t) {
        if ((void 0 === t && (t = !0), this.fbTableState)) {
          var e = new RegExp(",", "g"),
            i = void 0,
            a = void 0,
            n = void 0,
            s = this.fbTableState.tablePool,
            r = String(s.DiBig).split("/");
          (this.tongjibankertxt.text = r[0] + "/" + r[1]),
            (i = Number(r[0].replace(e, "")));
          var o = String(s.DiSm).split("/");
          (this.tongjiplayertxt.text = o[0] + "/" + o[1]),
            (a = Number(o[0].replace(e, "")));
          var h = String(s.DiTri0).split("/");
          (this.tongjitietxt.text = h[0] + "/" + h[1]),
            (n = Number(h[0].replace(e, "")));
          var l = i + a + n,
            g = 160 * (0 == l ? 0 : i / l),
            u = 160 * (0 == l ? 0 : a / l),
            c = 160 * (0 == l ? 0 : n / l);
          (this.preBet_B.visible = 0 == g ? !1 : !0),
            (this.preBet_P.visible = 0 == u ? !1 : !0),
            (this.preBet_T.visible = 0 == c ? !1 : !0),
            egret.Tween.get(this.preBet_B)
              .to(
                {
                  width: g,
                },
                300,
              )
              .call(function () {}, this),
            egret.Tween.get(this.preBet_P)
              .to(
                {
                  width: u,
                },
                300,
              )
              .call(function () {}, this),
            egret.Tween.get(this.preBet_T)
              .to(
                {
                  width: c,
                },
                300,
              )
              .call(function () {}, this);
        } else
          (this.tongjibankertxt.text = ""),
            (this.tongjiplayertxt.text = ""),
            (this.tongjitietxt.text = "");
      }),
      (i.prototype.gameInit = function () {
        this.pointList || (this.pointList = new Array()),
          (this.pointList.length = 0),
          this.seatDealList || (this.seatDealList = new Array()),
          (this.seatDealList.length = 0),
          this.timer ||
            ((this.timer = new egret.Timer(500, 6)),
            this.timer.addEventListener(
              egret.TimerEvent.TIMER,
              this.timerSeatDeal,
              this,
            )),
          this.timer.reset(),
          (this.playerPoint = this.bankerPoint = 0),
          (this.gCards.visible = !1),
          this.gComNo.initUI();
      }),
      (i.prototype.tableInfo = function (t) {
        var e = t.data;
        if (e.tableid == this.fbTableState.tableInfo.tableid) {
          (GameUtils.routeSize = this.roteWH),
            (this.route.currType =
              dzxx.SHAIB_ROTE_SHOW_TYPE.SHAIBROTE_SHOW_TYPE_1),
            this.route.show(this.fbTableState.tableInfo.history2),
            this.initInfo(this.fbTableState.tableInfo.tablestate);
          var i = "";
          "S" == e.tablestate || "RP" == e.tablestate
            ? (this.gameTime.startTime(0),
              (i =
                "RP" == e.tablestate
                  ? "Maintaining_Table_Card"
                  : "M_Clear_Table_Card"),
              this.gameTime.stopTime(),
              this.gameTime.showState(i),
              "RP" == e.tablestate && this.setButtonEnable(!1),
              "S" == e.tablestate && this.gameInit())
            : "Maintaining_Table_Card" == i ||
              "D" == e.tablestate ||
              ("WOP" == e.tablestate && this.gameTime.showState("SB0"));
        }
      }),
      (i.prototype.onTimeComplete = function () {
        (this.isCanBet = !1), this.setButtonEnable(!1);
      }),
      (i.prototype.betStart = function (e) {
        var i = e.data[0];
        if (i.tableid == this.fbTableState.tableInfo.tableid)
          if (0 == i.bettype) {
            if (this.cur_gameSeq == i.gameSeq) return;
            (this.cur_gameSeq = i.gameSeq),
              (this.isTeshuzhudian = !1),
              (this.tempbetlist = {}),
              (this._responseList = []),
              this.gameInit(),
              (this.isCanBet = !0),
              this.setButtonEnable(!1),
              (this.gameState = t.GameAction.STATE_ACCEPT_BET);
            var a = egret.getTimer() + i.countdown;
            this.gameTime.startTime(a), this.checkBetCount();
          } else
            3 == i.bettype && ((this.isCanBet = !1), this.cleartempcoins());
      }),
      (i.prototype.join_curList_send = function () {
        this._curList_send || (this._curList_send = {});
        var t = {},
          e = 0;
        for (var i in this._curList)
          (e = this._curList[i]),
            this._curList_send[i] &&
              (e = this._curList[i] - this._curList_send[i]),
            e > 0 && (t[i] = e),
            (this._curList_send[i] =
              (this._curList_send[i] ? this._curList_send[i] : 0) + e);
        return t;
      }),
      (i.prototype.ok_curList_send = function (t) {
        if (
          t.tableid == this.fbTableState.tableInfo.tableid &&
          this._curList_send
        ) {
          var e = 0,
            i = 0;
          for (var a in this._curList_send)
            t.option.indexOf(a) >= 0
              ? ((e = t.amount[t.option.indexOf(a)]),
                (this._curList_send[a] = this._curList_send[a] - e),
                (i = this._curList && this._curList[a] ? this._curList[a] : 0),
                i > 0 &&
                  ((this._curList[a] = 0 > i - e ? 0 : i - e),
                  this._curList[a] <= 0 && delete this._curList[a]),
                this._curList_send[a] <= 0 && delete this._curList_send[a])
              : (delete this._curList_send[a],
                this._curList && this._curList[a] && delete this._curList[a]);
        }
      }),
      (i.prototype.onBetSure = function (t) {
        (DataManager.xAxis = t.stageX),
          (DataManager.yAxis = t.stageY),
          this.sendBet(this.join_curList_send());
      }),
      (i.prototype.sendBet = function (t) {
        var e = new Array(),
          i = new Array();
        for (var a in t) {
          GameUtils.getOppoPoint(this.fbTableState.tableInfo.gameType, a);
          e.push(a), i.push(Math.floor(t[a]));
        }
        if (0 == e.length) {
          var n = new BetResponseMessage(
            0,
            this.fbTableState.tableid,
            null,
            null,
            0,
          );
          return void this.betResponseFun(n);
        }
        (this.bet_length = e.length),
          MessageHandler.bet(
            this.fbTableState.tableid,
            e,
            i,
            this.isNOCOM ? 1 : 0,
            this.fbTableState.tableInfo.gameSeq,
          );
      }),
      (i.prototype.betResponseFun = function (e) {
        e.tableid == this.fbTableState.tableid &&
          (1 == e.result &&
            e.option &&
            (e.result = this.bet_length == e.option.length ? 1 : 2),
          1 == e.result || 2 == e.result
            ? (e.option &&
                DataManager.selectBetCoinDisByTabshid(
                  e.option,
                  this.fbTableState.tableInfo.tableSeq,
                ),
              (this._repeatList = this._responseList),
              2 == e.result && this.cleartempcoins(),
              this.ok_curList_send(e),
              (this.notBetCount = 0),
              dzxx.SoundManager.inst.playSound(dzxx.SoundManager.Bet_success),
              (t.DuotaiView.DuotaiGameTime = egret.getTimer()))
            : (this.cleartempcoins(),
              (this._curList = null),
              (this._curList_send = null)));
      }),
      (i.prototype.onBetCancel = function () {
        this.cleartempcoins(), (this._curList = null);
      }),
      (i.prototype.cleartempcoins = function () {
        (this.tempbetlist = {}),
          this.gComNo.clearTmpCoins(),
          this.updataCoinInfo();
      }),
      (i.prototype.onBetRepet = function () {
        var t = this.clearSuper6Repeat();
        (this._curList = this.joinList(t)),
          this.updateTempCoins(t),
          this.updataCoinInfo();
      }),
      (i.prototype.updateTempCoins = function (t) {
        this.cleartempcoins();
        var e = this.joinList(t);
        for (var i in e)
          this.addBetCoin(e[i], {
            name: i,
          }),
            (this.tempbetlist[i] = this.tempbetlist[i] || 0),
            (this.tempbetlist[i] += e[i]);
      }),
      (i.prototype.setNOCOMbuttonState = function () {
        var e,
          i = 0,
          a = this.gameState == t.GameAction.STATE_ACCEPT_BET;
        if (this.curList) {
          if (((i = this.curList.BANKER), i > 0))
            return void this.setNOCOMEnable(!1);
          if (((i = this.curList.SS), i > 0))
            return void this.setNOCOMEnable(!1);
        }
        if ((e = this.joinResponseList)) {
          if (((i = e.BANKER), i > 0)) return void this.setNOCOMEnable(!1);
          if (((i = e.SS), i > 0)) return void this.setNOCOMEnable(!1);
        }
        this.setNOCOMEnable(
          a && !DataManager.hasTableStates_B_S_bystate(this.fbTableState),
        );
      }),
      (i.prototype.setNOCOMEnable = function (t) {
        (this.gComOpt.touchEnabled = this.gComOpt.touchChildren = t),
          ShareUtils.setGrayFilter(this.gComOpt, !t),
          t || (this.lbComNo.textColor = 16777215);
      }),
      (i.prototype.checkUserhaveBet = function (t) {
        t.data.t_id == this.fbEnetrTable.tableid &&
          this.setButtonEnable(t.data.isShow);
      }),
      (i.prototype.setButtonEnable = function (t) {
        this.btnSure;
        (this.btnSure.touchEnabled = this.btnCancel.touchEnabled = t),
          ShareUtils.setGrayFilter(this.btnSure, !t),
          ShareUtils.setGrayFilter(this.btnCancel, !t),
          (this.betShowGroup.visible = t);
      }),
      (i.prototype.clearData = function () {
        (this.tempbetlist = {}), (this._responseList.length = 0);
      }),
      (i.prototype.betClick = function (e) {
        if (
          0 != this.isCanBet &&
          this.gameState == t.GameAction.STATE_ACCEPT_BET
        ) {
          var i = DataManager.amount,
            a = this.curTotalBet;
          if (DataManager.sumAmount <= a)
            return void this.setResultTip(
              16243228,
              LangUtils.LANG_MAP.BET_NO_BALANCE,
            );
          if (DataManager.sumAmount < 1)
            return void this.setResultTip(
              16243228,
              LangUtils.LANG_MAP.BET_NO_BALANCE,
            );
          var n = e.data.name;
          if (
            (DataManager.Q1E5_login || DataManager.API168_login) &&
            DataManager.Q1E5_BET_MUTEX
          )
            if ("PLAYER" == n) {
              if (this.responseHaveBetByName("BANKER"))
                return void this.setResultTip(
                  16243228,
                  LangUtils.LANG_MAP.dzg_main_59,
                );
            } else if ("BANKER" == n && this.responseHaveBetByName("PLAYER"))
              return void this.setResultTip(
                16243228,
                LangUtils.LANG_MAP.dzg_main_59,
              );
          null == this.curList[n] && (this._curList[n] = 0);
          var s = this.curList[n],
            r = this.responseTotalBetByName(n),
            o = i + this._curList[n] + r,
            h = Opposite.getName(this.fbTableState.tableInfo.gameType, n),
            l = 0;
          if (
            (h &&
              (l = (this._curList[h] || 0) + this.responseTotalBetByName(h)),
            (o = BetLimitAction.getIns().getGameLimit(
              this.fbTableState.tableInfo.tableid,
              n,
              o,
              h,
              l,
            )),
            o > 0)
          )
            if (a - this._curList[n] + o - r > DataManager.sumAmount) {
              if (
                ((o = DataManager.sumAmount - a + this._curList[n] + r),
                (o = Math.floor(o)),
                !BetLimitAction.getIns().checkMultiTableLimit(
                  this.fbTableState.tableInfo.tableid,
                  n,
                  o,
                  h,
                  l,
                ))
              )
                return void this.setResultTip(
                  16243228,
                  LangUtils.LANG_MAP.BET_NO_BALANCE_TO_LIMIT,
                );
              this.setResultTip(16243228, LangUtils.LANG_MAP.BET_NO_BALANCE);
            } else
              i + this._curList[n] + r > o &&
                this.setResultTip(16243228, LangUtils.LANG_MAP.BET_TOO_MUCH);
          switch (o) {
            case -1:
              return void this.setResultTip(
                16243228,
                LangUtils.LANG_MAP.OPERATE_FAIL,
              );
            case -2:
              return void this.setResultTip(
                16243228,
                LangUtils.LANG_MAP.OPERATE_FAIL,
              );
            default:
              (this._curList[n] = o - r),
                this._curList[n] <= 0 && (this._curList[n] = 0);
          }
          if (this._curList[n] > 0) {
            var g = this._curList[n] - s;
            g > 0 &&
              (this.addBetCoin(g, e.data, !0),
              (this.tempbetlist[n] = this.tempbetlist[n] || 0),
              (this.tempbetlist[n] += g));
          }
          dzxx.SoundManager.inst.playSound(dzxx.SoundManager.Click_CoinBtn),
            this.updataCoinInfo();
        }
      }),
      (i.prototype.addBetCoin = function (t, e, i) {
        void 0 === i && (i = !1),
          this.gComNo.visible && this.gComNo.addBetCoin(t, e, i);
      }),
      (i.prototype.updataCoinInfo = function (t) {
        void 0 === t && (t = !1),
          this.gComNo.visible &&
            this.gComNo.updataCoinInfo(
              this.joinResponseList,
              this.tempbetlist,
              t,
            );
      }),
      (i.prototype.betResult = function (e) {
        var i = e.data;
        if (i.tableid == this.fbTableState.tableid) {
          this.setButtonEnable(!1),
            this.cleartempcoins(),
            (this.gameState = t.GameAction.STATE_RESULT),
            this.onActionResult(i);
          var a = [];
          i.winOptions.indexOf("DiSm") > -1 && a.push("S"),
            i.winOptions.indexOf("DiBig") > -1 && a.push("B"),
            i.winOptions.indexOf("DiTri0") > -1 && a.push("T"),
            i.winOptions.indexOf("DiOdd") > -1 && a.push("O"),
            i.winOptions.indexOf("DiEven") > -1 && a.push("E"),
            this.gComNo.visible && this.gComNo.showWin(a);
          var n = i.cardresult.split(";");
          (this.dice_result1.source =
            "dicePic_" + this.filterNumToPng(n[0]) + "_png"),
            (this.dice_result2.source =
              "dicePic_" + this.filterNumToPng(n[1]) + "_png"),
            (this.dice_result3.source =
              "dicePic_" + this.filterNumToPng(n[2]) + "_png"),
            (this.dice_result4.source = this.addDiceNum(n)),
            (this.dice_result5.source = this.isBig(n)),
            (this.dice_result6.source = this.isOdd(n));
        }
      }),
      (i.prototype.filterNumToPng = function (t) {
        var e;
        switch (t) {
          case "1":
            e = "one";
            break;
          case "2":
            e = "two";
            break;
          case "3":
            e = "three";
            break;
          case "4":
            e = "four";
            break;
          case "5":
            e = "five";
            break;
          case "6":
            e = "six";
        }
        return e;
      }),
      (i.prototype.addDiceNum = function (t) {
        var e,
          i,
          a = t.every(function (e) {
            return e === t[0];
          });
        return (
          a
            ? (e = "dice_wei_png")
            : ((i = Number(t[0]) + Number(t[1]) + Number(t[2])),
              (e = "diceNum_" + this.filterTotalNum(i) + "_png")),
          e
        );
      }),
      (i.prototype.filterTotalNum = function (t) {
        var e;
        switch (t) {
          case 4:
            e = "four";
            break;
          case 5:
            e = "five";
            break;
          case 6:
            e = "six";
            break;
          case 7:
            e = "seven";
            break;
          case 8:
            e = "eight";
            break;
          case 9:
            e = "nine";
            break;
          case 10:
            e = "ten";
            break;
          case 11:
            e = "eleven";
            break;
          case 12:
            e = "twelve";
            break;
          case 13:
            e = "thirteen";
            break;
          case 14:
            e = "fourteen";
            break;
          case 15:
            e = "fifteen";
            break;
          case 16:
            e = "sixteen";
            break;
          case 17:
            e = "seventeen";
        }
        return e;
      }),
      (i.prototype.isBig = function (t) {
        var e,
          i = Number(t[0]) + Number(t[1]) + Number(t[2]);
        return (e = 11 > i ? "tiny_png" : "big_png");
      }),
      (i.prototype.isOdd = function (t) {
        var e,
          i = Number(t[0]) + Number(t[1]) + Number(t[2]);
        return (e = i % 2 == 0 ? "double_png" : "single_png");
      }),
      (i.prototype.onActionResult = function (e) {
        e.tableid == this.fbTableState.tableid &&
          (this._responseList.length && (this._repeatList = this._responseList),
          (this.tempbetlist = {}),
          (this._responseList = []),
          this.gameState != t.GameAction.STATE_RESULT &&
            (this.notBetCount += 1),
          (this.gameState = t.GameAction.STATE_RESULT),
          this._curList_send && (this._curList_send = {}),
          (this._curList = null),
          0 != e.winAmount && (e.winAmount > 0 || e.winAmount < 0));
      }),
      (i.prototype.playResultSound = function () {}),
      (i.prototype.betResponse = function (t) {
        this.betResponseFun(t.data),
          t.data.tableid == this.fbTableState.tableid &&
            (1 == t.data.result
              ? this.setResultTip(16243228, LangUtils.LANG_MAP.BET_SUCCESS)
              : 2 == t.data.result
                ? this.setResultTip(16243228, LangUtils.LANG_MAP.BET_UNDER_MUCH)
                : -112 == t.data.result
                  ? this.setResultTip(
                      16243228,
                      LangUtils.LANG_MAP.BET_UNDER_MUCH,
                    )
                  : -113 == t.data.result
                    ? this.setResultTip(
                        16243228,
                        LangUtils.LANG_MAP.BET_UNDER_MUCH,
                      )
                    : -95 == t.data.result
                      ? Alert.tipGame(
                          LangUtils.LANG_MAP.dzg_game_bjl_30,
                          16243228,
                        )
                      : -96 == t.data.result
                        ? Alert.tipGame(
                            LangUtils.LANG_MAP.dzg_game_bjl_31,
                            16243228,
                          )
                        : -122 == t.data.result
                          ? this.setResultTip(
                              16243228,
                              LangUtils.LANG_MAP.BET_TOO_MUCH,
                            )
                          : -123 == t.data.result
                            ? this.setResultTip(
                                16243228,
                                LangUtils.LANG_MAP.BET_TOO_MUCH_OF_ALL_TABLE,
                              )
                            : -140 == t.data.result
                              ? Alert.showCaptcha()
                              : this.setResultTip(
                                  16243228,
                                  LangUtils.LANG_MAP.BET_FAILE,
                                ));
      }),
      (i.prototype.seatBetting = function (t) {
        var e = t.data;
        if (
          e.tableid == this.fbTableState.tableid &&
          this.fbEnetrTable.tableid == e.tableid &&
          DataManager.userid == e.userid
        ) {
          if (!e.option || "" == e.option || 0 == e.amount) return;
          var i = e.option,
            a = {};
          (a[i] = e.amount),
            this._responseList.push(a),
            (this.tempbetlist = {}),
            this.updataCoinInfo(!0),
            ("SS" == e.option || "BANKER" == e.option) &&
              (this.isTeshuzhudian = !0),
            this.isTeshuzhudian &&
              (1 == e.sbanker ? (this.isNOCOM = !0) : (this.isNOCOM = !1),
              this.gComNo.visible &&
                this.gComNo.showBetInfo(DataManager.curTableState));
        }
      }),
      (i.prototype.betAmount = function (t) {
        var e = t.data;
        this.tableid == e &&
          this.gComNo.visible &&
          this.gComNo.showBetInfo(this.fbTableState),
          this.uodataTabInfo(!0);
      }),
      (i.prototype.seatDeal = function (t) {
        var e = t.data;
        if (this.fbTableState.tableid == e.tableid) {
          this.gCards.visible = !0;
          DataManager.getTableStates(e.tableid);
          this.showCard(e),
            this.checkCards(e, this.seatDealList, this.showCard, this);
        }
      }),
      (i.prototype.showCard = function (t) {
        (t.order < this.seatDealList.length &&
          this.seatDealList[t.order] &&
          ShareUtils.timeByMessageID(t.messageID) <
            ShareUtils.timeByMessageID(this.seatDealList[t.order].messageID)) ||
          ((this.seatDealList[t.order] = t),
          0 == this.timer.currentCount && this.timer.start(),
          t.order < this.timer.currentCount
            ? (this.openDeal(t),
              this.timer.currentCount < this.timer.repeatCount &&
                t.order == this.timer.currentCount - 1 &&
                this.timer.start())
            : this.timer.currentCount > 4 && this.openDeal(t));
      }),
      (i.prototype.timerSeatDeal = function (t) {
        null != this.seatDealList &&
          (this.seatDealList[this.timer.currentCount - 1]
            ? this.openDeal(this.seatDealList[this.timer.currentCount - 1])
            : 5 == this.timer.currentCount &&
                this.seatDealList[this.timer.currentCount]
              ? (this.openDeal(this.seatDealList[this.timer.currentCount]),
                this.timer.stop())
              : this.timer.stop());
      }),
      (i.prototype.openDeal = function (t, e) {
        void 0 === e && (e = !0);
        var i = parseInt(t.point);
        i >= 10 && (i = 0),
          (this.pointList[t.order] = i),
          5 == this.pointList.length,
          6 == this.pointList.length;
      }),
      (i.prototype.refreshpoints = function () {
        (this.playerPoint = 0), (this.bankerPoint = 0);
        for (var t = 0; t < this.pointList.length; t++) {
          var e = this.pointList[t] || 0;
          if (t % 2 == 0)
            for (this.playerPoint += e; this.playerPoint >= 10; )
              this.playerPoint -= 10;
          else
            for (this.bankerPoint += e; this.bankerPoint >= 10; )
              this.bankerPoint -= 10;
        }
      }),
      (i.prototype.checkCards = function (t, e, i, a) {
        var n = ShareUtils.timeByMessageID(t.messageID);
        if (!(this.save_time_deal > n)) {
          var s = t.cardresult;
          if (s) {
            var r = s.split(";");
            if (0 != r.length) {
              var o,
                h,
                l,
                g = 0,
                u = 0,
                c = !1;
              n > this.save_time_deal && (this.save_time_deal = n);
              for (var d = 0; d < r.length; d++)
                if (((o = r[d].split("-")), !(o.length < 2))) {
                  (h = o[0]),
                    (g = parseInt(o[1])),
                    (u = parseInt(o[2])),
                    (c = !1),
                    (l = null);
                  for (var p = 0; p < e.length; p++)
                    (l = e[p]),
                      l &&
                        l.order == u &&
                        ((c = !0),
                        (l.point != h || l.color != g || 1 == l.state) &&
                          ((l.point = h),
                          (l.color = g),
                          (l.messageID = t.messageID),
                          i.call(a, l)));
                  0 == c &&
                    parseInt(h) > 0 &&
                    ((l = new SeatDealMessage(t.tableid, 0, g, h, u, -1)),
                    (l.messageID = t.messageID),
                    i.call(a, l));
                }
            }
          }
        }
      }),
      (i.prototype.onRouteGroupResize = function (t) {
        void 0 === t && (t = null),
          this.route &&
            ((GameUtils.routeSize = this.roteWH), this.route.updata());
      }),
      (i.prototype.onShowLimit = function () {
        null == this.gameLimit && (this.gameLimit = new t.GameLimitUI()),
          this.parentGroup.addChild(this.gameLimit),
          this.gameLimit.showUI(
            this.fbTableState.tableInfo.gameType,
            this.isNOCOM,
            !0,
            this.fbTableState.tableInfo.tableid,
          );
      }),
      (i.prototype.onChangeCom = function () {
        this.isNOCOM = this.isNOCOM ? !1 : !0;
      }),
      (i.prototype.onChangeTable = function () {
        this.dispatchEvent(new egret.Event("OnChangeTable", !0, !0));
      }),
      (i.prototype.showComState = function () {
        this.isNOCOM
          ? ((this.imgComNo.visible = !1), (this.gComNo.visible = !1))
          : ((this.imgComNo.visible = !0), (this.gComNo.visible = !0)),
          this.updataCoinInfo();
      }),
      (i.prototype.onChangeVideo = function () {}),
      (i.prototype.showHideVideo = function () {}),
      (i.prototype.showTongjiGroupFun = function () {
        this.tongjigroup.visible = !0;
      }),
      (i.prototype.closeTongjiGroupFun = function () {
        this.tongjigroup.visible = !1;
      }),
      (i.prototype.responseHaveBetByName = function (t) {
        var e = 0;
        for (var i in this._responseList) {
          var a = this._responseList[i];
          e += a[t] || 0;
        }
        return e > 0 ? !0 : this.tempbetlist[t] > 0 ? !0 : !1;
      }),
      (i.prototype.responseTotalBetByName = function (t) {
        var e = 0;
        for (var i in this._responseList) {
          var a = this._responseList[i];
          e += a[t] || 0;
        }
        return e;
      }),
      Object.defineProperty(i.prototype, "curList", {
        get: function () {
          return null == this._curList && (this._curList = {}), this._curList;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "curTotalBet", {
        get: function () {
          var t = 0;
          for (var e in this._curList) t += this._curList[e] || 0;
          return t;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "bankerPoint", {
        get: function () {
          return this._bankerPoint;
        },
        set: function (t) {
          this._bankerPoint = t || 0;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "playerPoint", {
        get: function () {
          return this._playerPoint;
        },
        set: function (t) {
          this._playerPoint = t || 0;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "joinResponseList", {
        get: function () {
          return this.joinList(this._responseList);
        },
        enumerable: !0,
        configurable: !0,
      }),
      (i.prototype.joinList = function (t) {
        var e = {};
        for (var i in t) {
          var a = t[i];
          for (var n in a) null == e[n] && (e[n] = 0), (e[n] += a[n]);
        }
        return e;
      }),
      (i.prototype.clearSuper6Repeat = function () {
        var t = [];
        for (var e in this._repeatList)
          (null == this._repeatList[e].SS || 0 != this.isNOCOM) &&
            ((null != this._repeatList[e].BANKER &&
              this._repeatList[e].BANKER > 0 &&
              this._repeatList[e].BANKER > DataManager.curTable.maxlimit) ||
              this._repeatList[e].BANKER < DataManager.curTable.minlimit ||
              (null != this._repeatList[e].PLAYER &&
                this._repeatList[e].PLAYER > 0 &&
                this._repeatList[e].PLAYER > DataManager.curTable.maxlimit) ||
              this._repeatList[e].PLAYER < DataManager.curTable.minlimit ||
              (null != this._repeatList[e].TILE &&
                this._repeatList[e].TILE > 0 &&
                this._repeatList[e].TILE > DataManager.curTable.maxlimit) ||
              this._repeatList[e].TILE < DataManager.curTable.minlimit ||
              (null != this._repeatList[e].BP &&
                this._repeatList[e].BP > 0 &&
                this._repeatList[e].BP > DataManager.curTable.maxlimit) ||
              this._repeatList[e].BP < DataManager.curTable.minlimit ||
              (null != this._repeatList[e].PP &&
                this._repeatList[e].PP > 0 &&
                this._repeatList[e].PP > DataManager.curTable.maxlimit) ||
              this._repeatList[e].PP < DataManager.curTable.minlimit ||
              t.push(this._repeatList[e]));
        return t;
      }),
      (i.prototype.setResultTip = function (t, e) {
        return Alert.tipGame(LangUtils.LANG_MAP[e] || e, t);
      }),
      (i.prototype.checkBetCount = function () {
        if (1 != ShareUtils.inWhiteList()) {
          var e = egret.getTimer(),
            i = e - t.DuotaiView.DuotaiGameTime;
          i > 9e5
            ? (t.DuotaiView.DuotaiGameTip ||
                ((this.notBetCount = 0),
                dzxx.LiveVideo.ifStopVideo(),
                EventManager.getIns().dispatchEvent(
                  new GotoViewEvent(GotoViewEvent.GOTO_VIEW, View.LOBBY_VIEW),
                ),
                Alert.show(LangUtils.LANG_MAP.dzg_main_44)),
              (t.DuotaiView.DuotaiGameTip = !0))
            : (t.DuotaiView.DuotaiGameTip = !1);
        }
      }),
      (i.prototype.enterGameFun = function () {
        return (
          this.fbTableState.tableInfo,
          this.fbTableState
            ? "RP" == this.fbTableState.tableInfo.tablestate
              ? void Alert.tipGame(LangUtils.LANG_MAP.Maintaining_Table_Card)
              : (DataManager.curTableState &&
                  DataManager.curTableState.hasBet &&
                  Alert.tipGame(LangUtils.LANG_MAP.OP_TIP_1),
                (DataManager.currentLimitKey = DataManager.currentLimitKey),
                void MessageHandler.chooseTable(
                  this.tableid,
                  this.fbTableState.tableInfo.gameType,
                ))
            : void Alert.tipGame(LangUtils.LANG_MAP.LOADING_HISTORY_ERROR)
        );
      }),
      (i.prototype.dispose = function (t) {
        void 0 === t && (t = !1),
          t
            ? MessageHandler.leaveTable(this.tableid)
            : ((DataManager.curTableState = null),
              (DataManager.curTable = null)),
          (this.cur_gameSeq = -1),
          this.gComNo.dispose(),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.CHECK_USER_HAVE_BET,
            this.checkUserhaveBet,
            this,
          ),
          this.btnSure.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onBetSure,
            this,
          ),
          this.btnCancel.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onBetCancel,
            this,
          ),
          this.btnLimit.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onShowLimit,
            this,
          ),
          this.gRote.removeEventListener(
            egret.Event.RESIZE,
            this.onRouteGroupResize,
            this,
          ),
          this.showTongjiGroup.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.showTongjiGroupFun,
            this,
          ),
          this.closeTongjiGroup.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.closeTongjiGroupFun,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.BET_AMOUNT,
            this.betAmount,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.BET_START,
            this.betStart,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.BET_RESULT,
            this.betResult,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.SEAT_DEAL,
            this.seatDeal,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.BET_RESPONSE,
            this.betResponse,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.TABLE_INFO,
            this.tableInfo,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.SEAT_BETTING,
            this.seatBetting,
            this,
          ),
          this.gameTime.removeEventListener(
            "TimeComplete",
            this.onTimeComplete,
            this,
          ),
          this.enterGame.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.enterGameFun,
            this,
          ),
          this.gameTime.stopTime(),
          this.route,
          (this.route = null),
          (this.timer = null),
          (this.seatDealList = null),
          (this.pointList = null),
          this.parent && this.parent.removeChild(this);
      }),
      i
    );
  })(eui.Component);
  (t.DouTaiSciboItem = e),
    __reflect(e.prototype, "game.DouTaiSciboItem", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(game || (game = {}));
var DuoTaiItem = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.skinName = "resource/skins/duotai/DuoTaiItem.exml"),
      (e.percentWidth = 100),
      e
    );
  }
  return (
    __extends(e, t),
    (e.prototype.partAdded = function (e, i) {
      t.prototype.partAdded.call(this, e, i);
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this);
    }),
    (e.prototype.gotoSearchFun = function () {}),
    (e.prototype.dataChanged = function () {
      if (this.data) {
        var t =
          DataManager.getGameNameWithGameStyle(
            this.data.gameType,
            this.data.gamestyle,
          ) + DataManager.getTableStr1(this.data.tableid);
        (this.my_table_name.text = t),
          (game.DuotaiView.room_item_hash[this.data.tableid] = this);
      }
      this.selected
        ? (this.item_bg.source = "blue_screenbg_19_png")
        : (this.item_bg.source = "blue_screenbg_18_png");
    }),
    (e.prototype.selectTab = function (t) {
      this.data &&
        (this.data.tableid == t
          ? (this.item_bg.source = "blue_screenbg_19_png")
          : (this.item_bg.source = "blue_screenbg_18_png"));
    }),
    e
  );
})(eui.ItemRenderer);
__reflect(DuoTaiItem.prototype, "DuoTaiItem");
var game;
!(function (t) {
  var e = (function (e) {
    function i() {
      var t = e.call(this) || this;
      return (
        (t.roteWH = 40),
        (t.isVideoOpen = !0),
        (t.tableid = 0),
        (t._playerPoint = 0),
        (t._bankerPoint = 0),
        (t.tempbetlist = {}),
        (t._responseList = []),
        (t.bet_length = 0),
        (t.notBetCount = 0),
        (t.gameState = -1),
        (t.isCanBet = !1),
        (t.is_wenlu = !1),
        (t.isNOCOM = !1),
        (t.isTeshuzhudian = !1),
        (t.cur_gameSeq = -1),
        (t.save_time_deal = 0),
        (t.skinName = "resource/skins/duotai/DuotaiTableView.exml"),
        (t.percentWidth = 100),
        t
      );
    }
    return (
      __extends(i, e),
      (i.prototype.partAdded = function (t, i) {
        e.prototype.partAdded.call(this, t, i);
      }),
      (i.prototype.childrenCreated = function () {
        e.prototype.childrenCreated.call(this);
      }),
      (i.prototype.updataView = function (t, e) {
        (this.fbEnetrTable = e),
          (this.fbTableState = t),
          (this.isNOCOM = DataManager.isNOCOM),
          this.setButtonEnable(!1),
          (this.gameState = -1),
          (this.gCards.visible = !1),
          (this.gComNo.visible = !0),
          (this.gComYes.visible = !1),
          (this.gComNo.fbEnetrTable = e),
          (this.gComYes.fbEnetrTable = e),
          (this.gComNo.curTableState = this.fbTableState),
          (this.gComYes.curTableState = this.fbTableState),
          this.showHideVideo(),
          (GameUtils.routeSize = this.roteWH),
          (this.tableid = this.fbTableState.tableInfo.tableid),
          (this.route = new GameRoute(6, 6, 3)),
          this.gRote.addChild(this.route),
          this.onRouteGroupResize(),
          this.fbTableState && (this.is_wenlu || this.routeBTip()),
          this.initInfo(),
          this.gameInit(),
          this.showComState(),
          (this.isCanBet = !1),
          this.changeLang(),
          this.uodataTabInfo(),
          this.closeTongjiGroupFun(),
          EventManager.getIns().addEventListener(
            DataChangeEvent.CHECK_USER_HAVE_BET,
            this.checkUserhaveBet,
            this,
          ),
          this.addEventListener("OnHitBetTable", this.betClick, this),
          this.gameTime.addEventListener(
            "TimeComplete",
            this.onTimeComplete,
            this,
          ),
          this.btnLimit.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onShowLimit,
            this,
          ),
          this.btnSure.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onBetSure,
            this,
          ),
          this.btnCancel.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onBetCancel,
            this,
          ),
          this.gComOpt.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onChangeCom,
            this,
          ),
          this.btnAskB.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onAskBRoute,
            this,
          ),
          this.btnAskP.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onAskPRoute,
            this,
          ),
          this.showTongjiGroup.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.showTongjiGroupFun,
            this,
          ),
          this.closeTongjiGroup.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.closeTongjiGroupFun,
            this,
          ),
          this.enterGame.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.enterGameFun,
            this,
          ),
          this.gRote.addEventListener(
            egret.Event.RESIZE,
            this.onRouteGroupResize,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.BET_AMOUNT,
            this.betAmount,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.BET_START,
            this.betStart,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.BET_RESULT,
            this.betResult,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.SEAT_DEAL,
            this.seatDeal,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.BET_RESPONSE,
            this.betResponse,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.TABLE_INFO,
            this.tableInfo,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.SEAT_BETTING,
            this.seatBetting,
            this,
          );
      }),
      (i.prototype.changeLang = function (t) {
        void 0 === t && (t = null),
          (this.dzg_duotai_lab_1.text = LangUtils.LANG_MAP.dzg_game_duotai_1),
          (this.dzg_duotai_lab_2.text = LangUtils.LANG_MAP.dzg_game_bjl_14),
          (this.dzg_duotai_lab_3.text = LangUtils.LANG_MAP.dzg_game_bjl_15),
          (this.dzg_duotai_lab_4.text = LangUtils.LANG_MAP.M_PLAYER),
          (this.dzg_duotai_lab_5.text = LangUtils.LANG_MAP.M_BANKER),
          (this.dzg_duotai_lab_6.text = LangUtils.LANG_MAP.M_PLAYER),
          (this.dzg_duotai_lab_7.text = LangUtils.LANG_MAP.M_TILE),
          (this.dzg_duotai_lab_8.text = LangUtils.LANG_MAP.M_BANKER),
          (this.langLab2.text = LangUtils.LANG_MAP.M_BANKER + ":"),
          (this.langLab3.text = LangUtils.LANG_MAP.M_TILE + ":"),
          (this.langLab4.text = LangUtils.LANG_MAP.M_PLAYER + ":"),
          (this.langLab0.text = LangUtils.LANG_MAP.M_BP + ":"),
          (this.langLab5.text = LangUtils.LANG_MAP.M_PP + ":"),
          (this.enterGame.label = LangUtils.LANG_MAP.FUNC_LOGINGAME),
          (this.tongjititletxt.text = LangUtils.get("StatisticsView_TITLE")),
          (this.langLab1.text = LangUtils.LANG_MAP.dzg_main_10002 + ":"),
          (this.lblRoute_A.text = LangUtils.LANG_MAP.TOTAL),
          (this.btnSure.source = "hxbg_36_" + DataManager.LANG_TYPE + "_png"),
          (this.btnCancel.source = "hxbg_35_" + DataManager.LANG_TYPE + "_png"),
          this.gameTime.changeLang(),
          (this.lbComNo.text = LangUtils.LANG_MAP.dzg_game_bjl_12),
          (this.lbComYes.text = LangUtils.LANG_MAP.dzg_game_bjl_13),
          DataManager.LANG_TYPE == DataManager.LANG_EN
            ? ((this.TableNameLab.size = 24),
              (this.lbComNo.size = 18),
              (this.lbComYes.size = 18),
              (this.dzg_duotai_lab_1.size = 18),
              (this.dzg_duotai_lab_4.size = 42),
              (this.dzg_duotai_lab_5.size = 42),
              (this.dzg_duotai_lab_2.size = 20),
              (this.dzg_duotai_lab_3.size = 20))
            : DataManager.LANG_TYPE == DataManager.LANG_VL
              ? ((this.TableNameLab.size = 24),
                (this.lbComNo.size = 20),
                (this.lbComYes.size = 20),
                (this.dzg_duotai_lab_1.size = 16),
                (this.dzg_duotai_lab_4.size = 42),
                (this.dzg_duotai_lab_5.size = 42),
                (this.dzg_duotai_lab_2.size = 18),
                (this.dzg_duotai_lab_3.size = 18))
              : DataManager.LANG_TYPE == DataManager.LANG_KN
                ? ((this.TableNameLab.size = 24),
                  (this.lbComNo.size = 20),
                  (this.lbComYes.size = 20),
                  (this.dzg_duotai_lab_1.size = 20),
                  (this.dzg_duotai_lab_4.size = 42),
                  (this.dzg_duotai_lab_5.size = 42),
                  (this.dzg_duotai_lab_2.size = 18),
                  (this.dzg_duotai_lab_3.size = 18))
                : DataManager.LANG_TYPE == DataManager.LANG_HN ||
                    DataManager.LANG_TYPE == DataManager.LANG_JPN ||
                    DataManager.LANG_TYPE == DataManager.LANG_KR
                  ? ((this.TableNameLab.size = 24),
                    (this.lbComNo.size = 20),
                    (this.lbComYes.size = 20),
                    (this.dzg_duotai_lab_1.size = 20),
                    (this.dzg_duotai_lab_4.size = 42),
                    (this.dzg_duotai_lab_5.size = 42),
                    (this.dzg_duotai_lab_2.size = 18),
                    (this.dzg_duotai_lab_3.size = 18))
                  : ((this.TableNameLab.size = 24),
                    (this.lbComNo.size = 22),
                    (this.lbComYes.size = 22),
                    (this.dzg_duotai_lab_1.size = 22),
                    (this.dzg_duotai_lab_4.size = 42),
                    (this.dzg_duotai_lab_5.size = 42),
                    (this.dzg_duotai_lab_2.size = 20),
                    (this.dzg_duotai_lab_3.size = 20));
      }),
      (i.prototype.initInfo = function (t) {
        void 0 === t && (t = null);
        var e = this.fbTableState.tableInfo.history3[0] || 0,
          i = this.fbTableState.tableInfo.history3[1] || 0,
          a = this.fbTableState.tableInfo.history3[2] || 0,
          n = DataManager.curTableState.tableInfo.history3[3] || 0,
          s = DataManager.curTableState.tableInfo.history3[4] || 0;
        "S" == t && (s = n = a = i = e = 0),
          (this.lblRouteB.text = e + ""),
          (this.lblRouteP.text = i + ""),
          (this.lblRouteT.text = a + ""),
          (this.lblRouteAll.text = e + i + a + ""),
          (this.lblRoute_B_All.text = n + ""),
          (this.lblRoute_P_All.text = s + "");
        var r = e + i + a;
        r > 0 ? Math.floor((e / r) * 100) : 0,
          r > 0 ? Math.floor((i / r) * 100) : 0;
        (this.lblRouteB_line.width = 120 * (0 == r ? 0 : e / r)),
          (this.lblRouteP_line.width = 120 * (0 == r ? 0 : i / r)),
          (this.lblRouteT_line.width = 120 * (0 == r ? 0 : a / r));
        var o =
          DataManager.getGameNameWithGameStyle(
            this.fbTableState.tableInfo.gameType,
            this.fbTableState.tableInfo.gamestyle,
          ) + DataManager.getTableStr1(this.fbTableState.tableInfo.tableid);
        (this.TableNameLab.text = o),
          (this.TableIDLab.text =
            this.fbTableState.tableInfo.shoeSeq.toString() +
            "/" +
            this.fbTableState.tableInfo.gameSeq.toString()),
          (this.gComNo.curTableState = this.fbTableState),
          (this.gComYes.curTableState = this.fbTableState);
      }),
      (i.prototype.uodataTabInfo = function (t) {
        if ((void 0 === t && (t = !0), this.fbTableState)) {
          var e = new RegExp(",", "g"),
            i = void 0,
            a = void 0,
            n = void 0,
            s = this.fbTableState.tablePool,
            r = String(s.BANKER).split("/");
          (this.tongjibankertxt.text = r[0] + "/" + r[1]),
            (i = Number(r[0].replace(e, "")));
          var o = String(s.PLAYER).split("/");
          (this.tongjiplayertxt.text = o[0] + "/" + o[1]),
            (a = Number(o[0].replace(e, "")));
          var h = String(s.TILE).split("/");
          (this.tongjitietxt.text = h[0] + "/" + h[1]),
            (n = Number(h[0].replace(e, "")));
          var l = i + a + n,
            g = 160 * (0 == l ? 0 : i / l),
            u = 160 * (0 == l ? 0 : a / l),
            c = 160 * (0 == l ? 0 : n / l);
          (this.preBet_B.visible = 0 == g ? !1 : !0),
            (this.preBet_P.visible = 0 == u ? !1 : !0),
            (this.preBet_T.visible = 0 == c ? !1 : !0),
            egret.Tween.get(this.preBet_B)
              .to(
                {
                  width: g,
                },
                300,
              )
              .call(function () {}, this),
            egret.Tween.get(this.preBet_P)
              .to(
                {
                  width: u,
                },
                300,
              )
              .call(function () {}, this),
            egret.Tween.get(this.preBet_T)
              .to(
                {
                  width: c,
                },
                300,
              )
              .call(function () {}, this);
        } else
          (this.tongjibankertxt.text = ""),
            (this.tongjiplayertxt.text = ""),
            (this.tongjitietxt.text = "");
      }),
      (i.prototype.gameInit = function () {
        this.pointList || (this.pointList = new Array()),
          (this.pointList.length = 0),
          this.seatDealList || (this.seatDealList = new Array()),
          (this.seatDealList.length = 0),
          this.timer ||
            ((this.timer = new egret.Timer(500, 6)),
            this.timer.addEventListener(
              egret.TimerEvent.TIMER,
              this.timerSeatDeal,
              this,
            )),
          this.timer.reset();
        for (var t = 0; 6 > t; t++) this["card" + t].source = "";
        (this.playerPoint = this.bankerPoint = 0),
          (this.gCards.visible = !1),
          this.gComNo.initUI(),
          this.gComYes.initUI();
      }),
      (i.prototype.routeBTip = function () {
        var t = this;
        (this.is_wenlu = !0),
          setTimeout(function () {
            (GameUtils.routeSize = t.roteWH),
              t.route.parseDatum(t.fbTableState.tableInfo.history, !1),
              t.showRouteBTip(),
              t.showRoutePTip(),
              t.route.parseDatum(t.fbTableState.tableInfo.history, !1);
          }, 1e3);
      }),
      (i.prototype.tableInfo = function (t) {
        var e = t.data;
        if (e.tableid == this.fbTableState.tableInfo.tableid) {
          this.showRouteBTip(),
            this.showRoutePTip(),
            (GameUtils.routeSize = this.roteWH),
            this.route.parseDatum(this.fbTableState.tableInfo.history, !0),
            this.initInfo(this.fbTableState.tableInfo.tablestate);
          var i = "";
          "S" == e.tablestate || "RP" == e.tablestate
            ? (this.gameTime.startTime(0),
              (i =
                "RP" == e.tablestate
                  ? "Maintaining_Table_Card"
                  : "M_Clear_Table_Card"),
              this.gameTime.stopTime(),
              this.gameTime.showState(i),
              "RP" == e.tablestate && this.setButtonEnable(!1),
              "S" == e.tablestate && (this.gameInit(), this.setNOCOMEnable(!1)))
            : "Maintaining_Table_Card" == i ||
              "D" == e.tablestate ||
              ("WOP" == e.tablestate && this.gameTime.showState("SB0"));
        }
      }),
      (i.prototype.showRouteBTip = function () {
        this.route.getkWayDuotaiResult(this.fbTableState, 1),
          this.route.route2.nTmpWinner > 0
            ? (this.gAckB.getChildAt(0).source =
                "rt2Check_f" + this.route.route2.nTmpWinner + "_png")
            : (this.gAckB.getChildAt(0).source = ""),
          this.route.route3.nTmpWinner > 0
            ? (this.gAckB.getChildAt(1).source =
                "rt3Check_f" + this.route.route3.nTmpWinner + "_png")
            : (this.gAckB.getChildAt(1).source = ""),
          this.route.route4.nTmpWinner > 0
            ? (this.gAckB.getChildAt(2).source =
                "rt4Check_f" + this.route.route4.nTmpWinner + "_png")
            : (this.gAckB.getChildAt(2).source = "");
      }),
      (i.prototype.showRoutePTip = function () {
        this.route.getkWayDuotaiResult(this.fbTableState, 2),
          this.route.route2.nTmpWinner > 0
            ? (this.gAckP.getChildAt(0).source =
                "rt2Check_f" + this.route.route2.nTmpWinner + "_png")
            : (this.gAckP.getChildAt(0).source = ""),
          this.route.route3.nTmpWinner > 0
            ? (this.gAckP.getChildAt(1).source =
                "rt3Check_f" + this.route.route3.nTmpWinner + "_png")
            : (this.gAckP.getChildAt(1).source = ""),
          this.route.route4.nTmpWinner > 0
            ? (this.gAckP.getChildAt(2).source =
                "rt4Check_f" + this.route.route4.nTmpWinner + "_png")
            : (this.gAckP.getChildAt(2).source = "");
      }),
      (i.prototype.onTimeComplete = function () {
        (this.isCanBet = !1), this.setButtonEnable(!1), this.setNOCOMEnable(!1);
      }),
      (i.prototype.betStart = function (e) {
        var i = e.data[0];
        if (i.tableid == this.fbTableState.tableInfo.tableid)
          if (0 == i.bettype) {
            if (this.cur_gameSeq == i.gameSeq) return;
            (this.cur_gameSeq = i.gameSeq),
              (this.isTeshuzhudian = !1),
              (this.tempbetlist = {}),
              (this._responseList = []),
              this.gameInit(),
              (this.isCanBet = !0),
              this.setButtonEnable(!1),
              (this.gameState = t.GameAction.STATE_ACCEPT_BET),
              this.setNOCOMbuttonState();
            var a = egret.getTimer() + i.countdown;
            this.gameTime.startTime(a), this.checkBetCount();
          } else
            3 == i.bettype &&
              ((this.isCanBet = !1),
              this.cleartempcoins(),
              this.setNOCOMEnable(!1));
      }),
      (i.prototype.join_curList_send = function () {
        this._curList_send || (this._curList_send = {});
        var t = {},
          e = 0;
        for (var i in this._curList)
          (e = this._curList[i]),
            this._curList_send[i] &&
              (e = this._curList[i] - this._curList_send[i]),
            e > 0 && (t[i] = e),
            (this._curList_send[i] =
              (this._curList_send[i] ? this._curList_send[i] : 0) + e);
        return t;
      }),
      (i.prototype.ok_curList_send = function (t) {
        if (
          t.tableid == this.fbTableState.tableInfo.tableid &&
          this._curList_send
        ) {
          var e = 0,
            i = 0;
          for (var a in this._curList_send)
            t.option.indexOf(a) >= 0
              ? ((e = t.amount[t.option.indexOf(a)]),
                (this._curList_send[a] = this._curList_send[a] - e),
                (i = this._curList && this._curList[a] ? this._curList[a] : 0),
                i > 0 &&
                  ((this._curList[a] = 0 > i - e ? 0 : i - e),
                  this._curList[a] <= 0 && delete this._curList[a]),
                this._curList_send[a] <= 0 && delete this._curList_send[a])
              : (delete this._curList_send[a],
                this._curList && this._curList[a] && delete this._curList[a]);
        }
      }),
      (i.prototype.onBetSure = function (t) {
        (DataManager.xAxis = t.stageX),
          (DataManager.yAxis = t.stageY),
          this.sendBet(this.join_curList_send());
      }),
      (i.prototype.sendBet = function (t) {
        var e = new Array(),
          i = new Array();
        for (var a in t) {
          GameUtils.getOppoPoint(this.fbTableState.tableInfo.gameType, a);
          e.push(a), i.push(Math.floor(t[a]));
        }
        if (0 == e.length) {
          var n = new BetResponseMessage(
            0,
            this.fbTableState.tableid,
            null,
            null,
            0,
          );
          return void this.betResponseFun(n);
        }
        (this.bet_length = e.length),
          MessageHandler.bet(
            this.fbTableState.tableid,
            e,
            i,
            this.isNOCOM ? 1 : 0,
            this.fbTableState.tableInfo.gameSeq,
          );
      }),
      (i.prototype.betResponseFun = function (e) {
        e.tableid == this.fbTableState.tableid &&
          (1 == e.result &&
            e.option &&
            (e.result = this.bet_length == e.option.length ? 1 : 2),
          1 == e.result || 2 == e.result
            ? (e.option &&
                DataManager.selectBetCoinDisByTabshid(
                  e.option,
                  this.fbTableState.tableInfo.tableSeq,
                ),
              (this._repeatList = this._responseList),
              2 == e.result && this.cleartempcoins(),
              this.ok_curList_send(e),
              (this.notBetCount = 0),
              dzxx.SoundManager.inst.playSound(dzxx.SoundManager.Bet_success),
              (t.DuotaiView.DuotaiGameTime = egret.getTimer()))
            : (this.cleartempcoins(),
              (this._curList = null),
              (this._curList_send = null)));
      }),
      (i.prototype.onBetCancel = function () {
        this.cleartempcoins(),
          (this._curList = null),
          this.setNOCOMbuttonState();
      }),
      (i.prototype.cleartempcoins = function () {
        (this.tempbetlist = {}),
          this.gComNo.clearTmpCoins(),
          this.gComYes.clearTmpCoins(),
          this.updataCoinInfo();
      }),
      (i.prototype.onBetRepet = function () {
        var t = this.clearSuper6Repeat();
        (this._curList = this.joinList(t)),
          this.updateTempCoins(t),
          this.updataCoinInfo();
      }),
      (i.prototype.updateTempCoins = function (t) {
        this.cleartempcoins();
        var e = this.joinList(t);
        for (var i in e)
          this.addBetCoin(e[i], {
            name: i,
          }),
            (this.tempbetlist[i] = this.tempbetlist[i] || 0),
            (this.tempbetlist[i] += e[i]);
      }),
      (i.prototype.setNOCOMbuttonState = function () {
        var e,
          i = 0,
          a = this.gameState == t.GameAction.STATE_ACCEPT_BET;
        if (this.curList) {
          if (((i = this.curList.BANKER), i > 0))
            return void this.setNOCOMEnable(!1);
          if (((i = this.curList.LS), i > 0))
            return void this.setNOCOMEnable(!1);
        }
        if ((e = this.joinResponseList)) {
          if (((i = e.BANKER), i > 0)) return void this.setNOCOMEnable(!1);
          if (((i = e.LS), i > 0)) return void this.setNOCOMEnable(!1);
        }
        this.setNOCOMEnable(
          a && !DataManager.hasTableStates_B_S_bystate(this.fbTableState),
        );
      }),
      (i.prototype.setNOCOMEnable = function (t) {
        (this.gComOpt.touchEnabled = this.gComOpt.touchChildren = t),
          ShareUtils.setGrayFilter(this.gComOpt, !t),
          t || (this.lbComNo.textColor = 16777215);
      }),
      (i.prototype.checkUserhaveBet = function (t) {
        t.data.t_id == this.fbEnetrTable.tableid &&
          this.setButtonEnable(t.data.isShow);
      }),
      (i.prototype.setButtonEnable = function (t) {
        this.btnSure;
        (this.btnSure.touchEnabled = this.btnCancel.touchEnabled = t),
          ShareUtils.setGrayFilter(this.btnSure, !t),
          ShareUtils.setGrayFilter(this.btnCancel, !t),
          (this.betShowGroup.visible = t);
      }),
      (i.prototype.clearData = function () {
        (this.tempbetlist = {}), (this._responseList.length = 0);
      }),
      (i.prototype.betClick = function (e) {
        if (
          0 != this.isCanBet &&
          this.gameState == t.GameAction.STATE_ACCEPT_BET
        ) {
          var i = DataManager.amount,
            a = this.curTotalBet;
          if (DataManager.sumAmount <= a)
            return void this.setResultTip(
              16243228,
              LangUtils.LANG_MAP.BET_NO_BALANCE,
            );
          if (DataManager.sumAmount < 1)
            return void this.setResultTip(
              16243228,
              LangUtils.LANG_MAP.BET_NO_BALANCE,
            );
          var n = e.data.name;
          if (
            (DataManager.Q1E5_login || DataManager.API168_login) &&
            DataManager.Q1E5_BET_MUTEX
          )
            if ("PLAYER" == n) {
              if (this.responseHaveBetByName("BANKER"))
                return void this.setResultTip(
                  16243228,
                  LangUtils.LANG_MAP.dzg_main_59,
                );
            } else if ("BANKER" == n && this.responseHaveBetByName("PLAYER"))
              return void this.setResultTip(
                16243228,
                LangUtils.LANG_MAP.dzg_main_59,
              );
          null == this.curList[n] && (this._curList[n] = 0);
          var s = this.curList[n],
            r = this.responseTotalBetByName(n),
            o = i + this._curList[n] + r,
            h = Opposite.getName(this.fbTableState.tableInfo.gameType, n),
            l = 0;
          if (
            (h &&
              (l = (this._curList[h] || 0) + this.responseTotalBetByName(h)),
            (o = BetLimitAction.getIns().getGameLimit(
              this.fbTableState.tableInfo.tableid,
              n,
              o,
              h,
              l,
            )),
            o > 0)
          )
            if (a - this._curList[n] + o - r > DataManager.sumAmount) {
              if (
                ((o = DataManager.sumAmount - a + this._curList[n] + r),
                (o = Math.floor(o)),
                !BetLimitAction.getIns().checkMultiTableLimit(
                  this.fbTableState.tableInfo.tableid,
                  n,
                  o,
                  h,
                  l,
                ))
              )
                return void this.setResultTip(
                  16243228,
                  LangUtils.LANG_MAP.BET_NO_BALANCE_TO_LIMIT,
                );
              this.setResultTip(16243228, LangUtils.LANG_MAP.BET_NO_BALANCE);
            } else
              i + this._curList[n] + r > o &&
                this.setResultTip(16243228, LangUtils.LANG_MAP.BET_TOO_MUCH);
          switch (o) {
            case -1:
              return (
                DebugText.appendText("还没加载到限红赔率"),
                void this.setResultTip(
                  16243228,
                  LangUtils.LANG_MAP.OPERATE_FAIL,
                )
              );
            case -2:
              return (
                DebugText.appendText("没有此筹码下注点：" + n),
                void this.setResultTip(
                  16243228,
                  LangUtils.LANG_MAP.OPERATE_FAIL,
                )
              );
            default:
              (this._curList[n] = o - r),
                this._curList[n] <= 0 && (this._curList[n] = 0);
          }
          if (this._curList[n] > 0) {
            var g = this._curList[n] - s;
            g > 0 &&
              (this.addBetCoin(g, e.data, !0),
              (this.tempbetlist[n] = this.tempbetlist[n] || 0),
              (this.tempbetlist[n] += g));
          }
          dzxx.SoundManager.inst.playSound(dzxx.SoundManager.Click_CoinBtn),
            this.updataCoinInfo();
        }
      }),
      (i.prototype.addBetCoin = function (t, e, i) {
        void 0 === i && (i = !1),
          this.gComNo.visible && this.gComNo.addBetCoin(t, e, i),
          this.gComYes.visible && this.gComYes.addBetCoin(t, e, i);
      }),
      (i.prototype.updataCoinInfo = function (t) {
        void 0 === t && (t = !1),
          this.gComNo.visible &&
            this.gComNo.updataCoinInfo(
              this.joinResponseList,
              this.tempbetlist,
              t,
            ),
          this.gComYes.visible &&
            this.gComYes.updataCoinInfo(
              this.joinResponseList,
              this.tempbetlist,
              t,
            ),
          this.setNOCOMbuttonState();
      }),
      (i.prototype.betResult = function (e) {
        var i = e.data;
        if (i.tableid == this.fbTableState.tableid) {
          this.setButtonEnable(!1),
            this.cleartempcoins(),
            (this.gameState = t.GameAction.STATE_RESULT),
            this.onActionResult(i);
          var a = [];
          i.winOptions.indexOf("BANKER") > -1 &&
            (a.push("B"),
            (this.lblWin.source = "hxbg_10_" + DataManager.LANG_TYPE + "_png")),
            i.winOptions.indexOf("PLAYER") > -1 &&
              (a.push("P"),
              (this.lblWin.source =
                "hxbg_16_" + DataManager.LANG_TYPE + "_png")),
            i.winOptions.indexOf("TILE") > -1 &&
              (a.push("T"),
              (this.lblWin.source =
                "hxbg_9_" + DataManager.LANG_TYPE + "_png")),
            i.winOptions.indexOf("BP") > -1 && a.push("BP"),
            i.winOptions.indexOf("PP") > -1 && a.push("PP"),
            i.winOptions.indexOf("LS") > -1 && a.push("L"),
            (this.lblWin.visible = !0),
            this.gComNo.visible && this.gComNo.showWin(a),
            this.gComYes.visible && this.gComYes.showWin(a),
            this.setNOCOMEnable(!1);
        }
      }),
      (i.prototype.onActionResult = function (e) {
        e.tableid == this.fbTableState.tableid &&
          (this._responseList.length && (this._repeatList = this._responseList),
          (this.tempbetlist = {}),
          (this._responseList = []),
          this.gameState != t.GameAction.STATE_RESULT &&
            (this.notBetCount += 1),
          (this.gameState = t.GameAction.STATE_RESULT),
          this._curList_send && (this._curList_send = {}),
          (this._curList = null),
          0 != e.winAmount && (e.winAmount > 0 || e.winAmount < 0));
      }),
      (i.prototype.playResultSound = function () {}),
      (i.prototype.betResponse = function (t) {
        this.betResponseFun(t.data),
          t.data.tableid == this.fbTableState.tableid &&
            (1 == t.data.result
              ? this.setResultTip(16243228, LangUtils.LANG_MAP.BET_SUCCESS)
              : 2 == t.data.result
                ? this.setResultTip(16243228, LangUtils.LANG_MAP.BET_UNDER_MUCH)
                : -112 == t.data.result
                  ? (this.setResultTip(
                      16243228,
                      LangUtils.LANG_MAP.BET_UNDER_MUCH,
                    ),
                    this.setNOCOMbuttonState())
                  : -113 == t.data.result
                    ? this.setResultTip(
                        16243228,
                        LangUtils.LANG_MAP.BET_UNDER_MUCH,
                      )
                    : -95 == t.data.result
                      ? Alert.tipGame(
                          LangUtils.LANG_MAP.dzg_game_bjl_30,
                          16243228,
                        )
                      : -96 == t.data.result
                        ? Alert.tipGame(
                            LangUtils.LANG_MAP.dzg_game_bjl_31,
                            16243228,
                          )
                        : -122 == t.data.result
                          ? this.setResultTip(
                              16243228,
                              LangUtils.LANG_MAP.BET_TOO_MUCH,
                            )
                          : -123 == t.data.result
                            ? this.setResultTip(
                                16243228,
                                LangUtils.LANG_MAP.BET_TOO_MUCH_OF_ALL_TABLE,
                              )
                            : -140 == t.data.result
                              ? Alert.showCaptcha()
                              : (this.setResultTip(
                                  16243228,
                                  LangUtils.LANG_MAP.BET_FAILE,
                                ),
                                this.setNOCOMbuttonState()));
      }),
      (i.prototype.seatBetting = function (t) {
        var e = t.data;
        if (
          e.tableid == this.fbTableState.tableid &&
          this.fbEnetrTable.tableid == e.tableid &&
          DataManager.userid == e.userid
        ) {
          if (!e.option || "" == e.option || 0 == e.amount) return;
          var i = e.option,
            a = {};
          (a[i] = e.amount),
            this._responseList.push(a),
            (this.tempbetlist = {}),
            this.updataCoinInfo(!0),
            ("LS" == e.option || "BANKER" == e.option) &&
              (this.isTeshuzhudian = !0),
            this.isTeshuzhudian &&
              (1 == e.sbanker ? (this.isNOCOM = !0) : (this.isNOCOM = !1),
              this.showComState(),
              this.setNOCOMEnable(!1),
              this.gComNo.visible &&
                this.gComNo.showBetInfo(DataManager.curTableState),
              this.gComYes.visible &&
                this.gComYes.showBetInfo(DataManager.curTableState));
        }
      }),
      (i.prototype.betAmount = function (t) {
        var e = t.data;
        this.tableid == e &&
          (this.gComNo.visible && this.gComNo.showBetInfo(this.fbTableState),
          this.gComYes.visible && this.gComYes.showBetInfo(this.fbTableState)),
          this.uodataTabInfo(!0);
      }),
      (i.prototype.seatDeal = function (t) {
        var e = t.data;
        if (this.fbTableState.tableid == e.tableid) {
          this.gCards.visible = !0;
          DataManager.getTableStates(e.tableid);
          (this.lblWin.visible = !1),
            this.showCard(e),
            this.checkCards(e, this.seatDealList, this.showCard, this);
        }
      }),
      (i.prototype.showCard = function (t) {
        return t.order < this.seatDealList.length &&
          this.seatDealList[t.order] &&
          ShareUtils.timeByMessageID(t.messageID) <
            ShareUtils.timeByMessageID(this.seatDealList[t.order].messageID)
          ? void DebugText.appendText(
              "收到旧的牌数据，忽略tableid:" +
                t.tableid +
                " " +
                DataManager.CardToString(t),
            )
          : ((this.seatDealList[t.order] = t), void this.openDeal(t));
      }),
      (i.prototype.timerSeatDeal = function (t) {
        null != this.seatDealList &&
          (this.seatDealList[this.timer.currentCount - 1]
            ? this.openDeal(this.seatDealList[this.timer.currentCount - 1])
            : 5 == this.timer.currentCount &&
                this.seatDealList[this.timer.currentCount]
              ? (this.openDeal(this.seatDealList[this.timer.currentCount]),
                this.timer.stop())
              : this.timer.stop());
      }),
      (i.prototype.isLVRoom = function (t) {
        var e = /^LV/,
          i = DataManager.getTableStr1(t.tableid);
        return e.test(i);
      }),
      (i.prototype.isAATRoom = function (t) {
        var e = /^AAT/,
          i = DataManager.getTableStr1(t.tableid);
        return e.test(i);
      }),
      (i.prototype.isSMRoom = function (t) {
        var e = /^(SM|WM)/,
          i = DataManager.getTableStr1(t.tableid);
        return e.test(i);
      }),
      (i.prototype.isLGRoom = function (t) {
        var e = /^(LG|G01|G02|G03|G04|G05|G06|G07|G08|G09|G10|G11|G12|G13)/,
          i = DataManager.getTableStr1(t.tableid);
        return e.test(i);
      }),
      (i.prototype.openDeal = function (t, e) {
        void 0 === e && (e = !0);
        var i = parseInt(t.point);
        i >= 10 && (i = 0),
          (this.pointList[t.order] = i),
          this.refreshpoints(),
          !(
            this.isLVRoom(t) ||
            this.isSMRoom(t) ||
            this.isAATRoom(t) ||
            this.isLGRoom(t)
          ) ||
            (0 != t.order && 2 != t.order) ||
            (t.order = (t.order + 2) % 4),
          (this["card" + t.order].source =
            "DUICard_" + t.color + "_" + t.point + "_png"),
          5 == this.pointList.length,
          6 == this.pointList.length;
      }),
      (i.prototype.refreshpoints = function () {
        (this.playerPoint = 0), (this.bankerPoint = 0);
        for (var t = 0; t < this.pointList.length; t++) {
          var e = this.pointList[t] || 0;
          if (t % 2 == 0)
            for (this.playerPoint += e; this.playerPoint >= 10; )
              this.playerPoint -= 10;
          else
            for (this.bankerPoint += e; this.bankerPoint >= 10; )
              this.bankerPoint -= 10;
        }
      }),
      (i.prototype.checkCards = function (t, e, i, a) {
        var n = ShareUtils.timeByMessageID(t.messageID);
        if (!(this.save_time_deal > n)) {
          var s = t.cardresult;
          if (s) {
            var r = s.split(";");
            if (0 != r.length) {
              var o,
                h,
                l,
                g = 0,
                u = 0,
                c = !1;
              n > this.save_time_deal && (this.save_time_deal = n);
              for (var d = 0; d < r.length; d++)
                if (((o = r[d].split("-")), !(o.length < 2))) {
                  (h = o[0]),
                    (g = parseInt(o[1])),
                    (u = parseInt(o[2])),
                    (c = !1),
                    (l = null);
                  for (var p = 0; p < e.length; p++)
                    (l = e[p]),
                      l &&
                        l.order == u &&
                        ((c = !0),
                        (l.point != h || l.color != g || 1 == l.state) &&
                          ((l.point = h),
                          (l.color = g),
                          (l.messageID = t.messageID),
                          i.call(a, l),
                          DebugText.appendText(
                            "牌不一致：" +
                              (l ? l.point + "_" + l.color : "") +
                              " ,新的牌：" +
                              h +
                              "_" +
                              g +
                              " ,order：" +
                              u +
                              ", tableid:" +
                              t.tableid,
                          )));
                  0 == c &&
                    parseInt(h) > 0 &&
                    (DebugText.appendText(
                      "缺少牌：" +
                        h +
                        "_" +
                        g +
                        " ,order：" +
                        u +
                        ", tableid:" +
                        t.tableid,
                    ),
                    (l = new SeatDealMessage(t.tableid, 0, g, h, u, -1)),
                    (l.messageID = t.messageID),
                    i.call(a, l));
                }
            }
          }
        }
      }),
      (i.prototype.onRouteGroupResize = function (t) {
        void 0 === t && (t = null),
          this.route &&
            ((GameUtils.routeSize = this.roteWH), this.route.update());
      }),
      (i.prototype.onShowLimit = function () {
        null == this.gameLimit && (this.gameLimit = new t.GameLimitUI()),
          this.parentGroup.addChild(this.gameLimit),
          this.gameLimit.showUI(
            this.fbTableState.tableInfo.gameType,
            this.isNOCOM,
            !0,
            this.fbTableState.tableInfo.tableid,
          );
      }),
      (i.prototype.onAskBRoute = function (t) {
        this.route.askWayDuotai(this.fbTableState, 1);
      }),
      (i.prototype.onAskPRoute = function (t) {
        this.route.askWayDuotai(this.fbTableState, 2);
      }),
      (i.prototype.onChangeCom = function () {
        (this.isNOCOM = this.isNOCOM ? !1 : !0), this.showComState();
      }),
      (i.prototype.onChangeTable = function () {
        this.dispatchEvent(new egret.Event("OnChangeTable", !0, !0));
      }),
      (i.prototype.showComState = function () {
        this.isNOCOM
          ? ((this.imgComNo.visible = !1),
            (this.imgComYes.visible = !0),
            (this.gComNo.visible = !1),
            (this.gComYes.visible = !0))
          : ((this.imgComNo.visible = !0),
            (this.imgComYes.visible = !1),
            (this.gComNo.visible = !0),
            (this.gComYes.visible = !1)),
          this.updataCoinInfo();
      }),
      (i.prototype.onChangeVideo = function () {}),
      (i.prototype.showHideVideo = function () {}),
      (i.prototype.showTongjiGroupFun = function () {
        this.tongjigroup.visible = !0;
      }),
      (i.prototype.closeTongjiGroupFun = function () {
        this.tongjigroup.visible = !1;
      }),
      (i.prototype.responseHaveBetByName = function (t) {
        var e = 0;
        for (var i in this._responseList) {
          var a = this._responseList[i];
          e += a[t] || 0;
        }
        return e > 0 ? !0 : this.tempbetlist[t] > 0 ? !0 : !1;
      }),
      (i.prototype.responseTotalBetByName = function (t) {
        var e = 0;
        for (var i in this._responseList) {
          var a = this._responseList[i];
          e += a[t] || 0;
        }
        return e;
      }),
      Object.defineProperty(i.prototype, "curList", {
        get: function () {
          return null == this._curList && (this._curList = {}), this._curList;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "curTotalBet", {
        get: function () {
          var t = 0;
          for (var e in this._curList) t += this._curList[e] || 0;
          return t;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "bankerPoint", {
        get: function () {
          return this._bankerPoint;
        },
        set: function (t) {
          (this._bankerPoint = t || 0),
            (this.lbResultB.text = this._bankerPoint + "");
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "playerPoint", {
        get: function () {
          return this._playerPoint;
        },
        set: function (t) {
          (this._playerPoint = t || 0),
            (this.lbResultP.text = this._playerPoint + "");
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "joinResponseList", {
        get: function () {
          return this.joinList(this._responseList);
        },
        enumerable: !0,
        configurable: !0,
      }),
      (i.prototype.joinList = function (t) {
        var e = {};
        for (var i in t) {
          var a = t[i];
          for (var n in a) null == e[n] && (e[n] = 0), (e[n] += a[n]);
        }
        return e;
      }),
      (i.prototype.clearSuper6Repeat = function () {
        var t = [];
        for (var e in this._repeatList)
          (null == this._repeatList[e].LS || 0 != this.isNOCOM) &&
            ((null != this._repeatList[e].BANKER &&
              this._repeatList[e].BANKER > 0 &&
              this._repeatList[e].BANKER > DataManager.curTable.maxlimit) ||
              this._repeatList[e].BANKER < DataManager.curTable.minlimit ||
              (null != this._repeatList[e].PLAYER &&
                this._repeatList[e].PLAYER > 0 &&
                this._repeatList[e].PLAYER > DataManager.curTable.maxlimit) ||
              this._repeatList[e].PLAYER < DataManager.curTable.minlimit ||
              (null != this._repeatList[e].TILE &&
                this._repeatList[e].TILE > 0 &&
                this._repeatList[e].TILE > DataManager.curTable.maxlimit) ||
              this._repeatList[e].TILE < DataManager.curTable.minlimit ||
              (null != this._repeatList[e].BP &&
                this._repeatList[e].BP > 0 &&
                this._repeatList[e].BP > DataManager.curTable.maxlimit) ||
              this._repeatList[e].BP < DataManager.curTable.minlimit ||
              (null != this._repeatList[e].PP &&
                this._repeatList[e].PP > 0 &&
                this._repeatList[e].PP > DataManager.curTable.maxlimit) ||
              this._repeatList[e].PP < DataManager.curTable.minlimit ||
              t.push(this._repeatList[e]));
        return t;
      }),
      (i.prototype.setResultTip = function (t, e) {
        return Alert.tipGame(LangUtils.LANG_MAP[e] || e, t);
      }),
      (i.prototype.checkBetCount = function () {
        if (1 != ShareUtils.inWhiteList()) {
          var e = egret.getTimer(),
            i = e - t.DuotaiView.DuotaiGameTime;
          i > 9e5
            ? (t.DuotaiView.DuotaiGameTip ||
                ((this.notBetCount = 0),
                dzxx.LiveVideo.ifStopVideo(),
                EventManager.getIns().dispatchEvent(
                  new GotoViewEvent(GotoViewEvent.GOTO_VIEW, View.LOBBY_VIEW),
                ),
                Alert.show(LangUtils.LANG_MAP.dzg_main_44),
                DebugText.appendText(LangUtils.LANG_MAP.NULL_BET_FIVE_TIMES)),
              (t.DuotaiView.DuotaiGameTip = !0))
            : (t.DuotaiView.DuotaiGameTip = !1);
        }
      }),
      (i.prototype.enterGameFun = function () {
        return (
          this.fbTableState.tableInfo,
          this.fbTableState
            ? "RP" == this.fbTableState.tableInfo.tablestate
              ? void Alert.tipGame(LangUtils.LANG_MAP.Maintaining_Table_Card)
              : (DataManager.curTableState &&
                  DataManager.curTableState.hasBet &&
                  Alert.tipGame(LangUtils.LANG_MAP.OP_TIP_1),
                (DataManager.currentLimitKey = DataManager.currentLimitKey),
                void MessageHandler.chooseTable(
                  this.tableid,
                  this.fbTableState.tableInfo.gameType,
                ))
            : void Alert.tipGame(LangUtils.LANG_MAP.LOADING_HISTORY_ERROR)
        );
      }),
      (i.prototype.dispose = function (t) {
        void 0 === t && (t = !1),
          t
            ? MessageHandler.leaveTable(this.tableid)
            : ((DataManager.curTableState = null),
              (DataManager.curTable = null)),
          (this.cur_gameSeq = -1),
          this.gComYes.dispose(),
          this.gComNo.dispose(),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.CHECK_USER_HAVE_BET,
            this.checkUserhaveBet,
            this,
          ),
          this.btnSure.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onBetSure,
            this,
          ),
          this.btnCancel.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onBetCancel,
            this,
          ),
          this.btnLimit.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onShowLimit,
            this,
          ),
          this.gComOpt.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onChangeCom,
            this,
          ),
          this.btnAskB.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onAskBRoute,
            this,
          ),
          this.btnAskP.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onAskPRoute,
            this,
          ),
          this.gRote.removeEventListener(
            egret.Event.RESIZE,
            this.onRouteGroupResize,
            this,
          ),
          this.showTongjiGroup.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.showTongjiGroupFun,
            this,
          ),
          this.closeTongjiGroup.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.closeTongjiGroupFun,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.BET_AMOUNT,
            this.betAmount,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.BET_START,
            this.betStart,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.BET_RESULT,
            this.betResult,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.SEAT_DEAL,
            this.seatDeal,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.BET_RESPONSE,
            this.betResponse,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.TABLE_INFO,
            this.tableInfo,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.SEAT_BETTING,
            this.seatBetting,
            this,
          ),
          this.gameTime.removeEventListener(
            "TimeComplete",
            this.onTimeComplete,
            this,
          ),
          this.enterGame.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.enterGameFun,
            this,
          ),
          this.gameTime.stopTime(),
          this.route && this.route.dispose(),
          (this.route = null),
          (this.timer = null),
          (this.seatDealList = null),
          (this.pointList = null),
          this.parent && this.parent.removeChild(this);
      }),
      i
    );
  })(eui.Component);
  (t.DuotaiTableView = e),
    __reflect(e.prototype, "game.DuotaiTableView", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(game || (game = {}));
var game;
!(function (t) {
  var e = (function (e) {
    function i() {
      var t = e.call(this) || this;
      return (
        (t.cur_tabView_hash = {}),
        (t.cur_tabinfo_arr = []),
        (t.cur_tabinfo_hash = {}),
        (t.cur_tabstate_hash = {}),
        (t.cur_enterTabinfo_arr = []),
        (t.skinName = "resource/skins/duotai/DuotaiView.exml"),
        (t.percentWidth = 100),
        (t.top = 0),
        (t.bottom = 0),
        (t.left = 0),
        (t.right = 0),
        t
      );
    }
    return (
      __extends(i, e),
      (i.prototype.partAdded = function (t, i) {
        e.prototype.partAdded.call(this, t, i);
      }),
      (i.prototype.childrenCreated = function () {
        e.prototype.childrenCreated.call(this);
      }),
      (i.prototype.updataView = function () {
        (this.cur_tabView_hash = {}),
          (this.defaultEnter = null),
          (this.scrollerView.viewport.scrollV = 0),
          (this.scrollerTab.viewport.scrollV = 0),
          (this.lblLimit.text =
            LangUtils.LANG_MAP.INFO_LIMIT +
            ":" +
            GameUtils.getNumberFormat(DataManager.curTable.minlimit) +
            "-" +
            GameUtils.getNumberFormat(DataManager.curTable.maxlimit)),
          (this.lblMoney.text = ShareUtils.toMoney(DataManager.sumAmount)),
          (this.cur_tabinfo_arr = []),
          this.initAllTable(),
          this.addViewEventLister(),
          this.initBet(),
          this.changeZoom(dzxx.LiveVideo.getZoom()),
          (i.DuotaiGameTime = egret.getTimer()),
          (i.DuotaiGameTip = !1),
          this.tabGroup.addChild(t.GameChangeDuotaiTab.getIns()),
          t.GameChangeDuotaiTab.getIns().onHideUIQuick(),
          t.GameChangeDuotaiTab.getIns().addEventListerFun(),
          this.topScreen.contains(HeadScreen.getIns()) ||
            this.topScreen.addChild(HeadScreen.getIns()),
          HeadScreen.getIns().showLangBtn(!1),
          DataManager.vector_login && (this.btnbackgroup.visible = !1),
          this.activePanel &&
            DataManager.Q1E5_login &&
            DataManager.IMAGE_URL &&
            this.activePanel.loadImage(DataManager.IMAGE_URL);
      }),
      (i.prototype.addViewEventLister = function () {
        EventManager.getIns().addEventListener(
          DataChangeEvent.DUOTAI_TABLE_INFO,
          this.goinTableView,
          this,
        ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.DUOTAI_TAB_INDEX_CHANGE,
            this.tabIndexChangeFun,
            this,
          ),
          this.tabList.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.selectoRoom,
            this,
          ),
          this.gBets.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onChooseBet,
            this,
          ),
          this.imgBetUp.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onScrollBetUp,
            this,
          ),
          this.imgBetDown.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onScrollBetDown,
            this,
          ),
          this.video_zoom.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onVideoZoom,
            this,
          ),
          this.gBets.addEventListener(
            egret.Event.RESIZE,
            this.onGroupResize,
            this,
          ),
          this.btnbackgroup.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onBack,
            this,
          ),
          this.btnmenugroup.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onMenu,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.User_INFO,
            this.onMoneyChange,
            this,
          );
      }),
      (i.prototype.removeViewEventLister = function () {
        EventManager.getIns().removeEventListener(
          DataChangeEvent.DUOTAI_TABLE_INFO,
          this.goinTableView,
          this,
        ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.DUOTAI_TAB_INDEX_CHANGE,
            this.tabIndexChangeFun,
            this,
          ),
          this.tabList.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.selectoRoom,
            this,
          ),
          this.gBets.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onChooseBet,
            this,
          ),
          this.imgBetUp.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onScrollBetUp,
            this,
          ),
          this.imgBetDown.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onScrollBetDown,
            this,
          ),
          this.video_zoom.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onVideoZoom,
            this,
          ),
          this.gBets.addEventListener(
            egret.Event.RESIZE,
            this.onGroupResize,
            this,
          ),
          this.btnbackgroup.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onBack,
            this,
          ),
          this.btnmenugroup.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onMenu,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.User_INFO,
            this.onMoneyChange,
            this,
          );
      }),
      (i.prototype.initInfo = function () {}),
      (i.prototype.onMoneyChange = function (t) {
        this.lblMoney.text = ShareUtils.toMoney(DataManager.sumAmount);
      }),
      (i.prototype.tabIndexChangeFun = function (t) {
        if ((void 0 === t && (t = null), !t.data))
          return this.freshList(), void this.showTableList();
        for (var e = 0, i = DataManager.duotai_OKID_arr.length; i > e; ++e) {
          var a = DataManager.duotai_OKID_arr[e],
            n = DataManager.getTableStates(a);
          if (n) {
            var s = n.tableInfo;
            (s.gameType != DataManager.GAME_TYPE_BACCARAT &&
              s.gameType != DataManager.GAME_TYPE_DRAGONTIGER &&
              s.gameType != DataManager.GAME_TYPE_SICBO) ||
              "RP" == s.tablestate ||
              !DataManager.getTabArrHaveByLabid(s.tableid) ||
              this.cur_enterTabinfo_arr[a] ||
              MessageHandler.chooseTableDuotai(a, s.gameType);
          }
        }
      }),
      (i.prototype.onGroupResize = function (t) {
        void 0 === t && (t = null),
          this.change_size(this.contentGroup, this.viewGroup);
      }),
      (i.prototype.goinTableView = function (t) {
        void 0 === t && (t = null);
        var e = t.data;
        if (this.cur_enterTabinfo_arr[e.tableid])
          this.cur_tabView_hash[e.tableid].clearData(),
            (this.cur_enterTabinfo_arr[e.tableid] = e),
            this.freshList(),
            this.showTableList();
        else {
          this.cur_enterTabinfo_arr[e.tableid] = e;
          var i = DataManager.getTableStates(e.tableid),
            a = i.tableInfo;
          (a.gameType == DataManager.GAME_TYPE_BACCARAT ||
            a.gameType == DataManager.GAME_TYPE_DRAGONTIGER ||
            a.gameType == DataManager.GAME_TYPE_SICBO) &&
            (this.addTabView(i, e), this.updataTableInfo(e));
        }
      }),
      (i.prototype.addTabView = function (e, i) {
        var a;
        1 == i.gameType
          ? (a = new t.DuotaiTableView())
          : 2 == i.gameType
            ? (a = new t.DouTaiLongHuItem())
            : 4 == i.gameType && (a = new t.DouTaiSciboItem()),
          (this.cur_tabView_hash[e.tableInfo.tableid] = a),
          this.mainDuotaiGroup.addChild(a),
          a.updataView(e, i),
          this.freshList();
      }),
      (i.prototype.freshList = function () {
        var t = [];
        for (var e in this.cur_tabView_hash)
          if (DataManager.getDuotaiIDIndex(parseInt(e)) > -1)
            t.push(parseInt(e));
          else {
            var i = this.cur_tabView_hash[e];
            i.dispose(!0),
              delete this.cur_tabView_hash[e],
              delete this.cur_enterTabinfo_arr[e],
              delete this.cur_tabinfo_hash[e];
          }
        t.sort(this.sortFun);
        for (var a = 0, n = t.length; n > a; ++a) {
          var i = this.cur_tabView_hash[t[a]];
          (i.parentGroup = this.topGroup), i && (i.y = 300 * a);
        }
      }),
      (i.prototype.sortFun = function (t, e) {
        return (
          DataManager.getTableDuotaiIndex(t) -
          DataManager.getTableDuotaiIndex(e)
        );
      }),
      (i.prototype.initAllTable = function () {
        this.tabList.itemRenderer = DuoTaiItem;
      }),
      (i.prototype.updataTableInfo = function (t) {
        void 0 === t && (t = null);
        var e = !1,
          i = t,
          a = DataManager.getTableStates(i.tableid),
          n = a.tableInfo;
        !n ||
          (n.gameType != DataManager.GAME_TYPE_BACCARAT &&
            n.gameType != DataManager.GAME_TYPE_DRAGONTIGER &&
            n.gameType != DataManager.GAME_TYPE_SICBO) ||
          (null == this.cur_tabinfo_hash[n.tableid] &&
            ((e = !0),
            (this.cur_tabstate_hash[n.tableid] = DataManager.getTableStates(
              n.tableid,
            ))),
          (this.cur_tabinfo_hash[n.tableid] = n)),
          e && this.showTableList();
      }),
      (i.prototype.showTableList = function () {
        var t = this;
        (this.tabList.selectedItem = null), (this.cur_tabinfo_arr = []);
        for (var e in this.cur_tabinfo_hash)
          this.cur_tabinfo_arr.push(this.cur_tabinfo_hash[e]);
        if (
          (this.cur_tabinfo_arr.sort(this.sortBytid),
          (this.myCollection = new eui.ArrayCollection(this.cur_tabinfo_arr)),
          (i.room_item_hash = {}),
          (this.tabList.dataProvider = this.myCollection),
          (this.scrollerTab.viewport = this.tabList),
          (this.tabList.scrollH = 0),
          this.defaultEnter)
        ) {
          var a = DataManager.getDuotaiIDIndex(this.defaultEnter.tableid);
          a > -1
            ? (this.tabList.selectedItem =
                this.cur_tabinfo_hash[this.defaultEnter.tableid])
            : (this.defaultEnter = null);
        }
        if (!this.defaultEnter) {
          this.defaultEnter = this.cur_tabinfo_arr[0];
          var n = this.cur_enterTabinfo_arr[this.defaultEnter.tableid];
          dzxx.LiveVideo.flv_load(n);
        }
        this.defaultEnter &&
          (this.tabList.selectedItem =
            this.cur_tabinfo_hash[this.defaultEnter.tableid]);
        var s = DataManager.getDuotaiIDIndex(this.defaultEnter.tableid);
        s > -1 &&
          this.cur_tabinfo_arr.length > 4 &&
          (s > 3
            ? (this.updataScrollerTabID = setTimeout(function () {
                t.updataScrollerTab();
              }, 200))
            : (this.scrollerTab.viewport.scrollH = 0));
      }),
      (i.prototype.updataScrollerTab = function () {
        if (this.defaultEnter) {
          var t = DataManager.getDuotaiIDIndex(this.defaultEnter.tableid);
          t > -1 &&
            this.cur_tabinfo_arr.length > 4 &&
            (t > 3
              ? (this.scrollerTab.viewport.scrollH = 200 * (t - 4 + 1))
              : (this.scrollerTab.viewport.scrollH = 0));
        }
      }),
      (i.prototype.sortBytid = function (t, e) {
        return (
          DataManager.getTableDuotaiIndex(t.tableid) -
          DataManager.getTableDuotaiIndex(e.tableid)
        );
      }),
      (i.prototype.selectoRoom = function (t) {
        var e = this.tabList.selectedItem;
        if (e) {
          for (var a in i.room_item_hash) {
            var n = i.room_item_hash[a];
            n.selectTab(e.tableid);
          }
          var s = this.cur_enterTabinfo_arr[e.tableid];
          s && dzxx.LiveVideo.flv_load(s);
        }
      }),
      (i.prototype.initBet = function () {
        if (DataManager.curTableState) {
          var e,
            i = [],
            a = MultiCurrencyManager.coinsArray,
            n = DataManager.curTableState,
            s = DataManager.currentLimitKey,
            r = -1,
            o = -1;
          n.enterType;
          if (
            n &&
            n.enterType == DataManager.ENTER_TABLE_TYPE_SIDE &&
            n.tableInfo &&
            n.tableInfo.alimitKeys
          )
            for (var h = 0; h < n.tableInfo.alimitKeys.length; h++)
              if (n.tableInfo.alimitKeys[h] == s) {
                r = h;
                break;
              }
          if (
            n &&
            n.enterType != DataManager.ENTER_TABLE_TYPE_SIDE &&
            n.tableInfo &&
            n.tableInfo.limitKeys
          )
            for (var l = 0; l < n.tableInfo.limitKeys.length; l++)
              if (n.tableInfo.limitKeys[l] == s) {
                o = l;
                break;
              }
          var g = !0,
            u = n.tableInfo.aminlimit,
            c = n.tableInfo.amaxlimit,
            d = n.tableInfo.minlimit,
            p = n.tableInfo.maxlimit;
          for (var _ in a) {
            var b = a[_],
              m = {
                value: b,
                size: 70,
                autolight: !1,
              };
            i.push(m),
              n
                ? g &&
                  ((r > -1 && this.isinlimitrange(u, c, r, b)) ||
                    (o > -1 && this.isinlimitrange(d, p, o, b))) &&
                  ((e = m), (g = !1))
                : (e = m),
              b == DataManager.amount &&
                ((r > -1 && this.isinlimitrange(u, c, r, DataManager.amount)) ||
                  (o > -1 &&
                    this.isinlimitrange(d, p, o, DataManager.amount))) &&
                (e = m);
          }
          DataManager.amount = e.value;
          for (var T = 0, v = 0; v < i.length; v++) {
            var E = new t.GameBetItem();
            this.gBets.addChild(E),
              E.setItem(i[v]),
              e == i[v] ? (E.selectItem(!0), (T = v)) : E.selectItem(!1);
          }
          T > 5 && (this.betScroller.viewport.scrollH = 100 * (T - 5) + 500);
        }
      }),
      (i.prototype.isinlimitrange = function (t, e, i, a) {
        return t[i] <= a && a <= e[i];
      }),
      (i.prototype.onScrollBetUp = function () {
        this.betScroller.stopAnimation(),
          this.betScroller.viewport.scrollH - 300 > 0
            ? egret.Tween.get(this.betScroller.viewport).to(
                {
                  scrollH: this.betScroller.viewport.scrollH - 300,
                },
                300,
              )
            : egret.Tween.get(this.betScroller.viewport).to(
                {
                  scrollH: 0,
                },
                300,
              );
      }),
      (i.prototype.onScrollBetDown = function () {
        this.betScroller.stopAnimation();
        var t = this.betScroller.width;
        this.betScroller.viewport.scrollH + 300 <
        this.betScroller.viewport.contentWidth - t
          ? egret.Tween.get(this.betScroller.viewport).to(
              {
                scrollH: this.betScroller.viewport.scrollH + 300,
              },
              300,
            )
          : egret.Tween.get(this.betScroller.viewport).to(
              {
                scrollH: this.betScroller.viewport.contentWidth - t,
              },
              300,
            );
      }),
      (i.prototype.onVideoZoom = function () {
        this.changeZoom(dzxx.LiveVideo.switchZoom());
      }),
      (i.prototype.changeZoom = function (t) {
        t
          ? (this.video_zoom.source = "video_normal_duotai_png")
          : (this.video_zoom.source = "video_card_duotai_png");
      }),
      (i.prototype.onChooseBet = function (e) {
        if (e.target instanceof t.GameBetItem) {
          var i = e.target;
          if (i.isSelect) return;
          for (var a = 0; a < this.gBets.numChildren; a++)
            this.gBets.getChildAt(a).selectItem(!1);
          i.selectItem(!0), (DataManager.amount = i.nValue);
        }
      }),
      (i.prototype.onBack = function () {
        (DataManager.curTableState = null),
          (DataManager.curTable = null),
          (ShareUtils.main.gameView = null),
          this.dispose(),
          DataManager.gotoLobby();
      }),
      (i.prototype.onMenu = function () {
        MenuView.getIns().showhide();
      }),
      (i.prototype.dispose = function () {
        this.removeViewEventLister(),
          (DataManager.is_goto_duotai = !1),
          (DataManager.thisduotaiView = null),
          dzxx.LiveVideo.ifStopVideo(),
          (this.cur_tabstate_hash = {}),
          (this.cur_tabinfo_hash = {}),
          (this.defaultEnter = null),
          (this.cur_enterTabinfo_arr = {});
        for (var e in this.cur_tabView_hash) {
          var i = this.cur_tabView_hash[e];
          i.dispose(!0), (i = null);
        }
        (this.cur_tabView_hash = {}),
          this.removeChildren(),
          t.GameChangeDuotaiTab.getIns().dispose(),
          this.parent && this.parent.removeChild(this),
          this.activePanel && this.activePanel.dispose();
      }),
      (i.room_item_hash = {}),
      (i.DuotaiGameTime = 0),
      (i.DuotaiGameTip = !1),
      i
    );
  })(ViewAbstract);
  (t.DuotaiView = e),
    __reflect(e.prototype, "game.DuotaiView", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(game || (game = {}));
var game;
!(function (t) {
  var e = (function () {
    function t() {}
    return (
      (t.STATE_ACCEPT_BET = 0),
      (t.STATE_ACCEPT_ADD = 1),
      (t.STATE_DEALING = 2),
      (t.STATE_RESULT = 3),
      (t.STATE_COMP = 5),
      (t.STATE_MI = 6),
      (t.STATE_RUFFLE = 8),
      (t.STATE_WAIT = -1),
      (t.STATE_WOP = -2),
      t
    );
  })();
  (t.GameAction = e), __reflect(e.prototype, "game.GameAction");
})(game || (game = {}));
var game;
!(function (t) {
  var e = (function (t) {
    function e() {
      var e = t.call(this) || this;
      return (
        (e.nValue = 0),
        (e.isSelect = !1),
        (e.isfashi = !1),
        (e.wucha_x = 0),
        (e.wucha_y = 0),
        (e.betName = ""),
        (e.createTime = 0),
        (e.tableSeq = ""),
        (e.isTemple = !0),
        (e.skinName = "resource/skins/duotai/GameBetItem.exml"),
        e
      );
    }
    return (
      __extends(e, t),
      (e.prototype.partAdded = function (e, i) {
        t.prototype.partAdded.call(this, e, i);
      }),
      (e.prototype.childrenCreated = function () {
        t.prototype.childrenCreated.call(this),
          (this.touchChildren = !1),
          (this.createTime = egret.getTimer());
      }),
      (e.prototype.setItem = function (t) {
        (this.nValue = t.value),
          (this.imgBet.source =
            "DUICoin_" +
            DataManager.getCoinIndexInCoinAmountsByValue(this.nValue) +
            "_png"),
          (this.lbBet.text = GameUtils.getNumberFormat(this.nValue)),
          (this.lbBet.y = 44);
      }),
      (e.prototype.selectItem = function (t) {
        (this.isSelect = t),
          t ? ((this.alpha = 1), (this.isTemple = !1)) : (this.alpha = 0.5);
      }),
      (e.prototype.selectBetItem = function (t) {
        (this.isSelect = t),
          t
            ? ((this.imgBet.source =
                "DUICoin_" +
                DataManager.getCoinIndexInCoinAmountsByValue(this.nValue) +
                "_up_png"),
              (this.alpha = 1),
              (this.lbBet.y = 23))
            : ((this.imgBet.source =
                "DUICoin_" +
                DataManager.getCoinIndexInCoinAmountsByValue(this.nValue) +
                "_png"),
              (this.alpha = 0.5),
              (this.lbBet.y = 44));
      }),
      (e.prototype.dispose = function () {
        this.parent && this.parent.removeChild(this);
      }),
      e
    );
  })(eui.Component);
  (t.GameBetItem = e),
    __reflect(e.prototype, "game.GameBetItem", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(game || (game = {}));
var game;
!(function (t) {
  var e = (function (e) {
    function i() {
      var t = e.call(this) || this;
      return (
        (t.arrList = ["B", "BP", "T", "P", "PP", "L"]),
        (t.arrTmpCoin = []),
        (t.arrOkCoin = []),
        (t.arrWin = []),
        (t.speed = 0.05),
        (t.temp_GameBetItem_hash = {}),
        (t.skinName = "resource/skins/duotai/GameComDuoTaiNoUI.exml"),
        t
      );
    }
    return (
      __extends(i, e),
      (i.prototype.partAdded = function (t, i) {
        e.prototype.partAdded.call(this, t, i);
      }),
      (i.prototype.childrenCreated = function () {
        e.prototype.childrenCreated.call(this),
          (this.timer = new egret.Timer(10)),
          this.timer.addEventListener(
            egret.TimerEvent.TIMER,
            this.onWinTimer,
            this,
          );
        for (var t = 0; t < this.arrList.length; t++)
          this["btnHit" + this.arrList[t]].addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onHitTap,
            this,
          );
        this.myBettest1.addEventListener(
          egret.TouchEvent.RESIZE,
          this.onRetRize,
          this,
        );
      }),
      (i.prototype.onHitTap = function (t) {
        this.dispatchEvent(
          new egret.Event("OnHitBetTable", !0, !0, {
            name: t.target.name,
            point: new egret.Point(t.localX, t.localY),
          }),
        );
      }),
      (i.prototype.onRetRize = function (t) {
        this.visible && this.checkShowCoinInfo();
      }),
      (i.prototype.changeLang = function (t) {
        void 0 === t && (t = null),
          (this.dzg_bjl_lab_1.text = LangUtils.LANG_MAP.dzg_game_duotai_2),
          (this.dzg_bjl_lab_2.text = LangUtils.LANG_MAP.dzg_game_duotai_4),
          (this.dzg_bjl_lab_3.text = LangUtils.LANG_MAP.dzg_game_duotai_3),
          (this.dzg_bjl_lab_4.text = LangUtils.LANG_MAP.dzg_game_duotai_5),
          (this.dzg_bjl_lab_5.text = LangUtils.LANG_MAP.dzg_game_duotai_6),
          (this.dzg_bjl_lab_6.text = LangUtils.LANG_MAP.LS),
          DataManager.LANG_TYPE == DataManager.LANG_EN
            ? ((this.dzg_bjl_lab_1.size = 36),
              (this.dzg_bjl_lab_3.size = 36),
              (this.dzg_bjl_lab_2.size = 26),
              (this.dzg_bjl_lab_4.size = 26),
              (this.dzg_bjl_lab_5.size = 26),
              (this.dzg_bjl_lab_6.size = 14))
            : DataManager.LANG_TYPE == DataManager.LANG_VL
              ? ((this.dzg_bjl_lab_1.size = 16),
                (this.dzg_bjl_lab_2.size = 20),
                (this.dzg_bjl_lab_3.size = 20),
                (this.dzg_bjl_lab_4.size = 16),
                (this.dzg_bjl_lab_5.size = 16),
                (this.dzg_bjl_lab_6.size = 14))
              : DataManager.LANG_TYPE == DataManager.LANG_HN ||
                  DataManager.LANG_TYPE == DataManager.LANG_JPN ||
                  DataManager.LANG_TYPE == DataManager.LANG_KR
                ? ((this.dzg_bjl_lab_1.size = 36),
                  (this.dzg_bjl_lab_3.size = 36),
                  (this.dzg_bjl_lab_2.size = 26),
                  (this.dzg_bjl_lab_4.size = 26),
                  (this.dzg_bjl_lab_5.size = 26),
                  (this.dzg_bjl_lab_6.size = 16))
                : ((this.dzg_bjl_lab_1.size = 36),
                  (this.dzg_bjl_lab_3.size = 36),
                  (this.dzg_bjl_lab_2.size = 26),
                  (this.dzg_bjl_lab_4.size = 26),
                  (this.dzg_bjl_lab_5.size = 26),
                  (this.dzg_bjl_lab_6.size = 16));
      }),
      (i.prototype.initUI = function () {
        this.changeLang(), this.timer.stop();
        for (var t = 0; t < this.arrList.length; t++)
          (this["img" + this.arrList[t] + "_up"].visible = !1),
            (this["myBet" + this.arrList[t]].visible = !1);
        this.clearCoins(),
          this.clearTmpCoins(),
          (this.arrOkCoin = []),
          EventManager.getIns().dispatchEvent(
            new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, {
              t_id: this.fbEnetrTable.tableid,
              isShow: !1,
            }),
          );
      }),
      (i.prototype.onWinTimer = function () {
        this.startAnim();
      }),
      (i.prototype.startAnim = function () {
        for (var t = 0; t < this.arrWin.length; t++)
          if ("TS" != this.arrWin[t]) {
            var e = this["img" + this.arrWin[t] + "_up"];
            (e.visible = !0),
              e.alpha >= 1 && (this.speed = -0.05),
              e.alpha < 0.3 && (this.speed = 0.05),
              (e.alpha += this.speed);
          }
      }),
      (i.prototype.showWin = function (t) {
        (this.arrWin = t), this.timer.start();
      }),
      (i.prototype.addBetCoin = function (e, i, a) {
        void 0 === a && (a = !1);
        var n = new t.GameBetItem();
        this.gBet.addChild(n),
          n.setItem({
            value: e,
          }),
          (n.scaleX = n.scaleY = 0.5),
          (n.alpha = 0.6);
        var s = this.gContent.getChildByName(i.name);
        (n.wucha_x = -30 + 10 * Math.random() - 5),
          (n.wucha_y = -30 + 10 * Math.random() - 5),
          (n.betName = i.name),
          (n.tableSeq = this.curTableState.tableInfo.tableSeq),
          (n.x = s.x + s.width / 2 + n.wucha_x),
          (n.y = s.y + s.height / 2 + n.wucha_y),
          this.arrTmpCoin.push(n),
          DataManager.addBetCoinDisHash(n),
          a
            ? EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, {
                  t_id: this.fbEnetrTable.tableid,
                  isShow: !0,
                }),
              )
            : EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, {
                  t_id: this.fbEnetrTable.tableid,
                  isShow: !1,
                }),
              );
      }),
      (i.prototype.updataCoinInfo = function (t, e, i) {
        void 0 === i && (i = !1);
        for (var a = !1, n = 0; n < this.arrList.length; n++) {
          var s = this.arrList[n],
            r = this.checkMCName(s),
            o = t[r] || 0,
            h = e[r] || 0,
            l = this["myBet" + s].height;
          if (0 == o && 0 == h) this["myBet" + s].visible = !1;
          else {
            this["myBet" + s].visible = !0;
            var g = this["myBet" + s].getChildAt(0),
              u = this["myBet" + s].getChildAt(1),
              c = this["myBet" + s].getChildAt(2),
              d = this["myBet" + s].getChildAt(3);
            (g.alpha = 0.8),
              (c.text = ""),
              (d.text = ""),
              (c.textColor = 126649),
              (d.textColor = 11053224);
            var p = !1,
              _ = !1;
            if (
              (o > 0 &&
                ((c.text = "" + GameUtils.getNumberFormat(o)), (p = !0)),
              h > 0 &&
                ((d.text = "+" + GameUtils.getNumberFormat(Math.floor(h))),
                (_ = !0),
                (a = !0)),
              o)
            )
              if (_) {
                (g.height = 70),
                  (c.y = (l - c.height) / 2 - 16),
                  (d.y = (l - d.height) / 2 + 10);
                var b = Math.max(c.width, d.width);
                g.width = Math.max(b + 10, 100);
              } else
                (g.height = 50),
                  (c.y = (l - c.height) / 2 - 4),
                  (g.width = Math.max(c.width + 10, 100));
            else
              _ &&
                ((g.height = 50),
                (d.y = (l - d.height) / 2 - 4),
                (g.width = Math.max(d.width + 10, 100)));
            u.height = g.height;
          }
        }
        if (
          ((this.myBetTS.visible = !1),
          a
            ? EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, {
                  t_id: this.fbEnetrTable.tableid,
                  isShow: !0,
                }),
              )
            : EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, {
                  t_id: this.fbEnetrTable.tableid,
                  isShow: !1,
                }),
              ),
          i)
        ) {
          for (var n = 0; n < this.arrTmpCoin.length; n++) {
            var m = this.arrTmpCoin[n];
            m.selectItem(!0), this.arrOkCoin.push(m);
          }
          (this.arrTmpCoin = []),
            this.curTableState &&
              DataManager.okBetCoinDisByDis(
                this.curTableState.tableInfo.tableSeq,
              ),
            EventManager.getIns().dispatchEvent(
              new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, {
                t_id: this.fbEnetrTable.tableid,
                isShow: !1,
              }),
            );
        }
        this.checkShowCoinInfo();
      }),
      (i.prototype.checkShowCoinInfo = function () {
        var t = DataManager.getBetCoinDisHash(
          this.curTableState.tableInfo.tableSeq,
        );
        if (t.length > 0)
          for (var e = 0, i = t.length; i > e; ++e) {
            var a = t[e];
            if (a && "LS" != a.betName) {
              this.gBet.addChild(a);
              var n = this.gContent.getChildByName(a.betName);
              if (n) {
                (a.x = n.x + n.width / 2 + a.wucha_x),
                  (a.y = n.y + n.height / 2 + a.wucha_y);
                n.x, n.y;
              }
            }
          }
      }),
      (i.prototype.checkMCName = function (t) {
        var e = t;
        return (
          "P" == e && (e = "PLAYER"),
          "B" == e && (e = "BANKER"),
          "T" == e && (e = "TILE"),
          "L" == e && (e = "LS"),
          e
        );
      }),
      (i.prototype.showBetInfo = function (t) {
        if (t) {
          var e = t.tablePool,
            i = String(e.BANKER).split("/");
          (this.lbTotalB.text = i[0]), (this.lbNumB.text = i[1]);
          var a = String(e.PLAYER).split("/");
          (this.lbTotalP.text = a[0]), (this.lbNumP.text = a[1]);
          var n = String(e.TILE).split("/");
          if (((this.lbTotalT.text = n[0]), (this.lbNumT.text = n[1]), e.BP)) {
            var s = String(e.BP).split("/");
            (this.lbTotalBP.text = s[0]), (this.lbNumBP.text = s[1]);
          } else (this.lbTotalBP.text = "0"), (this.lbNumBP.text = "0");
          if (e.PP) {
            var r = String(e.PP).split("/");
            (this.lbTotalPP.text = r[0]), (this.lbNumPP.text = r[1]);
          } else (this.lbTotalPP.text = "0"), (this.lbNumPP.text = "0");
        }
      }),
      (i.prototype.clearTmpCoins = function () {
        for (var t = 0; t < this.arrTmpCoin.length; t++)
          for (var e = 0; e < this.gBet.numChildren; e++) {
            var i = this.gBet.getChildAt(e);
            if (i == this.arrTmpCoin[t] && !i.isSelect) {
              this.gBet.removeChild(i),
                DataManager.deletBetCoinDisByDis(i),
                (i = null);
              break;
            }
          }
        (this.arrTmpCoin = []),
          this.curTableState &&
            DataManager.deletBetCoinDisByTabshid(
              this.curTableState.tableInfo.tableSeq,
            ),
          (this.temp_GameBetItem_hash = {});
      }),
      (i.prototype.clearOKCoins = function () {
        for (var t = 0; t < this.arrOkCoin.length; t++)
          for (var e = 0; e < this.gBet.numChildren; e++) {
            var i = this.gBet.getChildAt(e);
            if (i == this.arrTmpCoin[t]) {
              this.gBet.removeChild(i);
              break;
            }
          }
        this.arrOkCoin = [];
      }),
      (i.prototype.clearCoins = function () {
        for (; this.gBet.numChildren > 0; ) {
          this.gBet.removeChildAt(0);
        }
        this.temp_GameBetItem_hash = {};
      }),
      (i.prototype.dispose = function () {
        this.clearTmpCoins(),
          this.timer &&
            this.timer.removeEventListener(
              egret.TimerEvent.TIMER,
              this.onWinTimer,
              this,
            );
        for (var t = 0; t < this.arrList.length; t++)
          this["btnHit" + this.arrList[t]].removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onHitTap,
            this,
          );
        (this.temp_GameBetItem_hash = {}),
          this.myBettest1.removeEventListener(
            egret.TouchEvent.RESIZE,
            this.onRetRize,
            this,
          );
      }),
      i
    );
  })(eui.Component);
  (t.GameComDuoTaiNoUI = e),
    __reflect(e.prototype, "game.GameComDuoTaiNoUI", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(game || (game = {}));
var game;
!(function (t) {
  var e = (function (e) {
    function i() {
      var t = e.call(this) || this;
      return (
        (t.arrList = ["B", "BP", "T", "P", "PP", "L"]),
        (t.arrTmpCoin = []),
        (t.arrOkCoin = []),
        (t.arrWin = []),
        (t.speed = 0.05),
        (t.skinName = "resource/skins/duotai/GameComDuoTaiYesUI.exml"),
        t
      );
    }
    return (
      __extends(i, e),
      (i.prototype.partAdded = function (t, i) {
        e.prototype.partAdded.call(this, t, i);
      }),
      (i.prototype.childrenCreated = function () {
        e.prototype.childrenCreated.call(this),
          (this.timer = new egret.Timer(10)),
          this.timer.addEventListener(
            egret.TimerEvent.TIMER,
            this.onWinTimer,
            this,
          );
        for (var t = 0; t < this.arrList.length; t++)
          this["btnHit" + this.arrList[t]].addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onHitTap,
            this,
          );
        this.myBettest1.addEventListener(
          egret.TouchEvent.RESIZE,
          this.onRetRize,
          this,
        );
      }),
      (i.prototype.onHitTap = function (t) {
        this.dispatchEvent(
          new egret.Event("OnHitBetTable", !0, !0, {
            name: t.target.name,
            point: new egret.Point(t.localX, t.localY),
          }),
        );
      }),
      (i.prototype.onRetRize = function (t) {
        this.visible && this.checkShowCoinInfo();
      }),
      (i.prototype.changeLang = function (t) {
        void 0 === t && (t = null),
          (this.dzg_bjl_lab_1.text = LangUtils.LANG_MAP.dzg_game_duotai_2),
          (this.dzg_bjl_lab_2.text = LangUtils.LANG_MAP.dzg_game_duotai_4),
          (this.dzg_bjl_lab_3.text = LangUtils.LANG_MAP.dzg_game_duotai_3),
          (this.dzg_bjl_lab_4.text = LangUtils.LANG_MAP.dzg_game_duotai_5),
          (this.dzg_bjl_lab_5.text = LangUtils.LANG_MAP.dzg_game_duotai_6),
          (this.dzg_bjl_lab_6.text = LangUtils.LANG_MAP.LS),
          DataManager.LANG_TYPE == DataManager.LANG_EN
            ? ((this.dzg_bjl_lab_1.size = 36),
              (this.dzg_bjl_lab_3.size = 36),
              (this.dzg_bjl_lab_2.size = 26),
              (this.dzg_bjl_lab_4.size = 26),
              (this.dzg_bjl_lab_5.size = 26),
              (this.dzg_bjl_lab_6.size = 14))
            : DataManager.LANG_TYPE == DataManager.LANG_VL
              ? ((this.dzg_bjl_lab_1.size = 16),
                (this.dzg_bjl_lab_2.size = 20),
                (this.dzg_bjl_lab_3.size = 20),
                (this.dzg_bjl_lab_4.size = 16),
                (this.dzg_bjl_lab_5.size = 16),
                (this.dzg_bjl_lab_6.size = 14))
              : DataManager.LANG_TYPE == DataManager.LANG_HN ||
                  DataManager.LANG_TYPE == DataManager.LANG_JPN ||
                  DataManager.LANG_TYPE == DataManager.LANG_KR
                ? ((this.dzg_bjl_lab_1.size = 36),
                  (this.dzg_bjl_lab_3.size = 36),
                  (this.dzg_bjl_lab_2.size = 26),
                  (this.dzg_bjl_lab_4.size = 26),
                  (this.dzg_bjl_lab_5.size = 26),
                  (this.dzg_bjl_lab_6.size = 16))
                : ((this.dzg_bjl_lab_1.size = 36),
                  (this.dzg_bjl_lab_3.size = 36),
                  (this.dzg_bjl_lab_2.size = 26),
                  (this.dzg_bjl_lab_4.size = 26),
                  (this.dzg_bjl_lab_5.size = 26),
                  (this.dzg_bjl_lab_6.size = 16));
      }),
      (i.prototype.initUI = function () {
        this.changeLang(), this.timer.stop();
        for (var t = 0; t < this.arrList.length; t++)
          (this["img" + this.arrList[t] + "_up"].visible = !1),
            (this["myBet" + this.arrList[t]].visible = !1);
        this.clearCoins(),
          this.clearTmpCoins(),
          (this.arrOkCoin = []),
          EventManager.getIns().dispatchEvent(
            new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, {
              t_id: this.fbEnetrTable.tableid,
              isShow: !1,
            }),
          );
      }),
      (i.prototype.onWinTimer = function () {
        this.startAnim();
      }),
      (i.prototype.startAnim = function () {
        for (var t = 0; t < this.arrWin.length; t++) {
          var e = this["img" + this.arrWin[t] + "_up"];
          (e.visible = !0),
            e.alpha >= 1 && (this.speed = -0.05),
            e.alpha < 0.3 && (this.speed = 0.05),
            (e.alpha += this.speed);
        }
      }),
      (i.prototype.showWin = function (t) {
        (this.arrWin = t), this.timer.start();
      }),
      (i.prototype.addBetCoin = function (e, i, a) {
        void 0 === a && (a = !1);
        var n = new t.GameBetItem();
        this.gBet.addChild(n),
          n.setItem({
            value: e,
          }),
          (n.scaleX = n.scaleY = 0.5),
          (n.alpha = 0.6);
        var s = this.gContent.getChildByName(i.name);
        (n.wucha_x = -30 + 10 * Math.random() - 5),
          (n.wucha_y = -30 + 10 * Math.random() - 5),
          (n.betName = i.name),
          (n.tableSeq = this.curTableState.tableInfo.tableSeq),
          (n.x = s.x + s.width / 2 + n.wucha_x),
          (n.y = s.y + s.height / 2 + n.wucha_y),
          this.arrTmpCoin.push(n),
          DataManager.addBetCoinDisHash(n),
          a
            ? EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, {
                  t_id: this.fbEnetrTable.tableid,
                  isShow: !0,
                }),
              )
            : EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, {
                  t_id: this.fbEnetrTable.tableid,
                  isShow: !1,
                }),
              );
      }),
      (i.prototype.updataCoinInfo = function (t, e, i) {
        void 0 === i && (i = !1);
        for (var a = !1, n = 0; n < this.arrList.length; n++) {
          var s = this.arrList[n],
            r = this.checkMCName(s),
            o = t[r] || 0,
            h = e[r] || 0,
            l = this["myBet" + s].height;
          if (0 == o && 0 == h) this["myBet" + s].visible = !1;
          else {
            this["myBet" + s].visible = !0;
            var g = this["myBet" + s].getChildAt(0),
              u = this["myBet" + s].getChildAt(1),
              c = this["myBet" + s].getChildAt(2),
              d = this["myBet" + s].getChildAt(3);
            (g.alpha = 0.8),
              (c.text = ""),
              (d.text = ""),
              (c.textColor = 126649),
              (d.textColor = 11053224);
            var p = !1,
              _ = !1;
            if (
              (o > 0 &&
                ((c.text = "" + GameUtils.getNumberFormat(o)), (p = !0)),
              h > 0 &&
                ((d.text = "+" + GameUtils.getNumberFormat(Math.floor(h))),
                (_ = !0),
                (a = !0)),
              o)
            )
              if (_) {
                (g.height = 70),
                  (c.y = (l - c.height) / 2 - 16),
                  (d.y = (l - d.height) / 2 + 10);
                var b = Math.max(c.width, d.width);
                g.width = Math.max(b + 10, 100);
              } else
                (g.height = 50),
                  (c.y = (l - c.height) / 2 - 4),
                  (g.width = Math.max(c.width + 10, 100));
            else
              _ &&
                ((g.height = 50),
                (d.y = (l - d.height) / 2 - 4),
                (g.width = Math.max(d.width + 10, 100)));
            u.height = g.height;
          }
        }
        if (
          ((this.myBetTS.visible = !1),
          a
            ? EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, {
                  t_id: this.fbEnetrTable.tableid,
                  isShow: !0,
                }),
              )
            : EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, {
                  t_id: this.fbEnetrTable.tableid,
                  isShow: !1,
                }),
              ),
          i)
        ) {
          for (var n = 0; n < this.arrTmpCoin.length; n++) {
            var m = this.arrTmpCoin[n];
            m.selectItem(!0), this.arrOkCoin.push(m);
          }
          (this.arrTmpCoin = []),
            this.curTableState &&
              DataManager.okBetCoinDisByDis(
                this.curTableState.tableInfo.tableSeq,
              ),
            EventManager.getIns().dispatchEvent(
              new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, {
                t_id: this.fbEnetrTable.tableid,
                isShow: !1,
              }),
            );
        }
        this.checkShowCoinInfo();
      }),
      (i.prototype.checkShowCoinInfo = function () {
        var t = DataManager.getBetCoinDisHash(
          this.curTableState.tableInfo.tableSeq,
        );
        if (t.length > 0)
          for (var e = 0, i = t.length; i > e; ++e) {
            var a = t[e];
            if (a && "LS" != a.betName) {
              this.gBet.addChild(a);
              var n = this.gContent.getChildByName(a.betName);
              if (n) {
                (a.x = n.x + n.width / 2 + a.wucha_x),
                  (a.y = n.y + n.height / 2 + a.wucha_y);
                n.x, n.y;
              }
            }
          }
      }),
      (i.prototype.checkMCName = function (t) {
        var e = t;
        return (
          "P" == e && (e = "PLAYER"),
          "B" == e && (e = "BANKER"),
          "T" == e && (e = "TILE"),
          "L" == e && (e = "LS"),
          e
        );
      }),
      (i.prototype.showBetInfo = function (t) {
        if (t) {
          var e = t.tablePool,
            i = String(e.BANKER).split("/");
          (this.lbTotalB.text = i[0]), (this.lbNumB.text = i[1]);
          var a = String(e.PLAYER).split("/");
          (this.lbTotalP.text = a[0]), (this.lbNumP.text = a[1]);
          var n = String(e.TILE).split("/");
          (this.lbTotalT.text = n[0]), (this.lbNumT.text = n[1]);
          var s = String(e.BP).split("/");
          (this.lbTotalBP.text = s[0]), (this.lbNumBP.text = s[1]);
          var r = String(e.PP).split("/");
          (this.lbTotalPP.text = r[0]), (this.lbNumPP.text = r[1]);
        }
      }),
      (i.prototype.clearTmpCoins = function () {
        for (var t = 0; t < this.arrTmpCoin.length; t++)
          for (var e = 0; e < this.gBet.numChildren; e++) {
            var i = this.gBet.getChildAt(e);
            if (i == this.arrTmpCoin[t] && !i.isSelect) {
              this.gBet.removeChild(i),
                DataManager.deletBetCoinDisByDis(i),
                (i = null);
              break;
            }
          }
        (this.arrTmpCoin = []),
          this.curTableState &&
            DataManager.deletBetCoinDisByTabshid(
              this.curTableState.tableInfo.tableSeq,
            );
      }),
      (i.prototype.clearOKCoins = function () {
        for (var t = 0; t < this.arrOkCoin.length; t++)
          for (var e = 0; e < this.gBet.numChildren; e++) {
            var i = this.gBet.getChildAt(e);
            if (i == this.arrTmpCoin[t]) {
              this.gBet.removeChild(i);
              break;
            }
          }
        this.arrOkCoin = [];
      }),
      (i.prototype.clearCoins = function () {
        for (; this.gBet.numChildren > 0; ) {
          this.gBet.removeChildAt(0);
        }
      }),
      (i.prototype.dispose = function () {
        this.clearTmpCoins(),
          this.timer &&
            this.timer.removeEventListener(
              egret.TimerEvent.TIMER,
              this.onWinTimer,
              this,
            );
        for (var t = 0; t < this.arrList.length; t++)
          this["btnHit" + this.arrList[t]].removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onHitTap,
            this,
          );
      }),
      i
    );
  })(eui.Component);
  (t.GameComDuoTaiYesUI = e),
    __reflect(e.prototype, "game.GameComDuoTaiYesUI", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(game || (game = {}));
var game;
!(function (t) {
  var e = (function (t) {
    function e() {
      var e = t.call(this) || this;
      return (
        (e.nCount = 0),
        (e.repetCount = 0),
        (e.blue_color = 3589764),
        (e.red_color = 16267834),
        (e.lbState_old = "dzg_main_41"),
        (e.skinName = "resource/skins/duotai/GameDuoTaiTimeUI.exml"),
        e
      );
    }
    return (
      __extends(e, t),
      (e.prototype.partAdded = function (e, i) {
        t.prototype.partAdded.call(this, e, i);
      }),
      (e.prototype.childrenCreated = function () {
        t.prototype.childrenCreated.call(this),
          (this.timer = new egret.Timer(1e3)),
          this.timer.addEventListener(
            egret.TimerEvent.TIMER,
            this.onTimer,
            this,
          );
      }),
      (e.prototype.changeLang = function (t) {
        void 0 === t && (t = null),
          DataManager.LANG_TYPE == DataManager.LANG_EN ||
            DataManager.LANG_TYPE == DataManager.LANG_KN ||
            DataManager.LANG_TYPE == DataManager.LANG_VL,
          "" == this.lbState_old
            ? (this.lbState.text = "")
            : (this.lbState.text = LangUtils.get(this.lbState_old)),
          (this.lbTime.textColor = this.blue_color);
      }),
      (e.prototype.startTime = function (t) {
        t > 0
          ? (this.timer.reset(),
            this.timer.start(),
            (this.nCount = t),
            (this.repetCount = 0),
            (this.lbTime.text =
              "" + Math.ceil((this.nCount - egret.getTimer()) / 1e3)),
            (this.lbState.text = ""),
            (this.lbState_old = ""),
            (this.lbTime.textColor = this.blue_color))
          : ((this.lbTime.text = ""),
            (this.lbState.text = LangUtils.LANG_MAP.dzg_main_41),
            (this.lbState_old = "dzg_main_41"),
            (this.lbTime.textColor = this.blue_color));
      }),
      (e.prototype.onTimer = function () {
        var t = Math.ceil((this.nCount - egret.getTimer()) / 1e3);
        t > 0
          ? ((this.lbTime.text = "" + t),
            10 >= t && t > 0
              ? (this.lbTime.textColor = this.red_color)
              : (this.lbTime.textColor = this.blue_color))
          : ((this.lbTime.text = ""),
            (this.lbState.text = LangUtils.LANG_MAP.dzg_main_41),
            (this.lbState_old = "dzg_main_41"),
            (this.lbTime.textColor = this.blue_color),
            this.timer.stop(),
            this.dispatchEvent(new egret.Event("TimeComplete")));
      }),
      (e.prototype.stopTime = function () {
        this.timer.stop(),
          (this.lbTime.text = ""),
          (this.lbState.text = LangUtils.LANG_MAP.dzg_main_41),
          (this.lbState_old = "dzg_main_41"),
          (this.lbTime.textColor = this.blue_color);
      }),
      (e.prototype.showState = function (t) {
        var e = LangUtils.get(t);
        (this.lbState_old = t),
          (this.lbState.text = e),
          (this.lbTime.textColor = this.blue_color);
      }),
      e
    );
  })(eui.Component);
  (t.GameDuoTaiTimeUI = e),
    __reflect(e.prototype, "game.GameDuoTaiTimeUI", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(game || (game = {}));
var game;
!(function (t) {
  var e = (function (t) {
    function e() {
      var e = t.call(this) || this;
      return (
        (e.objRata = {
          BANKER: "1:1",
          PLAYER: "1:1",
          TILE: "1:8",
          PP: "1:11",
          BP: "1:11",
          LS: "1:12/1:20",
          BN: "1:4",
          PN: "1:4",
          AP: "1:5",
          PFP: "1:25",
          PDB: "1:1-1:30",
          BDB: "1:1-1:30",
          BIG: "1:0.5",
          SMALL: "1:1.5",
        }),
        (e.objRata5 = {
          BANKER: "1:0.95",
        }),
        (e.objRata2 = {
          PLAYER: "1:1",
          BANKER: "1:1",
          TILE: "1:8",
          BO: "1:0.75",
          BR: "1:0.9",
          BE: "1:1.05",
          BB: "1:0.9",
          PO: "1:0.75",
          PR: "1:0.9",
          PE: "1:1.05",
          PB: "1:0.9",
        }),
        (e.objRata3 = {
          RoSi30: "1:35",
          RoDu12: "1:17",
          RoT456: "1:11",
          RoT_12: "1:11",
          Ro1245: "1:8",
          Ro_123: "1:8",
          RoCol4: "1:5",
          RoRow1: "1:2",
          Ro12s1: "1:2",
          RoRed: "1:1",
          RoOdd: "1:1",
          RoBig: "1:1",
        }),
        (e.objRata7 = {
          PLAYER1: "1:0.95",
          PLAYER2: "1:0.95",
          PLAYER3: "1:0.95",
          FAN_PLAYER1: "1:0.95",
          FAN_PLAYER2: "1:0.95",
          FAN_PLAYER3: "1:0.95",
        }),
        (e.objRata8 = {
          PLAYER: "1:1",
          BANKER: "1:1",
          BP: "1:11",
          PP: "1:11",
          TILE: "1:8",
          LS: "1:12/1:20",
        }),
        (e.objRata9 = {
          dzg_sicbo_limit_1: "1:1",
          dzg_sicbo_limit_2: "1:1",
          dzg_sicbo_limit_3: "1:150",
          dzg_sicbo_limit_4: "1:24",
          dzg_sicbo_limit_5: "1:1 1:2 1:3",
          dzg_sicbo_limit_6: "1:8",
          dzg_sicbo_limit_7: "1:5",
          dzg_sicbo_limit_8: "1:50",
          dzg_sicbo_limit_9: "1:18",
          dzg_sicbo_limit_10: "1:14",
          dzg_sicbo_limit_11: "1:12",
          dzg_sicbo_limit_12: "1:8",
          dzg_sicbo_limit_13: "1:6",
          dzg_sicbo_limit_14: "1:1",
          dzg_sicbo_limit_15: "1:1",
        }),
        (e.skinName = "resource/skins/duotai/GameLimitItem.exml"),
        (e.percentWidth = 100),
        e
      );
    }
    return (
      __extends(e, t),
      (e.prototype.partAdded = function (e, i) {
        t.prototype.partAdded.call(this, e, i);
      }),
      (e.prototype.childrenCreated = function () {
        t.prototype.childrenCreated.call(this);
      }),
      (e.prototype.setInfo = function (t, e, i, a, n) {
        void 0 === a && (a = !1),
          void 0 === n && (n = !1),
          i == DataManager.GAME_TYPE_BACCARAT
            ? (n
                ? ((this.lbName.text =
                    LangUtils.LANG_MAP["dzg_bjl_limit_" + e]),
                  "LS" == e && (this.lbName.text = LangUtils.LANG_MAP[e]),
                  a || "BANKER" != e
                    ? (this.lbRate.text = this.objRata8[e])
                    : (this.lbRate.text = this.objRata5[e]))
                : ((this.lbName.text =
                    LangUtils.LANG_MAP["dzg_bjl_limit_" + e]),
                  "LS" == e && (this.lbName.text = LangUtils.LANG_MAP[e]),
                  a || "BANKER" != e
                    ? (this.lbRate.text = this.objRata[e])
                    : (this.lbRate.text = this.objRata5[e])),
              (this.lbMinTolbMax.text =
                GameUtils.getNumberFormat(Number(t[0])) +
                "-" +
                GameUtils.getNumberFormat(Number(t[1]))))
            : i == DataManager.GAME_TYPE_DRAGONTIGER
              ? ((this.lbName.text = LangUtils.LANG_MAP["dzg_lh_limit_" + e]),
                (this.lbRate.text = this.objRata2[e]),
                (this.lbMinTolbMax.text =
                  GameUtils.getNumberFormat(Number(t[0])) +
                  "-" +
                  GameUtils.getNumberFormat(Number(t[1]))))
              : i == DataManager.GAME_TYPE_LUNPAGAME
                ? ((this.lbName.text =
                    LangUtils.LANG_MAP["dzg_lunpan_limit_" + e]),
                  (this.lbRate.text = this.objRata3[e]),
                  (this.lbMinTolbMax.text =
                    GameUtils.getNumberFormat(Number(t[0])) +
                    "-" +
                    GameUtils.getNumberFormat(Number(t[1]))))
                : i == DataManager.GAME_TYPE_NIUNIU
                  ? ((this.lbName.text =
                      LangUtils.LANG_MAP["dzg_niuniu_limit_" + e]),
                    (this.lbRate.text = this.objRata7[e]),
                    (this.lbMinTolbMax.text =
                      GameUtils.getNumberFormat(Number(t[0])) +
                      "-" +
                      GameUtils.getNumberFormat(Number(t[1]))))
                  : i == DataManager.GAME_TYPE_SICBO &&
                    ((this.lbName.text =
                      LangUtils.LANG_MAP[this.filterSicbozd(e)]),
                    (this.lbRate.text = this.objRata9[this.filterSicbozd(e)]),
                    (this.lbMinTolbMax.text =
                      GameUtils.getNumberFormat(Number(t[0])) +
                      "-" +
                      GameUtils.getNumberFormat(Number(t[1]))));
      }),
      (e.prototype.filterSicbozd = function (t) {
        var e;
        return (
          "DiBig" === t
            ? (e = "dzg_sicbo_limit_1")
            : "DiSm" === t
              ? (e = "dzg_sicbo_limit_2")
              : "DiTri1" === t ||
                  "DiTri2" === t ||
                  "DiTri3" === t ||
                  "DiTri4" === t ||
                  "DiTri5" === t ||
                  "DiTri6" === t
                ? (e = "dzg_sicbo_limit_3")
                : "DiTri0" === t
                  ? (e = "dzg_sicbo_limit_4")
                  : "DiOne1" === t ||
                      "DiOne2" === t ||
                      "DiOne3" === t ||
                      "DiOne4" === t ||
                      "DiOne5" === t ||
                      "DiOne6" === t
                    ? (e = "dzg_sicbo_limit_5")
                    : "DiDou1" === t ||
                        "DiDou2" === t ||
                        "DiDou3" === t ||
                        "DiDou4" === t ||
                        "DiDou5" === t ||
                        "DiDou6" === t
                      ? (e = "dzg_sicbo_limit_6")
                      : "DiTw12" === t ||
                          "DiTw13" === t ||
                          "DiTw14" === t ||
                          "DiTw15" === t ||
                          "DiTw16" === t ||
                          "DiTw23" === t ||
                          "DiTw24" === t ||
                          "DiTw25" === t ||
                          "DiTw26" === t ||
                          "DiTw34" === t ||
                          "DiTw35" === t ||
                          "DiTw36" === t ||
                          "DiTw45" === t ||
                          "DiTw46" === t ||
                          "DiTw56" === t
                        ? (e = "dzg_sicbo_limit_7")
                        : "DiOdd" === t
                          ? (e = "dzg_sicbo_limit_14")
                          : "DiEven" === t
                            ? (e = "dzg_sicbo_limit_15")
                            : "DiTo04" === t || "DiTo17" === t
                              ? (e = "dzg_sicbo_limit_8")
                              : "DiTo05" === t || "DiTo16" === t
                                ? (e = "dzg_sicbo_limit_9")
                                : "DiTo06" === t || "DiTo15" === t
                                  ? (e = "dzg_sicbo_limit_10")
                                  : "DiTo07" === t || "DiTo14" === t
                                    ? (e = "dzg_sicbo_limit_11")
                                    : "DiTo08" === t || "DiTo13" === t
                                      ? (e = "dzg_sicbo_limit_12")
                                      : ("DiTo09" === t || "DiTo12" === t) &&
                                        (e = "dzg_sicbo_limit_13"),
          e
        );
      }),
      e
    );
  })(eui.Component);
  (t.GameLimitItem = e),
    __reflect(e.prototype, "game.GameLimitItem", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(game || (game = {}));
var game;
!(function (t) {
  var e = (function (e) {
    function i() {
      var t = e.call(this) || this;
      return (
        (t.arrKey = [
          "BANKER",
          "PLAYER",
          "TILE",
          "BP",
          "PP",
          "LS",
          "BN",
          "PN",
          "AP",
          "PFP",
          "BDB",
          "PDB",
          "BIG",
          "SMALL",
        ]),
        (t.arrKey1 = ["BANKER", "PLAYER", "TILE", "BP", "PP", "LS"]),
        (t.arrKey2 = ["PLAYER", "BANKER", "TILE"]),
        (t.arrKey5 = [
          "FAN_PLAYER1",
          "PLAYER1",
          "FAN_PLAYER2",
          "PLAYER2",
          "FAN_PLAYER3",
          "PLAYER3",
        ]),
        (t.arrKey3 = [
          "RoSi30",
          "RoDu12",
          "RoT456",
          "RoT_12",
          "Ro1245",
          "Ro_123",
          "RoCol4",
          "RoRow1",
          "Ro12s1",
          "RoRed",
          "RoOdd",
          "RoBig",
        ]),
        (t.arrKey9 = [
          "DiTri0",
          "DiTri1",
          "DiTri2",
          "DiTri3",
          "DiTri4",
          "DiTri5",
          "DiTri6",
          "DiDou1",
          "DiDou2",
          "DiDou3",
          "DiDou4",
          "DiDou5",
          "DiDou6",
          "DiTo04",
          "DiTo05",
          "DiTo06",
          "DiTo07",
          "DiTo08",
          "DiTo09",
          "DiTo10",
          "DiTo11",
          "DiTo12",
          "DiTo13",
          "DiTo14",
          "DiTo15",
          "DiTo16",
          "DiTo17",
          "DiTw12",
          "DiTw13",
          "DiTw14",
          "DiTw15",
          "DiTw16",
          "DiTw23",
          "DiTw24",
          "DiTw25",
          "DiTw26",
          "DiTw34",
          "DiTw35",
          "DiTw36",
          "DiTw45",
          "DiTw46",
          "DiTw56",
          "DiOne1",
          "DiOne2",
          "DiOne3",
          "DiOne4",
          "DiOne5",
          "DiOne6",
          "DiEven",
          "DiOdd",
          "DiBig",
          "DiSm",
        ]),
        (t.arrKey10 = ["DiTri0", "DiEven", "DiOdd", "DiBig", "DiSm"]),
        (t.skinName = "resource/skins/duotai/GameLimitUI.exml"),
        (t.percentWidth = t.percentHeight = 100),
        t
      );
    }
    return (
      __extends(i, e),
      (i.prototype.partAdded = function (t, i) {
        e.prototype.partAdded.call(this, t, i);
      }),
      (i.prototype.childrenCreated = function () {
        e.prototype.childrenCreated.call(this),
          this.btnClose.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onCloseUI,
            this,
          ),
          this.xiane_model_bg.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onCloseUI,
            this,
          );
      }),
      (i.prototype.changeLang = function (t) {
        void 0 === t && (t = null),
          (this.langLab1.text = LangUtils.LANG_MAP.dzg_game_bjl_21),
          (this.langLab2.text = LangUtils.LANG_MAP.dzg_game_bjl_22),
          (this.langLab5.text = LangUtils.LANG_MAP.dzg_game_duotai_1),
          (this.langLab6.text = LangUtils.LANG_MAP.dzg_game_tzxzword);
      }),
      (i.prototype.showUI = function (e, i, a, n) {
        var s = this;
        if (
          (void 0 === i && (i = !1),
          void 0 === a && (a = !1),
          void 0 === n && (n = 0),
          this.changeLang(),
          (this.visible = !0),
          this.clearItems(),
          (this.scrollerGroup.visible = !1),
          (this.gList.visible = !1),
          (this.y = a ? 600 : 0),
          e == DataManager.GAME_TYPE_BACCARAT)
        )
          if (a) {
            this.gList.visible = !0;
            var r = BetLimitAction.getIns().getTableAllLimits(
                a ? n : DataManager.curTableState.tableid,
              ),
              o = null,
              h = [],
              l = function (t) {
                g.arrKey1.forEach(function (e, i) {
                  e == t && (h[i] = t);
                });
              },
              g = this;
            for (var u in r) l(u);
            if (
              (h.forEach(function (n) {
                if (s.arrKey1.indexOf(n) > -1)
                  if ("SS" != n) {
                    var h = new t.GameLimitItem();
                    s.gList.addChild(h), h.setInfo(r[n], n, e, i, a);
                  } else o = r[n];
              }),
              o && i)
            ) {
              var c = new t.GameLimitItem();
              this.gList.addChild(c), c.setInfo(o, "SS", e, i, a);
            }
          } else {
            (this.scrollerGroup.visible = !0),
              (this.scrollerMain.viewport.scrollV = 0);
            var d = BetLimitAction.getIns().getTableAllLimits(
                DataManager.curTableState.tableid,
              ),
              p = [],
              _ = function (t) {
                b.arrKey.forEach(function (e, i) {
                  e == t && (p[i] = t);
                });
              },
              b = this;
            for (var u in d) _(u);
            p.forEach(function (n) {
              if (s.arrKey.indexOf(n) > -1) {
                if (!i && "SS" == n) return;
                var r = new t.GameLimitItem();
                s.ItemGroup.addChild(r), r.setInfo(d[n], n, e, i, a);
              }
            });
          }
        else if (e == DataManager.GAME_TYPE_DRAGONTIGER)
          if (1 == window.lhmulti) {
            (this.arrKey2 = [
              "BANKER",
              "PLAYER",
              "TILE",
              "BB",
              "BE",
              "BO",
              "BR",
              "PB",
              "PE",
              "PO",
              "PR",
            ]),
              (this.scrollerGroup.visible = !0),
              (this.scrollerMain.viewport.scrollV = 0);
            var m = BetLimitAction.getIns().getTableAllLimits(
              a ? n : DataManager.curTableState.tableid,
            );
            for (var T in m)
              if (this.arrKey2.indexOf(T) > -1) {
                var c = new t.GameLimitItem();
                this.ItemGroup.addChild(c), c.setInfo(m[T], T, e);
              }
          } else {
            this.gList.visible = !0;
            var m = BetLimitAction.getIns().getTableAllLimits(
              a ? n : DataManager.curTableState.tableid,
            );
            for (var T in m)
              if (this.arrKey2.indexOf(T) > -1) {
                var c = new t.GameLimitItem();
                this.gList.addChild(c), c.setInfo(m[T], T, e);
              }
          }
        else if (e == DataManager.GAME_TYPE_LUNPAGAME) {
          (this.scrollerGroup.visible = !0),
            (this.scrollerMain.viewport.scrollV = 0);
          for (
            var m = BetLimitAction.getIns().getTableAllLimits(
                DataManager.curTableState.tableid,
              ),
              v = 0,
              E = this.arrKey3.length;
            E > v;
            ++v
          )
            if (m[this.arrKey3[v]]) {
              var c = new t.GameLimitItem();
              this.ItemGroup.addChild(c),
                c.setInfo(m[this.arrKey3[v]], this.arrKey3[v], e);
            }
        } else if (e == DataManager.GAME_TYPE_NIUNIU) {
          this.gList.visible = !0;
          var m = BetLimitAction.getIns().getTableAllLimits(
            DataManager.curTableState.tableid,
          );
          for (var T in m)
            if (this.arrKey5.indexOf(T) > -1) {
              var c = new t.GameLimitItem();
              this.gList.addChild(c), c.setInfo(m[T], T, e);
            }
        } else if (e == DataManager.GAME_TYPE_SICBO) {
          (this.scrollerGroup.visible = !0),
            (this.scrollerMain.viewport.scrollV = 0);
          var f = BetLimitAction.getIns().getTableAllLimits(
              a ? n : DataManager.curTableState.tableid,
            ),
            L = [],
            y = void 0;
          for (var T in f)
            "DiBig" === T
              ? (y = "DiBig")
              : "DiSm" === T
                ? (y = "DiSm")
                : "DiTri1" === T ||
                    "DiTri2" === T ||
                    "DiTri3" === T ||
                    "DiTri4" === T ||
                    "DiTri5" === T ||
                    "DiTri6" === T
                  ? (y = "DiTri1")
                  : "DiTri0" === T
                    ? (y = "DiTri0")
                    : "DiOne1" === T ||
                        "DiOne2" === T ||
                        "DiOne3" === T ||
                        "DiOne4" === T ||
                        "DiOne5" === T ||
                        "DiOne6" === T
                      ? (y = "DiOne1")
                      : "DiDou1" === T ||
                          "DiDou2" === T ||
                          "DiDou3" === T ||
                          "DiDou4" === T ||
                          "DiDou5" === T ||
                          "DiDou6" === T
                        ? (y = "DiDou1")
                        : "DiTw12" === T ||
                            "DiTw13" === T ||
                            "DiTw14" === T ||
                            "DiTw15" === T ||
                            "DiTw16" === T ||
                            "DiTw23" === T ||
                            "DiTw24" === T ||
                            "DiTw25" === T ||
                            "DiTw26" === T ||
                            "DiTw34" === T ||
                            "DiTw35" === T ||
                            "DiTw36" === T ||
                            "DiTw45" === T ||
                            "DiTw46" === T ||
                            "DiTw56" === T
                          ? (y = "DiTw12")
                          : "DiOdd" === T
                            ? (y = "DiOdd")
                            : "DiEven" === T
                              ? (y = "DiEven")
                              : "DiTo04" === T || "DiTo17" === T
                                ? (y = "DiTo04")
                                : "DiTo05" === T || "DiTo16" === T
                                  ? (y = "DiTo05")
                                  : "DiTo06" === T || "DiTo15" === T
                                    ? (y = "DiTo06")
                                    : "DiTo07" === T || "DiTo14" === T
                                      ? (y = "DiTo07")
                                      : "DiTo08" === T || "DiTo13" === T
                                        ? (y = "DiTo08")
                                        : ("DiTo09" === T || "DiTo12" === T) &&
                                          (y = "DiTo09"),
              -1 === L.indexOf(y) && L.push(y);
          L.forEach(function (i) {
            if (a) {
              if (s.arrKey10.indexOf(i) > -1) {
                var n = new t.GameLimitItem();
                s.ItemGroup.addChild(n), n.setInfo(f[i], i, e, !1, a);
              }
            } else {
              var n = new t.GameLimitItem();
              s.ItemGroup.addChild(n), n.setInfo(f[i], i, e);
            }
          });
        }
      }),
      (i.prototype.clearItems = function () {
        for (; this.gList.numChildren > 0; ) {
          var t = this.gList.removeChildAt(0);
          t = null;
        }
        for (; this.ItemGroup && this.ItemGroup.numChildren > 0; ) {
          var t = this.ItemGroup.removeChildAt(0);
          t = null;
        }
      }),
      (i.prototype.onCloseUI = function () {
        this.visible = !1;
      }),
      i
    );
  })(eui.Component);
  (t.GameLimitUI = e),
    __reflect(e.prototype, "game.GameLimitUI", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(game || (game = {}));
var game;
!(function (t) {
  var e = (function (e) {
    function i() {
      var t = e.call(this) || this;
      return (
        (t.arrList = ["B", "P", "T"]),
        (t.arrTmpCoin = []),
        (t.arrOkCoin = []),
        (t.arrWin = []),
        (t.speed = 0.05),
        (t.temp_GameBetItem_hash = {}),
        (t.skinName = "resource/skins/duotai/GameTableLonghuUI.exml"),
        t
      );
    }
    return (
      __extends(i, e),
      (i.prototype.partAdded = function (t, i) {
        e.prototype.partAdded.call(this, t, i);
      }),
      (i.prototype.childrenCreated = function () {
        e.prototype.childrenCreated.call(this),
          (this.timer = new egret.Timer(10)),
          this.timer.addEventListener(
            egret.TimerEvent.TIMER,
            this.onWinTimer,
            this,
          );
        for (var t = 0; t < this.arrList.length; t++)
          this["lhbtnHit" + this.arrList[t]].addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onHitTap,
            this,
          );
        this.myBettest1.addEventListener(
          egret.TouchEvent.RESIZE,
          this.onRetRize,
          this,
        );
      }),
      (i.prototype.onHitTap = function (t) {
        this.dispatchEvent(
          new egret.Event("OnHitBetTable", !0, !0, {
            name: t.target.name,
            point: new egret.Point(t.localX, t.localY),
          }),
        );
      }),
      (i.prototype.onRetRize = function (t) {
        this.visible && this.checkShowCoinInfo();
      }),
      (i.prototype.changeLang = function (t) {
        void 0 === t && (t = null),
          (this.dzg_lh_lab_1.text = LangUtils.LANG_MAP.dzg_game_duotai_4),
          (this.dzg_lh_lab_2.text = LangUtils.LANG_MAP.Game_INFO_DRAGON),
          (this.dzg_lh_lab_3.text = LangUtils.LANG_MAP.Game_INFO_TIGER),
          DataManager.LANG_TYPE == DataManager.LANG_EN
            ? ((this.dzg_lh_lab_1.size = 36),
              (this.dzg_lh_lab_3.size = 20),
              (this.dzg_lh_lab_2.size = 20))
            : DataManager.LANG_TYPE == DataManager.LANG_VL
              ? ((this.dzg_lh_lab_1.size = 20),
                (this.dzg_lh_lab_2.size = 20),
                (this.dzg_lh_lab_3.size = 20))
              : DataManager.LANG_TYPE == DataManager.LANG_HN ||
                  DataManager.LANG_TYPE == DataManager.LANG_JPN ||
                  DataManager.LANG_TYPE == DataManager.LANG_KR
                ? ((this.dzg_lh_lab_1.size = 36),
                  (this.dzg_lh_lab_3.size = 36),
                  (this.dzg_lh_lab_2.size = 36))
                : ((this.dzg_lh_lab_1.size = 36),
                  (this.dzg_lh_lab_3.size = 36),
                  (this.dzg_lh_lab_2.size = 36));
      }),
      (i.prototype.initUI = function () {
        this.changeLang(), this.timer.stop();
        for (var t = 0; t < this.arrList.length; t++)
          (this["img" + this.arrList[t] + "_up"].visible = !1),
            (this["myBet" + this.arrList[t]].visible = !1);
        this.clearCoins(),
          this.clearTmpCoins(),
          (this.arrOkCoin = []),
          EventManager.getIns().dispatchEvent(
            new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, {
              t_id: this.fbEnetrTable.tableid,
              isShow: !1,
            }),
          );
      }),
      (i.prototype.onWinTimer = function () {
        this.startAnim();
      }),
      (i.prototype.startAnim = function () {
        for (var t = 0; t < this.arrWin.length; t++)
          if ("TS" != this.arrWin[t]) {
            var e = this["img" + this.arrWin[t] + "_up"];
            (e.visible = !0),
              e.alpha >= 1 && (this.speed = -0.05),
              e.alpha < 0.3 && (this.speed = 0.05),
              (e.alpha += this.speed);
          }
      }),
      (i.prototype.showWin = function (t) {
        (this.arrWin = t), this.timer.start();
      }),
      (i.prototype.addBetCoin = function (e, i, a) {
        void 0 === a && (a = !1);
        var n = new t.GameBetItem();
        this.gBet.addChild(n),
          n.setItem({
            value: e,
          }),
          (n.scaleX = n.scaleY = 0.5),
          (n.alpha = 0.6);
        var s = this.gContent.getChildByName(i.name);
        (n.wucha_x = -30 + 10 * Math.random() - 5),
          (n.wucha_y = -30 + 10 * Math.random() - 5),
          (n.betName = i.name),
          (n.tableSeq = this.curTableState.tableInfo.tableSeq),
          (n.x = s.x + s.width / 2 + n.wucha_x),
          (n.y = s.y + s.height / 2 + n.wucha_y),
          this.arrTmpCoin.push(n),
          DataManager.addBetCoinDisHash(n),
          a
            ? EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, {
                  t_id: this.fbEnetrTable.tableid,
                  isShow: !0,
                }),
              )
            : EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, {
                  t_id: this.fbEnetrTable.tableid,
                  isShow: !1,
                }),
              );
      }),
      (i.prototype.updataCoinInfo = function (t, e, i) {
        void 0 === i && (i = !1);
        for (var a = !1, n = 0; n < this.arrList.length; n++) {
          var s = this.arrList[n],
            r = this.checkMCName(s),
            o = t[r] || 0,
            h = e[r] || 0,
            l = this["myBet" + s].height;
          if (0 == o && 0 == h) this["myBet" + s].visible = !1;
          else {
            this["myBet" + s].visible = !0;
            var g = this["myBet" + s].getChildAt(0),
              u = this["myBet" + s].getChildAt(1),
              c = this["myBet" + s].getChildAt(2),
              d = this["myBet" + s].getChildAt(3);
            (g.alpha = 0.8),
              (c.text = ""),
              (d.text = ""),
              (c.textColor = 126649),
              (d.textColor = 11053224);
            var p = !1,
              _ = !1;
            if (
              (o > 0 &&
                ((c.text = "" + GameUtils.getNumberFormat(o)), (p = !0)),
              h > 0 &&
                ((d.text = "+" + GameUtils.getNumberFormat(Math.floor(h))),
                (_ = !0),
                (a = !0)),
              o)
            )
              if (_) {
                (g.height = 70),
                  (c.y = (l - c.height) / 2 - 16),
                  (d.y = (l - d.height) / 2 + 10);
                var b = Math.max(c.width, d.width);
                g.width = Math.max(b + 10, 100);
              } else
                (g.height = 50),
                  (c.y = (l - c.height) / 2 - 4),
                  (g.width = Math.max(c.width + 10, 100));
            else
              _ &&
                ((g.height = 50),
                (d.y = (l - d.height) / 2 - 4),
                (g.width = Math.max(d.width + 10, 100)));
            u.height = g.height;
          }
        }
        if (
          (a
            ? EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, {
                  t_id: this.fbEnetrTable.tableid,
                  isShow: !0,
                }),
              )
            : EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, {
                  t_id: this.fbEnetrTable.tableid,
                  isShow: !1,
                }),
              ),
          i)
        ) {
          for (var n = 0; n < this.arrTmpCoin.length; n++) {
            var m = this.arrTmpCoin[n];
            m.selectItem(!0), this.arrOkCoin.push(m);
          }
          (this.arrTmpCoin = []),
            this.curTableState &&
              DataManager.okBetCoinDisByDis(
                this.curTableState.tableInfo.tableSeq,
              ),
            EventManager.getIns().dispatchEvent(
              new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, {
                t_id: this.fbEnetrTable.tableid,
                isShow: !1,
              }),
            );
        }
        this.checkShowCoinInfo();
      }),
      (i.prototype.checkShowCoinInfo = function () {
        var t = DataManager.getBetCoinDisHash(
          this.curTableState.tableInfo.tableSeq,
        );
        if (t.length > 0)
          for (var e = 0, i = t.length; i > e; ++e) {
            var a = t[e];
            if (a && "SS" != a.betName) {
              this.gBet.addChild(a);
              var n = this.gContent.getChildByName(a.betName);
              if (n) {
                (a.x = n.x + n.width / 2 + a.wucha_x),
                  (a.y = n.y + n.height / 2 + a.wucha_y);
                n.x, n.y;
              }
            }
          }
      }),
      (i.prototype.checkMCName = function (t) {
        var e = t;
        return (
          "P" == e && (e = "PLAYER"),
          "B" == e && (e = "BANKER"),
          "T" == e && (e = "TILE"),
          "TS" == e && (e = "SS"),
          e
        );
      }),
      (i.prototype.showBetInfo = function (t) {
        if (t) {
          var e = t.tablePool,
            i = String(e.BANKER).split("/");
          (this.lbTotalB.text = i[0]), (this.lbNumB.text = i[1]);
          var a = String(e.PLAYER).split("/");
          (this.lbTotalP.text = a[0]), (this.lbNumP.text = a[1]);
          var n = String(e.TILE).split("/");
          (this.lbTotalT.text = n[0]), (this.lbNumT.text = n[1]);
        }
      }),
      (i.prototype.clearTmpCoins = function () {
        for (var t = 0; t < this.arrTmpCoin.length; t++)
          for (var e = 0; e < this.gBet.numChildren; e++) {
            var i = this.gBet.getChildAt(e);
            if (i == this.arrTmpCoin[t] && !i.isSelect) {
              this.gBet.removeChild(i),
                DataManager.deletBetCoinDisByDis(i),
                (i = null);
              break;
            }
          }
        (this.arrTmpCoin = []),
          this.curTableState &&
            DataManager.deletBetCoinDisByTabshid(
              this.curTableState.tableInfo.tableSeq,
            ),
          (this.temp_GameBetItem_hash = {});
      }),
      (i.prototype.clearOKCoins = function () {
        for (var t = 0; t < this.arrOkCoin.length; t++)
          for (var e = 0; e < this.gBet.numChildren; e++) {
            var i = this.gBet.getChildAt(e);
            if (i == this.arrTmpCoin[t]) {
              this.gBet.removeChild(i);
              break;
            }
          }
        this.arrOkCoin = [];
      }),
      (i.prototype.clearCoins = function () {
        for (; this.gBet.numChildren > 0; ) {
          this.gBet.removeChildAt(0);
        }
        this.temp_GameBetItem_hash = {};
      }),
      (i.prototype.dispose = function () {
        this.clearTmpCoins(),
          this.timer &&
            this.timer.removeEventListener(
              egret.TimerEvent.TIMER,
              this.onWinTimer,
              this,
            );
        for (var t = 0; t < this.arrList.length; t++)
          this["lhbtnHit" + this.arrList[t]].removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onHitTap,
            this,
          );
        (this.temp_GameBetItem_hash = {}),
          this.myBettest1.removeEventListener(
            egret.TouchEvent.RESIZE,
            this.onRetRize,
            this,
          );
      }),
      i
    );
  })(eui.Component);
  (t.GameTableLonghuUI = e),
    __reflect(e.prototype, "game.GameTableLonghuUI", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(game || (game = {}));
var game;
!(function (t) {
  var e = (function (e) {
    function i() {
      var t = e.call(this) || this;
      return (
        (t.arrList = ["S", "B", "T", "O", "E"]),
        (t.arrTmpCoin = []),
        (t.arrOkCoin = []),
        (t.arrWin = []),
        (t.speed = 0.05),
        (t.temp_GameBetItem_hash = {}),
        (t.skinName = "resource/skins/duotai/GameTableSciboUI.exml"),
        t
      );
    }
    return (
      __extends(i, e),
      (i.prototype.partAdded = function (t, i) {
        e.prototype.partAdded.call(this, t, i);
      }),
      (i.prototype.childrenCreated = function () {
        e.prototype.childrenCreated.call(this),
          (this.timer = new egret.Timer(10)),
          this.timer.addEventListener(
            egret.TimerEvent.TIMER,
            this.onWinTimer,
            this,
          );
        for (var t = 0; t < this.arrList.length; t++)
          this["scibobtnHit" + this.arrList[t]].addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onHitTap,
            this,
          );
        this.myBettest1.addEventListener(
          egret.TouchEvent.RESIZE,
          this.onRetRize,
          this,
        );
      }),
      (i.prototype.onHitTap = function (t) {
        this.dispatchEvent(
          new egret.Event("OnHitBetTable", !0, !0, {
            name: t.target.name,
            point: new egret.Point(t.localX, t.localY),
          }),
        );
      }),
      (i.prototype.onRetRize = function (t) {
        this.visible && this.checkShowCoinInfo();
      }),
      (i.prototype.changeLang = function (t) {
        void 0 === t && (t = null),
          (this.dzg_scibo_lab_1.text = LangUtils.LANG_MAP.duotai_scibo_1),
          (this.dzg_scibo_lab_2.text = LangUtils.LANG_MAP.duotai_scibo_2),
          (this.dzg_scibo_lab_3.text = LangUtils.LANG_MAP.duotai_scibo_3),
          (this.dzg_scibo_lab_4.text = LangUtils.LANG_MAP.duotai_scibo_4),
          (this.dzg_scibo_lab_5.text = LangUtils.LANG_MAP.duotai_scibo_5),
          DataManager.LANG_TYPE == DataManager.LANG_EN
            ? ((this.dzg_scibo_lab_1.size = 26),
              (this.dzg_scibo_lab_3.size = 20),
              (this.dzg_scibo_lab_2.size = 26),
              (this.dzg_scibo_lab_4.size = 26),
              (this.dzg_scibo_lab_5.size = 26))
            : DataManager.LANG_TYPE == DataManager.LANG_VL
              ? ((this.dzg_scibo_lab_1.size = 26),
                (this.dzg_scibo_lab_3.size = 20),
                (this.dzg_scibo_lab_2.size = 26),
                (this.dzg_scibo_lab_4.size = 26),
                (this.dzg_scibo_lab_5.size = 26))
              : DataManager.LANG_TYPE == DataManager.LANG_HN ||
                  DataManager.LANG_TYPE == DataManager.LANG_JPN ||
                  DataManager.LANG_TYPE == DataManager.LANG_KR
                ? ((this.dzg_scibo_lab_1.size = 26),
                  (this.dzg_scibo_lab_3.size = 20),
                  (this.dzg_scibo_lab_2.size = 26),
                  (this.dzg_scibo_lab_4.size = 26),
                  (this.dzg_scibo_lab_5.size = 26))
                : ((this.dzg_scibo_lab_1.size = 24),
                  (this.dzg_scibo_lab_3.size = 24),
                  (this.dzg_scibo_lab_2.size = 24),
                  (this.dzg_scibo_lab_4.size = 36),
                  (this.dzg_scibo_lab_5.size = 36));
      }),
      (i.prototype.initUI = function () {
        this.changeLang(), this.timer.stop();
        for (var t = 0; t < this.arrList.length; t++)
          (this["img" + this.arrList[t] + "_up"].visible = !1),
            (this["myBet" + this.arrList[t]].visible = !1);
        this.clearCoins(),
          this.clearTmpCoins(),
          (this.arrOkCoin = []),
          EventManager.getIns().dispatchEvent(
            new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, {
              t_id: this.fbEnetrTable.tableid,
              isShow: !1,
            }),
          );
      }),
      (i.prototype.onWinTimer = function () {
        this.startAnim();
      }),
      (i.prototype.startAnim = function () {
        for (var t = 0; t < this.arrWin.length; t++)
          if ("TS" != this.arrWin[t]) {
            var e = this["img" + this.arrWin[t] + "_up"];
            (e.visible = !0),
              e.alpha >= 1 && (this.speed = -0.05),
              e.alpha < 0.3 && (this.speed = 0.05),
              (e.alpha += this.speed);
          }
      }),
      (i.prototype.showWin = function (t) {
        (this.arrWin = t), this.timer.start();
      }),
      (i.prototype.addBetCoin = function (e, i, a) {
        void 0 === a && (a = !1);
        var n = new t.GameBetItem();
        this.gBet.addChild(n),
          n.setItem({
            value: e,
          }),
          (n.scaleX = n.scaleY = 0.5),
          (n.alpha = 0.6);
        var s = this.gContent.getChildByName(i.name);
        (n.wucha_x = -30 + 10 * Math.random() - 5),
          (n.wucha_y = -30 + 10 * Math.random() - 5),
          (n.betName = i.name),
          (n.tableSeq = this.curTableState.tableInfo.tableSeq),
          (n.x = s.x + s.width / 2 + n.wucha_x),
          (n.y = s.y + s.height / 2 + n.wucha_y),
          this.arrTmpCoin.push(n),
          DataManager.addBetCoinDisHash(n),
          a
            ? EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, {
                  t_id: this.fbEnetrTable.tableid,
                  isShow: !0,
                }),
              )
            : EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, {
                  t_id: this.fbEnetrTable.tableid,
                  isShow: !1,
                }),
              );
      }),
      (i.prototype.updataCoinInfo = function (t, e, i) {
        void 0 === i && (i = !1);
        for (var a = !1, n = 0; n < this.arrList.length; n++) {
          var s = this.arrList[n],
            r = this.checkMCName(s),
            o = t[r] || 0,
            h = e[r] || 0,
            l = this["myBet" + s].height;
          if (0 == o && 0 == h) this["myBet" + s].visible = !1;
          else {
            this["myBet" + s].visible = !0;
            var g = this["myBet" + s].getChildAt(0),
              u = this["myBet" + s].getChildAt(1),
              c = this["myBet" + s].getChildAt(2),
              d = this["myBet" + s].getChildAt(3);
            (g.alpha = 0.8),
              (c.text = ""),
              (d.text = ""),
              (c.textColor = 126649),
              (d.textColor = 11053224);
            var p = !1,
              _ = !1;
            if (
              (o > 0 &&
                ((c.text = "" + GameUtils.getNumberFormat(o)), (p = !0)),
              h > 0 &&
                ((d.text = "+" + GameUtils.getNumberFormat(Math.floor(h))),
                (_ = !0),
                (a = !0)),
              o)
            )
              if (_) {
                (g.height = 70),
                  (c.y = (l - c.height) / 2 - 16),
                  (d.y = (l - d.height) / 2 + 10);
                var b = Math.max(c.width, d.width);
                g.width = Math.max(b + 10, 100);
              } else
                (g.height = 50),
                  (c.y = (l - c.height) / 2 - 4),
                  (g.width = Math.max(c.width + 10, 100));
            else
              _ &&
                ((g.height = 50),
                (d.y = (l - d.height) / 2 - 4),
                (g.width = Math.max(d.width + 10, 100)));
            u.height = g.height;
          }
        }
        if (
          (a
            ? EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, {
                  t_id: this.fbEnetrTable.tableid,
                  isShow: !0,
                }),
              )
            : EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, {
                  t_id: this.fbEnetrTable.tableid,
                  isShow: !1,
                }),
              ),
          i)
        ) {
          for (var n = 0; n < this.arrTmpCoin.length; n++) {
            var m = this.arrTmpCoin[n];
            m.selectItem(!0), this.arrOkCoin.push(m);
          }
          (this.arrTmpCoin = []),
            this.curTableState &&
              DataManager.okBetCoinDisByDis(
                this.curTableState.tableInfo.tableSeq,
              ),
            EventManager.getIns().dispatchEvent(
              new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, {
                t_id: this.fbEnetrTable.tableid,
                isShow: !1,
              }),
            );
        }
        this.checkShowCoinInfo();
      }),
      (i.prototype.checkShowCoinInfo = function () {
        var t = DataManager.getBetCoinDisHash(
          this.curTableState.tableInfo.tableSeq,
        );
        if (t.length > 0)
          for (var e = 0, i = t.length; i > e; ++e) {
            var a = t[e];
            if (a && "SS" != a.betName) {
              this.gBet.addChild(a);
              var n = this.gContent.getChildByName(a.betName);
              if (n) {
                (a.x = n.x + n.width / 2 + a.wucha_x),
                  (a.y = n.y + n.height / 2 + a.wucha_y);
                n.x, n.y;
              }
            }
          }
      }),
      (i.prototype.checkMCName = function (t) {
        var e = t;
        return (
          "S" == e && (e = "DiSm"),
          "B" == e && (e = "DiBig"),
          "T" == e && (e = "DiTri0"),
          "O" == e && (e = "DiOdd"),
          "E" == e && (e = "DiEven"),
          e
        );
      }),
      (i.prototype.showBetInfo = function (t) {
        if (t) {
          t.tablePool;
        }
      }),
      (i.prototype.clearTmpCoins = function () {
        for (var t = 0; t < this.arrTmpCoin.length; t++)
          for (var e = 0; e < this.gBet.numChildren; e++) {
            var i = this.gBet.getChildAt(e);
            if (i == this.arrTmpCoin[t] && !i.isSelect) {
              this.gBet.removeChild(i),
                DataManager.deletBetCoinDisByDis(i),
                (i = null);
              break;
            }
          }
        (this.arrTmpCoin = []),
          this.curTableState &&
            DataManager.deletBetCoinDisByTabshid(
              this.curTableState.tableInfo.tableSeq,
            ),
          (this.temp_GameBetItem_hash = {});
      }),
      (i.prototype.clearOKCoins = function () {
        for (var t = 0; t < this.arrOkCoin.length; t++)
          for (var e = 0; e < this.gBet.numChildren; e++) {
            var i = this.gBet.getChildAt(e);
            if (i == this.arrTmpCoin[t]) {
              this.gBet.removeChild(i);
              break;
            }
          }
        this.arrOkCoin = [];
      }),
      (i.prototype.clearCoins = function () {
        for (; this.gBet.numChildren > 0; ) {
          this.gBet.removeChildAt(0);
        }
        this.temp_GameBetItem_hash = {};
      }),
      (i.prototype.dispose = function () {
        this.clearTmpCoins(),
          this.timer &&
            this.timer.removeEventListener(
              egret.TimerEvent.TIMER,
              this.onWinTimer,
              this,
            );
        for (var t = 0; t < this.arrList.length; t++)
          this["scibobtnHit" + this.arrList[t]].removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onHitTap,
            this,
          );
        (this.temp_GameBetItem_hash = {}),
          this.myBettest1.removeEventListener(
            egret.TouchEvent.RESIZE,
            this.onRetRize,
            this,
          );
      }),
      i
    );
  })(eui.Component);
  (t.GameTableSciboUI = e),
    __reflect(e.prototype, "game.GameTableSciboUI", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(game || (game = {}));
var GameComLHNoUI = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (e.arrList = ["B", "T", "P"]), e;
  }
  return (
    __extends(e, t),
    (e.prototype.partAdded = function (e, i) {
      t.prototype.partAdded.call(this, e, i);
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this);
    }),
    (e.prototype.changeLang = function (t) {
      void 0 === t && (t = null),
        (this.dzg_lh_png_0.source =
          "lh_betRegPng_" + DataManager.LANG_TYPE + "_png");
    }),
    (e.prototype.initUI = function () {
      for (var t = 0; t < this.arrList.length; t++)
        this["btn_bg_" + this.arrList[t]].alpha = 0;
      this.changeLang();
    }),
    (e.prototype.checkMCName = function (t) {
      var e = t;
      return (
        "P" == e && (e = "PLAYER"),
        "B" == e && (e = "BANKER"),
        "T" == e && (e = "TILE"),
        e
      );
    }),
    (e.prototype.checkMCName2 = function (t) {
      var e = t;
      return (
        "PLAYER" == e && (e = "P"),
        "BANKER" == e && (e = "B"),
        "TILE" == e && (e = "T"),
        e
      );
    }),
    (e.prototype.getbetList = function () {
      for (var t = [], e = 0; e < this.arrList.length; e++) {
        var i = this["btn_" + this.arrList[e]];
        t.push(i);
      }
      return t;
    }),
    (e.prototype.getbet_allWidthHeight_hash = function () {
      for (var t = {}, e = 0; e < this.arrList.length; e++) {
        var i = this["btn_" + this.arrList[e]],
          a = this.checkMCName(this.arrList[e]);
        t[a] = i;
      }
      return t;
    }),
    (e.prototype.getbetChildDict = function () {
      for (var t = {}, e = 0; e < this.arrList.length; e++) {
        var i = this["btn_" + this.arrList[e]],
          a = this.checkMCName(this.arrList[e]);
        (t[a] = i), (t[a + "_bg"] = this["btn_bg_" + this.arrList[e]]);
      }
      return t;
    }),
    (e.prototype.setbetnumgroup = function (t, e, i) {
      (t.betnum = e),
        (t.tempbetnum = i),
        (t.initbetnum = e),
        (t.betnumvisible = e > 0),
        (t.tempbetnumvisible = i > 0),
        (t.visible = e > 0 || i > 0);
    }),
    (e.prototype.updatebetnumgroups = function (t, e) {
      for (var i = 0; i < this.arrList.length; i++)
        this["betnumgroup" + this.arrList[i]].visible = !1;
      for (var a in t)
        for (
          var n = e.joinResponseList[a] || 0, s = e.tempbetlist[a] || 0, i = 0;
          i < this.arrList.length;
          i++
        )
          this.checkMCName2(a) == this.arrList[i] &&
            this.setbetnumgroup(
              this["betnumgroup" + this.checkMCName2(a)],
              n,
              s,
            );
    }),
    e
  );
})(eui.Component);
__reflect(GameComLHNoUI.prototype, "GameComLHNoUI", [
  "eui.UIComponent",
  "egret.DisplayObject",
]);
var GameComLHNoUI2 = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.arrList = [
        "B",
        "T",
        "P",
        "BB",
        "BE",
        "BR",
        "BO",
        "PB",
        "PE",
        "PR",
        "PO",
      ]),
      e
    );
  }
  return (
    __extends(e, t),
    (e.prototype.partAdded = function (e, i) {
      t.prototype.partAdded.call(this, e, i);
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this);
    }),
    (e.prototype.changeLang = function (t) {
      void 0 === t && (t = null),
        (this.dzg_lh_png_0.source =
          "lh_betRegPng2_" + DataManager.LANG_TYPE + "_png");
    }),
    (e.prototype.initUI = function () {
      for (var t = 0; t < this.arrList.length; t++)
        this["btn_bg_" + this.arrList[t]].alpha = 0;
      this.changeLang();
    }),
    (e.prototype.checkMCName = function (t) {
      var e = t;
      return (
        "P" == e && (e = "PLAYER"),
        "B" == e && (e = "BANKER"),
        "T" == e && (e = "TILE"),
        e
      );
    }),
    (e.prototype.checkMCName2 = function (t) {
      var e = t;
      return (
        "PLAYER" == e && (e = "P"),
        "BANKER" == e && (e = "B"),
        "TILE" == e && (e = "T"),
        e
      );
    }),
    (e.prototype.getbetList = function () {
      for (var t = [], e = 0; e < this.arrList.length; e++) {
        var i = this["btn_" + this.arrList[e]];
        t.push(i);
      }
      return t;
    }),
    (e.prototype.getbet_allWidthHeight_hash = function () {
      for (var t = {}, e = 0; e < this.arrList.length; e++) {
        var i = this["btn_" + this.arrList[e]],
          a = this.checkMCName(this.arrList[e]);
        t[a] = i;
      }
      return t;
    }),
    (e.prototype.getbetChildDict = function () {
      for (var t = {}, e = 0; e < this.arrList.length; e++) {
        var i = this["btn_" + this.arrList[e]],
          a = this.checkMCName(this.arrList[e]);
        (t[a] = i), (t[a + "_bg"] = this["btn_bg_" + this.arrList[e]]);
      }
      return t;
    }),
    (e.prototype.setbetnumgroup = function (t, e, i) {
      (t.betnum = e),
        (t.tempbetnum = i),
        (t.initbetnum = e),
        (t.betnumvisible = e > 0),
        (t.tempbetnumvisible = i > 0),
        (t.visible = e > 0 || i > 0);
    }),
    (e.prototype.updatebetnumgroups = function (t, e) {
      for (var i = 0; i < this.arrList.length; i++)
        this["betnumgroup" + this.arrList[i]].visible = !1;
      for (var a in t)
        for (
          var n = e.joinResponseList[a] || 0, s = e.tempbetlist[a] || 0, i = 0;
          i < this.arrList.length;
          i++
        )
          this.checkMCName2(a) == this.arrList[i] &&
            this.setbetnumgroup(
              this["betnumgroup" + this.checkMCName2(a)],
              n,
              s,
            );
    }),
    e
  );
})(eui.Component);
__reflect(GameComLHNoUI2.prototype, "GameComLHNoUI2", [
  "eui.UIComponent",
  "egret.DisplayObject",
]);
var game;
!(function (t) {
  var e = (function (e) {
    function i() {
      var t = e.call(this) || this;
      return (
        (t.arrList = ["B", "T", "P"]),
        (t.arrTmpCoin = []),
        (t.arrOkCoin = []),
        (t.arrTempCoinAny = []),
        (t.arrWin = []),
        (t.speed = 0.05),
        (t.fashi_bet_arr = [
          5, 24, 16, 33, 1, 20, 14, 31, 9, 22, 18, 29, 7, 28, 12, 35, 3, 26, 0,
          32, 15, 19, 4, 21, 2, 25, 17, 34, 6, 27, 13, 36, 11, 30, 8, 23, 10,
        ]),
        (t.lab_bet_key_hash = {}),
        (t.fashi_group_bet_key_hash = {
          a: ["RoDu58", "RoDu0a", "RoDucf", "RoDumn", "RoDuqt", "RoDuwz"],
          b: ["RoDu69", "RoDudg", "RoDugj", "RoDuux", "RoSi01"],
          c: [
            "RoDu47",
            "RoDube",
            "RoDuhk",
            "RoDuil",
            "RoDuvy",
            "RoT_23",
            "Rooprs",
            "RoT_23",
            "Rooprs",
          ],
          d: ["RoDu_3", "RoDube", "RoDuvy", "RoSi26"],
        }),
        (t.fashi_betNameArr = [
          "RoSm",
          "RoBig",
          "RoEven",
          "RoOdd",
          "RoRed",
          "RoBak",
        ]),
        (t.cur_play_type = 1),
        (t.winTitleArr = []),
        (t.skinName = "resource/skins/lunpan_skins/LunpaiBetScreen.exml"),
        (t.percentHeight = 100),
        (t.percentWidth = 100),
        t
      );
    }
    return (
      __extends(i, e),
      (i.prototype.partAdded = function (t, i) {
        e.prototype.partAdded.call(this, t, i);
      }),
      (i.prototype.childrenCreated = function () {
        if ((e.prototype.childrenCreated.call(this), !this.fashi_bet_hash)) {
          (this.fashi_bet_hash = {}), (this.fashi_bet_key_hash = {});
          for (var t = 0, i = this.fashi_bet_arr.length; i > t; ++t)
            (this.fashi_bet_hash[t] = this.fashi_bet_arr[t]),
              (this.fashi_bet_key_hash[this.fashi_bet_arr[t]] = t);
          (this.fashi_bet_hash[-1] = this.fashi_bet_arr[i - 1]),
            (this.fashi_bet_hash[-2] = this.fashi_bet_arr[i - 2]),
            (this.fashi_bet_hash[-3] = this.fashi_bet_arr[i - 3]),
            (this.fashi_bet_hash[i] = this.fashi_bet_arr[0]),
            (this.fashi_bet_hash[i + 1] = this.fashi_bet_arr[1]),
            (this.fashi_bet_hash[i + 2] = this.fashi_bet_arr[2]);
        }
        this.mapScreenGroup.addEventListener(
          egret.Event.RESIZE,
          this.onRouteGroupResize,
          this,
        );
        for (var a = 0, n = this.fashi_bet_arr.length; n > a; ++a) {
          var s = this["fashIimg_" + this.fashi_bet_arr[a]];
          (s.pixelHitTest = !0),
            s.addEventListener(
              egret.TouchEvent.TOUCH_BEGIN,
              this.onHitTapArrFun,
              this,
            );
        }
        for (a = 0, n = this.fashi_betNameArr.length; n > a; ++a) {
          var s = this["fashi_" + this.fashi_betNameArr[a]];
          s.addEventListener(
            egret.TouchEvent.TOUCH_BEGIN,
            this.onHitFashiFun,
            this,
          );
        }
        this.fashIimg_a.addEventListener(
          egret.TouchEvent.TOUCH_BEGIN,
          this.onGroupHitFun,
          this,
        ),
          this.fashIimg_b.addEventListener(
            egret.TouchEvent.TOUCH_BEGIN,
            this.onGroupHitFun,
            this,
          ),
          this.fashIimg_c.addEventListener(
            egret.TouchEvent.TOUCH_BEGIN,
            this.onGroupHitFun,
            this,
          ),
          this.fashIimg_d.addEventListener(
            egret.TouchEvent.TOUCH_BEGIN,
            this.onGroupHitFun,
            this,
          ),
          this.addEventListener("OnHitBetTable", this.betClickFun, this);
      }),
      (i.prototype.changeLang = function (t) {
        void 0 === t && (t = null),
          (this.fashIimg_a.source =
            "lunpan_fa_11_" + DataManager.LANG_TYPE + "_png"),
          (this.fashIimg_b.source =
            "lunpan_fa_13_" + DataManager.LANG_TYPE + "_png"),
          (this.fashIimg_c.source =
            "lunpan_fa_12_" + DataManager.LANG_TYPE + "_png"),
          (this.fashIimg_d.source =
            "lunpan_fa_14_" + DataManager.LANG_TYPE + "_png");
      }),
      (i.prototype.betClickFun = function (e) {
        var a = e.data.betName;
        "-1" != e.data.title_type &&
          null != a &&
          "" != a &&
          void 0 != a &&
          this.mapBetScreen &&
          this.cur_play_type == i.play_type_1 &&
          this.mapBetScreen.showSelectTitle(
            t.LunpanManager.getBetInfoArrByname(a),
          );
      }),
      (i.prototype.showWinSelect = function (t) {
        this.mapBetScreen.showWinSelectTitle(t),
          this.showFashiWinSelectTitle(t);
      }),
      (i.prototype.clearFashiWinSelectTitle = function () {
        this.timer && this.timer.stop(),
          (this.winTitleArr = []),
          this.clearAllFashiTip();
      }),
      (i.prototype.showFashiWinSelectTitle = function (e) {
        this.clearAllFashiTip(),
          (this.winTitleArr = t.LunpanManager.getFashiWinArr(e)),
          this.timer
            ? this.timer.stop()
            : ((this.timer = new egret.Timer(500, 8)),
              this.timer.addEventListener(
                egret.TimerEvent.TIMER,
                this.onTimer,
                this,
              ),
              this.timer.addEventListener(
                egret.TimerEvent.TIMER_COMPLETE,
                this.onTimerEnd,
                this,
              )),
          this.timer.reset(),
          this.timer.start();
      }),
      (i.prototype.onTimerEnd = function () {
        this.clearFashiWinSelectTitle();
      }),
      (i.prototype.onTimer = function (t) {
        for (var e = 0, i = this.winTitleArr.length; i > e; ++e) {
          var a = this.winTitleArr[e];
          if (a.indexOf("Ro") > -1) {
            var n = this["kuang_fashi_" + a];
            n && (n.visible = !n.visible);
          } else {
            var n = this["kuang_fashIimg_" + a];
            n && (n.visible = !n.visible);
          }
        }
      }),
      (i.prototype.clearAllFashiTip = function () {
        for (var t = 0, e = this.fashi_bet_arr.length; e > t; ++t) {
          var i = this["kuang_fashIimg_" + this.fashi_bet_arr[t]];
          i && ((i.visible = !1), (i.alpha = 0.6));
        }
        for (t = 0, e = this.fashi_betNameArr.length; e > t; ++t) {
          var i = this["kuang_fashi_" + this.fashi_betNameArr[t]];
          i && ((i.visible = !1), (i.alpha = 0.6));
        }
      }),
      (i.prototype.onOkFun = function (t) {
        this.dispatchEvent(new egret.Event("OnHitBetOk", !0, !0)),
          (this.readyGroup.visible = !1),
          EventManager.getIns().dispatchEvent(
            new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, !1),
          );
      }),
      (i.prototype.onCancelFun = function (t) {
        this.dispatchEvent(new egret.Event("OnHitBetCancel", !0, !0)),
          (this.readyGroup.visible = !1),
          EventManager.getIns().dispatchEvent(
            new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, !1),
          );
      }),
      (i.prototype.onHitFashiFun = function (t) {
        var e = t.currentTarget.name.split("_");
        if (e.length > 0) {
          var i = e[1],
            a = {};
          (a.title_type = "-1"),
            (a.betName = i),
            (a.fashi = "fashi"),
            this.dispatchEvent(new egret.Event("OnHitBetTable", !0, !0, a));
        }
      }),
      (i.prototype.onGroupHitFun = function (e) {
        var a = e.currentTarget.name.split("_");
        if (a.length > 0) {
          var n = a[1],
            s = this.fashi_group_bet_key_hash[n],
            r = [];
          if (s) {
            for (var o = 0, h = s.length, l = egret.getTimer(); h > o; o++) {
              var g = {};
              (g.title_type = "-1"),
                (g.betName = s[o]),
                (g.add_fashi = "add_fashi"),
                (g.add_betName = n),
                (g.fashi_id = l),
                (r = r.concat(t.LunpanManager.getBetInfoArrByname(s[o]))),
                this.dispatchEvent(new egret.Event("OnHitBetTable", !0, !0, g));
            }
            this.cur_play_type == i.play_type_1 &&
              this.mapBetScreen.showSelectTitle(r);
          }
        }
      }),
      (i.prototype.onHitTapArrFun = function (e) {
        var a = e.currentTarget.name.split("_");
        if (a.length > 0) {
          for (
            var n = parseInt(a[1]),
              s = this.fashi_bet_key_hash[n],
              r = s - 2,
              o = s + 2,
              h = [];
            o >= r;
            r++
          ) {
            var l = this.fashi_bet_hash[r],
              g = {};
            (g.title_type = "-1"),
              (g.betName = "RoSi" + t.LunpanManager.digitZeroString(l)),
              (g.value = l.toString()),
              (g.fashi = "fashi"),
              this.dispatchEvent(new egret.Event("OnHitBetTable", !0, !0, g)),
              h.push(l);
          }
          this.cur_play_type == i.play_type_1 &&
            this.mapBetScreen.showSelectTitle(h);
        }
      }),
      (i.prototype.onHitTap = function (t) {}),
      (i.prototype.initUI = function () {
        this.timer && this.timer.stop(),
          this.clearMyBetLab(),
          this.mapBetScreen ||
            ((this.mapBetScreen = new dzxx.LunBetScreen()),
            this.mapScreenGroup.addChild(this.mapBetScreen),
            this.mapBetScreen.show()),
          this.mapBetScreen.clearAllTitleTip(),
          this.clearFashiWinSelectTitle(),
          this.clearCoins(),
          this.clearTmpCoins(),
          (this.arrOkCoin = []),
          (i.fashi_add_hash = {}),
          (this.readyGroup.visible = !1),
          EventManager.getIns().dispatchEvent(
            new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, !1),
          ),
          this.changeBetUIPosion();
      }),
      (i.prototype.changeBetUIPosion = function (t) {
        void 0 === t && (t = !1);
        var e = 0;
        (e = t ? 330 : 0),
          (this.tween = egret.Tween.get(this.gContent)),
          this.tween
            .to(
              {
                y: e,
              },
              300,
              egret.Ease.sineOut,
            )
            .call(function () {}, this);
      }),
      (i.prototype.changePlayType = function (t) {
        void 0 === t && (t = 1),
          (this.cur_play_type = t),
          this.cur_play_type == i.play_type_1 &&
            ((this.titleShiGroup.visible = !0),
            (this.fashiGroup.visible = !1),
            (this.MybetGroup.visible = !0)),
          this.cur_play_type == i.play_type_2 &&
            ((this.titleShiGroup.visible = !1),
            (this.fashiGroup.visible = !0),
            (this.MybetGroup.visible = !1)),
          this.updataBetItem();
      }),
      (i.prototype.onWinTimer = function () {}),
      (i.prototype.startAnim = function () {
        for (var t = 0; t < this.arrWin.length; t++)
          if ("TS" != this.arrWin[t]) {
            var e = this["img" + this.arrWin[t] + "Win"];
            e.alpha >= 1 && (this.speed = -0.05),
              e.alpha < 0.3 && (this.speed = 0.05),
              (e.alpha += this.speed);
          }
      }),
      (i.prototype.showWin = function (t) {}),
      (i.prototype.addBetCoin = function (e, a, n) {
        void 0 === n && (n = !1);
        var s = new t.GameBetItem();
        this.gBet.addChild(s),
          s.setItem({
            value: e,
          }),
          (s.scaleX = s.scaleY = 0.5),
          (s.alpha = 0.6),
          (s.isfashi = !1),
          (s.betName = a.betName);
        var r = this.mapBetScreen.getBetPosionByStage(a.betName),
          o = this.gBet.globalToLocal(r.x, r.y);
        (s.wucha_x = 6 * Math.random() - 20 - 3),
          (s.wucha_y = 6 * Math.random() - 20 - 3),
          (s.tableSeq = this.curTableState.tableInfo.tableSeq),
          (s.x = o.x + s.wucha_x),
          (s.y = o.y + s.wucha_y),
          DataManager.addBetCoinDisHash(s),
          (s.visible = this.cur_play_type == i.play_type_1),
          "fashi" == a.fashi && this.addFashiBetCoin(e, a, n),
          i.betTmpCoinTongji.indexOf(a.betName) < 0 &&
            i.betTmpCoinTongji.push(a.betName),
          this.arrTmpCoin.push(s),
          n
            ? EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, !0),
              )
            : ((this.readyGroup.visible = !1),
              EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, !1),
              ));
      }),
      (i.prototype.addFashiBetCoin = function (e, a, n) {
        void 0 === n && (n = !1);
        var s = new t.GameBetItem();
        this.gBet.addChild(s),
          s.setItem({
            value: e,
          }),
          (s.scaleX = s.scaleY = 0.5),
          (s.alpha = 0.6),
          (s.isfashi = !0),
          (s.betName = a.betName);
        var r = this.getFashiBetPosion(a.betName),
          o = this.gBet.globalToLocal(r.x, r.y);
        (s.wucha_x = 6 * Math.random() - 20 - 3),
          (s.wucha_y = 6 * Math.random() - 20 - 3),
          (s.tableSeq = this.curTableState.tableInfo.tableSeq),
          (s.x = o.x + s.wucha_x),
          (s.y = o.y + s.wucha_y),
          DataManager.addBetCoinDisHash(s),
          (s.visible = this.cur_play_type == i.play_type_2),
          this.arrTmpCoin.push(s),
          n
            ? EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, !0),
              )
            : ((this.readyGroup.visible = !1),
              EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, !1),
              ));
      }),
      (i.prototype.getFashiBetPosion = function (t) {
        var e = new egret.Point(-200, -200);
        if (t.indexOf("RoSi") >= 0) {
          var i = t.substring(4, t.length);
          "88" == i && (i = "0");
          var a = parseInt(i),
            n = this["fashIimg_" + a];
          if (n && n.parent)
            return (
              (e.x = n.width / 2),
              (e.y = n.height / 2),
              n.parent.localToGlobal(e.x, e.y)
            );
        }
        if (this.fashi_betNameArr.indexOf(t) > -1) {
          var n = this["fashi_" + t];
          return n && n.parent
            ? ((e.x = n.width / 2),
              (e.y = n.height / 2),
              n.parent.localToGlobal(e.x, e.y))
            : e;
        }
        if ("a" == t || "b" == t || "c" == t || "d" == t) {
          var n = this["fashIimg_" + t];
          return n && n.parent
            ? ((e.x = n.width / 2),
              (e.y = n.height / 2),
              n.parent.localToGlobal(e.x, e.y))
            : e;
        }
        return e;
      }),
      (i.prototype.updataBetItem = function () {
        for (var t = 0; t < this.gBet.numChildren; ++t) {
          var e = this.gBet.getChildAt(t);
          if (e) {
            var a = void 0;
            (a = e.isfashi
              ? this.getFashiBetPosion(e.betName)
              : this.mapBetScreen.getBetPosionByStage(e.betName)),
              this.cur_play_type == i.play_type_2
                ? (e.visible = e.isfashi)
                : this.cur_play_type == i.play_type_1
                  ? (e.visible = !e.isfashi)
                  : (e.visible = !1);
            var n = this.gBet.globalToLocal(a.x, a.y);
            (e.x = n.x + e.wucha_x), (e.y = n.y + e.wucha_y);
          }
        }
        if (this.cur_play_type == i.play_type_1)
          for (var s in this.lab_bet_key_hash) {
            var r = this.lab_bet_key_hash[s],
              a = this.mapBetScreen.getBetPosionByStage(s),
              n = this.MybetGroup.globalToLocal(a.x, a.y);
            (r.x = n.x - r.width / 2), (r.y = n.y - r.height / 2);
          }
      }),
      (i.prototype.updataCoinInfo = function (t, e, a) {
        void 0 === a && (a = !1),
          this.clearMyBetLab(),
          (this.arrList = this.getBetNameArr(t, e));
        for (var n = !1, s = 0; s < this.arrList.length; s++) {
          var r = this.arrList[s],
            o = r,
            h = t[o] || 0,
            l = e[o] || 0,
            g = this.getBetLab(r);
          if (0 == h && 0 == l) g.visible = !1;
          else {
            (g.visible = !0),
              l > 0 ? (g.backgroundColor = 0) : (g.backgroundColor = 12058624),
              (g.text = ""),
              h > 0 && (g.text = "" + h),
              l > 0 && ((g.text += "+" + Math.floor(l)), (n = !0));
            var u = 15 * g.text.length + 20;
            g.width = u;
            var c = this.mapBetScreen.getBetPosionByStage(r),
              d = this.MybetGroup.globalToLocal(c.x, c.y);
            (g.x = d.x - g.width / 2), (g.y = d.y - g.height / 2);
          }
        }
        if (
          (n
            ? EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, !0),
              )
            : ((this.readyGroup.visible = !1),
              EventManager.getIns().dispatchEvent(
                new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, !1),
              )),
          a)
        ) {
          for (var s = 0; s < this.arrTmpCoin.length; s++) {
            var p = this.arrTmpCoin[s];
            p.selectItem(!0), this.arrOkCoin.push(p);
          }
          (this.arrTmpCoin = []),
            (i.betTmpCoinTongji = []),
            (this.readyGroup.visible = !1),
            this.curTableState &&
              DataManager.okBetCoinDisByDis(
                this.curTableState.tableInfo.tableSeq,
              ),
            EventManager.getIns().dispatchEvent(
              new DataChangeEvent(DataChangeEvent.CHECK_USER_HAVE_BET, !1),
            );
        }
        this.checkShowCoinInfo();
      }),
      (i.prototype.checkShowCoinInfo = function () {
        var t = DataManager.getBetCoinDisHash(
          this.curTableState.tableInfo.tableSeq,
        );
        if (t.length > 0)
          for (var e = 0, a = t.length; a > e; ++e) {
            var n = t[e];
            if (n) {
              var s = void 0;
              (s = n.isfashi
                ? this.getFashiBetPosion(n.betName)
                : this.mapBetScreen.getBetPosionByStage(n.betName)),
                this.cur_play_type == i.play_type_2
                  ? (n.visible = n.isfashi)
                  : this.cur_play_type == i.play_type_1
                    ? (n.visible = !n.isfashi)
                    : (n.visible = !1),
                n.visible && this.gBet.addChild(n);
              var r = this.gBet.globalToLocal(s.x, s.y);
              (n.x = r.x + n.wucha_x), (n.y = r.y + n.wucha_y);
            }
          }
      }),
      (i.prototype.checkMCName = function (t) {
        var e = t;
        return (
          "P" == e && (e = "PLAYER"),
          "B" == e && (e = "BANKER"),
          "T" == e && (e = "TILE"),
          "TS" == e && (e = "SS"),
          e
        );
      }),
      (i.prototype.getBetNameArr = function (t, e) {
        var i = [];
        for (var a in t) i.push(a);
        for (var n in e) t[n] || i.push(n);
        return i;
      }),
      (i.prototype.getBetLab = function (t) {
        var e = this.lab_bet_key_hash[t];
        return (
          e ||
            ((e = new eui.Label()),
            (e.size = 20),
            (e.fontFamily = "Microsoft YaHei"),
            (e.verticalAlign = "middle"),
            (e.textAlign = "center"),
            (e.textColor = 16777215),
            (e.border = !0),
            (e.borderColor = 0),
            (e.background = !0),
            (e.backgroundColor = 0),
            (this.lab_bet_key_hash[t] = e),
            this.MybetGroup.addChild(e)),
          e
        );
      }),
      (i.prototype.clearMyBetLab = function () {
        if (this.lab_bet_key_hash)
          for (var t in this.lab_bet_key_hash)
            this.lab_bet_key_hash[t].visible = !1;
      }),
      (i.prototype.showBetInfo = function () {}),
      (i.prototype.clearTmpCoins = function () {
        for (var t = 0; t < this.arrTmpCoin.length; t++)
          for (var e = 0; e < this.gBet.numChildren; e++) {
            var a = this.gBet.getChildAt(e);
            if (a == this.arrTmpCoin[t] && !a.isSelect) {
              this.gBet.removeChild(a),
                DataManager.deletBetCoinDisByDis(a),
                (a = null);
              break;
            }
          }
        (this.arrTmpCoin = []),
          (i.betTmpCoinTongji = []),
          this.curTableState &&
            DataManager.deletBetCoinDisByTabshid(
              this.curTableState.tableInfo.tableSeq,
            );
      }),
      (i.prototype.clearOKCoins = function () {
        for (var t = 0; t < this.arrOkCoin.length; t++)
          for (var e = 0; e < this.gBet.numChildren; e++) {
            var i = this.gBet.getChildAt(e);
            if (i == this.arrTmpCoin[t]) {
              this.gBet.removeChild(i);
              break;
            }
          }
        this.arrOkCoin = [];
      }),
      (i.prototype.clearCoins = function () {
        for (; this.gBet.numChildren > 0; ) {
          this.gBet.removeChildAt(0);
        }
      }),
      (i.prototype.onRouteGroupResize = function (t) {
        void 0 === t && (t = null),
          this.mapBetScreen && this.mapBetScreen.updata(),
          this.updataBetItem();
      }),
      (i.prototype.dispose = function () {
        this.clearTmpCoins(), this.clearFashiWinSelectTitle();
        for (var t = 0, e = this.fashi_bet_arr.length; e > t; ++t) {
          var a = this["fashIimg_" + this.fashi_bet_arr[t]];
          a.removeEventListener(
            egret.TouchEvent.TOUCH_BEGIN,
            this.onHitTapArrFun,
            this,
          );
        }
        for (t = 0, e = this.fashi_betNameArr.length; e > t; ++t) {
          var a = this["fashi_" + this.fashi_betNameArr[t]];
          a.removeEventListener(
            egret.TouchEvent.TOUCH_BEGIN,
            this.onHitFashiFun,
            this,
          );
        }
        egret.Tween.removeTweens(this.gContent),
          (i.fashi_add_hash = {}),
          this.removeEventListener("OnHitBetTable", this.betClickFun, this),
          this.fashIimg_a.removeEventListener(
            egret.TouchEvent.TOUCH_BEGIN,
            this.onGroupHitFun,
            this,
          ),
          this.fashIimg_b.removeEventListener(
            egret.TouchEvent.TOUCH_BEGIN,
            this.onGroupHitFun,
            this,
          ),
          this.fashIimg_c.removeEventListener(
            egret.TouchEvent.TOUCH_BEGIN,
            this.onGroupHitFun,
            this,
          ),
          this.fashIimg_d.removeEventListener(
            egret.TouchEvent.TOUCH_BEGIN,
            this.onGroupHitFun,
            this,
          );
      }),
      (i.fashi_add_hash = {}),
      (i.betTmpCoinTongji = []),
      (i.fashi_betShow = [
        "RoSm",
        "RoBig",
        "RoEven",
        "RoOdd",
        "RoRed",
        "RoBak",
        "RoSi88",
      ]),
      (i.play_type_1 = 1),
      (i.play_type_2 = 2),
      i
    );
  })(eui.Component);
  (t.LunpaiBetScreen = e),
    __reflect(e.prototype, "game.LunpaiBetScreen", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(game || (game = {}));
var game;
!(function (t) {
  var e = (function () {
    function e() {
      (this.betNameHash = {
        RoSi88: "零",
        RoSm: "小",
        RoBig: "大",
        RoEven: "双",
        RoOdd: "单",
        RoRed: "红",
        RoBak: "黑",
        Ro12s1: "下注一打",
        Ro12s2: "下注二打",
        Ro12s3: "下注三打",
        RoRow3: "三列",
        RoRow2: "二列",
        RoRow1: "一列",
      }),
        (this.betNameArr = [
          "RoSi88",
          "RoSm",
          "RoBig",
          "RoEven",
          "RoOdd",
          "RoRed",
          "RoBak",
          "Ro12s1",
          "Ro12s2",
          "Ro12s3",
          "RoRow3",
          "RoRow2",
          "RoRow1",
        ]);
    }
    return (
      (e.getBetInfoArrByname = function (t) {
        if (t.indexOf("RoSi") >= 0) {
          var i = t.substring(4, t.length);
          return "88" == i && (i = "0"), [parseInt(i)];
        }
        return t.indexOf("RoDu") >= 0
          ? e.parseHilightArr(e.strToArray(t.substring(4, t.length)))
          : t.indexOf("RoT") >= 0
            ? e.parseHilightArr(e.strToArray(t.substring(3, t.length)))
            : t.indexOf("RoOdd") >= 0
              ? [
                  1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33,
                  35,
                ]
              : t.indexOf("RoEven") >= 0
                ? [
                    2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32,
                    34, 36,
                  ]
                : t.indexOf("RoBak") >= 0
                  ? [
                      2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29,
                      31, 33, 35,
                    ]
                  : t.indexOf("RoRed") >= 0
                    ? [
                        1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30,
                        32, 34, 36,
                      ]
                    : t.indexOf("RoSm") >= 0
                      ? [
                          1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                          17, 18,
                        ]
                      : t.indexOf("RoBig") >= 0
                        ? [
                            19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
                            32, 33, 34, 35, 36,
                          ]
                        : t.indexOf("Ro12s1") >= 0
                          ? [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
                          : t.indexOf("Ro12s2") >= 0
                            ? [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
                            : t.indexOf("Ro12s3") >= 0
                              ? [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]
                              : t.indexOf("RoRow3") >= 0
                                ? [3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36]
                                : t.indexOf("RoRow2") >= 0
                                  ? [
                                      2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32,
                                      35,
                                    ]
                                  : t.indexOf("RoRow1") >= 0
                                    ? [
                                        1, 4, 7, 10, 13, 16, 19, 22, 25, 28, 31,
                                        34,
                                      ]
                                    : t.indexOf("RoCol1") >= 0
                                      ? [1, 2, 3, 4, 5, 6]
                                      : t.indexOf("RoCol2") >= 0
                                        ? [4, 5, 6, 7, 8, 9]
                                        : t.indexOf("RoCol3") >= 0
                                          ? [7, 8, 9, 10, 11, 12]
                                          : t.indexOf("RoCol4") >= 0
                                            ? [10, 11, 12, 13, 14, 15]
                                            : t.indexOf("RoCol5") >= 0
                                              ? [13, 14, 15, 16, 17, 18]
                                              : t.indexOf("RoCol6") >= 0
                                                ? [16, 17, 18, 19, 20, 21]
                                                : t.indexOf("RoCol7") >= 0
                                                  ? [19, 20, 21, 22, 23, 24]
                                                  : t.indexOf("RoCol8") >= 0
                                                    ? [22, 23, 24, 25, 26, 27]
                                                    : t.indexOf("RoCol9") >= 0
                                                      ? [25, 26, 27, 28, 29, 30]
                                                      : t.indexOf("RoCol0") >= 0
                                                        ? [
                                                            28, 29, 30, 31, 32,
                                                            33,
                                                          ]
                                                        : t.indexOf("RoCola") >=
                                                            0
                                                          ? [
                                                              31, 32, 33, 34,
                                                              35, 36,
                                                            ]
                                                          : e.parseHilightArr(
                                                              e.strToArray(
                                                                t.substring(
                                                                  2,
                                                                  t.length,
                                                                ),
                                                              ),
                                                            );
      }),
      (e.strToArray = function (t) {
        for (var e = [], i = 0, a = t.length; a > i; i++) e.push(t.charAt(i));
        return e;
      }),
      (e.parseHilightArr = function (t) {
        for (var i = [], a = 0; a < t.length; a++) i.push(e.digitConvert(t[a]));
        return i;
      }),
      (e.digitConvert = function (t) {
        return e.isNumeric(t)
          ? parseInt(t)
          : "_" == t
            ? 0
            : "0" == t
              ? 10
              : t.charCodeAt(0) - 86;
      }),
      (e.digitConvertString = function (t) {
        return t >= 1 && 9 >= t
          ? Math.floor(t).toString()
          : 0 == t
            ? "_"
            : 10 == t
              ? "0"
              : String.fromCharCode(t + 86);
      }),
      (e.digitZeroString = function (t) {
        return t >= 1 && 9 >= t ? "0" + t : 0 == t ? "88" : t.toString();
      }),
      (e.isNumeric = function (t) {
        var e = /^[1-9]\d*$/;
        return e.test(t) ? !0 : !1;
      }),
      (e.isNumber = function (t) {
        var e = /^\d+(\.\d+)?$/,
          i =
            /^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/;
        return e.test(t) && i.test(t) ? !0 : !1;
      }),
      (e.prototype.getBetPosionName = function (e) {
        var i = t.LunpanManager.getBetInfoArrByname(e);
        if (!(i.length <= 0)) {
          new egret.Point(0, 0), i[i.length - 1];
          return e.indexOf("RoSi") >= 0
            ? "直接注"
            : e.indexOf("RoDu") >= 0
              ? "分注"
              : e.indexOf("RoT") >= 0
                ? i.indexOf(0) > -1
                  ? "三数"
                  : "街注"
                : "RoCol1" == e ||
                    "RoCol2" == e ||
                    "RoCol3" == e ||
                    "RoCol4" == e ||
                    "RoCol5" == e ||
                    "RoCol6" == e ||
                    "RoCol7" == e ||
                    "RoCol8" == e ||
                    "RoCol9" == e ||
                    "RoCol0" == e ||
                    "RoCola" == e
                  ? "线注"
                  : this.betNameArr.indexOf(e) > -1
                    ? this.betNameHash[e]
                    : e.indexOf("Ro") >= 0 && 4 == i.length
                      ? "四个号码"
                      : e.indexOf("Ro") >= 0
                        ? "不明注点"
                        : void 0;
        }
      }),
      (e.getWinArr = function (t) {
        var i = [],
          a = parseInt(t);
        return 0 == a
          ? (i.push("RoSi88"), i)
          : (this.getHoneHeiRoteType(a) == e.ROTE_HEI_TYPE
              ? i.push("RoBak")
              : i.push("RoRed"),
            this.getDaXiaoRoteType(a) == e.ROTE_XIAO_TYPE
              ? i.push("RoSm")
              : i.push("RoBig"),
            this.getDanShuangRoteType(a) == e.ROTE_SHUANG_TYPE
              ? i.push("RoEven")
              : i.push("RoOdd"),
            this.getDalieRoteType_A(a) == e.ROTE_DA_TYPE_1
              ? i.push("Ro12s1")
              : this.getDalieRoteType_A(a) == e.ROTE_DA_TYPE_2
                ? i.push("Ro12s2")
                : i.push("Ro12s3"),
            this.getDalieRoteType_B(a) == e.ROTE_LIE_TYPE_1
              ? i.push("RoRow1")
              : this.getDalieRoteType_B(a) == e.ROTE_LIE_TYPE_2
                ? i.push("RoRow2")
                : i.push("RoRow3"),
            a > 0 && i.push(a.toString()),
            i);
      }),
      (e.getFashiWinArr = function (t) {
        var i = [],
          a = parseInt(t);
        return 0 == a
          ? (i.push("0"), i)
          : (this.getHoneHeiRoteType(a) == e.ROTE_HEI_TYPE
              ? i.push("RoBak")
              : i.push("RoRed"),
            this.getDaXiaoRoteType(a) == e.ROTE_XIAO_TYPE
              ? i.push("RoSm")
              : i.push("RoBig"),
            this.getDanShuangRoteType(a) == e.ROTE_SHUANG_TYPE
              ? i.push("RoEven")
              : i.push("RoOdd"),
            a > 0 && i.push(a.toString()),
            i);
      }),
      (e.getRoteTongji = function (t) {
        for (var i = {}, a = 0, n = e.betNameArr.length; n > a; a++)
          i[e.betNameArr[a]] = t[a];
        return i;
      }),
      (e.getMapRoteScreen = function (t, i, a, n, s) {
        void 0 === s && (s = 2);
        var r = e.rote_hash[t];
        return (
          r || (r = e.rote_hash[t] = new dzxx.MapRoteScreen(i, a, n, s)), r
        );
      }),
      (e.getHoneHeiRoteType = function (t) {
        return 0 == t
          ? e.ROTE_LING_TYPE
          : e.HONGHEI.indexOf(t) > -1
            ? e.ROTE_HEI_TYPE
            : e.ROTE_HONG_TYPE;
      }),
      (e.getDaXiaoRoteType = function (t) {
        return 0 == t
          ? e.ROTE_DX_LING_TYPE
          : t >= 1 && 18 >= t
            ? e.ROTE_XIAO_TYPE
            : e.ROTE_DA_TYPE;
      }),
      (e.getDanShuangRoteType = function (t) {
        return 0 == t
          ? e.ROTE_DS_LING_TYPE
          : t % 2 == 0
            ? e.ROTE_SHUANG_TYPE
            : e.ROTE_DAN_TYPE;
      }),
      (e.getDalieRoteType_A = function (t) {
        return 0 == t
          ? e.ROTE_DALIE_TYPE_0
          : t >= 1 && 12 >= t
            ? e.ROTE_DA_TYPE_1
            : t >= 13 && 24 >= t
              ? e.ROTE_DA_TYPE_2
              : e.ROTE_DA_TYPE_3;
      }),
      (e.getDalieRoteType_B = function (t) {
        return 0 == t
          ? e.ROTE_DALIE_TYPE_0
          : e.LIE_ARR_A.indexOf(t) > -1
            ? e.ROTE_LIE_TYPE_1
            : e.LIE_ARR_B.indexOf(t) > -1
              ? e.ROTE_LIE_TYPE_2
              : e.ROTE_LIE_TYPE_3;
      }),
      (e.ROTE_HONG_TYPE = 1),
      (e.ROTE_HEI_TYPE = 2),
      (e.ROTE_LING_TYPE = 3),
      (e.ROTE_DA_TYPE = 4),
      (e.ROTE_XIAO_TYPE = 5),
      (e.ROTE_DX_LING_TYPE = 6),
      (e.ROTE_DAN_TYPE = 7),
      (e.ROTE_SHUANG_TYPE = 8),
      (e.ROTE_DS_LING_TYPE = 9),
      (e.ROTE_DA_TYPE_1 = 10),
      (e.ROTE_DA_TYPE_2 = 11),
      (e.ROTE_DA_TYPE_3 = 12),
      (e.ROTE_LIE_TYPE_1 = 20),
      (e.ROTE_LIE_TYPE_2 = 21),
      (e.ROTE_LIE_TYPE_3 = 22),
      (e.ROTE_DALIE_TYPE_0 = 30),
      (e.HONGHEI = [
        2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35,
      ]),
      (e.LIE_ARR_A = [1, 4, 7, 10, 13, 16, 19, 22, 25, 28, 31, 34]),
      (e.LIE_ARR_B = [2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35]),
      (e.rote_hash = {}),
      (e.bet_name_hash = {}),
      (e.betNameArr = [
        "RoBig",
        "RoSm",
        "RoOdd",
        "RoEven",
        "RoRed",
        "RoBak",
        "RoSi88",
      ]),
      (e.betNameHash = {
        RoSi88: "零",
        RoSm: "小",
        RoBig: "大",
        RoEven: "双",
        RoOdd: "单",
        RoRed: "红",
        RoBak: "黑",
      }),
      e
    );
  })();
  (t.LunpanManager = e), __reflect(e.prototype, "game.LunpanManager");
})(game || (game = {}));
var game;
!(function (t) {
  var e = (function (e) {
    function i() {
      var t = e.call(this) || this;
      return (
        (t.isVideoOpen = !0),
        (t.isbetChangeUI = !1),
        (t.isShowTabInfo = !1),
        (t.tableid = 0),
        (t._playerPoint = 0),
        (t._bankerPoint = 0),
        (t.tempbetlist = {}),
        (t._responseList = []),
        (t.bet_length = 0),
        (t.notBetCount = 0),
        (t.gameState = -1),
        (t.isCanBet = !1),
        (t.go_enter = !1),
        (t.is_create = !1),
        (t.card_open_num = 0),
        (t.test_data_arr = [
          1, 2, 4, 6, 8, 2, 1, 1, 1, 8, 23, 4, 6, 1, 4, 2, 12, 12, 22, 2, 22, 0,
          4, 4, 4, 6, 35, 14, 8, 23, 4, 6, 0, 4, 4, 4, 6, 35, 14, 5, 30, 5, 30,
          8, 23, 4, 6, 0, 4, 4, 4, 6, 35, 14, 5, 30, 1, 1, 1, 1, 1,
        ]),
        (t.onBetX2Temp = []),
        (t.cur_gameSeq = -1),
        (t.save_time_deal = 0),
        (t.skinName = "resource/skins/lunpan_skins/LunpanView.exml"),
        (t.top = 0),
        (t.bottom = 0),
        (t.left = 0),
        (t.right = 0),
        t
      );
    }
    return (
      __extends(i, e),
      (i.prototype.partAdded = function (t, i) {
        e.prototype.partAdded.call(this, t, i);
      }),
      (i.prototype.childrenCreated = function () {
        e.prototype.childrenCreated.call(this),
          this.gComNo ||
            ((this.gComNo = new t.LunpaiBetScreen()),
            this.betMainGroup.addChild(this.gComNo)),
          (this.is_create = !0),
          this.go_enter && this.updataView();
      }),
      (i.prototype.updataView = function () {
        if (((this.go_enter = !0), this.is_create)) {
          (this.tableid = DataManager.curTable.tableid),
            (this.gComNo.curTableState = DataManager.curTableState),
            this.setButtonEnable(!1),
            (this.gameState = -1),
            (this.isbetChangeUI = !1),
            (this.his_list.itemRenderer = lunpanHistoryItem),
            (this.roteMainGroup.visible = !1),
            this.showWinGroup(),
            (this.route = t.LunpanManager.getMapRoteScreen(
              1,
              30,
              13,
              6,
              dzxx.MAPROTE_SHOW_TYPE.MAPROTE_SHOW_TYPE_HONGHEI,
            )),
            this.gRote.addChild(this.route),
            this.onRouteGroupResize(),
            SelectTable.getIns().show(
              DataManager.GAME_TYPE_LUNPAGAME,
              this.selTabGroup,
            ),
            DataManager.curTableState &&
              this.route.show(DataManager.curTableState.tableInfo.history2),
            this.showHistoryList(),
            (this.lblMoney.text = ShareUtils.toMoney2_oo(
              DataManager.sumAmount,
            )),
            this.initInfo(),
            this.changeTableInfoGroup(!0),
            this.initBet(),
            this.gameInit(),
            (this.isCanBet = !1),
            EventManager.getIns().addEventListener(
              DataChangeEvent.CHECK_USER_HAVE_BET,
              this.checkUserhaveBet,
              this,
            ),
            this.btnbackgroup.addEventListener(
              egret.TouchEvent.TOUCH_TAP,
              this.onBack,
              this,
            ),
            this.btnmenugroup.addEventListener(
              egret.TouchEvent.TOUCH_TAP,
              this.onMenu,
              this,
            ),
            this.changeBetGroup.addEventListener(
              egret.TouchEvent.TOUCH_TAP,
              this.changeBetUIfun,
              this,
            ),
            this.addEventListener("OnHitBetTable", this.betClick, this),
            this.addEventListener("OnHitBetOk", this.onBetSure, this),
            this.addEventListener("OnHitBetCancel", this.onBetCancel, this),
            this.gameTime.addEventListener(
              "TimeComplete",
              this.onTimeComplete,
              this,
            ),
            this.btnSure.addEventListener(
              egret.TouchEvent.TOUCH_TAP,
              this.onBetSure,
              this,
            ),
            this.btnCancel.addEventListener(
              egret.TouchEvent.TOUCH_TAP,
              this.onBetCancel,
              this,
            ),
            this.btnRepeat.addEventListener(
              egret.TouchEvent.TOUCH_TAP,
              this.onBetRepet,
              this,
            ),
            this.showRoteBtn.addEventListener(
              egret.TouchEvent.TOUCH_TAP,
              this.onShowRoteFun,
              this,
            ),
            this.btnX2.addEventListener(
              egret.TouchEvent.TOUCH_TAP,
              this.onBetX2,
              this,
            ),
            this.gBets.addEventListener(
              egret.TouchEvent.TOUCH_TAP,
              this.onChooseBet,
              this,
            ),
            this.tsVideo.addEventListener(
              egret.TouchEvent.TOUCH_TAP,
              this.onVideo,
              this,
            ),
            this.gRote.addEventListener(
              egret.Event.RESIZE,
              this.onRouteGroupResize,
              this,
            ),
            this.showRoteBtn.addEventListener(
              egret.Event.RESIZE,
              this.historyResultFunResize,
              this,
            ),
            this.imgBetUp.addEventListener(
              egret.TouchEvent.TOUCH_TAP,
              this.onScrollBetUp,
              this,
            ),
            this.imgBetDown.addEventListener(
              egret.TouchEvent.TOUCH_TAP,
              this.onScrollBetDown,
              this,
            ),
            this.video_zoom.addEventListener(
              egret.TouchEvent.TOUCH_TAP,
              this.onVideoZoom,
              this,
            ),
            this.hongheiBtn.addEventListener(
              egret.TouchEvent.TOUCH_TAP,
              this.onChangeRote,
              this,
            ),
            this.daxiaoBtn.addEventListener(
              egret.TouchEvent.TOUCH_TAP,
              this.onChangeRote,
              this,
            ),
            this.danshuangBtn.addEventListener(
              egret.TouchEvent.TOUCH_TAP,
              this.onChangeRote,
              this,
            ),
            EventManager.getIns().addEventListener(
              DataChangeEvent.BET_AMOUNT,
              this.betAmount,
              this,
            ),
            EventManager.getIns().addEventListener(
              DataChangeEvent.BET_START,
              this.betStart,
              this,
            ),
            EventManager.getIns().addEventListener(
              DataChangeEvent.BET_RESULT,
              this.betResult,
              this,
            ),
            EventManager.getIns().addEventListener(
              DataChangeEvent.SEAT_DEAL,
              this.seatDeal,
              this,
            ),
            EventManager.getIns().addEventListener(
              DataChangeEvent.BET_RESPONSE,
              this.betResponse,
              this,
            ),
            EventManager.getIns().addEventListener(
              DataChangeEvent.TABLE_INFO,
              this.tableInfo,
              this,
            ),
            EventManager.getIns().addEventListener(
              DataChangeEvent.SEAT_BETTING,
              this.seatBetting,
              this,
            ),
            EventManager.getIns().addEventListener(
              DataChangeEvent.User_INFO,
              this.onMoneyChange,
              this,
            ),
            this.btnLimit_fb.addEventListener(
              egret.TouchEvent.TOUCH_TAP,
              this.onShowLimit,
              this,
            ),
            this.langChange(),
            this.onChangeTable(),
            this.uodataTabInfo(),
            (this.tsVideo.selected = DataManager.autoShowVideo),
            this.showHideVideo(),
            this.checkBtnX2();
          for (var e in t.LunpanManager.betNameHash)
            this["name_lab_" + e].text = LangUtils.LANG_MAP["dzg_" + e] + ":";
          this.onChangeRoteBtn(2);
        }
      }),
      (i.prototype.onMoneyChange = function (t) {
        (this.lblMoney.text = ShareUtils.toMoney2_oo(DataManager.sumAmount)),
          this.checkRepeatButtonEnable();
      }),
      (i.prototype.initInfo = function (t) {
        void 0 === t && (t = null),
          (this.lblRouteAll_fb.text =
            DataManager.curTableState.tableInfo.gameSeq.toString());
        var e = DataManager.curTableState.tableInfo;
        this.gComNo.curTableState = DataManager.curTableState;
        var i =
          DataManager.getGameNameWithGameStyle(
            DataManager.curTableState.tableInfo.gameType,
            DataManager.curTableState.tableInfo.gamestyle,
          ) +
          DataManager.getTableStr1(DataManager.curTableState.tableInfo.tableid);
        (this.lblJuNum.text = e.shoeSeq.toString()),
          (this.lblRoomName.text = i);
        DataManager.curTable;
        DataManager.curTable
          ? (this.lbl_xiane.text =
              GameUtils.getNumberFormat(DataManager.curTable.minlimit) +
              "-" +
              GameUtils.getNumberFormat(DataManager.curTable.maxlimit))
          : (this.lbl_xiane.text = ""),
          (this.lblLimit.text =
            LangUtils.LANG_MAP.INFO_LIMIT +
            ":" +
            GameUtils.getNumberFormat(DataManager.curTable.minlimit) +
            "-" +
            GameUtils.getNumberFormat(DataManager.curTable.maxlimit)),
          (this.lblTitle.text = DataManager.getTableStr(
            DataManager.curTableState.tableid,
          ));
      }),
      (i.prototype.langChange = function () {
        (this.langLab0.text = LangUtils.LANG_MAP.dzg_main_10001 + ":"),
          (this.hongheiBtn.label = LangUtils.LANG_MAP.dzg_game_lunpan_13),
          (this.danshuangBtn.label = LangUtils.LANG_MAP.dzg_game_lunpan_14),
          (this.daxiaoBtn.label = LangUtils.LANG_MAP.dzg_game_lunpan_15),
          (this.btnRepeat.radio_pic_up.source =
            "hxbg_37_" + DataManager.LANG_TYPE + "_png"),
          (this.btnRepeat.radio_pic_down.source =
            "hxbg_37_" + DataManager.LANG_TYPE + "_png"),
          (this.btnRepeat.radio_pic_disabled.source =
            "hxbg_42_" + DataManager.LANG_TYPE + "_png"),
          (this.btnSure.radio_pic_up.source =
            "hxbg_36_" + DataManager.LANG_TYPE + "_png"),
          (this.btnSure.radio_pic_down.source =
            "hxbg_36_" + DataManager.LANG_TYPE + "_png"),
          (this.btnSure.radio_pic_disabled.source =
            "hxbg_41_" + DataManager.LANG_TYPE + "_png"),
          (this.btnCancel.radio_pic_up.source =
            "hxbg_35_" + DataManager.LANG_TYPE + "_png"),
          (this.btnCancel.radio_pic_down.source =
            "hxbg_35_" + DataManager.LANG_TYPE + "_png"),
          (this.btnCancel.radio_pic_disabled.source =
            "hxbg_40_" + DataManager.LANG_TYPE + "_png"),
          this.gameTime.changeLang(),
          (this.labeltotalbet.text = LangUtils.get("dzg_game_bjl_5")),
          (this.limitLable.text = LangUtils.LANG_MAP.INFO_LIMIT),
          DataManager.LANG_TYPE == DataManager.LANG_EN
            ? ((this.langLab0.size = 24),
              (this.labeltotalbet.size = 24),
              (this.lblTitle.size = 24),
              (this.lblLimit.size = 24))
            : DataManager.LANG_TYPE == DataManager.LANG_KN
              ? ((this.langLab0.size = 20),
                (this.labeltotalbet.size = 20),
                (this.lblTitle.size = 20),
                (this.lblLimit.size = 20))
              : DataManager.LANG_TYPE == DataManager.LANG_VL
                ? ((this.langLab0.size = 20),
                  (this.labeltotalbet.size = 20),
                  (this.lblTitle.size = 20),
                  (this.lblLimit.size = 20),
                  (this.limitLable.size = 16))
                : DataManager.LANG_TYPE == DataManager.LANG_HN ||
                    DataManager.LANG_TYPE == DataManager.LANG_JPN ||
                    DataManager.LANG_TYPE == DataManager.LANG_KR
                  ? ((this.langLab0.size = 20),
                    (this.labeltotalbet.size = 20),
                    (this.lblTitle.size = 20),
                    (this.lblLimit.size = 20))
                  : ((this.langLab0.size = 28),
                    (this.labeltotalbet.size = 28),
                    (this.lblTitle.size = 28),
                    (this.lblLimit.size = 28));
      }),
      (i.prototype.onShowTabFun = function () {}),
      (i.prototype.onCloseTabFun = function () {}),
      (i.prototype.changeTableInfoGroup = function (t) {
        (this.isShowTabInfo = t),
          (this.tabInfoGroup.visible = !0),
          (this.tabInfoAllGroup.visible = !0);
      }),
      (i.prototype.gameInit = function () {
        (this.pointList = new Array()),
          (this.seatDealList = new Array()),
          (this.timer = new egret.Timer(500, 6)),
          this.timer.addEventListener(
            egret.TimerEvent.TIMER,
            this.timerSeatDeal,
            this,
          ),
          (this.seatDealList = new Array()),
          this.gComNo.initUI(),
          (this.bottomGroup.visible = !0),
          this.setBetUI(),
          (this.txttotalbet.text = "0"),
          (this.gameTime.visible = !0);
      }),
      (i.prototype.tableInfo = function (t) {
        var e = t.data;
        if (DataManager.curTable && e.tableid == DataManager.curTable.tableid) {
          this.showRouteBTip(),
            this.showRoutePTip(),
            this.route.show(DataManager.curTableState.tableInfo.history2),
            this.showHistoryList(),
            this.initInfo(e.tablestate);
          var i = "";
          if ("S" == e.tablestate || "RP" == e.tablestate) {
            if (
              (this.gameTime.startTime(0),
              (i =
                "RP" == e.tablestate
                  ? "Maintaining_Table_Card"
                  : "M_Clear_Table_Card"),
              this.gameTime.stopTime(),
              this.gameTime.showState(i),
              "S" == e.tablestate && this.gameInit(),
              "RP" == DataManager.curTableState.tableInfo.tablestate)
            ) {
              var a = new ErrorMessage(-132);
              DataManager.errorMessage(a);
            }
          } else
            "Maintaining_Table_Card" == i ||
              "D" == e.tablestate ||
              ("WOP" == e.tablestate && this.gameTime.showState("SB0"));
          if ("A" == e.tablestate) {
            var n = this.clearSuper6Repeat();
            this.setRepeatButtonEnable(
              n.length > 0 &&
                DataManager.getRepeatAllNum(n) < DataManager.sumAmount,
            );
          } else this.setRepeatButtonEnable(!1);
          this.gComNo.touchEnabled = this.gComNo.touchChildren =
            "A" == e.tablestate;
        }
      }),
      (i.prototype.showRouteBTip = function () {}),
      (i.prototype.showRoutePTip = function () {}),
      (i.prototype.onTimeComplete = function () {
        (this.isCanBet = !1),
          this.setButtonEnable(!1),
          this.gComNo &&
            (this.gComNo.changeBetUIPosion(!0),
            (this.bottomGroup.visible = !1)),
          (this.gameTime.visible = !1),
          this.setRepeatButtonEnable(!1),
          this.setNOCOMEnable(!1);
      }),
      (i.prototype.betStart = function (e) {
        var i = e.data[0];
        if (i.tableid == DataManager.curTable.tableid)
          if (0 == i.bettype) {
            if (this.cur_gameSeq == i.gameSeq) return;
            (this.cur_gameSeq = i.gameSeq),
              (this.tempbetlist = {}),
              (this._responseList = []),
              this.gameInit(),
              (this.isCanBet = !0),
              this.setButtonEnable(!1),
              this.showWinGroup(),
              i.countdown < 500
                ? (this.isCanBet = !1)
                : dzxx.SoundManager.inst.playBetting(
                    dzxx.SoundManager.bettingStart,
                  ),
              (this.gameState = t.GameAction.STATE_ACCEPT_BET),
              this.checkRepeatButtonEnable();
            var a = egret.getTimer() + i.countdown;
            this.gameTime.startTime(a), this.checkBetCount();
          } else
            3 == i.bettype &&
              ((this.isCanBet = !1), this.cleartempcoins(), this.checkBtnX2());
      }),
      (i.prototype.join_curList_send = function () {
        this._curList_send || (this._curList_send = {});
        var t = {},
          e = 0;
        for (var i in this._curList)
          (e = this._curList[i]),
            this._curList_send[i] &&
              (e = this._curList[i] - this._curList_send[i]),
            e > 0 && (t[i] = e),
            (this._curList_send[i] =
              (this._curList_send[i] ? this._curList_send[i] : 0) + e);
        return t;
      }),
      (i.prototype.ok_curList_send = function (t) {
        if (this._curList_send) {
          var e = 0,
            i = 0;
          for (var a in this._curList_send)
            t.option.indexOf(a) >= 0
              ? ((e = t.amount[t.option.indexOf(a)]),
                (this._curList_send[a] = this._curList_send[a] - e),
                (i = this._curList && this._curList[a] ? this._curList[a] : 0),
                i > 0 &&
                  ((this._curList[a] = 0 > i - e ? 0 : i - e),
                  this._curList[a] <= 0 && delete this._curList[a]),
                this._curList_send[a] <= 0 && delete this._curList_send[a])
              : (delete this._curList_send[a],
                this._curList && this._curList[a] && delete this._curList[a]);
        }
      }),
      (i.prototype.onBack = function () {
        var t = DataManager.getLobbyTableData(this.tableid).lobbyid;
        (DataManager.curTableState = null),
          (DataManager.curTable = null),
          (ShareUtils.main.gameView = null),
          this.dispose(),
          ChooseTableView.inst.show(t);
      }),
      (i.prototype.onMenu = function () {
        MenuView.getIns().showhide();
      }),
      (i.prototype.changeBetUIfun = function () {
        (this.isbetChangeUI = !this.isbetChangeUI),
          this.setBetUI(),
          this.updataCoinInfo();
      }),
      (i.prototype.onShowRoteFun = function () {
        (this.roteMainGroup.visible = !this.roteMainGroup.visible),
          this.roteMainGroup.visible && this.route.updata();
      }),
      (i.prototype.setBetUI = function () {
        this.isbetChangeUI
          ? (this.gComNo &&
              this.gComNo.changePlayType(t.LunpaiBetScreen.play_type_2),
            (this.changeBetImg.source =
              "lunpanbet_change1_" + DataManager.LANG_TYPE + "_png"))
          : (this.gComNo &&
              this.gComNo.changePlayType(t.LunpaiBetScreen.play_type_1),
            (this.changeBetImg.source =
              "lunpanbet_change2_" + DataManager.LANG_TYPE + "_png")),
          this.gComNo.visible && this.gComNo.updataBetItem();
      }),
      (i.prototype.onBetSure = function (t) {
        (DataManager.xAxis = t.stageX),
          (DataManager.yAxis = t.stageY),
          this.sendBet(this.join_curList_send());
      }),
      (i.prototype.sendBet = function (t) {
        var e = new Array(),
          i = new Array();
        for (var a in t) {
          GameUtils.getOppoPoint(
            DataManager.curTableState.tableInfo.gameType,
            a,
          );
          e.push(a), i.push(Math.floor(t[a]));
        }
        if (0 == e.length) {
          var n = new BetResponseMessage(
            0,
            DataManager.curTableState.tableid,
            null,
            null,
            0,
          );
          return void this.betResponseFun(n);
        }
        (this.bet_length = e.length),
          MessageHandler.bet(
            DataManager.curTableState.tableid,
            e,
            i,
            DataManager.isNOCOM ? 1 : 0,
            DataManager.curTableState.tableInfo.gameSeq,
          );
      }),
      (i.prototype.betResponseFun = function (t) {
        1 == t.result &&
          t.option &&
          (t.result = this.bet_length == t.option.length ? 1 : 2),
          1 == t.result || 2 == t.result
            ? (t.option &&
                DataManager.selectBetCoinDisByTabshid(
                  t.option,
                  DataManager.curTableState.tableInfo.tableSeq,
                ),
              (this._repeatList = this._responseList),
              2 == t.result && this.cleartempcoins(),
              this.ok_curList_send(t),
              (this.notBetCount = 0),
              dzxx.SoundManager.inst.playSound(dzxx.SoundManager.Bet_success),
              this.setRepeatButtonEnable(!1))
            : (this.cleartempcoins(),
              (this._curList = null),
              (this._curList_send = null));
      }),
      (i.prototype.onBetCancel = function () {
        this.cleartempcoins(),
          (this._curList = null),
          this.checkRepeatButtonEnable();
      }),
      (i.prototype.cleartempcoins = function () {
        (this.tempbetlist = {}),
          (this.onBetX2Temp = []),
          this.gComNo.clearTmpCoins(),
          this.updataCoinInfo();
      }),
      (i.prototype.onBetRepet = function () {
        var t = this.clearSuper6Repeat();
        (this._curList = this.joinList(t)),
          this.updateTempCoins(t),
          this.updataCoinInfo();
      }),
      (i.prototype.onBetX2 = function () {
        var t = this.gComNo.arrTmpCoin.length;
        if (this.gComNo.arrTmpCoin && t > 0) {
          var e = [],
            i = [];
          for (var a in this.tempbetlist) {
            var n = {};
            (n[a] = this.tempbetlist[a]), e.push(n);
            var s = {};
            (s[a] = this.tempbetlist[a] + this.tempbetlist[a]), i.push(s);
          }
          return (
            (this._curList = this.joinList(i)),
            this.updateTempCoins(e, !1),
            void this.updataCoinInfo()
          );
        }
        if (this.gComNo.arrOkCoin && this.gComNo.arrOkCoin.length > 0) {
          var e = this.clearSuper6Repeat();
          return (
            (this._curList = this.joinList(e)),
            this.updateTempCoins(e),
            void this.updataCoinInfo()
          );
        }
        if (this._responseList && this._responseList.length > 0) {
          var e = this.clearSuper6Response();
          (this._curList = this.joinList(e)),
            this.updateTempCoins(e),
            this.updataCoinInfo();
        }
      }),
      (i.prototype.updateTempCoins = function (t, e) {
        void 0 === e && (e = !0), e && this.cleartempcoins();
        var i = this.joinList(t);
        for (var a in i)
          this.addBetCoin(i[a], {
            betName: a,
          }),
            (this.tempbetlist[a] = this.tempbetlist[a] || 0),
            (this.tempbetlist[a] += i[a]);
      }),
      (i.prototype.setNOCOMbuttonState = function () {
        var e,
          i = 0,
          a = this.gameState == t.GameAction.STATE_ACCEPT_BET;
        if (this.curList) {
          if (((i = this.curList.BANKER), i > 0))
            return void this.setNOCOMEnable(!1);
          if (((i = this.curList.SS), i > 0))
            return void this.setNOCOMEnable(!1);
        }
        if ((e = this.joinResponseList)) {
          if (((i = e.BANKER), i > 0)) return void this.setNOCOMEnable(!1);
          if (((i = e.SS), i > 0)) return void this.setNOCOMEnable(!1);
        }
        this.setNOCOMEnable(a && !DataManager.hasTableStates_B_S());
      }),
      (i.prototype.setNOCOMEnable = function (t) {}),
      (i.prototype.checkUserhaveBet = function (t) {
        this.setButtonEnable(t.data),
          t.data && this.setRepeatButtonEnable(!1),
          this.checkBtnX2();
      }),
      (i.prototype.checkBtnX2 = function () {
        this.gComNo.gBet.numChildren > 0
          ? this.gameState == t.GameAction.STATE_ACCEPT_BET && this.isCanBet
            ? DataManager.Q1E5_login
              ? (ShareUtils.setGrayFilter(this.btnX2, !0),
                (this.btnX2.touchEnabled = !1),
                (this.btnX2.visible = !1))
              : ((this.btnX2.visible = !0),
                ShareUtils.setGrayFilter(this.btnX2, !1),
                (this.btnX2.touchEnabled = !0))
            : (ShareUtils.setGrayFilter(this.btnX2, !0),
              (this.btnX2.touchEnabled = !1),
              (this.btnX2.visible = !1))
          : (this.btnX2.visible = !1);
      }),
      (i.prototype.checkRepeatButtonEnable = function () {
        for (
          var e = this.clearSuper6Repeat(), i = 0, a = 0;
          a < e.length;
          a++
        ) {
          var n = e[a],
            s = Object.keys(n)[0];
          i += n[s];
        }
        return this._responseList.length > 0 || DataManager.sumAmount < i
          ? void this.setRepeatButtonEnable(!1)
          : void (
              e.length > 0 &&
              this.gameState == t.GameAction.STATE_ACCEPT_BET &&
              DataManager.sumAmount >= i &&
              this.setRepeatButtonEnable(!0)
            );
      }),
      (i.prototype.setButtonEnable = function (t) {
        this.btnSure;
        (this.btnSure.touchEnabled = this.btnCancel.touchEnabled = t),
          dzxx.LiveVideo.lunpanZoom(t),
          ShareUtils.setGrayFilter(this.btnSure, !t),
          ShareUtils.setGrayFilter(this.btnCancel, !t);
      }),
      (i.prototype.setRepeatButtonEnable = function (t) {
        (this.btnRepeat.touchEnabled = t),
          ShareUtils.setGrayFilter(this.btnRepeat, !t);
      }),
      (i.prototype.betClick = function (t) {
        this.betByNameArea(t.data, DataManager.amount);
      }),
      (i.prototype.betByNameArea = function (e, i) {
        if (
          0 != this.isCanBet &&
          this.gameState == t.GameAction.STATE_ACCEPT_BET
        ) {
          if (t.LunpaiBetScreen.betTmpCoinTongji.length > 30)
            return void Alert.tipGame(LangUtils.LANG_MAP.dzg_main_10019);
          var a = i,
            n = this.curTotalBet;
          if (DataManager.sumAmount <= n)
            return void Alert.tipGame(LangUtils.LANG_MAP.BET_NO_BALANCE);
          if (DataManager.sumAmount < 1)
            return void Alert.tipGame(LangUtils.LANG_MAP.BET_NO_BALANCE);
          var s = e.betName;
          e.fashi;
          (e.fbamount = i), null == this.curList[s] && (this._curList[s] = 0);
          var r = this.curList[s],
            o = this.responseTotalBetByName(s),
            h = a + this._curList[s] + o,
            l = Opposite.getName(
              DataManager.curTableState.tableInfo.gameType,
              s,
            ),
            g = 0;
          if (
            (l &&
              (g = (this._curList[l] || 0) + this.responseTotalBetByName(l)),
            (h = BetLimitAction.getIns().getGameLimit(
              DataManager.curTableState.tableid,
              s,
              h,
              l,
              g,
            )),
            h > 0)
          )
            if (n - this._curList[s] + h - o > DataManager.sumAmount) {
              if (
                ((h = DataManager.sumAmount - n + this._curList[s] + o),
                (h = Math.floor(h)),
                !BetLimitAction.getIns().checkMultiTableLimit(
                  DataManager.curTableState.tableid,
                  s,
                  h,
                  l,
                  g,
                ))
              )
                return void Alert.tipGame(
                  LangUtils.LANG_MAP.BET_NO_BALANCE_TO_LIMIT,
                );
              Alert.tipGame(LangUtils.LANG_MAP.BET_NO_BALANCE);
            } else
              a + this._curList[s] + o > h &&
                Alert.tipGame(LangUtils.LANG_MAP.BET_TOO_MUCH);
          switch (h) {
            case -1:
              return void Alert.tipGame(LangUtils.LANG_MAP.OPERATE_FAIL);
            case -2:
              return void Alert.tipGame(LangUtils.LANG_MAP.OPERATE_FAIL);
            default:
              (this._curList[s] = h - o),
                this._curList[s] <= 0 && (this._curList[s] = 0);
          }
          if (this._curList[s] > 0) {
            var u = this._curList[s] - r;
            if (
              u > 0 &&
              (this.addBetCoin(u, e, !0),
              (this.tempbetlist[s] = this.tempbetlist[s] || 0),
              (this.tempbetlist[s] += Math.floor(u)),
              this.onBetX2Temp.push(e),
              "add_fashi" == e.add_fashi &&
                !t.LunpaiBetScreen.fashi_add_hash[e.fashi_id])
            ) {
              var c = {};
              (c.title_type = "-1"),
                (c.betName = e.add_betName),
                (c.fashi = "fashi"),
                this.addFashiBetCoin(u, c, !0),
                (t.LunpaiBetScreen.fashi_add_hash[e.fashi_id] = c);
            }
          }
          this.updataCoinInfo();
        }
      }),
      (i.prototype.addBetCoin = function (t, e, i) {
        void 0 === i && (i = !1),
          this.gComNo.visible && this.gComNo.addBetCoin(t, e, i);
      }),
      (i.prototype.addFashiBetCoin = function (t, e, i) {
        void 0 === i && (i = !1),
          this.gComNo.visible && this.gComNo.addFashiBetCoin(t, e, i);
      }),
      (i.prototype.updataCoinInfo = function (t) {
        void 0 === t && (t = !1),
          this.gComNo.visible &&
            this.gComNo.updataCoinInfo(
              this.joinResponseList,
              this.tempbetlist,
              t,
            );
      }),
      (i.prototype.playDragonTigerPoint = function (t, e) {
        var i;
        if (!(0 >= e || e > 13))
          return (i =
            1 == e
              ? t + "hasAce" + this.getSoundType()
              : 11 == e
                ? t + "hasJack" + this.getSoundType()
                : 12 == e
                  ? t + "hasQueen" + this.getSoundType()
                  : 13 == e
                    ? t + "hasKing" + this.getSoundType()
                    : t + e + "points" + this.getSoundType());
      }),
      (i.prototype.getSoundType = function () {
        return "_M_mp3";
      }),
      (i.prototype.betResult = function (e) {
        var i = e.data;
        i.tableid == DataManager.curTableState.tableid &&
          (this.setButtonEnable(!1),
          this.cleartempcoins(),
          (this.gameState = t.GameAction.STATE_RESULT),
          this.onActionResult(i),
          this.gComNo.clearTmpCoins(),
          this.gComNo.visible && this.gComNo.showWinSelect(i.cardresult),
          this.showWinGroup(parseInt(i.cardresult)));
      }),
      (i.prototype.onActionResult = function (e) {
        this._responseList.length && (this._repeatList = this._responseList),
          (this.tempbetlist = {}),
          (this.onBetX2Temp = []),
          (this._responseList = []),
          (this.notBetCount += 1),
          (this.gameState = t.GameAction.STATE_RESULT),
          this._curList_send && (this._curList_send = {}),
          (this._curList = null),
          0 != e.winAmount &&
            (e.winAmount > 0
              ? Alert.tipGame(
                  LangUtils.LANG_MAP.dzg_game_longhu_11 +
                    ShareUtils.toMoney(e.winAmount),
                )
              : e.winAmount < 0 &&
                Alert.tipGame(
                  LangUtils.LANG_MAP.dzg_game_longhu_12 +
                    ShareUtils.toMoney(e.winAmount),
                ));
      }),
      (i.prototype.playResultSound = function () {}),
      (i.prototype.betResponse = function (t) {
        this.betResponseFun(t.data),
          1 == t.data.result
            ? this.setResultTip(LangUtils.LANG_MAP.BET_SUCCESS)
            : 2 == t.data.result
              ? this.setResultTip(LangUtils.LANG_MAP.BET_UNDER_MUCH)
              : -112 == t.data.result
                ? this.setResultTip(LangUtils.LANG_MAP.BET_UNDER_MUCH)
                : -113 == t.data.result
                  ? this.setResultTip(LangUtils.LANG_MAP.BET_UNDER_MUCH)
                  : -95 == t.data.result
                    ? Alert.tipGame(
                        LangUtils.LANG_MAP.dzg_game_bjl_30,
                        16243228,
                      )
                    : -96 == t.data.result
                      ? Alert.tipGame(
                          LangUtils.LANG_MAP.dzg_game_bjl_31,
                          16243228,
                        )
                      : -122 == t.data.result
                        ? this.setResultTip(LangUtils.LANG_MAP.BET_TOO_MUCH)
                        : -123 == t.data.result
                          ? this.setResultTip(
                              LangUtils.LANG_MAP.BET_TOO_MUCH_OF_ALL_TABLE,
                            )
                          : -140 == t.data.result
                            ? Alert.showCaptcha()
                            : this.setResultTip(LangUtils.LANG_MAP.BET_FAILE);
      }),
      (i.prototype.setResultTip = function (t, e) {
        return (
          void 0 === e && (e = 16243228),
          Alert.tipGame(LangUtils.LANG_MAP[t] || t, e)
        );
      }),
      (i.prototype.seatBetting = function (t) {
        var e = t.data;
        if (
          DataManager.curTable.tableid == e.tableid &&
          DataManager.userid == e.userid
        ) {
          if (!e.option || "" == e.option || 0 == e.amount) return;
          var i = e.option,
            a = {};
          (a[i] = e.amount),
            this._responseList.push(a),
            (this.tempbetlist = {}),
            (this.onBetX2Temp = []),
            this.updataCoinInfo(!0),
            (this.txttotalbet.text = ShareUtils.toMoney2_oo(
              this.responseTotalBet,
            )),
            this.checkBtnX2();
        }
      }),
      (i.prototype.betAmount = function (t) {
        var e = t.data;
        this.tableid == e && (this.showBeiDataInfo(), this.uodataTabInfo(!0));
      }),
      (i.prototype.showBeiDataInfo = function () {
        if (DataManager.curTableState)
          for (
            var e =
                (t.LunpanManager.getRoteTongji(
                  DataManager.curTableState.tableInfo.history3,
                ),
                DataManager.curTableState.tablePool),
              i = 0,
              a = t.LunpanManager.betNameArr.length;
            a > i;
            i++
          ) {
            var n = t.LunpanManager.betNameArr[i];
            null == e[n] || "" == e[n] || void 0 == e[n]
              ? (this["name_value_" + n].text = "0/0")
              : (this["name_value_" + n].text = e[n]);
          }
      }),
      (i.prototype.uodataTabInfo = function (t) {
        void 0 === t && (t = !0);
      }),
      (i.prototype.seatDeal = function (t) {}),
      (i.prototype.showCard = function (t) {
        (t.order < this.seatDealList.length &&
          this.seatDealList[t.order] &&
          ShareUtils.timeByMessageID(t.messageID) <
            ShareUtils.timeByMessageID(this.seatDealList[t.order].messageID)) ||
          ((this.seatDealList[t.order] = t), this.openDeal(t));
      }),
      (i.prototype.timerSeatDeal = function (t) {
        null != this.seatDealList &&
          (this.seatDealList[this.timer.currentCount - 1]
            ? this.openDeal(this.seatDealList[this.timer.currentCount - 1])
            : 5 == this.timer.currentCount &&
                this.seatDealList[this.timer.currentCount]
              ? (this.openDeal(this.seatDealList[this.timer.currentCount]),
                this.timer.stop())
              : this.timer.stop());
      }),
      (i.prototype.openDeal = function (t, e) {
        void 0 === e && (e = !0);
        var i = parseInt(t.point);
        (this.pointList[t.order] = i),
          this.refreshpoints(),
          (this["card" + t.order].source =
            "DUICard_" + t.color + "_" + t.point + "_png"),
          5 == this.pointList.length,
          6 == this.pointList.length;
      }),
      (i.prototype.refreshpoints = function () {
        (this.playerPoint = 0), (this.bankerPoint = 0);
        for (var t = 0; t < this.pointList.length; t++)
          t % 2 == 0
            ? (this.playerPoint += this.pointList[t] || 0)
            : (this.bankerPoint += this.pointList[t] || 0);
      }),
      (i.prototype.checkCards = function (t, e, i, a) {
        var n = ShareUtils.timeByMessageID(t.messageID);
        if (!(this.save_time_deal > n)) {
          var s = t.cardresult;
          if (s) {
            var r = s.split(";");
            if (0 != r.length) {
              var o,
                h,
                l,
                g = 0,
                u = 0,
                c = !1;
              n > this.save_time_deal && (this.save_time_deal = n);
              for (var d = 0; d < r.length; d++)
                if (((o = r[d].split("-")), !(o.length < 2))) {
                  (h = o[0]),
                    (g = parseInt(o[1])),
                    (u = parseInt(o[2])),
                    (c = !1),
                    (l = null);
                  for (var p = 0; p < e.length; p++)
                    (l = e[p]),
                      l &&
                        l.order == u &&
                        ((c = !0),
                        (l.point != h || l.color != g || 1 == l.state) &&
                          ((l.point = h),
                          (l.color = g),
                          (l.messageID = t.messageID),
                          i.call(a, l)));
                  0 == c &&
                    parseInt(h) > 0 &&
                    ((l = new SeatDealMessage(t.tableid, 0, g, h, u, -1)),
                    (l.messageID = t.messageID),
                    i.call(a, l));
                }
            }
          }
        }
      }),
      (i.prototype.initBet = function () {
        var e,
          i = [],
          a = MultiCurrencyManager.coinsArray,
          n = DataManager.curTableState,
          s = DataManager.currentLimitKey,
          r = -1,
          o = -1;
        if (
          n &&
          n.enterType == DataManager.ENTER_TABLE_TYPE_SIDE &&
          n.tableInfo &&
          n.tableInfo.alimitKeys
        )
          for (var h = 0; h < n.tableInfo.alimitKeys.length; h++)
            if (n.tableInfo.alimitKeys[h] == s) {
              r = h;
              break;
            }
        if (
          n &&
          n.enterType != DataManager.ENTER_TABLE_TYPE_SIDE &&
          n.tableInfo &&
          n.tableInfo.limitKeys
        )
          for (var l = 0; l < n.tableInfo.limitKeys.length; l++)
            if (n.tableInfo.limitKeys[l] == s) {
              o = l;
              break;
            }
        var g = !0,
          u = n.tableInfo.aminlimit,
          c = n.tableInfo.amaxlimit,
          d = n.tableInfo.minlimit,
          p = n.tableInfo.maxlimit;
        for (var _ in a) {
          var b = a[_],
            m = {
              value: b,
              size: 70,
              autolight: !1,
            };
          i.push(m),
            n
              ? g &&
                ((r > -1 && this.isinlimitrange(u, c, r, b)) ||
                  (o > -1 && this.isinlimitrange(d, p, o, b))) &&
                ((e = m), (g = !1))
              : (e = m),
            b == DataManager.amount &&
              ((r > -1 && this.isinlimitrange(u, c, r, DataManager.amount)) ||
                (o > -1 && this.isinlimitrange(d, p, o, DataManager.amount))) &&
              (e = m);
        }
        DataManager.amount = e.value;
        for (var T = 0, v = 0; v < i.length; v++) {
          var E = new t.GameBetItem();
          this.gBets.addChild(E),
            E.setItem(i[v]),
            e == i[v] ? (E.selectBetItem(!0), (T = v)) : E.selectBetItem(!1);
        }
        T > 5 && (this.betScroller.viewport.scrollH = 80 * (T - 5) + 240);
      }),
      (i.prototype.isinlimitrange = function (t, e, i, a) {
        return t[i] <= a && a <= e[i];
      }),
      (i.prototype.onScrollBetUp = function () {
        this.betScroller.stopAnimation(),
          this.betScroller.viewport.scrollH - 300 > 0
            ? egret.Tween.get(this.betScroller.viewport).to(
                {
                  scrollH: this.betScroller.viewport.scrollH - 300,
                },
                300,
              )
            : egret.Tween.get(this.betScroller.viewport).to(
                {
                  scrollH: 0,
                },
                300,
              );
      }),
      (i.prototype.onShowLimit = function () {
        null == this.gameLimit && (this.gameLimit = new t.GameLimitUI()),
          this.addChild(this.gameLimit),
          this.gameLimit.showUI(DataManager.curTable.gameType);
      }),
      (i.prototype.onScrollBetDown = function () {
        this.betScroller.stopAnimation(),
          this.betScroller.viewport.scrollH + 300 <
          this.betScroller.viewport.contentWidth - 440
            ? egret.Tween.get(this.betScroller.viewport).to(
                {
                  scrollH: this.betScroller.viewport.scrollH + 300,
                },
                300,
              )
            : egret.Tween.get(this.betScroller.viewport).to(
                {
                  scrollH: this.betScroller.viewport.contentWidth - 440,
                },
                300,
              );
      }),
      (i.prototype.onChooseBet = function (e) {
        if (e.target instanceof t.GameBetItem) {
          var i = e.target;
          if (i.isSelect) return;
          for (var a = 0; a < this.gBets.numChildren; a++)
            this.gBets.getChildAt(a).selectBetItem(!1);
          i.selectBetItem(!0), (DataManager.amount = i.nValue);
        }
      }),
      (i.prototype.onRouteGroupResize = function (t) {
        void 0 === t && (t = null),
          this.route && this.roteMainGroup.visible && this.route.updata();
      }),
      (i.prototype.historyResultFunResize = function (t) {
        void 0 === t && (t = null), this.showHistoryList();
      }),
      (i.prototype.showHistoryList = function () {
        var t = Math.floor(this.showRoteBtn.width / 52);
        DataManager.curTableState.tableInfo.history2.length >= t && (t -= 1);
        var e = DataManager.curTableState.tableInfo.history2.slice(-1 * t);
        (this.myCollection = new eui.ArrayCollection(e)),
          (this.his_list.dataProvider = this.myCollection);
      }),
      (i.prototype.onAskBRoute = function (t) {
        (this.imgAskB.source = "gameTipBanker1_png"),
          (this.imgAskP.source = "gameTipPlayer2_png");
      }),
      (i.prototype.onAskPRoute = function (t) {
        (this.imgAskP.source = "gameTipPlayer1_png"),
          (this.imgAskB.source = "gameTipBanker2_png");
      }),
      (i.prototype.onChangeTable = function () {
        this.dispatchEvent(new egret.Event("OnChangeTable", !0, !0));
      }),
      (i.prototype.showComState = function () {
        DataManager.isNOCOM, this.updataCoinInfo();
      }),
      (i.prototype.onVideo = function (t) {
        this.showHideVideo(t);
      }),
      (i.prototype.showHideVideo = function (t) {
        if ((void 0 === t && (t = null), this.tsVideo.selected))
          DZTimeCountBar.inst.hide(), dzxx.LiveVideo.playvideo();
        else {
          dzxx.LiveVideo.stopvideo();
          DataManager.getLobbyTableData(this.tableid);
          DZTimeCountBar.inst.show(
            this.videogroup,
            DataManager.getLobbyTableData(this.tableid).lobbyid,
          );
        }
      }),
      Object.defineProperty(i.prototype, "responseTotalBet", {
        get: function () {
          var t = 0;
          for (var e in this._responseList) {
            var i = this._responseList[e];
            for (var a in i) t += i[a] || 0;
          }
          return t;
        },
        enumerable: !0,
        configurable: !0,
      }),
      (i.prototype.responseTotalBetByName = function (t) {
        var e = 0;
        for (var i in this._responseList) {
          var a = this._responseList[i];
          e += a[t] || 0;
        }
        return e;
      }),
      Object.defineProperty(i.prototype, "curList", {
        get: function () {
          return null == this._curList && (this._curList = {}), this._curList;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "curTotalBet", {
        get: function () {
          var t = 0;
          for (var e in this._curList) t += this._curList[e] || 0;
          return t;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "bankerPoint", {
        get: function () {
          return this._bankerPoint;
        },
        set: function (t) {
          this._bankerPoint = t || 0;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "playerPoint", {
        get: function () {
          return this._playerPoint;
        },
        set: function (t) {
          this._playerPoint = t || 0;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "joinResponseList", {
        get: function () {
          return this.joinList(this._responseList);
        },
        enumerable: !0,
        configurable: !0,
      }),
      (i.prototype.joinList = function (t) {
        var e = {};
        for (var i in t) {
          var a = t[i];
          for (var n in a) null == e[n] && (e[n] = 0), (e[n] += a[n]);
        }
        return e;
      }),
      (i.prototype.clearSuper6Repeat = function () {
        var t = [];
        for (var e in this._repeatList)
          (null == this._repeatList[e].SS || 0 != DataManager.isNOCOM) &&
            ((null == this._repeatList[e].BANKER &&
              this._repeatList[e].BANKER <= 0) ||
              (null == this._repeatList[e].PLAYER &&
                this._repeatList[e].PLAYER <= 0) ||
              (null == this._repeatList[e].TILE &&
                this._repeatList[e].TILE <= 0) ||
              (null == this._repeatList[e].BP && this._repeatList[e].BP <= 0) ||
              (null == this._repeatList[e].PP && this._repeatList[e].PP <= 0) ||
              t.push(this._repeatList[e]));
        return t;
      }),
      (i.prototype.clearSuper6Response = function () {
        var t = [];
        for (var e in this._responseList)
          (null == this._responseList[e].SS || 0 != DataManager.isNOCOM) &&
            ((null == this._responseList[e].BANKER &&
              this._responseList[e].BANKER <= 0) ||
              (null == this._responseList[e].PLAYER &&
                this._responseList[e].PLAYER <= 0) ||
              (null == this._responseList[e].TILE &&
                this._responseList[e].TILE <= 0) ||
              (null == this._responseList[e].BP &&
                this._responseList[e].BP <= 0) ||
              (null == this._responseList[e].PP &&
                this._responseList[e].PP <= 0,
              t.push(this._responseList[e])));
        return t;
      }),
      (i.prototype.checkBetCount = function () {
        1 != ShareUtils.inWhiteList() &&
          (3 == this.notBetCount
            ? Alert.tipGame(LangUtils.LANG_MAP.NULL_BET_THREE_TIMES)
            : this.notBetCount >= 5 &&
              ((this.notBetCount = 0),
              dzxx.LiveVideo.ifStopVideo(),
              EventManager.getIns().dispatchEvent(
                new GotoViewEvent(GotoViewEvent.GOTO_VIEW, View.LOBBY_VIEW),
              ),
              Alert.show(LangUtils.LANG_MAP.NULL_BET_FIVE_TIMES)));
      }),
      (i.prototype.onVideoZoom = function () {
        this.changeZoom(dzxx.LiveVideo.switchZoom());
      }),
      (i.prototype.changeZoom = function (t) {
        t
          ? (this.video_zoom.source = "video_normal_png")
          : (this.video_zoom.source = "video_card_png");
      }),
      (i.prototype.onChangeRote = function (t) {
        var e = t.currentTarget.name,
          i = parseInt(e.split("_")[1]);
        this.hongheiBtn.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onChangeRote,
          this,
        ),
          this.daxiaoBtn.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onChangeRote,
            this,
          ),
          this.danshuangBtn.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onChangeRote,
            this,
          ),
          this.route && this.route.updata(i),
          this.onChangeRoteBtn(i);
      }),
      (i.prototype.onChangeRoteBtn = function (t) {
        2 == t &&
          ((this.hongheiBtn.touchEnabled = !1),
          (this.hongheiBtn.enabled = !1),
          (this.daxiaoBtn.touchEnabled = !0),
          (this.danshuangBtn.touchEnabled = !0),
          (this.daxiaoBtn.enabled = !0),
          (this.danshuangBtn.enabled = !0)),
          3 == t &&
            ((this.daxiaoBtn.touchEnabled = !1),
            (this.daxiaoBtn.enabled = !1),
            (this.hongheiBtn.touchEnabled = !0),
            (this.danshuangBtn.touchEnabled = !0),
            (this.hongheiBtn.enabled = !0),
            (this.danshuangBtn.enabled = !0)),
          5 == t &&
            ((this.danshuangBtn.touchEnabled = !1),
            (this.danshuangBtn.enabled = !1),
            (this.hongheiBtn.touchEnabled = !0),
            (this.daxiaoBtn.touchEnabled = !0),
            (this.hongheiBtn.enabled = !0),
            (this.daxiaoBtn.enabled = !0));
      }),
      (i.prototype.showWinGroup = function (e) {
        return (
          void 0 === e && (e = -1),
          0 > e
            ? void (this.lunpanWinGroup.visible = !1)
            : ((this.lunpanWinGroup.visible = !0),
              (this.lunpanWinLab.text = e.toString()),
              0 == e
                ? ((this.lunpanWinBg.source = "lunpanbg_green_png"),
                  (this.lunpanWinDanLab.text = ""),
                  (this.lunpanWinXiaoLab.text = ""),
                  void (this.lunpanWinDaLieLab.text = ""))
                : (t.LunpanManager.getHoneHeiRoteType(e) ==
                  t.LunpanManager.ROTE_HONG_TYPE
                    ? (this.lunpanWinBg.source = "lunpanbg_red_png")
                    : (this.lunpanWinBg.source = "lunpanbg_back_png"),
                  t.LunpanManager.getDanShuangRoteType(e) ==
                  t.LunpanManager.ROTE_DAN_TYPE
                    ? (this.lunpanWinDanLab.text =
                        LangUtils.LANG_MAP.dzg_game_lunpan_1)
                    : (this.lunpanWinDanLab.text =
                        LangUtils.LANG_MAP.dzg_game_lunpan_2),
                  t.LunpanManager.getDaXiaoRoteType(e) ==
                  t.LunpanManager.ROTE_XIAO_TYPE
                    ? (this.lunpanWinXiaoLab.text =
                        LangUtils.LANG_MAP.dzg_game_lunpan_3)
                    : (this.lunpanWinXiaoLab.text =
                        LangUtils.LANG_MAP.dzg_game_lunpan_4),
                  void (t.LunpanManager.getDalieRoteType_A(e) ==
                  t.LunpanManager.ROTE_DA_TYPE_1
                    ? (this.lunpanWinDaLieLab.text =
                        LangUtils.LANG_MAP.dzg_game_lunpan_5)
                    : t.LunpanManager.getDalieRoteType_A(e) ==
                        t.LunpanManager.ROTE_DA_TYPE_2
                      ? (this.lunpanWinDaLieLab.text =
                          LangUtils.LANG_MAP.dzg_game_lunpan_6)
                      : (this.lunpanWinDaLieLab.text =
                          LangUtils.LANG_MAP.dzg_game_lunpan_7))))
        );
      }),
      (i.prototype.dispose = function () {
        (this.cur_gameSeq = -1),
          dzxx.SoundManager.inst.stopSoundChanel(),
          MessageHandler.leaveTable(this.tableid),
          (this.card_open_num = 0),
          this.removeEventListener("OnHitBetOk", this.onBetSure, this),
          this.removeEventListener("OnHitBetCancel", this.onBetCancel, this),
          this.removeEventListener("OnHitBetTable", this.betClick, this),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.CHECK_USER_HAVE_BET,
            this.checkUserhaveBet,
            this,
          ),
          this.btnbackgroup.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onBack,
            this,
          ),
          this.btnmenugroup.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onMenu,
            this,
          ),
          this.changeBetGroup.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.changeBetUIfun,
            this,
          ),
          this.btnSure.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onBetSure,
            this,
          ),
          this.btnCancel.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onBetCancel,
            this,
          ),
          this.btnRepeat.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onBetRepet,
            this,
          ),
          this.showRoteBtn.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onShowRoteFun,
            this,
          ),
          this.gBets.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onChooseBet,
            this,
          ),
          this.btnX2.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onBetX2,
            this,
          ),
          this.tsVideo.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onVideo,
            this,
          ),
          this.gRote.removeEventListener(
            egret.Event.RESIZE,
            this.onRouteGroupResize,
            this,
          ),
          this.showRoteBtn.removeEventListener(
            egret.Event.RESIZE,
            this.historyResultFunResize,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.BET_AMOUNT,
            this.betAmount,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.BET_START,
            this.betStart,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.BET_RESULT,
            this.betResult,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.SEAT_DEAL,
            this.seatDeal,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.BET_RESPONSE,
            this.betResponse,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.TABLE_INFO,
            this.tableInfo,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.SEAT_BETTING,
            this.seatBetting,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.User_INFO,
            this.onMoneyChange,
            this,
          ),
          this.btnLimit_fb.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onShowLimit,
            this,
          ),
          this.gComNo.dispose(),
          this.gameTime.stopTime(),
          dzxx.LiveVideo.ifStopVideo(),
          (this.route = null),
          (this.timer = null),
          (this.seatDealList = null),
          (this.pointList = null),
          (this.go_enter = !1),
          (this.btnmenugroup = null),
          (this.btnbackgroup = null),
          (this.tsVideo = null),
          (this.notBetCount = 0),
          this.dispatchEvent(new egret.Event("hideChangeTable", !0, !0)),
          this.parent && this.parent.removeChild(this);
      }),
      i
    );
  })(ViewAbstract);
  (t.LunpanView = e),
    __reflect(e.prototype, "game.LunpanView", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(game || (game = {}));
var lunpanHistoryItem = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.skinName = "resource/skins/lunpan_skins/lunpanHistoryItem.exml"), e
    );
  }
  return (
    __extends(e, t),
    (e.prototype.partAdded = function (e, i) {
      t.prototype.partAdded.call(this, e, i);
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this);
    }),
    (e.prototype.dataChanged = function () {
      if (this.data) {
        this.my_name.text = this.data.toString();
        var t = game.LunpanManager.getHoneHeiRoteType(parseInt(this.data));
        t == game.LunpanManager.ROTE_HONG_TYPE
          ? (this.item_rect.fillColor = 14236721)
          : t == game.LunpanManager.ROTE_HEI_TYPE
            ? (this.item_rect.fillColor = 4342338)
            : (this.item_rect.fillColor = 951122);
      }
    }),
    e
  );
})(eui.ItemRenderer);
__reflect(lunpanHistoryItem.prototype, "lunpanHistoryItem");
var dzxx;
!(function (t) {
  var e = (function (e) {
    function i() {
      var i = e.call(this) || this;
      return (
        (i.gridLayer = new egret.Shape()),
        (i.map_Sp = new egret.Sprite()),
        (i.modle_Sp = new egret.Sprite()),
        (i.title_width = 0),
        (i.title_height = 0),
        (i.red_color = 14236721),
        (i.black_color = 0),
        (i.green_color = 951122),
        (i.blue_color = 2438298),
        (i.title_hash = {}),
        (i.diswucha = 16),
        (i.betNameArr = [
          "RoSi88",
          "RoSm",
          "RoBig",
          "RoEven",
          "RoOdd",
          "RoRed",
          "RoBak",
          "Ro12s1",
          "Ro12s2",
          "Ro12s3",
          "RoRow3",
          "RoRow2",
          "RoRow1",
        ]),
        (i.smalltitle_width = 0.7),
        (i.checkID = 0),
        (i.eightHitObjHash = {}),
        (i.eightHitObjNameArr = [
          "TOP",
          "BOTTOM",
          "R1",
          "R2",
          "R3",
          "L1",
          "L2",
          "L3",
        ]),
        (i.winTitleArr = []),
        (i.touchEnabled = !1),
        (i.infoData2d = new t.Map2D(3, 12)),
        (i.gridLayer.touchEnabled = !1),
        i
      );
    }
    return (
      __extends(i, e),
      Object.defineProperty(i.prototype, "pw", {
        get: function () {
          return this.parent && 0 == this.parent.width
            ? 200
            : this.parent
              ? this.parent.width
              : 200;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "ph", {
        get: function () {
          return this.parent && 0 == this.parent.height
            ? 200
            : this.parent
              ? this.parent.height
              : 100;
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "t_width", {
        get: function () {
          return Math.floor(this.pw / this.infoData2d.mapWidth);
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "t_height", {
        get: function () {
          return Math.floor(this.ph / this.infoData2d.mapHeight);
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "sall_t_width", {
        get: function () {
          return Math.floor(this.t_width * this.smalltitle_width);
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(i.prototype, "maxCol", {
        get: function () {
          return Math.floor(this.pw / this.title_width) - this.m_col;
        },
        enumerable: !0,
        configurable: !0,
      }),
      (i.prototype.changeLang = function (t) {
        this.initConfig();
      }),
      (i.prototype.updata = function (t) {
        var e = this.infoData2d.mapWidth,
          i = this.infoData2d.mapHeight,
          a = 0;
        for (
          this.title_width = this.t_width,
            this.title_height = this.t_height,
            this.clearAllgraphics(),
            this.drawTitle(),
            this.drawEightHitReg();
          e > a;
          ++a
        )
          for (var n = 0; i > n; ++n) {
            var s = this.infoData2d.getData(a, n);
            if (s) {
              var r = s.getData();
              (r.title_width = this.title_width),
                (r.title_height = this.title_height),
                s.show(r);
            }
          }
        for (var o = 0; o < this.betNameArr.length; ++o) {
          var h = this.betNameArr[o].toString(),
            s = this.getTitleScreenByValue(h);
          if (s) {
            var r = s.getData();
            "RoSi88" == h || "RoRow1" == h || "RoRow2" == h || "RoRow3" == h
              ? ((r.title_width = this.title_width),
                (r.title_height = this.title_height))
              : ((r.title_width = this.sall_t_width),
                (r.title_height = this.title_height)),
              s.show(r),
              s.hasEventListener(egret.TouchEvent.TOUCH_TAP) ||
                s.addEventListener(
                  egret.TouchEvent.TOUCH_TAP,
                  this.onHitTap,
                  this,
                );
          }
        }
      }),
      (i.prototype.show = function (i) {
        e.prototype.show.call(this, i),
          this.initConfig(),
          (this.title_width = this.t_width),
          (this.title_height = this.t_height),
          this.drawTitle(),
          this.drawEightHitReg();
        for (
          var a = 0,
            n = 0,
            s = this.infoData2d.mapHeight,
            r = this.infoData2d.mapWidth;
          s > a;
          ++a
        )
          for (var o = 0; r > o; ++o) {
            var h = n + 1,
              l = this.getInobj(h, o, a),
              g = this.getTitleScreenByRowCol(l.t_x, l.t_y);
            g || (g = new t.LunBetTitle()),
              g &&
                (g.show(l),
                (g.touchEnabled = !1),
                (g.touchChildren = !1),
                this.infoData2d.setData(l.t_x, l.t_y, g),
                (this.title_hash[h.toString()] = g),
                this.map_Sp.addChild(g)),
              n++;
          }
        for (a = 0; a < this.betNameArr.length; ++a) {
          var u = this.betNameArr[a].toString(),
            l = this.getInobjByType(u),
            c = this.getTitleScreenByValue(u);
          c || (c = new t.LunBetTitle()),
            c &&
              (c.show(l),
              (this.title_hash[u] = c),
              this.map_Sp.addChild(c),
              "RoSi88" == u && (this.title_hash[0] = c)),
            c &&
              ((c.touchEnabled = !0),
              c.hasEventListener(egret.TouchEvent.TOUCH_TAP) ||
                c.addEventListener(
                  egret.TouchEvent.TOUCH_TAP,
                  this.onHitTap,
                  this,
                ));
        }
        (this.modle_Sp.touchEnabled = !0),
          this.modle_Sp &&
            (this.modle_Sp.hasEventListener(egret.TouchEvent.TOUCH_TAP) ||
              this.modle_Sp.addEventListener(
                egret.TouchEvent.TOUCH_TAP,
                this.onHitMapSprite,
                this,
              ));
      }),
      (i.prototype.onHitTap = function (t) {
        var e = t.currentTarget,
          i = e.getData(),
          a = {};
        if (
          ((a.title_type = i.title_type),
          (a.value = i.value),
          (a.betName = i.value),
          "RoSi88" == i.value)
        ) {
          var n =
            (e.width,
            e.height,
            this.modle_Sp.globalToLocal(t.stageX, t.stageY));
          if (n.y > -1 * this.diswucha)
            return (n.y = 1), void this.onHitMapSpriteFun(n.x, n.y);
        }
        game.LunpaiBetScreen.fashi_betShow.indexOf(i.value) > -1 &&
          (a.fashi = "fashi"),
          this.dispatchEvent(new egret.Event("OnHitBetTable", !0, !0, a));
      }),
      (i.prototype.onHitMapSprite = function (t) {
        var e = t.localX,
          i = t.localY,
          a = this.t_width * this.infoData2d.mapWidth;
        e > a && e < a + this.diswucha && (e = a - 1),
          this.onHitMapSpriteFun(e, i);
      }),
      (i.prototype.onHitMapSpriteFun = function (t, e) {
        var i = new egret.Point(Math.round(t), Math.round(e)),
          a = new egret.Rectangle(
            0,
            0,
            this.t_width * this.infoData2d.mapWidth,
            this.t_height * this.infoData2d.mapHeight,
          );
        if (a.containsPoint(i)) {
          var n = Math.floor(t / this.t_width),
            s = Math.floor(e / this.t_height),
            r = Math.max(t - n * this.t_width, 0),
            o = Math.max(e - s * this.t_height, 0),
            h = this.getEightHitStr(r, o),
            l = this.getTitleScreenByRowCol(n, s),
            g = l.getData(),
            u = {};
          (u.title_type = g.title_type), (u.value = g.value);
          var c = void 0,
            d = void 0,
            p = void 0,
            _ = void 0,
            b = void 0;
          if ("" != h && void 0 != h && null != h) {
            var m = parseInt(g.value),
              T =
                ("1" == g.value || "2" == g.value || "3" == g.value) &&
                "TOP" == h,
              v =
                game.LunpanManager.getDalieRoteType_B(parseInt(g.value)) ==
                  game.LunpanManager.ROTE_LIE_TYPE_1 && "R2" == h,
              E =
                game.LunpanManager.getDalieRoteType_B(parseInt(g.value)) ==
                  game.LunpanManager.ROTE_LIE_TYPE_2 &&
                ("L2" == h || "R2" == h),
              f =
                game.LunpanManager.getDalieRoteType_B(parseInt(g.value)) ==
                  game.LunpanManager.ROTE_LIE_TYPE_3 && "L2" == h,
              L = !1,
              y = "TOP" == h || "BOTTOM" == h;
            y &&
              ("TOP" == h && s > 0 && s < this.infoData2d.mapHeight && (L = !0),
              "BOTTOM" == h &&
                s >= 0 &&
                s < this.infoData2d.mapHeight - 1 &&
                (L = !0));
            var M =
                game.LunpanManager.getDalieRoteType_B(parseInt(g.value)) ==
                  game.LunpanManager.ROTE_LIE_TYPE_3 && "R2" == h,
              A = "1" == g.value && "R1" == h,
              D = "2" == g.value && ("R1" == h || "L1" == h),
              S = "3" == g.value && "L1" == h,
              C = "R1" == h || "L1" == h || "R3" == h || "L3" == h,
              I = [];
            C && (I = this.getJIaoZhuTitle(l, h));
            var w = "R1" == h && "3" == g.value,
              P =
                game.LunpanManager.getDalieRoteType_B(parseInt(g.value)) ==
                game.LunpanManager.ROTE_LIE_TYPE_3,
              B = "R1" == h || "R3" == h,
              R = !1,
              N = -1;
            if (
              (B &&
                P &&
                ("R1" == h &&
                  s > 0 &&
                  s < this.infoData2d.mapHeight &&
                  ((N = s), (R = !0)),
                "R3" == h &&
                  s >= 0 &&
                  s < this.infoData2d.mapHeight - 1 &&
                  ((N = s + 1), (R = !0))),
              T || v || E || f || L)
            )
              T
                ? ((p = game.LunpanManager.digitConvertString(0)),
                  (_ = game.LunpanManager.digitConvertString(m)))
                : v
                  ? ((c = this.getTitleScreenByRowCol(n + 1, s)),
                    (p = game.LunpanManager.digitConvertString(m)),
                    c && (_ = this.titleDataToBetValue(c)))
                  : E
                    ? "L2" == h
                      ? ((c = this.getTitleScreenByRowCol(n - 1, s)),
                        c && (p = this.titleDataToBetValue(c)),
                        (_ = game.LunpanManager.digitConvertString(m)))
                      : ((c = this.getTitleScreenByRowCol(n + 1, s)),
                        (p = game.LunpanManager.digitConvertString(m)),
                        c && (_ = this.titleDataToBetValue(c)))
                    : f
                      ? ((c = this.getTitleScreenByRowCol(n - 1, s)),
                        c && (p = this.titleDataToBetValue(c)),
                        (_ = game.LunpanManager.digitConvertString(m)))
                      : L &&
                        ("TOP" == h
                          ? ((c = this.getTitleScreenByRowCol(n, s - 1)),
                            c && (p = this.titleDataToBetValue(c)),
                            (d = this.getTitleScreenByRowCol(n, s)),
                            d && (_ = this.titleDataToBetValue(d)))
                          : ((c = this.getTitleScreenByRowCol(n, s)),
                            c && (p = this.titleDataToBetValue(c)),
                            (d = this.getTitleScreenByRowCol(n, s + 1)),
                            d && (_ = this.titleDataToBetValue(d)))),
                (u.betName = "RoDu" + p + _);
            else if (M)
              (c = this.getTitleScreenByRowCol(n - 2, s)),
                c && (p = this.titleDataToBetValue(c)),
                (d = this.getTitleScreenByRowCol(n - 1, s)),
                d && (_ = this.titleDataToBetValue(d)),
                (b = game.LunpanManager.digitConvertString(m)),
                (u.betName = "RoT" + p + _ + b);
            else if (A || D || S)
              A
                ? ((p = game.LunpanManager.digitConvertString(0)),
                  (c = this.getTitleScreenByRowCol(0, 0)),
                  (_ = this.titleDataToBetValue(c)),
                  (d = this.getTitleScreenByRowCol(1, 0)),
                  (b = this.titleDataToBetValue(d)))
                : D
                  ? "L1" == h
                    ? ((p = game.LunpanManager.digitConvertString(0)),
                      (c = this.getTitleScreenByRowCol(0, 0)),
                      (_ = this.titleDataToBetValue(c)),
                      (d = this.getTitleScreenByRowCol(1, 0)),
                      (b = this.titleDataToBetValue(d)))
                    : ((p = game.LunpanManager.digitConvertString(0)),
                      (c = this.getTitleScreenByRowCol(1, 0)),
                      (_ = this.titleDataToBetValue(c)),
                      (d = this.getTitleScreenByRowCol(2, 0)),
                      (b = this.titleDataToBetValue(d)))
                  : S &&
                    ((p = game.LunpanManager.digitConvertString(0)),
                    (c = this.getTitleScreenByRowCol(1, 0)),
                    (_ = this.titleDataToBetValue(c)),
                    (d = this.getTitleScreenByRowCol(2, 0)),
                    (b = this.titleDataToBetValue(d))),
                (u.betName = "RoT" + p + _ + b);
            else if (4 == I.length) {
              for (var x = 0, O = ""; x < I.length; ++x) {
                var G = I[x];
                O += this.titleDataToBetValue(G);
              }
              u.betName = "Ro" + O;
            } else if (w) {
              for (
                var U = 1, O = game.LunpanManager.digitConvertString(0);
                4 > U;
                ++U
              ) {
                var H = this.getTitleScreenByValue(U.toString());
                O += this.titleDataToBetValue(H);
              }
              u.betName = "Ro" + O;
            } else
              R
                ? (u.betName =
                    "RoCol" + game.LunpanManager.digitConvertString(N))
                : ((u.betName =
                    "RoSi" +
                    game.LunpanManager.digitZeroString(parseInt(g.value))),
                  (u.fashi = "fashi"));
            this.onHitMapSpriteDispatchEvent(u);
          } else
            (u.betName =
              "RoSi" + game.LunpanManager.digitZeroString(parseInt(g.value))),
              (u.fashi = "fashi"),
              this.onHitMapSpriteDispatchEvent(u);
        } else;
      }),
      (i.prototype.onHitMapSpriteDispatchEvent = function (t) {
        this.dispatchEvent(new egret.Event("OnHitBetTable", !0, !0, t));
      }),
      (i.prototype.getJIaoZhuTitle = function (t, e) {
        if (!t) return [];
        var i,
          a,
          n,
          s,
          r = [],
          o = t.getData(),
          h = o.t_x,
          l = o.t_y;
        return (
          "R1" == e
            ? ((i = this.getTitleScreenByRowCol(h, l - 1)),
              (a = this.getTitleScreenByRowCol(h + 1, l - 1)),
              (n = this.getTitleScreenByRowCol(h, l)),
              (s = this.getTitleScreenByRowCol(h + 1, l)))
            : "L1" == e
              ? ((i = this.getTitleScreenByRowCol(h - 1, l - 1)),
                (a = this.getTitleScreenByRowCol(h, l - 1)),
                (n = this.getTitleScreenByRowCol(h - 1, l)),
                (s = this.getTitleScreenByRowCol(h, l)))
              : "R3" == e
                ? ((i = this.getTitleScreenByRowCol(h, l)),
                  (a = this.getTitleScreenByRowCol(h + 1, l)),
                  (n = this.getTitleScreenByRowCol(h, l + 1)),
                  (s = this.getTitleScreenByRowCol(h + 1, l + 1)))
                : "L3" == e &&
                  ((i = this.getTitleScreenByRowCol(h - 1, l)),
                  (a = this.getTitleScreenByRowCol(h, l)),
                  (n = this.getTitleScreenByRowCol(h - 1, l + 1)),
                  (s = this.getTitleScreenByRowCol(h, l + 1))),
          i && r.push(i),
          a && r.push(a),
          n && r.push(n),
          s && r.push(s),
          4 == r.length ? r : []
        );
      }),
      (i.prototype.getInobj = function (t, e, i) {
        var a = {};
        (a.title_type = "1"),
          (a.title_width = this.title_width),
          (a.title_height = this.title_height),
          (a.bg_type = ""),
          (a.lab_color = 16777215),
          (a.lab = t.toString()),
          (a.value = t.toString());
        var n = game.LunpanManager.getHoneHeiRoteType(t);
        return (
          n == game.LunpanManager.ROTE_HONG_TYPE
            ? (a.bg_color = this.red_color)
            : n == game.LunpanManager.ROTE_HEI_TYPE
              ? (a.bg_color = this.black_color)
              : (a.bg_color = this.green_color),
          (a.t_x = e),
          (a.t_y = i),
          a
        );
      }),
      (i.prototype.getInobjByType = function (t) {
        var e = {};
        switch (
          ((e.title_type = "2"),
          (e.title_width = this.sall_t_width),
          (e.title_height = this.title_height),
          (e.bg_type = ""),
          (e.bg_color = this.green_color),
          (e.lab_color = 16777215),
          (e.lab = t.toString()),
          (e.value = t),
          (e.t_x_num = 1),
          t)
        ) {
          case "RoSi88":
            (e.lab = "0"),
              (e.bg_type = "0"),
              (e.bg_color = 951122),
              (e.lab_color = 16777215),
              (e.t_x = 0),
              (e.t_y = -1),
              (e.t_y_num = 1),
              (e.t_x_num = 3),
              (e.title_width = this.title_width),
              (e.title_height = this.title_height);
            break;
          case "RoSm":
            (e.lab = LangUtils.LANG_MAP.dzg_RoSm),
              (e.bg_type = "img"),
              (e.bg_color = "RoSm"),
              (e.t_x = -2),
              (e.t_y = 0),
              (e.t_y_num = 2),
              (e.img_width = 42),
              (e.img_height = 50);
            break;
          case "RoBig":
            (e.lab = LangUtils.LANG_MAP.dzg_RoBig),
              (e.bg_type = "img"),
              (e.bg_color = "RoBig"),
              (e.t_x = -2),
              (e.t_y = 10),
              (e.t_y_num = 2),
              (e.img_width = 52),
              (e.img_height = 50);
            break;
          case "RoEven":
            (e.lab = LangUtils.LANG_MAP.dzg_RoEven),
              (e.bg_type = "img"),
              (e.bg_color = "RoEven"),
              (e.t_x = -2),
              (e.t_y = 2),
              (e.t_y_num = 2),
              (e.img_width = 23),
              (e.img_height = 21);
            break;
          case "RoOdd":
            (e.lab = LangUtils.LANG_MAP.dzg_RoOdd),
              (e.bg_type = "img"),
              (e.bg_color = "RoOdd"),
              (e.t_x = -2),
              (e.t_y = 8),
              (e.t_y_num = 2),
              (e.img_width = 23),
              (e.img_height = 23);
            break;
          case "RoRed":
            (e.lab = LangUtils.LANG_MAP.dzg_RoRed),
              (e.bg_type = "img"),
              (e.bg_color = "RoRed"),
              (e.t_x = -2),
              (e.t_y = 4),
              (e.t_y_num = 2),
              (e.img_width = 60),
              (e.img_height = 70);
            break;
          case "RoBak":
            (e.lab = LangUtils.LANG_MAP.dzg_RoBak),
              (e.bg_type = "img"),
              (e.bg_color = "RoBak"),
              (e.t_x = -2),
              (e.t_y = 6),
              (e.t_y_num = 2),
              (e.img_width = 60),
              (e.img_height = 70);
            break;
          case "Ro12s1":
            (e.lab = LangUtils.LANG_MAP.dzg_Ro12s1),
              (e.bg_type = "img"),
              (e.bg_color = "Ro12s1"),
              (e.t_x = -1),
              (e.t_y = 0),
              (e.t_y_num = 4),
              (e.img_width = 23),
              (e.img_height = 93);
            break;
          case "Ro12s2":
            (e.lab = LangUtils.LANG_MAP.dzg_Ro12s2),
              (e.bg_type = "img"),
              (e.bg_color = "Ro12s2"),
              (e.t_x = -1),
              (e.t_y = 4),
              (e.t_y_num = 4),
              (e.img_width = 23),
              (e.img_height = 95);
            break;
          case "Ro12s3":
            (e.lab = LangUtils.LANG_MAP.dzg_Ro12s3),
              (e.bg_type = "img"),
              (e.bg_color = "Ro12s3"),
              (e.t_x = -1),
              (e.t_y = 8),
              (e.t_y_num = 4),
              (e.img_width = 23),
              (e.img_height = 94);
            break;
          case "RoRow1":
            (e.lab = LangUtils.LANG_MAP.dzg_RoRow1),
              (e.bg_type = "img"),
              (e.bg_color = "RoRow1"),
              (e.t_x = 0),
              (e.t_y = 12),
              (e.t_y_num = 1),
              (e.title_width = this.title_width),
              (e.title_height = this.title_height),
              (e.img_width = 52),
              (e.img_height = 37);
            break;
          case "RoRow2":
            (e.lab = LangUtils.LANG_MAP.dzg_RoRow2),
              (e.bg_type = "img"),
              (e.bg_color = "RoRow2"),
              (e.t_x = 1),
              (e.t_y = 12),
              (e.t_y_num = 1),
              (e.title_width = this.title_width),
              (e.title_height = this.title_height),
              (e.img_width = 52),
              (e.img_height = 37);
            break;
          case "RoRow3":
            (e.lab = LangUtils.LANG_MAP.dzg_RoRow3),
              (e.bg_type = "img"),
              (e.bg_color = "RoRow3"),
              (e.t_x = 2),
              (e.t_y = 12),
              (e.t_y_num = 1),
              (e.title_width = this.title_width),
              (e.title_height = this.title_height),
              (e.img_width = 52),
              (e.img_height = 37);
        }
        return e;
      }),
      (i.prototype.initConfig = function () {
        this.clearAllgraphics(),
          this.clearAllTitle(),
          this.addChild(this.map_Sp),
          this.addChild(this.modle_Sp),
          this.addChild(this.gridLayer),
          (this.map_Sp.touchChildren = !0),
          (this.map_Sp.touchEnabled = !0);
      }),
      (i.prototype.drawTitle = function () {
        var t = 16777215,
          e = 6,
          i = this.infoData2d.mapWidth,
          a = this.infoData2d.mapHeight + 1;
        this.gridLayer.graphics.beginFill(16777215, 1),
          this.gridLayer.graphics.lineStyle(e, t);
        for (var n = 0; i >= n; ++n) {
          var s = n * this.title_width;
          this.gridLayer.graphics.moveTo(s, 0),
            this.gridLayer.graphics.lineTo(s, this.t_height * a);
        }
        for (n = 0; a >= n; ++n) {
          var s = n * this.title_height;
          this.gridLayer.graphics.moveTo(0, s),
            this.gridLayer.graphics.lineTo(this.t_width * i, s);
        }
        this.modle_Sp.graphics.beginFill(16777215, 0),
          this.modle_Sp.graphics.drawRect(
            0,
            0,
            i * this.title_width + this.diswucha,
            this.infoData2d.mapHeight * this.title_height,
          ),
          this.modle_Sp.graphics.endFill(),
          (this.modle_Sp.width = i * this.title_width),
          (this.modle_Sp.height =
            this.infoData2d.mapHeight * this.title_height),
          (this.modle_Sp.x = this.modle_Sp.y = 0),
          (n = 0);
        for (var r = 4; r > n; ++n) {
          var s = n * this.title_height * 4;
          this.gridLayer.graphics.moveTo(-2 * this.sall_t_width, s),
            this.gridLayer.graphics.lineTo(0, s);
        }
        for (n = 0, r = 7; r > n; ++n) {
          var s = n * this.title_height * 2;
          this.gridLayer.graphics.moveTo(-2 * this.sall_t_width, s),
            this.gridLayer.graphics.lineTo(-1 * this.sall_t_width, s);
        }
        for (n = 1, r = 2; r >= n; ++n) {
          var s = n * this.sall_t_width;
          this.gridLayer.graphics.moveTo(-1 * s, 0),
            this.gridLayer.graphics.lineTo(-1 * s, 12 * this.title_height);
        }
        this.gridLayer.graphics.moveTo(
          (3 * this.t_width) / 2,
          -1 * this.t_height,
        ),
          this.gridLayer.graphics.lineTo(0, (this.t_height / 2) * -1),
          this.gridLayer.graphics.moveTo(0, (this.t_height / 2) * -1),
          this.gridLayer.graphics.lineTo(0, 0),
          this.gridLayer.graphics.moveTo(
            (3 * this.t_width) / 2,
            -1 * this.t_height,
          ),
          this.gridLayer.graphics.lineTo(
            3 * this.t_width,
            (this.t_height / 2) * -1,
          ),
          this.gridLayer.graphics.moveTo(
            3 * this.t_width,
            (this.t_height / 2) * -1,
          ),
          this.gridLayer.graphics.lineTo(3 * this.t_width, 0),
          this.gridLayer.graphics.endFill();
      }),
      (i.prototype.clearAllgraphics = function () {
        this.graphics.clear(),
          this.gridLayer.graphics.clear(),
          this.modle_Sp.graphics.clear();
      }),
      (i.prototype.clearMap2D = function () {}),
      (i.prototype.getTitleScreenByRowCol = function (t, e) {
        return t >= this.infoData2d.mapWidth || e >= this.infoData2d.mapHeight
          ? null
          : 0 > t || 0 > e
            ? null
            : this.infoData2d.getData(t, e);
      }),
      (i.prototype.getTitleScreenByValue = function (t) {
        return this.title_hash[t];
      }),
      (i.prototype.getEightHitStr = function (t, e) {
        for (var i = 0, a = this.eightHitObjNameArr.length; a > i; ++i) {
          var n = this.eightHitObjNameArr[i],
            s = this.eightHitObjHash[n];
          if (s && s.contains(t, e)) return n;
        }
        return "";
      }),
      (i.prototype.drawEightHitReg = function () {
        for (
          var t = 0,
            e = this.eightHitObjNameArr.length,
            i = Math.floor((14 * this.title_width) / 100),
            a = Math.floor((72 * this.title_width) / 100),
            n = Math.floor((14 * this.title_height) / 100),
            s = Math.floor((72 * this.title_height) / 100);
          e > t;
          ++t
        ) {
          var r = this.eightHitObjNameArr[t],
            o = this.eightHitObjHash[r];
          switch (
            (o || (o = this.eightHitObjHash[r] = new egret.Rectangle()), r)
          ) {
            case "TOP":
              (o.x = i), (o.y = 0), (o.width = a), (o.height = n);
              break;
            case "BOTTOM":
              (o.x = i),
                (o.y = this.title_height - n),
                (o.width = a),
                (o.height = n);
              break;
            case "R1":
              (o.x = this.title_width - i),
                (o.y = 0),
                (o.width = i),
                (o.height = n);
              break;
            case "R2":
              (o.x = this.title_width - i),
                (o.y = n),
                (o.width = i),
                (o.height = s);
              break;
            case "R3":
              (o.x = this.title_width - i),
                (o.y = this.title_height - n),
                (o.width = i),
                (o.height = n);
              break;
            case "L1":
              (o.x = 0), (o.y = 0), (o.width = i), (o.height = n);
              break;
            case "L2":
              (o.x = 0), (o.y = n), (o.width = i), (o.height = s);
              break;
            case "L3":
              (o.x = 0),
                (o.y = this.title_height - n),
                (o.width = i),
                (o.height = n);
          }
        }
      }),
      (i.prototype.titleDataToBetValue = function (t) {
        var e = t.getData().value;
        return game.LunpanManager.digitConvertString(parseInt(e));
      }),
      (i.prototype.showSelectTitle = function (e) {
        var i = this;
        if (
          (void 0 === e && (e = []),
          this.clearSelectTitle(),
          clearInterval(this.checkID),
          e)
        )
          for (var a = 0, n = e.length; n > a; ++a) {
            var s = e[a],
              r = this.getTitleScreenByValue(s.toString());
            r && r.updata(t.LunBetTitle.SHOW_TYPE_2);
          }
        this.checkID = setInterval(function () {
          i.clearSelectTitle();
        }, 1e3);
      }),
      (i.prototype.clearWinSelectTitle = function () {
        this.timer && this.timer.stop(),
          (this.winTitleArr = []),
          this.clearAllTitleTip();
      }),
      (i.prototype.showWinSelectTitle = function (t) {
        this.clearAllTitleTip(),
          (this.winTitleArr = game.LunpanManager.getWinArr(t)),
          this.timer
            ? this.timer.stop()
            : ((this.timer = new egret.Timer(500, 8)),
              this.timer.addEventListener(
                egret.TimerEvent.TIMER,
                this.onTimer,
                this,
              ),
              this.timer.addEventListener(
                egret.TimerEvent.TIMER_COMPLETE,
                this.onTimerEnd,
                this,
              )),
          this.timer.reset(),
          this.timer.start();
      }),
      (i.prototype.onTimerEnd = function () {
        this.clearWinSelectTitle();
      }),
      (i.prototype.onTimer = function (e) {
        for (var i = 0, a = this.winTitleArr.length; a > i; ++i) {
          var n = this.title_hash[this.winTitleArr[i]];
          n && n.updata(t.LunBetTitle.SHOW_TYPE_3);
        }
      }),
      (i.prototype.clearSelectTitle = function () {
        for (var e in this.title_hash) {
          var i = this.title_hash[e];
          i && i.updata(t.LunBetTitle.SHOW_TYPE_1);
        }
      }),
      (i.prototype.clearAllTitle = function () {
        for (var t in this.title_hash) {
          var e = this.title_hash[t];
          e &&
            (e.hasEventListener(egret.TouchEvent.TOUCH_TAP) &&
              e.removeEventListener(
                egret.TouchEvent.TOUCH_TAP,
                this.onHitTap,
                this,
              ),
            e.destroy());
        }
        this.title_hash = {};
      }),
      (i.prototype.clearAllTitleTip = function () {
        for (var e in this.title_hash) {
          var i = this.title_hash[e];
          i && i.updata(t.LunBetTitle.SHOW_TYPE_1);
        }
      }),
      (i.prototype.getBetPosionByStage = function (t) {
        var e = this.getBetPosion(t);
        return this.map_Sp.localToGlobal(e.x, e.y);
      }),
      (i.prototype.getBetPosion = function (t) {
        var e = game.LunpanManager.getBetInfoArrByname(t);
        if (!(e.length <= 0)) {
          var i,
            a = new egret.Point(0, 0),
            n = e[e.length - 1],
            s = this.getTitleScreenByValue(n.toString());
          if ((s && (i = s.getData()), t.indexOf("RoSi") >= 0))
            return (
              0 == n
                ? ((s = this.getTitleScreenByValue("RoSi88")),
                  (i = s.getData()),
                  (a.x = s.x + s.width / 2),
                  (a.y = s.y + s.height / 2))
                : ((a.x = s.x + i.title_width / 2),
                  (a.y = s.y + i.title_height / 2)),
              a
            );
          if (t.indexOf("RoDu") >= 0) {
            if (e.indexOf(0) > -1) (a.x = s.x + i.title_width / 2), (a.y = s.y);
            else {
              var r = this.getTitleScreenByValue(e[0].toString()),
                o = r.getData();
              o.t_y != i.t_y
                ? ((a.x = s.x + i.title_width / 2), (a.y = s.y))
                : ((a.x = s.x), (a.y = s.y + i.title_height / 2));
            }
            return a;
          }
          return t.indexOf("RoT") >= 0
            ? (e.indexOf(0) > -1
                ? ((a.x = s.x), (a.y = s.y))
                : ((a.x = s.x + i.title_width),
                  (a.y = s.y + i.title_height / 2)),
              a)
            : "RoCol1" == t ||
                "RoCol2" == t ||
                "RoCol3" == t ||
                "RoCol4" == t ||
                "RoCol5" == t ||
                "RoCol6" == t ||
                "RoCol7" == t ||
                "RoCol8" == t ||
                "RoCol9" == t ||
                "RoCol0" == t ||
                "RoCola" == t
              ? ((a.x = s.x + i.title_width), (a.y = s.y), a)
              : this.betNameArr.indexOf(t) > -1
                ? ((s = this.getTitleScreenByValue(t)),
                  (i = s.getData()),
                  (a.x = s.x + s.width / 2),
                  (a.y = s.y + s.height / 2),
                  a)
                : t.indexOf("Ro") >= 0 && 4 == e.length
                  ? (e.indexOf(0) > -1
                      ? ((a.x = s.x + i.title_width), (a.y = s.y))
                      : ((a.x = s.x), (a.y = s.y)),
                    a)
                  : t.indexOf("Ro") >= 0
                    ? ((a.x = s.x), (a.y = s.y), a)
                    : (s &&
                        ((a.x = s.x + i.title_width / 2),
                        (a.y = s.y + i.title_height / 2)),
                      a);
        }
      }),
      (i.prototype.destroy = function () {
        this.clearAllgraphics(),
          this.clearAllTitle(),
          this.clearWinSelectTitle(),
          this.modle_Sp &&
            (this.modle_Sp.hasEventListener(egret.TouchEvent.TOUCH_TAP) ||
              this.modle_Sp.removeEventListener(
                egret.TouchEvent.TOUCH_TAP,
                this.onHitMapSprite,
                this,
              ));
      }),
      i
    );
  })(t.ScreenAbstract);
  (t.LunBetScreen = e), __reflect(e.prototype, "dzxx.LunBetScreen");
})(dzxx || (dzxx = {}));
var dzxx;
!(function (t) {
  var e = (function (t) {
    function e() {
      var i = t.call(this) || this;
      return (
        (i.gridimg = new eui.Image()),
        (i.gridLayer = new egret.Shape()),
        (i.title = new eui.Label()),
        (i.title_width = 0),
        (i.title_height = 0),
        (i.title_dis = 0),
        (i.cur_type = e.SHOW_TYPE_1),
        (i.gridLayer.x = 0),
        (i.gridLayer.y = 0),
        (i.gridimg.touchEnabled = !1),
        i
      );
    }
    return (
      __extends(e, t),
      (e.prototype.show = function (i) {
        t.prototype.show.call(this, i),
          this.clearAlldis(),
          this.addChild(this.title),
          this.addChild(this.gridLayer),
          "img" == i.bg_type && this.addChild(this.gridimg),
          i &&
            ((this.gridLayer.visible = this.cur_type == e.SHOW_TYPE_2),
            "1" == i.title_type
              ? ((this.title.width = this.title_width = i.title_width),
                (this.title.height = this.title_height = i.title_height),
                this.graphics.clear(),
                this.graphics.beginFill(i.bg_color),
                this.graphics.drawRect(
                  this.title_dis,
                  this.title_dis,
                  this.title_width - 2 * this.title_dis,
                  this.title_height - 2 * this.title_dis,
                ),
                this.graphics.endFill(),
                this.gridLayer.graphics.clear(),
                this.gridLayer.graphics.beginFill(16777215, 0.7),
                this.gridLayer.graphics.drawRect(
                  0,
                  0,
                  this.title_width,
                  this.title_height,
                ),
                this.gridLayer.graphics.endFill())
              : "2" == i.title_type &&
                ((this.title.width = this.title_width =
                  i.title_width * i.t_x_num),
                (this.title.height = this.title_height =
                  i.title_height * i.t_y_num),
                "RoSi88" == i.value
                  ? (this.graphics.clear(),
                    this.graphics.beginFill(i.bg_color),
                    this.graphics.lineStyle(0, 16777215),
                    this.graphics.moveTo(this.title_width / 2, 0),
                    this.graphics.lineTo(0, this.title_height / 2),
                    this.graphics.lineTo(0, this.title_height),
                    this.graphics.lineTo(this.title_width, this.title_height),
                    this.graphics.lineTo(
                      this.title_width,
                      this.title_height / 2,
                    ),
                    this.graphics.lineTo(this.title_width / 2, 0),
                    this.graphics.endFill(),
                    (this.title.width = i.title_width),
                    (this.title.height = i.title_height),
                    (this.title.x =
                      this.title_width / 2 - this.title.width / 2),
                    (this.title.y =
                      this.title_height / 2 - this.title.height / 2),
                    this.gridLayer.graphics.clear(),
                    this.gridLayer.graphics.beginFill(16777215, 0.7),
                    this.gridLayer.graphics.lineStyle(0, 16777215),
                    this.gridLayer.graphics.moveTo(this.title_width / 2, 0),
                    this.gridLayer.graphics.lineTo(0, this.title_height / 2),
                    this.gridLayer.graphics.lineTo(0, this.title_height),
                    this.gridLayer.graphics.lineTo(
                      this.title_width,
                      this.title_height,
                    ),
                    this.gridLayer.graphics.lineTo(
                      this.title_width,
                      this.title_height / 2,
                    ),
                    this.gridLayer.graphics.lineTo(this.title_width / 2, 0),
                    this.gridLayer.graphics.endFill())
                  : (this.graphics.clear(),
                    this.graphics.beginFill(2438298),
                    this.graphics.drawRect(
                      0,
                      0,
                      this.title_width,
                      this.title_height,
                    ),
                    this.graphics.endFill(),
                    this.gridLayer.graphics.clear(),
                    this.gridLayer.graphics.beginFill(16777215, 0.7),
                    this.gridLayer.graphics.drawRect(
                      0,
                      0,
                      this.title_width,
                      this.title_height,
                    ),
                    this.gridLayer.graphics.endFill()),
                (this.width = this.title_width),
                (this.height = this.title_height)),
            (this.title.size = 20),
            (this.title.fontFamily = "Microsoft YaHei"),
            (this.title.verticalAlign = "middle"),
            (this.title.textAlign = "center"),
            (this.title.text = i.lab),
            (this.title.textColor = i.lab_color),
            (this.x = i.title_width * i.t_x),
            (this.y = i.title_height * i.t_y),
            "img" == i.bg_type &&
              ((this.gridimg.source =
                "lunpan_" + i.bg_color + "_" + DataManager.LANG_TYPE + "_png"),
              (this.gridimg.x = this.title_width / 2 - i.img_width / 2),
              (this.gridimg.y = this.title_height / 2 - i.img_height / 2),
              (this.title.text = "")));
      }),
      (e.prototype.updata = function (t) {
        t == e.SHOW_TYPE_3
          ? (this.gridLayer.visible = !this.gridLayer.visible)
          : ((this.cur_type = t),
            (this.gridLayer.visible = this.cur_type == e.SHOW_TYPE_2));
      }),
      (e.prototype.clearAlldis = function () {
        for (this.graphics.clear(); this.numChildren > 0; ) {
          var t = this.getChildAt(0);
          this.removeChild(t);
        }
      }),
      (e.prototype.destroy = function () {
        this.clearAlldis(),
          (this.cur_type = e.SHOW_TYPE_1),
          this.parent && this.parent.removeChild(this);
      }),
      (e.SHOW_TYPE_1 = "default"),
      (e.SHOW_TYPE_2 = "select"),
      (e.SHOW_TYPE_3 = "win"),
      e
    );
  })(t.ScreenAbstract);
  (t.LunBetTitle = e), __reflect(e.prototype, "dzxx.LunBetTitle");
})(dzxx || (dzxx = {}));
var game;
!(function (t) {
  var e = (function (t) {
    function e() {
      var e = t.call(this) || this;
      return (e.skinName = "resource/skins/niuniu/LabelItemRenderSkin.exml"), e;
    }
    return (
      __extends(e, t),
      (e.prototype.partAdded = function (e, i) {
        t.prototype.partAdded.call(this, e, i);
      }),
      (e.prototype.childrenCreated = function () {
        t.prototype.childrenCreated.call(this);
      }),
      (e.prototype.dataChanged = function () {
        this.data &&
          (void 0 == this.data.win
            ? ((this.currentState = e.LOSE_STATE),
              (this.label.textColor = 11808045))
            : (this.data.win
                ? (this.currentState = e.WIN_STATE)
                : (this.currentState = e.LOSE_STATE),
              (this.label.textColor = 2977972)),
          this.hasNiuPoint(this.data));
      }),
      (e.prototype.hasNiuPoint = function (t) {
        if (t.hasNiu) {
          0 == t.point
            ? (this.label.text = LangUtils.LANG_MAP.dzg_niuniu_3)
            : (this.label.text = t.fullNiu
                ? LangUtils.LANG_MAP.dzg_niuniu_2
                : LangUtils.LANG_MAP.dzg_niuniu_1 + t.point);
        } else this.label.text = LangUtils.LANG_MAP.dzg_niuniu_4;
      }),
      (e.WIN_STATE = "win"),
      (e.LOSE_STATE = "lose"),
      e
    );
  })(eui.ItemRenderer);
  (t.LabelItemRender = e), __reflect(e.prototype, "game.LabelItemRender");
})(game || (game = {}));
var game;
!(function (t) {
  var e = (function (e) {
    function i() {
      var t = e.call(this) || this;
      return (
        (t.index = 0),
        (t.skinName = "resource/skins/niuniu/NiuniuCardAryUI.exml"),
        t
      );
    }
    return (
      __extends(i, e),
      (i.prototype.partAdded = function (t, i) {
        e.prototype.partAdded.call(this, t, i);
      }),
      (i.prototype.childrenCreated = function () {
        e.prototype.childrenCreated.call(this), this.init();
      }),
      (i.prototype.init = function () {
        (this.pokers = [this.p0, this.p1, this.p2, this.p3, this.p4]),
          this.pokers.forEach(function (t, e) {
            t.reset();
          }),
          (this.txtWord.text = ""),
          (this.playerBg.visible = !1),
          (this.bankerBg.visible = !1),
          (this.index = 0);
      }),
      (i.prototype.setDataInfo = function (t) {
        var e = this;
        this.index = this.getPokersIndexByOrder(t.order);
        var i = this.pokers[this.index];
        if (i) {
          i.setPokerInfo(t);
          for (var a = !0, n = 0, s = this.pokers; n < s.length; n++) {
            var r = s[n];
            -1 == r.point && (a = !1);
          }
          a &&
            setTimeout(function () {
              e.checkHasPoint();
            }, 300);
        }
      }),
      (i.prototype.getPokersIndexByOrder = function (t) {
        var e = 0;
        return (
          (e = t >= 16 ? t - 16 : t >= 11 ? t - 11 : t >= 6 ? t - 6 : t - 1),
          e % 5
        );
      }),
      (i.prototype.checkHasPoint = function () {
        (this.playerBg.visible = !0),
          (this.bankerBg.visible = !0),
          (this.txtWord.text = LangUtils.LANG_MAP.dzg_niuniu_11),
          DataManager.LANG_TYPE == DataManager.LANG_EN
            ? (this.txtWord.size = 18)
            : (this.txtWord.size = 22);
        for (var e = 0; e < this.pokers.length; e++)
          for (var i = e + 1; i < this.pokers.length; i++)
            for (var a = i + 1; a < this.pokers.length; a++) {
              var n = this.getNum(this.pokers[e].point),
                s = this.getNum(this.pokers[i].point),
                r = this.getNum(this.pokers[a].point);
              if ((n + s + r) % 10 == 0) {
                var o = this.pokers.concat();
                (o[e].currentState = t.NiuniuPokerUI.LIGHT_STATE),
                  (o[i].currentState = t.NiuniuPokerUI.LIGHT_STATE),
                  (o[a].currentState = t.NiuniuPokerUI.LIGHT_STATE),
                  delete o[e],
                  delete o[i],
                  delete o[a];
                for (var h = [], l = 0; l < o.length; l++)
                  o[l] && h.push(o[l].point);
                var g = h[0],
                  u = h[1],
                  c = (this.getNum(g) + this.getNum(u)) % 10;
                switch (c) {
                  case 0:
                    this.is5Gong();
                    break;
                  case 1:
                  case 2:
                  case 3:
                  case 4:
                  case 5:
                  case 6:
                  case 7:
                  case 8:
                  case 9:
                    this.txtWord.text =
                      LangUtils.LANG_MAP["dzg_niuniu_road_" + c];
                }
                return;
              }
            }
      }),
      (i.prototype.getNum = function (t) {
        return t >= 10 ? 0 : t;
      }),
      (i.prototype.is5Gong = function () {
        var t = 0;
        this.pokers.forEach(function (e) {
          e.point > 10 && t++;
        }),
          (this.txtWord.text = LangUtils.LANG_MAP.dzg_niuniu_0),
          t > 4 && (this.txtWord.text = LangUtils.LANG_MAP.dzg_niuniu_10);
      }),
      (i.prototype.dispose = function () {
        (this.index = 0),
          (this.playerBg = null),
          (this.bankerBg = null),
          (this.txtWord = null),
          this.pokers.forEach(function (t) {
            t.dispose();
          }),
          (this.pokers.length = 0);
      }),
      (i.BANKER_STATE = "banker"),
      (i.PLAYER_STATE = "player"),
      i
    );
  })(eui.Component);
  (t.NiuniuCardAryUI = e),
    __reflect(e.prototype, "game.NiuniuCardAryUI", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(game || (game = {}));
var game;
!(function (t) {
  var e = (function (e) {
    function i() {
      var t = e.call(this) || this;
      return (t.skinName = "resource/skins/niuniu/NiuniuCardTypeUI.exml"), t;
    }
    return (
      __extends(i, e),
      (i.prototype.partAdded = function (t, i) {
        e.prototype.partAdded.call(this, t, i);
      }),
      (i.prototype.childrenCreated = function () {
        e.prototype.childrenCreated.call(this),
          (this.pokers = [
            this.banker_cards,
            this.player_1_cards,
            this.player_2_cards,
            this.player_3_cards,
          ]),
          this.init();
      }),
      (i.prototype.init = function () {
        (this.LangLab0.text = LangUtils.LANG_MAP.M_BANKER),
          (this.LangLab1.text = LangUtils.LANG_MAP.M_PLAYER + 1),
          (this.LangLab2.text = LangUtils.LANG_MAP.M_PLAYER + 2),
          (this.LangLab3.text = LangUtils.LANG_MAP.M_PLAYER + 3),
          this.pokers &&
            (this.pokers.forEach(function (t) {
              t.init();
            }),
            (this.orders = [
              1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
              20,
            ]));
      }),
      (i.prototype.setDataInfo = function (e) {
        var i = this,
          a = this.orders.indexOf(e.order);
        -1 != a &&
          setTimeout(function () {
            e.order > 0 && e.order < 6
              ? (i.banker_cards.setDataInfo(e),
                (i.banker_cards.currentState = t.NiuniuCardAryUI.BANKER_STATE))
              : e.order < 11
                ? (i.player_1_cards.setDataInfo(e),
                  (i.player_1_cards.currentState =
                    t.NiuniuCardAryUI.PLAYER_STATE))
                : e.order < 16
                  ? (i.player_2_cards.setDataInfo(e),
                    (i.player_2_cards.currentState =
                      t.NiuniuCardAryUI.PLAYER_STATE))
                  : e.order <= 20 &&
                    (i.player_3_cards.setDataInfo(e),
                    (i.player_3_cards.currentState =
                      t.NiuniuCardAryUI.PLAYER_STATE));
          }, 300);
      }),
      (i.prototype.dispose = function () {
        this.pokers.forEach(function (t) {
          t.dispose();
        }),
          (this.pokers.length = 0),
          (this.orders.length = 0);
      }),
      i
    );
  })(eui.Component);
  (t.NiuniuCardTypeUI = e),
    __reflect(e.prototype, "game.NiuniuCardTypeUI", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(game || (game = {}));
var game;
!(function (t) {
  var e = (function (t) {
    function e() {
      var e = t.call(this) || this;
      return (e.skinName = "resource/skins/niuniu/NiuniuPokerUI.exml"), e;
    }
    return (
      __extends(e, t),
      (e.prototype.partAdded = function (e, i) {
        t.prototype.partAdded.call(this, e, i);
      }),
      (e.prototype.childrenCreated = function () {
        t.prototype.childrenCreated.call(this), this.reset();
      }),
      (e.prototype.reset = function () {
        (this.imgPoker.source = ""),
          (this.currentState = e.NORMAL_STATE),
          (this.point = -1);
      }),
      (e.prototype.setState = function (t) {
        void 0 === t && (t = e.NORMAL_STATE), (this.currentState = t);
      }),
      (e.prototype.setPokerInfo = function (t) {
        (this.point = parseInt(t.point)),
          (this.imgPoker.source = "card_" + t.point + "-" + t.color + "_png");
      }),
      (e.prototype.dispose = function () {
        this.reset(), (this.imgPoker = null);
      }),
      (e.LIGHT_STATE = "light"),
      (e.NORMAL_STATE = "normal"),
      e
    );
  })(eui.Component);
  (t.NiuniuPokerUI = e),
    __reflect(e.prototype, "game.NiuniuPokerUI", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(game || (game = {}));
var game;
!(function (t) {
  var e = (function (e) {
    function i() {
      var t = e.call(this) || this;
      return (
        (t.listOldWh = 0),
        (t.skinName = "resource/skins/niuniu/NiuniuRoadPanel.exml"),
        t
      );
    }
    return (
      __extends(i, e),
      (i.prototype.partAdded = function (t, i) {
        e.prototype.partAdded.call(this, t, i);
      }),
      (i.prototype.childrenCreated = function () {
        e.prototype.childrenCreated.call(this),
          (this.roadList.itemRenderer = t.LabelItemRender);
      }),
      (i.prototype.setData = function (t) {
        for (var e = [], i = 0; i < t.length; i++)
          for (var a = JSON.parse(t[i]), n = 0; n < a.length; n++) e.push(a[n]);
        var s = new eui.ArrayCollection(e);
        this.roadList.dataProvider = s;
      }),
      (i.prototype.roadPanelRize = function () {
        if (this.listOldWh != this.stage.stageWidth) {
          var t = this.chooseSXFromStageWidth();
          this.$setScaleX(t);
        }
        this.$setScaleY(0.75), (this.listOldWh = this.stage.stageWidth);
      }),
      (i.prototype.chooseSXFromStageWidth = function () {
        var t = 0;
        switch (this.stage.stageWidth) {
          case 750:
          case 752:
            t = 0.77;
            break;
          case 572:
            t = 0.54;
            break;
          case 616:
            t = 0.6;
            break;
          case 666:
            t = 0.67;
            break;
          case 1e3:
          case 1002:
            t = 1.1;
            break;
          default:
            t = 0.77;
        }
        return t;
      }),
      (i.prototype.roadPanelRizeInGame = function () {
        if (this.listOldWh != this.stage.stageWidth) {
          var t = this.chooseSXFromStageWidth2();
          this.$setScaleX(t),
            console.log(
              "this Width: ",
              this.width,
              " listOldWh: ",
              this.listOldWh,
              " stageWidth: ",
              this.stage.stageWidth,
              " sx: ",
              t,
            );
        }
        this.$setScaleY(0.75), (this.listOldWh = this.stage.stageWidth);
      }),
      (i.prototype.chooseSXFromStageWidth2 = function () {
        var t = 0;
        switch (this.stage.stageWidth) {
          case 750:
          case 752:
            t = 0.985;
            break;
          case 572:
            t = 0.74;
            break;
          case 616:
            t = 0.83;
            break;
          case 666:
            t = 0.88;
            break;
          case 1e3:
          case 1002:
            t = 1.31;
            break;
          default:
            t = 0.99;
        }
        return t;
      }),
      (i.prototype.dispose = function () {
        this.parent && this.parent.removeChild(this),
          this.roadList.removeChildren(),
          (this.roadList = null);
      }),
      i
    );
  })(eui.Component);
  (t.NiuniuRoadPanel = e),
    __reflect(e.prototype, "game.NiuniuRoadPanel", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(game || (game = {}));
var NiuniuView = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.bet_allWidthHeight_hash = {}),
      (e.cur_gameSeq = -1),
      e.init(),
      (e.top = 0),
      (e.bottom = 0),
      (e.left = 0),
      (e.right = 0),
      e
    );
  }
  return (
    __extends(e, t),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this), this.cardPanel.init();
    }),
    (e.prototype.init = function () {
      (this.skinName = "resource/skins/niuniu/NiuniuView.exml"),
        (this.tableid = DataManager.curTable.tableid),
        this.btnbackgroup.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onBack,
          this,
        ),
        this.btnmenugroup.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onMenu,
          this,
        ),
        (this.btnSelectTable.visible = !1),
        this.btnLimit_fb.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onShowLimit,
          this,
        ),
        this.tsVideo.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onVideo,
          this,
        ),
        this.video_zoom.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onVideoZoom,
          this,
        ),
        (this.betChildDict = {
          FAN_PLAYER1: this.btn_xf1,
          PLAYER1: this.btn_xp1,
          FAN_PLAYER2: this.btn_xf2,
          PLAYER2: this.btn_xp2,
          FAN_PLAYER3: this.btn_xf3,
          PLAYER3: this.btn_xp3,
        }),
        SelectTable.getIns().show(DataManager.GAME_TYPE_SICBO, this.topGroup),
        EventManager.getIns().addEventListener(
          DataChangeEvent.BET_START,
          this.betStart,
          this,
        ),
        EventManager.getIns().addEventListener(
          DataChangeEvent.BET_RESULT,
          this.betResult,
          this,
        ),
        EventManager.getIns().addEventListener(
          DataChangeEvent.SEAT_DEAL,
          this.seatDeal,
          this,
        ),
        EventManager.getIns().addEventListener(
          DataChangeEvent.BET_RESPONSE,
          this.betResponse,
          this,
        ),
        EventManager.getIns().addEventListener(
          DataChangeEvent.BET_AMOUNT,
          this.betAmount,
          this,
        ),
        EventManager.getIns().addEventListener(
          DataChangeEvent.TABLE_INFO,
          this.tableInfo,
          this,
        ),
        EventManager.getIns().addEventListener(
          DataChangeEvent.SEAT_BETTING,
          this.seatBetting,
          this,
        ),
        EventManager.getIns().addEventListener(
          DataChangeEvent.RESET,
          this.clearData,
          this,
        ),
        EventManager.getIns().addEventListener(
          DataChangeEvent.User_INFO,
          this.onMoneyChange,
          this,
        ),
        (this.roadPanel = dzxx.NiuRoteScreen.getMapRoteScreen(1, 10, 4)),
        this.gRote.addChild(this.roadPanel),
        this.gRote.addEventListener(
          egret.Event.RESIZE,
          this.onRouteGroupResize,
          this,
        ),
        this.langChange(),
        (this.tsVideo.selected = DataManager.autoShowVideo),
        this.showHideVideo(),
        (this.bet_allWidthHeight_hash = {}),
        (this.bet_allWidthHeight_hash.FAN_PLAYER1 = this.btn_xf1),
        (this.bet_allWidthHeight_hash.PLAYER1 = this.btn_xp1),
        (this.bet_allWidthHeight_hash.FAN_PLAYER2 = this.btn_xf2),
        (this.bet_allWidthHeight_hash.PLAYER2 = this.btn_xp2),
        (this.bet_allWidthHeight_hash.FAN_PLAYER3 = this.btn_xf3),
        (this.bet_allWidthHeight_hash.PLAYER3 = this.btn_xp3),
        (this.gameBetAction = new GameBetAction(
          this,
          [
            this.btn_xf1,
            this.btn_xp1,
            this.btn_xf2,
            this.btn_xp2,
            this.btn_xf3,
            this.btn_xp3,
          ],
          DataManager.curTableState,
          !1,
          this.bet_allWidthHeight_hash,
        )),
        this.updatebetnumgroups(),
        this.isWMRoom()
          ? (this.greenBGret.source = "0d675d_hxbg_000_png")
          : (this.greenBGret.source = "blus_hxbg_201_png"),
        this.isWMRoom()
          ? (this.tableBg.source = "0d675d_bg_png")
          : (this.tableBg.source = "green_bg_png");
    }),
    (e.prototype.isWMRoom = function () {
      var t = /^WM/,
        e = DataManager.getTableStr1(
          DataManager.curTableState.tableInfo.tableid,
        );
      return t.test(e);
    }),
    (e.prototype.getBetChildByName = function (t) {
      return this.betChildDict[t];
    }),
    (e.prototype.getCardChildByName = function (t) {
      return null;
    }),
    (e.prototype.onRouteGroupResize = function (t) {
      void 0 === t && (t = null),
        this.roadPanel && this.roadPanel.updata(),
        this.change_size(this.contentGroup, this.viewGroup);
    }),
    (e.prototype.onVideo = function (t) {
      this.showHideVideo(t);
    }),
    (e.prototype.showHideVideo = function (t) {
      void 0 === t && (t = null),
        this.tsVideo.selected
          ? (DZTimeCountBar.inst.hide(), dzxx.LiveVideo.playvideo())
          : (dzxx.LiveVideo.stopvideo(),
            DZTimeCountBar.inst.show(
              this.videogroup,
              DataManager.getLobbyTableData(this.tableid).lobbyid,
            ));
    }),
    (e.prototype.onMoneyChange = function (t) {
      (this.lblMoney.text = ShareUtils.toMoney(DataManager.sumAmount)),
        this.gameBetAction.checkBtnRepeat();
    }),
    (e.prototype.onShowLimit = function () {
      null == this.gameLimit && (this.gameLimit = new game.GameLimitUI()),
        this.addChild(this.gameLimit),
        this.gameLimit.showUI(DataManager.curTable.gameType);
    }),
    (e.prototype.langChange = function () {
      (this.lblLimit.text =
        LangUtils.LANG_MAP.INFO_LIMIT +
        ":" +
        GameUtils.getNumberFormat(DataManager.curTable.minlimit) +
        "-" +
        GameUtils.getNumberFormat(DataManager.curTable.maxlimit)),
        (this.lblTitle.text = DataManager.getTableStr(
          DataManager.curTableState.tableid,
        ));
      DataManager.LANG_TYPE == DataManager.LANG_EN;
      (this.tsVideo.yesLabel = this.tsVideo.noLabel = ""),
        this.tsVideo.updateLabel(),
        (this.btnSelectTable.label = LangUtils.LANG_MAP.GAME_SELECT_TABLE),
        (this.langNiu_0.text = LangUtils.LANG_MAP.PLAYER + 1),
        (this.langNiu_1.text = LangUtils.LANG_MAP.PLAYER + 2),
        (this.langNiu_2.text = LangUtils.LANG_MAP.PLAYER + 3),
        (this.LangNiuxf1.text =
          this.LangNiuxf2.text =
          this.LangNiuxf3.text =
            LangUtils.LANG_MAP.dzg_niuniu_odds_txt10),
        (this.LangNiuxp1.text =
          this.LangNiuxp2.text =
          this.LangNiuxp3.text =
            LangUtils.LANG_MAP.dzg_niuniu_odds_txt11),
        (this.LangNiu_pei_xf1.text =
          this.LangNiu_pei_xf2.text =
          this.LangNiu_pei_xf3.text =
            "1:095"),
        (this.LangNiu_pei_xp1.text =
          this.LangNiu_pei_xp2.text =
          this.LangNiu_pei_xp3.text =
            "1:095"),
        (this.LangNiuxf1.visible =
          this.LangNiuxf2.visible =
          this.LangNiuxf3.visible =
            !1),
        (this.LangNiuxp1.visible =
          this.LangNiuxp2.visible =
          this.LangNiuxp3.visible =
            !1),
        (this.LangNiu_pei_xf1.visible =
          this.LangNiu_pei_xf2.visible =
          this.LangNiu_pei_xf3.visible =
            !1),
        (this.LangNiu_pei_xp1.visible =
          this.LangNiu_pei_xp2.visible =
          this.LangNiu_pei_xp3.visible =
            !1),
        (this.langLab0.text = LangUtils.LANG_MAP.dzg_main_10001 + ":"),
        (this.labeltotalbet.text = LangUtils.get("dzg_game_bjl_5")),
        (this.tongjititletxt.text =
          LangUtils.LANG_MAP.dzg_main_10002 + ":       "),
        (this.langLab1.text = LangUtils.LANG_MAP.dzg_game_bjl_5),
        (this.langLab5.text = LangUtils.LANG_MAP.dzg_niuniu_odds_txt12),
        (this.lblRoute_B.text =
          LangUtils.LANG_MAP.dzg_niuniu_limit_FAN_PLAYER1),
        (this.lblRoute_T.text =
          LangUtils.LANG_MAP.dzg_niuniu_limit_FAN_PLAYER2),
        (this.lblRoute_P.text =
          LangUtils.LANG_MAP.dzg_niuniu_limit_FAN_PLAYER3),
        (this.langLab2.text = LangUtils.LANG_MAP.dzg_niuniu_limit_PLAYER1),
        (this.langLab3.text = LangUtils.LANG_MAP.dzg_niuniu_limit_PLAYER2),
        (this.langLab4.text = LangUtils.LANG_MAP.dzg_niuniu_limit_PLAYER3),
        (this.limitLable.text = LangUtils.LANG_MAP.INFO_LIMIT),
        (this.all_betImg.source =
          "nn_betRegPng_" + DataManager.LANG_TYPE + "_png"),
        (this.btnRepet.radio_pic_up.source =
          "hxbg_37_" + DataManager.LANG_TYPE + "_png"),
        (this.btnRepet.radio_pic_down.source =
          "hxbg_37_" + DataManager.LANG_TYPE + "_png"),
        (this.btnRepet.radio_pic_disabled.source =
          "hxbg_42_" + DataManager.LANG_TYPE + "_png"),
        (this.btnSure.radio_pic_up.source =
          "hxbg_36_" + DataManager.LANG_TYPE + "_png"),
        (this.btnSure.radio_pic_down.source =
          "hxbg_36_" + DataManager.LANG_TYPE + "_png"),
        (this.btnSure.radio_pic_disabled.source =
          "hxbg_41_" + DataManager.LANG_TYPE + "_png"),
        (this.btnCancel.radio_pic_up.source =
          "hxbg_35_" + DataManager.LANG_TYPE + "_png"),
        (this.btnCancel.radio_pic_down.source =
          "hxbg_35_" + DataManager.LANG_TYPE + "_png"),
        (this.btnCancel.radio_pic_disabled.source =
          "hxbg_40_" + DataManager.LANG_TYPE + "_png"),
        DataManager.LANG_TYPE == DataManager.LANG_EN
          ? ((this.lblMoney.size = 20),
            (this.txttotalbet.size = 20),
            (this.labeltotalbet.size = 20),
            (this.langLab0.size = 20))
          : DataManager.LANG_TYPE == DataManager.LANG_KN
            ? ((this.lblMoney.size = 20),
              (this.txttotalbet.size = 20),
              (this.langLab0.size = 16),
              (this.labeltotalbet.size = 14))
            : DataManager.LANG_TYPE == DataManager.LANG_VL
              ? ((this.lblMoney.size = 20),
                (this.txttotalbet.size = 20),
                (this.langLab0.size = 16),
                (this.labeltotalbet.size = 14),
                (this.limitLable.size = 16))
              : DataManager.LANG_TYPE == DataManager.LANG_HN ||
                  DataManager.LANG_TYPE == DataManager.LANG_JPN ||
                  DataManager.LANG_TYPE == DataManager.LANG_KR
                ? ((this.lblMoney.size = 20),
                  (this.txttotalbet.size = 20),
                  (this.langLab0.size = 16),
                  (this.labeltotalbet.size = 14))
                : ((this.langLab0.size = 24),
                  (this.labeltotalbet.size = 24),
                  (this.lblMoney.size = 24),
                  (this.txttotalbet.size = 24));
    }),
    (e.prototype.setNOCOMEnable = function (t) {}),
    (e.prototype.onBack = function () {
      var t = DataManager.getLobbyTableData(this.tableid).lobbyid;
      (DataManager.curTableState = null),
        (DataManager.curTable = null),
        (ShareUtils.main.gameView = null),
        this.dispose(),
        ChooseTableView.inst.show(t);
    }),
    (e.prototype.onMenu = function () {
      MenuView.getIns().showhide();
    }),
    (e.prototype.betStart = function (t) {
      var e = t.data[0];
      if (e.tableid == DataManager.curTable.tableid)
        if (0 == e.bettype) {
          if (this.cur_gameSeq == e.gameSeq) return;
          (this.cur_gameSeq = e.gameSeq),
            this.gameBetAction.betStart(e),
            (this.card_back_rect.visible = !1),
            e.countdown > 500 &&
              (this.setResultTip(16243228, "BET_START"),
              dzxx.SoundManager.inst.playBetting(
                dzxx.SoundManager.bettingStart,
              )),
            this.resetTongji(),
            this.cardPanel.init();
        } else 3 == e.bettype && this.gameBetAction.betStart(e);
    }),
    (e.prototype.betAmount = function (t) {
      t.data == DataManager.curTable.tableid && this.uodataTabInfo(!0);
    }),
    (e.prototype.betAmountConfig = function () {}),
    (e.prototype.setNOCOMbuttonState = function () {
      var t,
        e = 0,
        i = this.gameBetAction.state == GameBetAction.STATE_ACCEPT_BET;
      if (this.gameBetAction.curList) {
        if (((e = this.gameBetAction.curList.BANKER), e > 0))
          return void this.setNOCOMEnable(!1);
        if (((e = this.gameBetAction.curList.SS), e > 0))
          return void this.setNOCOMEnable(!1);
      }
      if ((t = this.gameBetAction.joinResponseList)) {
        if (((e = t.BANKER), e > 0)) return void this.setNOCOMEnable(!1);
        if (((e = t.SS), e > 0)) return void this.setNOCOMEnable(!1);
      }
      this.setNOCOMEnable(i && !DataManager.hasTableStates_B_S());
    }),
    (e.prototype.tableInfo = function (t) {
      if (t.data.tableid == DataManager.curTable.tableid) {
        this.gameBetAction.tableInfo(DataManager.curTableState.tableInfo);
        var e = t.data,
          i = e.history2;
        if (
          (this.roadPanel.show(i),
          "RP" == DataManager.curTableState.tableInfo.tablestate)
        ) {
          var a = new ErrorMessage(-132);
          DataManager.errorMessage(a);
        }
      }
    }),
    (e.prototype.uodataTabInfo = function (t) {
      if ((void 0 === t && (t = !0), DataManager.curTableState)) {
        var e = new RegExp(",", "g"),
          i = DataManager.curTableState.tablePool,
          a = ["0", "0"],
          n = ["0", "0"],
          s = ["0", "0"],
          r = ["0", "0"],
          o = ["0", "0"],
          h = ["0", "0"];
        i.FAN_PLAYER1 &&
          ((a = String(i.FAN_PLAYER1).split("/")),
          (this.lblXF_1.text = a[0] + "/" + a[1])),
          i.FAN_PLAYER2 &&
            ((n = String(i.FAN_PLAYER2).split("/")),
            (this.lblXF_2.text = n[0] + "/" + n[1])),
          i.FAN_PLAYER3 &&
            ((s = String(i.FAN_PLAYER3).split("/")),
            (this.lblXF_3.text = s[0] + "/" + s[1])),
          i.PLAYER1 &&
            ((r = String(i.PLAYER1).split("/")),
            (this.lblXP_1.text = r[0] + "/" + r[1])),
          i.PLAYER2 &&
            ((o = String(i.PLAYER2).split("/")),
            (this.lblXP_2.text = o[0] + "/" + o[1])),
          i.PLAYER3 &&
            ((h = String(i.PLAYER3).split("/")),
            (this.lblXP_3.text = h[0] + "/" + h[1])),
          (this.txtTotalPledge.text =
            "" +
            (4 * Number(a[0].replace(e, "")) +
              4 * Number(n[0].replace(e, "")) +
              4 * Number(s[0].replace(e, "")))),
          (this.lblTotalBet.text =
            "" +
            (Number(a[0].replace(e, "")) +
              Number(n[0].replace(e, "")) +
              Number(s[0].replace(e, "")) +
              Number(r[0].replace(e, "")) +
              Number(o[0].replace(e, "")) +
              Number(h[0].replace(e, ""))));
      } else this.resetTongji();
    }),
    (e.prototype.resetTongji = function () {
      (this.txtTotalPledge.text = "0"),
        (this.lblTotalBet.text = "0"),
        (this.lblXF_1.text = "0/0"),
        (this.lblXF_2.text = "0/0"),
        (this.lblXF_3.text = "0/0"),
        (this.lblXP_1.text = "0/0"),
        (this.lblXP_2.text = "0/0"),
        (this.lblXP_3.text = "0/0");
    }),
    (e.prototype.setBetYaJing = function (t) {
      if (1 == t.result) {
        for (
          var e =
              "0" == this.txtTotalPledge.text
                ? 0
                : parseInt(this.txtTotalPledge.text),
            i = 0;
          i < t.option.length;
          i++
        )
          -1 != t.option[i].indexOf("YAJIN") && (e += t.amount[i]);
        this.txtTotalPledge.text = "" + e;
      }
    }),
    (e.prototype.betResponse = function (t) {
      this.setBetYaJing(t.data),
        this.gameBetAction.betResponse(t.data),
        1 == t.data.result
          ? this.setResultTip(16243228, "BET_SUCCESS")
          : 2 == t.data.result
            ? this.setResultTip(16243228, "BET_UNDER_MUCH")
            : -112 == t.data.result
              ? (this.setResultTip(16243228, "BET_UNDER_MUCH"),
                this.gameBetAction.checkBtnSure(),
                this.setNOCOMbuttonState())
              : -113 == t.data.result
                ? this.setResultTip(16243228, "BET_UNDER_MUCH")
                : -95 == t.data.result
                  ? Alert.tipGame("dzg_game_bjl_30", 16243228)
                  : -96 == t.data.result
                    ? Alert.tipGame("dzg_game_bjl_31", 16243228)
                    : -122 == t.data.result
                      ? this.setResultTip(16243228, "BET_TOO_MUCH")
                      : -123 == t.data.result
                        ? this.setResultTip(
                            16243228,
                            "BET_TOO_MUCH_OF_ALL_TABLE",
                          )
                        : -140 == t.data.result
                          ? Alert.showCaptcha()
                          : (this.setResultTip(16243228, "BET_FAILE"),
                            this.gameBetAction.checkBtnSure(),
                            this.setNOCOMbuttonState());
    }),
    (e.prototype.updatebetnumgroups = function () {
      (this.betnumgroupXF_1.visible = !1),
        (this.betnumgroupXP_1.visible = !1),
        (this.betnumgroupXF_2.visible = !1),
        (this.betnumgroupXP_2.visible = !1),
        (this.betnumgroupXF_3.visible = !1),
        (this.betnumgroupXP_3.visible = !1);
      for (var t in this.betChildDict) {
        var e = this.gameBetAction.joinResponseList[t] || 0,
          i = this.gameBetAction.tempbetlist[t] || 0;
        "FAN_PLAYER1" == t && this.setbetnumgroup(this.betnumgroupXF_1, e, i),
          "PLAYER1" == t && this.setbetnumgroup(this.betnumgroupXP_1, e, i),
          "FAN_PLAYER2" == t && this.setbetnumgroup(this.betnumgroupXF_2, e, i),
          "PLAYER2" == t && this.setbetnumgroup(this.betnumgroupXP_2, e, i),
          "FAN_PLAYER3" == t && this.setbetnumgroup(this.betnumgroupXF_3, e, i),
          "PLAYER3" == t && this.setbetnumgroup(this.betnumgroupXP_3, e, i);
      }
    }),
    (e.prototype.setbetnumgroup = function (t, e, i) {
      (t.betnum = e),
        (t.tempbetnum = i),
        (t.initbetnum = e),
        (t.betnumvisible = e > 0),
        (t.tempbetnumvisible = i > 0),
        (t.visible = e > 0 || i > 0);
    }),
    (e.prototype.setResultTip = function (t, e) {
      return Alert.tipGame(LangUtils.LANG_MAP[e] || e, t);
    }),
    (e.prototype.betResult = function (t) {
      !t.data.winOptions ||
        0 == t.data.winOptions.length ||
        t.data.winOptions.indexOf("NULL") >= 0 ||
        (this.playPointSound(),
        this.gameBetAction.betResult(t.data),
        (this.flashAry = []),
        t.data.winOptions &&
          t.data.winOptions.length > 0 &&
          (t.data.winOptions[0] > 0 && this.flashAry.push(this.btn_bg_xf1),
          t.data.winOptions[1] > 0 && this.flashAry.push(this.btn_bg_xp1),
          t.data.winOptions[2] > 0 && this.flashAry.push(this.btn_bg_xf2),
          t.data.winOptions[3] > 0 && this.flashAry.push(this.btn_bg_xp2),
          t.data.winOptions[4] > 0 && this.flashAry.push(this.btn_bg_xf3),
          t.data.winOptions[5] > 0 && this.flashAry.push(this.btn_bg_xp3),
          this.timer || (this.timer = new egret.Timer(500, 10)),
          this.flashAry.length > 0 &&
            (this.timer.reset(),
            this.timer.addEventListener(
              egret.TimerEvent.TIMER,
              this.flashAryTimeEvent,
              this,
            ),
            this.timer.addEventListener(
              egret.TimerEvent.TIMER_COMPLETE,
              this.flashAryTimerCompleteEvent,
              this,
            ),
            this.timer.start())));
    }),
    (e.prototype.flashAryTimerCompleteEvent = function () {
      this.timer &&
        (this.timer.removeEventListener(
          egret.TimerEvent.TIMER,
          this.flashAryTimeEvent,
          this,
        ),
        this.timer.removeEventListener(
          egret.TimerEvent.TIMER_COMPLETE,
          this.flashAryTimerCompleteEvent,
          this,
        ));
      for (var t = 0; t < this.flashAry.length; t++) this.flashAry[t].alpha = 0;
    }),
    (e.prototype.flashAryTimeEvent = function () {
      if (this.flashAry)
        for (var t = 0; t < this.flashAry.length; t++)
          this.flashAry[t].alpha = 0 == this.flashAry[t].alpha ? 1 : 0;
    }),
    (e.prototype.seatBetting = function (t) {
      var e = t.data;
      DataManager.curTable.tableid == e.tableid &&
        DataManager.userid == e.userid &&
        ShareUtils.callLater(
          200,
          function () {
            this.gameBetAction && this.gameBetAction.seatBetting(t.data);
          },
          this,
        );
    }),
    (e.prototype.seatDeal = function (t) {
      var e = t.data;
      if (DataManager.curTableState.tableid == e.tableid) {
        if (0 == e.order) return;
        this.gameBetAction.seatDeal(),
          (this.card_back_rect.visible = !0),
          this.showCard(e);
      }
    }),
    (e.prototype.showCard = function (t) {
      this.cardPanel.setDataInfo(t);
    }),
    (e.prototype.playPointSound = function () {}),
    (e.prototype.onVideoZoom = function () {
      this.changeZoom(dzxx.LiveVideo.switchZoom());
    }),
    (e.prototype.changeZoom = function (t) {
      t
        ? (this.video_zoom.source = "video_normal_png")
        : (this.video_zoom.source = "video_card_png");
    }),
    (e.prototype.clearData = function (t) {
      this.gameBetAction.pause();
    }),
    (e.prototype.dispose = function () {
      (this.cur_gameSeq = -1),
        MessageHandler.leaveTable(this.tableid),
        dzxx.SoundManager.inst.stopSoundChanel(),
        LangUtils.removeEventListener(this.langChange, this),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.BET_START,
          this.betStart,
          this,
        ),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.BET_RESULT,
          this.betResult,
          this,
        ),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.SEAT_DEAL,
          this.seatDeal,
          this,
        ),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.BET_RESPONSE,
          this.betResponse,
          this,
        ),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.BET_AMOUNT,
          this.betAmount,
          this,
        ),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.TABLE_INFO,
          this.tableInfo,
          this,
        ),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.SEAT_BETTING,
          this.seatBetting,
          this,
        ),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.RESET,
          this.clearData,
          this,
        ),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.User_INFO,
          this.onMoneyChange,
          this,
        ),
        this.btnbackgroup.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onBack,
          this,
        ),
        this.btnmenugroup.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onMenu,
          this,
        ),
        this.btnLimit_fb.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onShowLimit,
          this,
        ),
        this.tsVideo.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onVideo,
          this,
        ),
        this.gRote.removeEventListener(
          egret.Event.RESIZE,
          this.onRouteGroupResize,
          this,
        ),
        this.roadPanel.destroy(),
        this.cardPanel.dispose(),
        this.video_zoom.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onVideoZoom,
          this,
        ),
        this.gameBetAction.dispose(),
        this.timer &&
          (this.timer.reset(),
          this.timer.removeEventListener(
            egret.TimerEvent.TIMER,
            this.flashAryTimeEvent,
            this,
          ),
          this.timer.removeEventListener(
            egret.TimerEvent.TIMER_COMPLETE,
            this.flashAryTimerCompleteEvent,
            this,
          )),
        (this.flashAry = null),
        (this.timer = null),
        (this.gameBetAction = null),
        SelectTable.getIns().remove(),
        this.coinsBar.dispose(),
        (this.coinsBar = null),
        dzxx.LiveVideo.ifStopVideo(),
        this.removeChildren(),
        this.parent && this.parent.removeChild(this);
    }),
    e
  );
})(ViewAbstract);
__reflect(NiuniuView.prototype, "NiuniuView");
var game;
!(function (t) {
  var e = (function (e) {
    function i() {
      var t = e.call(this) || this;
      return (
        (t.timeCount = 0),
        (t.quickClickTime = 0),
        (t.small_size = 40),
        (t.middle_size = 60),
        (t.big_size = 88),
        (t.blue_color = 3589764),
        (t.red_color = 16267834),
        DataManager.Q1E5_login || DataManager.API168_login
          ? (t.skinName = "resource/skins/duotai/ChangeDuotaiTabItemCnine.exml")
          : (t.skinName = "resource/skins/duotai/ChangeDuotaiTabItem.exml"),
        t
      );
    }
    return (
      __extends(i, e),
      (i.prototype.partAdded = function (t, i) {
        e.prototype.partAdded.call(this, t, i);
      }),
      (i.prototype.childrenCreated = function () {
        e.prototype.childrenCreated.call(this),
          (this.gTip.visible = !1),
          this.gContent.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.changeTable,
            this,
          ),
          (this.changeIndexGroup.visible = !1),
          EventManager.getIns().addEventListener(
            DataChangeEvent.DUOTAI_SELECT_TABLE_UI,
            this.changeTableUIFun,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.DUOTAI_TAB_INDEX_CHANGE,
            this.showTabIndexFun,
            this,
          ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.GOOD_ROAD_CHANGE,
            this.updataHaoluFun,
            this,
          );
        var t = 0,
          i = 9;
        for (
          (DataManager.Q1E5_login || DataManager.API168_login) && (i = 6);
          i > t;
          ++t
        )
          this["btn_" + t].addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.btnFun,
            this,
          );
      }),
      (i.prototype.setItem = function (e) {
        (this.tableState = e),
          this.changeLang(),
          this.tableState.tableInfo.gameType == DataManager.GAME_TYPE_LUNPAGAME
            ? (this.lunpan_route ||
                (this.lunpan_route = t.LunpanManager.getMapRoteScreen(
                  this.tableState.tableid + 1e3,
                  22,
                  18,
                  6,
                  dzxx.MAPROTE_SHOW_TYPE.MAPROTE_SHOW_TYPE_ZHUPAN,
                )),
              this.gRoute.addChild(this.lunpan_route),
              (this.lunpan_route.x = this.lunpan_route.y = 0))
            : this.tableState.tableInfo.gameType == DataManager.GAME_TYPE_SICBO
              ? (this.shaibao_route ||
                  (this.shaibao_route = new dzxx.ShaiBaoRoteScreen(6, 6)),
                this.mainRoute.addChild(this.shaibao_route),
                (this.shaibao_route.currType =
                  dzxx.SHAIB_ROTE_SHOW_TYPE.SHAIBROTE_SHOW_TYPE_1),
                this.shaibao_route.show(this.tableState.tableInfo.history2))
              : ((GameUtils.routeSize = 22),
                (this.route = new route.BaccratRoadSmall(14)),
                this.mainRoute.addChild(this.route),
                (this.route.x = this.gRoute.x),
                (this.route.y = 0)),
          this.tableState &&
            ((this.timeCount = this.tableState.betzfbTime),
            this.updataTableInfo()),
          EnterFrameRunner.getInstance().addEventListener(
            TimerGameEvent.TICK,
            this.onTickChange,
            this,
          ),
          this.showTabIndexFun();
      }),
      (i.prototype.btnFun = function (t) {
        var e = t.target.name;
        if (e.split("_").length > 1) {
          var i = parseInt(e.split("_")[1]);
          DataManager.changeDuotaiIDIndex(i, this.tableState.tableid),
            (this.changeIndexGroup.visible = !1);
        }
      }),
      (i.prototype.showTabIndexFun = function () {
        var t = DataManager.getDuotaiTabIndex(this.tableState.tableid);
        t >= 0
          ? ((this.gTip.visible = !0),
            (this.tabIndexLab.text = (t + 1).toString()))
          : (this.gTip.visible = !1);
      }),
      (i.prototype.updataHaoluFun = function () {
        var t = this.tableState;
        if (!t) return void (this.goodRoadLab.visible = !1);
        var e = t.tableInfo;
        if (!e) return void (this.goodRoadLab.visible = !1);
        if (
          ((this.goodRoadLab.visible =
            e.gameType == DataManager.GAME_TYPE_BACCARAT),
          e.gameType == DataManager.GAME_TYPE_BACCARAT)
        ) {
          var i = DataManager.getGoodRoadMessage(e.tableid);
          i
            ? ((this.goodRoadLab.visible = !0),
              (this.goodRoadLab.text =
                LangUtils.LANG_MAP["GOOD_ROAD_" + i.RoadType]))
            : (this.goodRoadLab.visible = !1);
        }
      }),
      (i.prototype.changeTableUIFun = function (t) {
        t.data != this.tableState.tableid &&
          (this.changeIndexGroup.visible = !1);
      }),
      (i.prototype.changeTable = function () {
        (this.changeIndexGroup.visible = !this.changeIndexGroup.visible),
          EventManager.getIns().dispatchEvent(
            new DataChangeEvent(
              DataChangeEvent.DUOTAI_SELECT_TABLE_UI,
              this.tableState.tableid,
            ),
          );
      }),
      (i.prototype.changeLang = function () {
        if (
          ((this.lbName.text = DataManager.getTableStr(
            this.tableState.tableid,
          )),
          (this.lbState.text = LangUtils.LANG_MAP.Maintaining_Table_Card),
          (this.whLab.text = LangUtils.LANG_MAP.dzg_main_39),
          (this.lbState.textColor = this.blue_color),
          this.goodRoadLab.visible)
        ) {
          var t = this.tableState,
            e = t.tableInfo;
          if (e) {
            var i = DataManager.getGoodRoadMessage(e.tableid);
            i
              ? ((this.goodRoadLab.visible = !0),
                (this.goodRoadLab.text =
                  LangUtils.LANG_MAP["GOOD_ROAD_" + i.RoadType]))
              : (this.goodRoadLab.visible = !1);
          } else this.goodRoadLab.visible = !1;
        }
        DataManager.LANG_TYPE == DataManager.LANG_SC
          ? (this.lbState.size = this.middle_size)
          : (this.lbState.size = this.small_size);
        var a = 0,
          n = 9;
        for (
          (DataManager.Q1E5_login || DataManager.API168_login) && (n = 6);
          n > a;
          ++a
        )
          this["btn_" + a].label =
            LangUtils.LANG_MAP.dzg_game_bjl_28 + (a + 1).toString();
      }),
      (i.prototype.updataTableInfo = function () {
        this.tableState ||
          (this.tableState = DataManager.getTableStates(
            this.tableState.tableid,
          )),
          this.route &&
            ((GameUtils.routeSize = 22),
            this.route.parseDatum(
              this.tableState.tableInfo.history,
              !0,
              this.tableState.tableInfo.gameType ==
                DataManager.GAME_TYPE_DRAGONTIGER,
            )),
          this.lunpan_route &&
            this.lunpan_route.show(this.tableState.tableInfo.history2),
          this.shaibao_route &&
            ((this.shaibao_route.currType =
              dzxx.SHAIB_ROTE_SHOW_TYPE.SHAIBROTE_SHOW_TYPE_1),
            this.shaibao_route.show(this.tableState.tableInfo.history2));
        var t = DataManager.getDuotaiTabIndex(this.tableState.tableid);
        0 > t && "RP" == this.tableState.tableInfo.tablestate
          ? (this.whGroup.visible = !0)
          : t >= 0 && "RP" == this.tableState.tableInfo.tablestate
            ? (this.whGroup.visible = !0)
            : (this.whGroup.visible = !1),
          (this.lbState.text = this.tableStateToLang(
            this.tableState.tableInfo.tablestate,
          )),
          (this.lbState.textColor = this.blue_color),
          DataManager.LANG_TYPE == DataManager.LANG_SC
            ? (this.lbState.size = this.middle_size)
            : (this.lbState.size = this.small_size);
      }),
      (i.prototype.onTickChange = function (t) {
        this.updataTableInfo(),
          this.showTime(EnterFrameRunner.getInstance().SCEOND_TIMER);
      }),
      (i.prototype.showTime = function (t) {
        var e = new Date().getTime(),
          i = Math.ceil((this.tableState.betzfbTime - e) / 1e3);
        i >= 1
          ? ((this.lbState.text = i.toString()),
            (this.lbState.size = this.big_size),
            10 >= i && i > 0
              ? (this.lbState.textColor = this.red_color)
              : (this.lbState.textColor = this.blue_color))
          : "" == this.lbState.text &&
            ((this.lbState.text = "0"),
            (this.lbState.size = this.big_size),
            (this.lbState.textColor = this.red_color));
      }),
      (i.prototype.tableStateToLang = function (t) {
        return "S" == t
          ? LangUtils.get("Clear_Table_Card")
          : "RP" == t
            ? LangUtils.get("Maintaining_Table_Card")
            : "R" == t
              ? LangUtils.get("E")
              : "WOP" == t
                ? LangUtils.get("SB0")
                : "";
      }),
      (i.prototype.dispose = function () {
        EnterFrameRunner.getInstance().removeEventListener(
          TimerGameEvent.TICK,
          this.onTickChange,
          this,
        ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.DUOTAI_SELECT_TABLE_UI,
            this.changeTableUIFun,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.DUOTAI_TAB_INDEX_CHANGE,
            this.showTabIndexFun,
            this,
          ),
          EventManager.getIns().removeEventListener(
            DataChangeEvent.GOOD_ROAD_CHANGE,
            this.updataHaoluFun,
            this,
          );
        for (var t = 0, e = 6; e > t; ++t)
          this["btn_" + t].removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.btnFun,
            this,
          );
        this.route &&
          this.route.parent &&
          this.route.parent.removeChild(this.route),
          this.lunpan_route &&
            this.lunpan_route.parent &&
            this.lunpan_route.parent.removeChild(this.lunpan_route),
          this.shaibao_route &&
            this.shaibao_route.parent &&
            this.shaibao_route.parent.removeChild(this.shaibao_route);
      }),
      i
    );
  })(eui.Component);
  (t.ChangeDuotaiTabItem = e),
    __reflect(e.prototype, "game.ChangeDuotaiTabItem", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(game || (game = {}));
var game;
!(function (t) {
  var e = (function (e) {
    function i() {
      var t = e.call(this) || this;
      return (
        (t.sort_type = 2),
        (t.itemHash = {}),
        (t.skinName = "resource/skins/duotai/GameChangeDuotaiTab.exml"),
        (t.top = 0),
        (t.bottom = 0),
        (t.percentHeight = 100),
        t
      );
    }
    return (
      __extends(i, e),
      (i.prototype.partAdded = function (t, i) {
        e.prototype.partAdded.call(this, t, i);
      }),
      (i.getIns = function () {
        return i.ins || (i.ins = new i()), i.ins;
      }),
      (i.prototype.childrenCreated = function () {
        e.prototype.childrenCreated.call(this);
      }),
      (i.prototype.addEventListerFun = function () {
        this.openTab.hasEventListener(egret.TouchEvent.TOUCH_TAP) ||
          (this.gList.addEventListener(
            "OnChangeTableClick",
            this.onHideUIQuick,
            this,
          ),
          this.openTab.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onOpenFun,
            this,
          ),
          this.closeTab.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onCloseFun,
            this,
          )),
          this.changeLang();
      }),
      (i.prototype.changeLang = function (t) {
        void 0 === t && (t = null),
          (this.openTab.radio_pic_up.source =
            "hxbg_1_" + DataManager.LANG_TYPE + "_png"),
          (this.openTab.radio_pic_down.source =
            "hxbg_1_" + DataManager.LANG_TYPE + "_png"),
          (this.openTab.radio_pic_disabled.source =
            "hxbg_1_" + DataManager.LANG_TYPE + "_png"),
          (this.closeTab.radio_pic_up.source =
            "hxbg_2_" + DataManager.LANG_TYPE + "_png"),
          (this.closeTab.radio_pic_down.source =
            "hxbg_2_" + DataManager.LANG_TYPE + "_png"),
          (this.closeTab.radio_pic_disabled.source =
            "hxbg_2_" + DataManager.LANG_TYPE + "_png");
      }),
      (i.prototype.onOpenFun = function () {
        this.showUI();
      }),
      (i.prototype.onCloseFun = function () {
        this.onHideUI();
      }),
      (i.prototype.onHideUIQuick = function () {
        (this.maiGroup.visible = !1),
          (this.x = ShareUtils.main.stage.stageWidth),
          this.setBtInit(!1),
          (this.visible = !0);
      }),
      (i.prototype.onHideUI = function () {
        egret.Tween.get(this)
          .to(
            {
              x: ShareUtils.main.stage.stageWidth,
            },
            300,
          )
          .call(function () {
            this.maiGroup.visible = !1;
          }, this),
          this.setBtInit(!1);
      }),
      (i.prototype.showUI = function () {
        (this.maiGroup.visible = !0),
          (this.x = ShareUtils.main.stage.stageWidth),
          egret.Tween.get(this)
            .to(
              {
                x: ShareUtils.main.stage.stageWidth - 322,
              },
              300,
            )
            .call(function () {
              this.maiGroup.visible = !0;
            }, this),
          this.setBtInit(!0),
          this.createItems();
      }),
      (i.prototype.removeEvetFun = function () {}),
      (i.prototype.updataItems = function () {
        if (DataManager.curTable) {
          this.removeAllItems(!1);
          var t = DataManager.curTable.tableid,
            e = DataManager.getLobbyTableData(t),
            i = DataManager.getTableStatesByLobbyID_ignoreGameStype(e.lobbyid);
          1 == this.sort_type ? i.sort(this.sortFun) : i.sort(this.sortDefFun);
          for (var a = 0; a < i.length; a++)
            if (DataManager.getLobbyTableData(i[a].tableid)) {
              var n = this.itemHash[i[a].tableid];
              n && this.gList.addChild(n);
            }
          this.scrollerMain.viewport.scrollV = 0;
        }
      }),
      (i.prototype.setBtInit = function (t) {
        void 0 === t && (t = !0),
          t
            ? ((this.openTab.visible = !1), (this.closeTab.visible = !0))
            : ((this.openTab.visible = !0), (this.closeTab.visible = !1));
      }),
      (i.prototype.createItems = function () {
        this.removeAllItems();
        var e,
          i = DataManager.curTable.tableid,
          a = DataManager.getLobbyTableData(i),
          n = DataManager.getTableStates_byeGameStype(
            a.lobbyid,
            DataManager.GAME_TYPE_BACCARAT,
          ),
          s = DataManager.getTableStates_byeGameStype(
            a.lobbyid,
            DataManager.GAME_TYPE_DRAGONTIGER,
          ),
          r = DataManager.getTableStates_byeGameStype(
            a.lobbyid,
            DataManager.GAME_TYPE_SICBO,
          );
        (e =
          DataManager.Q1E5_login || DataManager.API168_login
            ? n
            : n.concat(s, r)),
          (this.itemHash = {});
        for (var o = 0; o < e.length; o++)
          if (DataManager.getLobbyTableData(e[o].tableid)) {
            var h = new t.ChangeDuotaiTabItem();
            this.gList.addChild(h),
              h.setItem(e[o]),
              (this.itemHash[e[o].tableid] = h);
          }
        this.scrollerMain.viewport.scrollV = 0;
      }),
      (i.prototype.sortFun = function (t, e) {
        return t.sortID_client - e.sortID_client;
      }),
      (i.prototype.sortDefFun = function (t, e) {
        return t.sortID - e.sortID;
      }),
      (i.prototype.removeAllItems = function (t) {
        for (void 0 === t && (t = !0); this.gList.numChildren > 0; ) {
          var e = this.gList.removeChildAt(0);
          e && t && e.dispose(), (e = null);
        }
      }),
      (i.prototype.update = function () {
        egret.Tween.removeTweens(this),
          this.openTab.visible
            ? (this.x = ShareUtils.main.stage.stageWidth)
            : (this.x = ShareUtils.main.stage.stageWidth - this.width);
      }),
      (i.onResize = function () {
        i.ins && i.ins.update();
      }),
      (i.prototype.dispose = function () {
        (GameUtils.routeSize = 40),
          this.gList.removeEventListener(
            "OnChangeTableClick",
            this.onHideUIQuick,
            this,
          ),
          this.openTab.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onOpenFun,
            this,
          ),
          this.closeTab.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onCloseFun,
            this,
          ),
          this.parent && this.parent.removeChild(this);
      }),
      i
    );
  })(eui.Component);
  (t.GameChangeDuotaiTab = e),
    __reflect(e.prototype, "game.GameChangeDuotaiTab", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(game || (game = {}));
var SelectTable = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.time = 500),
      (e.sort_type = 1),
      (e.hao_lobbyid = 1),
      (e.activeFlag = 1),
      (e.cur_is_open = !1),
      (e.top = 0),
      (e.bottom = 0),
      e.init(),
      e
    );
  }
  return (
    __extends(e, t),
    (e.getIns = function () {
      return e.ins || (e.ins = new e()), e.ins;
    }),
    (e.prototype.init = function () {
      (this.skinName = "resource/skins/SelectTableUI.exml"),
        this.btnClose.addEventListener(
          egret.TouchEvent.TOUCH_END,
          this.hide,
          this,
        ),
        this.btnOpen.addEventListener(
          egret.TouchEvent.TOUCH_END,
          this.openScreen,
          this,
        ),
        (this.lists = []),
        EventManager.getIns().addEventListener(
          DataChangeEvent.TABLE_INFO,
          this.tableInfo,
          this,
        ),
        EventManager.getIns().addEventListener(
          DataChangeEvent.BET_START,
          this.betStart,
          this,
        ),
        (this.lblHear.label = LangUtils.LANG_MAP.I_AM_HERE),
        this.sortImgDef.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onSortDefFun,
          this,
        ),
        this.sortImghaolu.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onSortHaoluFun,
          this,
        );
    }),
    (e.prototype.changeLang = function (t) {
      void 0 === t && (t = null),
        (this.lblHear.label = LangUtils.LANG_MAP.I_AM_HERE),
        (this.langPng1.source =
          "tab_luzi_21_" + DataManager.LANG_TYPE + "_png"),
        (this.btnOpen.radio_pic_up.source =
          "hxbg_1_" + DataManager.LANG_TYPE + "_png"),
        (this.btnOpen.radio_pic_down.source =
          "hxbg_1_" + DataManager.LANG_TYPE + "_png"),
        (this.btnOpen.radio_pic_disabled.source =
          "hxbg_1_" + DataManager.LANG_TYPE + "_png"),
        (this.btnClose.radio_pic_up.source =
          "hxbg_2_" + DataManager.LANG_TYPE + "_png"),
        (this.btnClose.radio_pic_down.source =
          "hxbg_2_" + DataManager.LANG_TYPE + "_png"),
        (this.btnClose.radio_pic_disabled.source =
          "hxbg_2_" + DataManager.LANG_TYPE + "_png");
    }),
    (e.prototype.initHaoLu = function () {
      if (DataManager.curTable) {
        var t = DataManager.curTable.tableid,
          e = DataManager.getLobbyTableData(t);
        EventManager.getIns().removeEventListener(
          DataChangeEvent.GOOD_ROAD_CHANGE,
          this.updataHaoluFun,
          this,
        ),
          EventManager.getIns().addEventListener(
            DataChangeEvent.GOOD_ROAD_CHANGE,
            this.updataHaoluFun,
            this,
          ),
          this.btnHaolu.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.showHaoluScreen,
            this,
          ),
          (this.hao_lobbyid = e.lobbyid),
          (1 != e.lobbyid &&
            6 != e.lobbyid &&
            3 != e.lobbyid &&
            101 != e.lobbyid &&
            301 != e.lobbyid) ||
          !this.cur_is_open
            ? ((this.btnHaolu.visible = !1), (this.sortGroup.visible = !1))
            : (this.btnHaolu.addEventListener(
                egret.TouchEvent.TOUCH_TAP,
                this.showHaoluScreen,
                this,
              ),
              this.onSorFun(this.activeFlag),
              (this.btnHaolu.visible = !0),
              (this.sortGroup.visible = !0)),
          this.showHaoluNumFun();
      } else this.closeHaolu();
    }),
    (e.prototype.closeHaolu = function () {
      EventManager.getIns().removeEventListener(
        DataChangeEvent.GOOD_ROAD_CHANGE,
        this.updataHaoluFun,
        this,
      ),
        this.btnHaolu.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.showHaoluScreen,
          this,
        ),
        (this.btnHaolu.visible = !1),
        (this.sortGroup.visible = !1);
    }),
    (e.prototype.showHaoluScreen = function () {
      null == this.haoUI && (this.haoUI = new dzxx.TableLuziSelectScreen()),
        this.parent && this.parent.addChild(this.haoUI),
        this.haoUI.show();
    }),
    (e.prototype.updataHaoluFun = function (t) {
      if ((this.showHaoluNumFun(), this.cur_is_open && 1 == this.sort_type)) {
        var e = t.data;
        if (e) {
          var i = DataManager.curTable.tableid,
            a = DataManager.getLobbyTableData(i),
            n = DataManager.getLobbyTableData(e.TableId);
          a && n && a.lobbyid == n.lobbyid && this.updataItems();
        }
      }
    }),
    (e.prototype.showHaoluNumFun = function () {
      var t = DataManager.getGoodRoadNum(this.hao_lobbyid);
      this.haoluImg &&
        ((this.haoluImg.visible = this.haoluNum.visible = t > 0),
        (this.haoluNum.text = t.toString())),
        (this.haoluTipGroup.visible = t > 0);
    }),
    (e.prototype.onSortDefFun = function () {
      (this.activeFlag = 2), this.onSorFun(this.activeFlag), this.updataItems();
    }),
    (e.prototype.onSortHaoluFun = function () {
      (this.activeFlag = 1), this.onSorFun(this.activeFlag), this.updataItems();
    }),
    (e.prototype.updataItems = function () {
      DataManager.curTable && this.createItems();
    }),
    (e.prototype.onSorFun = function (t) {
      void 0 === t && (t = 1),
        (this.sort_type = t),
        1 == this.sort_type
          ? ((this.sortImgDef.source =
              "tab_luzi_32_" + DataManager.LANG_TYPE + "_png"),
            (this.sortImghaolu.source =
              "tab_luzi_31_" + DataManager.LANG_TYPE + "_png"),
            (this.sortImgDef.touchEnabled = !0),
            (this.sortImghaolu.touchEnabled = !1))
          : ((this.sortImgDef.source =
              "tab_luzi_33_" + DataManager.LANG_TYPE + "_png"),
            (this.sortImghaolu.source =
              "tab_luzi_30_" + DataManager.LANG_TYPE + "_png"),
            (this.sortImgDef.touchEnabled = !1),
            (this.sortImghaolu.touchEnabled = !0));
    }),
    (e.prototype.show = function (t, e) {
      void 0 === t && (t = DataManager.GAME_TYPE_BACCARAT),
        void 0 === e && (e = null),
        (this.showGameType = t),
        this.changeLang(),
        this.createItems(),
        this.update(),
        e ? e.addChild(this) : ShareUtils.moduleGroup.addChild(this),
        (this.x = ShareUtils.main.stage.stageWidth),
        (this.btnOpen.visible = !0),
        (this.btnClose.visible = !1),
        (this.cur_is_open = !1),
        this.initHaoLu();
    }),
    (e.prototype.openScreen = function () {
      var t = this;
      (this.tween = egret.Tween.get(this)),
        this.tween
          .to(
            {
              x: this.stage.stageWidth - this.width,
            },
            this.time,
            egret.Ease.sineOut,
          )
          .call(function () {
            ShareUtils.main.stage.addEventListener(
              egret.TouchEvent.TOUCH_BEGIN,
              t.onTouchStageBegin,
              t,
            ),
              (t.btnOpen.visible = !1),
              (t.btnClose.visible = !0),
              (t.cur_is_open = !0),
              t.initHaoLu();
          }, this);
    }),
    (e.prototype.onTouchStageBegin = function (t) {
      this.hitTestPoint(t.stageX, t.stageY, !0) || this.hide();
    }),
    (e.prototype.tableInfo = function (t) {
      for (var e = 0, i = this.lists; e < i.length; e++) {
        var a = i[e];
        a.tableid == t.data.tableid && a.tableInfo();
      }
    }),
    (e.prototype.betStart = function (t) {
      void 0 === t && (t = null);
      for (var e = 0, i = this.lists; e < i.length; e++) {
        var a = i[e];
        a.tableid == t.data[0].tableid &&
          (a.timeCount =
            t.data[0].countdown +
            EnterFrameRunner.getInstance().getAddTime(t.data[0].countdown));
      }
    }),
    (e.prototype.createItems = function () {
      if ((this.removeAllItems(), DataManager.curTable)) {
        var t = DataManager.curTable.tableid,
          e = DataManager.getLobbyTableData(t),
          i = DataManager.getTableStatesByLobbyID_ignoreGameStype(e.lobbyid);
        i &&
          (1 == this.sort_type
            ? i.sort(this.sortFun)
            : i.sort(this.sortDefFun));
        for (var a, n = 0; n < i.length; ++n) {
          a = i[n];
          var s = new SelectTableItem(a.tableid);
          (s.name = "table_" + a.tableid),
            this.gpList.addChild(s),
            this.lists.push(s);
        }
        var r = this.gpList.layout,
          o = 240,
          h = (r.gap + o) * this.lists.length - this.gpList.height;
        this.gpList.scrollV > h && (this.gpList.scrollV = Math.max(0, h));
        var l = this.lblHear.parent;
        l && ((l.touchEnabled = !0), l.removeChild(this.lblHear)),
          (l = this.gpList.getChildByName(
            "table_" + DataManager.curTableState.tableid,
          )),
          l && (l.addChild(this.lblHear), (l.touchEnabled = !1));
      }
    }),
    (e.prototype.sortFun = function (t, e) {
      return t.sortID_client - e.sortID_client;
    }),
    (e.prototype.sortDefFun = function (t, e) {
      return t.sortID - e.sortID;
    }),
    (e.prototype.removeAllItems = function () {
      for (var t = 0, e = this.lists; t < e.length; t++) {
        var i = e[t];
        i && i.parent && i.parent.removeChild(i);
      }
      this.lists = [];
    }),
    (e.prototype.hide = function (t) {
      var e = this;
      void 0 === t && (t = null),
        egret.Tween.removeTweens(this),
        ShareUtils.main.stage.removeEventListener(
          egret.TouchEvent.TOUCH_BEGIN,
          this.onTouchStageBegin,
          this,
        ),
        (this.tween = egret.Tween.get(this)),
        this.tween
          .to(
            {
              x: ShareUtils.main.stage.stageWidth,
            },
            this.time,
            egret.Ease.sineOut,
          )
          .call(function () {
            (e.btnOpen.visible = !0),
              (e.btnClose.visible = !1),
              (e.cur_is_open = !1),
              e.closeHaolu();
          }, this);
    }),
    (e.prototype.remove = function () {
      this.parent && this.parent.removeChild(this), this.closeHaolu();
    }),
    (e.prototype.update = function () {
      egret.Tween.removeTweens(this),
        this.btnOpen.visible
          ? (this.x = ShareUtils.main.stage.stageWidth)
          : (this.x = ShareUtils.main.stage.stageWidth - this.width);
    }),
    (e.onResize = function () {
      e.ins && e.ins.update();
    }),
    e
  );
})(eui.Component);
__reflect(SelectTable.prototype, "SelectTable");
var SelectTableItem = (function (t) {
  function e(e) {
    var i = t.call(this) || this;
    return (
      (i.timeCount = 0),
      (i.quickClickTime = 0),
      (i._tableid = 0),
      (i.small_size = 40),
      (i.big_size = 88),
      (i.middle_size = 60),
      (i.blue_color = 3589764),
      (i.red_color = 16267834),
      (i._tableid = e),
      (i.tableState = DataManager.getTableStates(e)),
      i.init(),
      i
    );
  }
  return (
    __extends(e, t),
    (e.prototype.init = function () {
      (this.skinName = "resource/skins/selectTable_item_renderer.exml"),
        (this.horizontalCenter = 0),
        (this.touchChildren = !1),
        this.changeLang(),
        this.tableState &&
          ((this.timeCount = this.tableState.betzfbTime), this.tableInfo()),
        (this.txtTime.text = ""),
        (this.txtTime.size = this.big_size),
        (this.txtTime.textColor = this.blue_color),
        EnterFrameRunner.getInstance().addEventListener(
          TimerGameEvent.TICK,
          this.onTickChange,
          this,
        ),
        this.addEventListener(egret.TouchEvent.TOUCH_TAP, this["goto"], this),
        EventManager.getIns().addEventListener(
          DataChangeEvent.GOOD_ROAD_CHANGE,
          this.updataHaoluFun,
          this,
        ),
        this.updataHaoluFun();
    }),
    (e.prototype.updataHaoluFun = function () {
      if (!this.tableState) return void (this.haoluGroup.visible = !1);
      if (
        ((this.haoluGroup.visible =
          this.tableState.tableInfo.gameType == DataManager.GAME_TYPE_BACCARAT),
        this.tableState.tableInfo.gameType == DataManager.GAME_TYPE_BACCARAT)
      ) {
        var t = DataManager.getGoodRoadMessage(
          this.tableState.tableInfo.tableid,
        );
        t
          ? ((this.goodRoadLab.visible = !0),
            (this.goodRoadLab.text =
              LangUtils.LANG_MAP["GOOD_ROAD_" + t.RoadType]))
          : (this.goodRoadLab.visible = !1);
      }
    }),
    (e.prototype.changeLang = function () {
      (this.txtName.text = DataManager.getTableStr(this.tableid)),
        (this.lblHear || "" != this.lblHear.label) &&
          (this.lblHear.label = LangUtils.LANG_MAP.Maintaining_Table_Card),
        (this.txtTime.textColor = 3589764),
        (this.txtTime.text = LangUtils.LANG_MAP.Maintaining_Table_Card),
        (this.txtTime.textColor = this.blue_color),
        DataManager.LANG_TYPE == DataManager.LANG_EN
          ? (this.txtName.size = 20)
          : (this.txtName.size = 28),
        DataManager.LANG_TYPE == DataManager.LANG_SC
          ? (this.txtTime.size = this.middle_size)
          : (this.txtTime.size = this.small_size);
    }),
    (e.prototype["goto"] = function (t) {
      var e = new Date().getTime();
      if (!(e - this.quickClickTime < 500)) {
        if (((this.quickClickTime = e), !this.tableState))
          return void Alert.tip(LangUtils.LANG_MAP.LOADING_HISTORY_ERROR);
        if ("RP" == this.tableState.tableInfo.tablestate)
          return void Alert.tip(
            this.txtName.text + " " + LangUtils.LANG_MAP.Maintaining_Table_Card,
          );
        DataManager.curTableState &&
          DataManager.curTableState.hasBet &&
          Alert.tip(LangUtils.LANG_MAP.OP_TIP_1),
          MessageHandler.chooseTable(
            this.tableid,
            this.tableState.tableInfo.gameType,
          );
      }
    }),
    (e.prototype.tableInfo = function () {
      this.tableState ||
        (this.tableState = DataManager.getTableStates(this.tableid)),
        this.tableState.tableInfo.gameType == DataManager.GAME_TYPE_LUNPAGAME
          ? (this.lunpan_route ||
              ((this.lunpan_route = game.LunpanManager.getMapRoteScreen(
                this.tableState.tableid + 2e3,
                22,
                16,
                6,
                dzxx.MAPROTE_SHOW_TYPE.MAPROTE_SHOW_TYPE_ZHUPAN,
              )),
              (this.lunpan_route.x = this.lunpan_route.y = 0),
              this.lunpanRoteGroup.addChild(this.lunpan_route)),
            this.lunpan_route.show(this.tableState.tableInfo.history2))
          : this.tableState.tableInfo.gameType == DataManager.GAME_TYPE_SICBO
            ? (this.shaibao_route ||
                (this.shaibao_route = new dzxx.ShaiBaoRoteScreen(5, 7)),
              this.lunpanRoteGroup.addChild(this.shaibao_route),
              (this.shaibao_route.currType =
                dzxx.SHAIB_ROTE_SHOW_TYPE.SHAIBROTE_SHOW_TYPE_1),
              this.shaibao_route.show(this.tableState.tableInfo.history2))
            : this.tableState.tableInfo.gameType == DataManager.GAME_TYPE_NIUNIU
              ? (this.niuniu_route ||
                  (this.niuniu_route = new dzxx.NiuRoteScreen(6, 4, 1)),
                this.cpRoute.addChild(this.niuniu_route),
                this.niuniu_route.show(this.tableState.tableInfo.history2))
              : ((GameUtils.routeSize = 22),
                this.route ||
                  ((this.route = new route.BaccratRoadSmall(16)),
                  (this.route.x = this.cpRoute.x),
                  (this.route.y = 0),
                  this.cpRoute.addChild(this.route)),
                this.route.parseDatum(
                  this.tableState.tableInfo.history,
                  !0,
                  this.tableState.tableInfo.gameType ==
                    DataManager.GAME_TYPE_DRAGONTIGER,
                )),
        "RP" == this.tableState.tableInfo.tablestate
          ? ((this.lblHear.label = LangUtils.LANG_MAP.Maintaining_Table_Card),
            this.setChildIndex(this.lblHear, this.numChildren - 1),
            (this.lblHear.visible = !1))
          : ((this.lblHear.label = ""), (this.lblHear.visible = !1)),
        (this.txtTime.text = this.tableStateToLang(
          this.tableState.tableInfo.tablestate,
        )),
        (this.txtTime.textColor = this.blue_color),
        DataManager.LANG_TYPE == DataManager.LANG_SC
          ? (this.txtTime.size = this.middle_size)
          : (this.txtTime.size = this.small_size),
        this.updataHaoluFun();
    }),
    (e.prototype.tableStateToLang = function (t) {
      return "S" == t
        ? LangUtils.get("Clear_Table_Card")
        : "RP" == t
          ? LangUtils.get("Maintaining_Table_Card")
          : "R" == t
            ? LangUtils.get("E")
            : "WOP" == t
              ? LangUtils.get("SB0")
              : "";
    }),
    (e.prototype.onTickChange = function (t) {
      this.tableInfo(),
        this.showTime(EnterFrameRunner.getInstance().SCEOND_TIMER);
    }),
    (e.prototype.showTime = function (t) {
      var e,
        i = new Date().getTime();
      (e =
        !this.tableState.betStart ||
        (20 != this.tableState.betStart.bettype &&
          21 != this.tableState.betStart.bettype &&
          22 != this.tableState.betStart.bettype)
          ? Math.ceil((this.tableState.betzfbTime - i) / 1e3)
          : 0),
        10 >= e && e > 0
          ? (this.txtTime.textColor = this.red_color)
          : (this.txtTime.textColor = this.blue_color),
        e >= 1
          ? ((this.txtTime.text = e.toString()),
            (this.txtTime.size = this.big_size))
          : "" == this.txtTime.text &&
            ((this.txtTime.text = "0"),
            (this.txtTime.size = this.big_size),
            (this.txtTime.textColor = this.red_color));
    }),
    Object.defineProperty(e.prototype, "tableid", {
      get: function () {
        return this._tableid;
      },
      enumerable: !0,
      configurable: !0,
    }),
    e
  );
})(eui.Component);
__reflect(SelectTableItem.prototype, "SelectTableItem");
var ShaiBaoView = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.routeChangeType = 0),
      (e.bet_allWidthHeight_hash = {}),
      (e.cardSize = 1.6),
      (e.select_zd = !1),
      (e.coinSize = 1.5),
      (e._playerPoint = 0),
      (e._bankerPoint = 0),
      (e.tableid = 0),
      (e.is_wenlu = !1),
      (e.updateSoundTimeID = 0),
      (e.updateSoundTimeID2 = 0),
      (e.updateSoundTimeID3 = 0),
      (e.bo_player = !1),
      (e.bo_banker = !1),
      (e.isMI_same_time = !1),
      (e.cur_gameSeq = -1),
      e.init(),
      (e.top = 0),
      (e.bottom = 0),
      (e.left = 0),
      (e.right = 0),
      e
    );
  }
  return (
    __extends(e, t),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this);
    }),
    (e.prototype.init = function () {
      (this.skinName = "resource/skins/shaibao/ShaiBaoView.exml"),
        (this.tableid = DataManager.curTable.tableid),
        this.btnbackgroup.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onBack,
          this,
        ),
        this.btnmenugroup.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onMenu,
          this,
        ),
        this.tsVideo.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onVideo,
          this,
        ),
        this.item_rect_one.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.checkedOneOption,
          this,
        ),
        this.item_rect_two.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.checkedTwoOption,
          this,
        ),
        this.video_zoom.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onVideoZoom,
          this,
        ),
        this.btnLimit_fb.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onShowLimit,
          this,
        ),
        (this.betChildDict = {
          DiTo17: this.one_17point,
          DiTo16: this.one_16point,
          DiTo15: this.one_15point,
          DiTo14: this.one_14point,
          DiTo13: this.one_13point,
          DiTo12: this.one_12point,
          DiTo11: this.one_11point,
          DiTo04: this.one_4point,
          DiTo05: this.one_5point,
          DiTo06: this.one_6point,
          DiTo07: this.one_7point,
          DiTo08: this.one_8point,
          DiTo09: this.one_9point,
          DiTo10: this.one_10point,
          DiBig: this.one_da,
          DiTri6: this.wei_6,
          DiTri5: this.wei_5,
          DiTri4: this.wei_4,
          DiTri3: this.wei_3,
          DiTri2: this.wei_2,
          DiTri1: this.wei_1,
          DiTri0: this.wei_0,
          DiSm: this.one_xiao,
          DiEven: this.dice_shuang,
          DiOne6: this.dice_6point,
          DiOne5: this.dice_5point,
          DiOne4: this.dice_4point,
          DiOne3: this.dice_3point,
          DiOne2: this.dice_2point,
          DiOne1: this.dice_1point,
          DiOdd: this.dice_dan,
          DiTw56: this.DiTw56,
          DiTw46: this.DiTw46,
          DiTw45: this.DiTw45,
          DiTw36: this.DiTw36,
          DiTw35: this.DiTw35,
          DiTw34: this.DiTw34,
          DiTw26: this.DiTw26,
          DiTw25: this.DiTw25,
          DiTw24: this.DiTw24,
          DiTw23: this.DiTw23,
          DiTw16: this.DiTw16,
          DiTw15: this.DiTw15,
          DiTw14: this.DiTw14,
          DiTw13: this.DiTw13,
          DiTw12: this.DiTw12,
          DiDou6: this.DiDou6,
          DiDou5: this.DiDou5,
          DiDou4: this.DiDou4,
          DiDou3: this.DiDou3,
          DiDou2: this.DiDou2,
          DiDou1: this.DiDou1,
          DiTri1_bg: this.DiTri1_bg,
          DiTri2_bg: this.DiTri2_bg,
          DiTri3_bg: this.DiTri3_bg,
          DiTri4_bg: this.DiTri4_bg,
          DiTri5_bg: this.DiTri5_bg,
          DiTri6_bg: this.DiTri6_bg,
          DiDou1_bg: this.DiDou1_bg,
          DiDou2_bg: this.DiDou2_bg,
          DiDou3_bg: this.DiDou3_bg,
          DiDou4_bg: this.DiDou4_bg,
          DiDou5_bg: this.DiDou5_bg,
          DiDou6_bg: this.DiDou6_bg,
          DiTo04_bg: this.DiTo04_bg,
          DiTo05_bg: this.DiTo05_bg,
          DiTo06_bg: this.DiTo06_bg,
          DiTo07_bg: this.DiTo07_bg,
          DiTo08_bg: this.DiTo08_bg,
          DiTo09_bg: this.DiTo09_bg,
          DiTo10_bg: this.DiTo10_bg,
          DiTo11_bg: this.DiTo11_bg,
          DiTo12_bg: this.DiTo12_bg,
          DiTo13_bg: this.DiTo13_bg,
          DiTo14_bg: this.DiTo14_bg,
          DiTo15_bg: this.DiTo15_bg,
          DiTo16_bg: this.DiTo16_bg,
          DiTo17_bg: this.DiTo17_bg,
          DiTw12_bg: this.DiTw12_bg,
          DiTw13_bg: this.DiTw13_bg,
          DiTw14_bg: this.DiTw14_bg,
          DiTw15_bg: this.DiTw15_bg,
          DiTw16_bg: this.DiTw16_bg,
          DiTw23_bg: this.DiTw23_bg,
          DiTw24_bg: this.DiTw24_bg,
          DiTw25_bg: this.DiTw25_bg,
          DiTw26_bg: this.DiTw26_bg,
          DiTw34_bg: this.DiTw34_bg,
          DiTw35_bg: this.DiTw35_bg,
          DiTw36_bg: this.DiTw36_bg,
          DiTw45_bg: this.DiTw45_bg,
          DiTw46_bg: this.DiTw46_bg,
          DiTw56_bg: this.DiTw56_bg,
          DiOne1_bg: this.DiOne1_bg,
          DiOne2_bg: this.DiOne2_bg,
          DiOne3_bg: this.DiOne3_bg,
          DiOne4_bg: this.DiOne4_bg,
          DiOne5_bg: this.DiOne5_bg,
          DiOne6_bg: this.DiOne6_bg,
          DiEven_bg: this.DiEven_bg,
          DiOdd_bg: this.DiOdd_bg,
          DiBig_bg: this.DiBig_bg,
          DiSm_bg: this.DiSm_bg,
        }),
        (this.tsVideo.selected = DataManager.autoShowVideo),
        this.showHideVideo(),
        (this.roadPanel = dzxx.ShaiBaoRoteScreen.getMapRoteScreen(1, 6, 8)),
        (this.roadPanel.currType =
          dzxx.SHAIB_ROTE_SHOW_TYPE.SHAIBROTE_SHOW_TYPE_2),
        this.routegroup.addChild(this.roadPanel),
        this.routegroup.addEventListener(
          egret.Event.RESIZE,
          this.onRouteGroupResize,
          this,
        ),
        this.betWrap_Scroll.addEventListener(
          egret.Event.RESIZE,
          this.betAreaResize,
          this,
        ),
        this.betWrap_Scroll.addEventListener(
          eui.UIEvent.CHANGE_END,
          this.onTouchReleaseOutside,
          this,
        ),
        SelectTable.getIns().show(DataManager.GAME_TYPE_SICBO, this.topGroup),
        DataManager.curTableState &&
          this.roadPanel.show(DataManager.curTableState.tableInfo.history2),
        (this.pointList = new Array()),
        (this.seatDealList = new Array()),
        (this.timer = new egret.Timer(500, 6)),
        (this.lblMoney.text = ShareUtils.toMoney2_oo(DataManager.sumAmount)),
        this.initInfo(),
        EventManager.getIns().addEventListener(
          DataChangeEvent.BET_START,
          this.betStart,
          this,
        ),
        EventManager.getIns().addEventListener(
          DataChangeEvent.BET_RESULT,
          this.betResult,
          this,
        ),
        EventManager.getIns().addEventListener(
          DataChangeEvent.SEAT_DEAL,
          this.seatDeal,
          this,
        ),
        EventManager.getIns().addEventListener(
          DataChangeEvent.BET_RESPONSE,
          this.betResponse,
          this,
        ),
        EventManager.getIns().addEventListener(
          DataChangeEvent.BET_AMOUNT,
          this.betAmount,
          this,
        ),
        EventManager.getIns().addEventListener(
          DataChangeEvent.TABLE_INFO,
          this.tableInfo,
          this,
        ),
        EventManager.getIns().addEventListener(
          DataChangeEvent.SEAT_BETTING,
          this.seatBetting,
          this,
        ),
        EventManager.getIns().addEventListener(
          DataChangeEvent.RESET,
          this.clearData,
          this,
        ),
        EventManager.getIns().addEventListener(
          DataChangeEvent.User_INFO,
          this.onMoneyChange,
          this,
        ),
        this.langChange(),
        (this.bet_allWidthHeight_hash = {}),
        (this.bet_allWidthHeight_hash.DiTo17 = this.one_17point),
        (this.bet_allWidthHeight_hash.DiTo16 = this.one_16point),
        (this.bet_allWidthHeight_hash.DiTo15 = this.one_15point),
        (this.bet_allWidthHeight_hash.DiTo14 = this.one_14point),
        (this.bet_allWidthHeight_hash.DiTo13 = this.one_13point),
        (this.bet_allWidthHeight_hash.DiTo12 = this.one_12point),
        (this.bet_allWidthHeight_hash.DiTo11 = this.one_11point),
        (this.bet_allWidthHeight_hash.DiTo04 = this.one_4point),
        (this.bet_allWidthHeight_hash.DiTo05 = this.one_5point),
        (this.bet_allWidthHeight_hash.DiTo06 = this.one_6point),
        (this.bet_allWidthHeight_hash.DiTo07 = this.one_7point),
        (this.bet_allWidthHeight_hash.DiTo08 = this.one_8point),
        (this.bet_allWidthHeight_hash.DiTo09 = this.one_9point),
        (this.bet_allWidthHeight_hash.DiTo10 = this.one_10point),
        (this.bet_allWidthHeight_hash.DiBig = this.one_da),
        (this.bet_allWidthHeight_hash.DiTri6 = this.wei_6),
        (this.bet_allWidthHeight_hash.DiTri5 = this.wei_5),
        (this.bet_allWidthHeight_hash.DiTri4 = this.wei_4),
        (this.bet_allWidthHeight_hash.DiTri3 = this.wei_3),
        (this.bet_allWidthHeight_hash.DiTri2 = this.wei_2),
        (this.bet_allWidthHeight_hash.DiTri1 = this.wei_1),
        (this.bet_allWidthHeight_hash.DiTri0 = this.wei_0),
        (this.bet_allWidthHeight_hash.DiSm = this.one_xiao),
        (this.bet_allWidthHeight_hash.DiEven = this.dice_shuang),
        (this.bet_allWidthHeight_hash.DiOne6 = this.dice_6point),
        (this.bet_allWidthHeight_hash.DiOne5 = this.dice_5point),
        (this.bet_allWidthHeight_hash.DiOne4 = this.dice_4point),
        (this.bet_allWidthHeight_hash.DiOne3 = this.dice_3point),
        (this.bet_allWidthHeight_hash.DiOne2 = this.dice_2point),
        (this.bet_allWidthHeight_hash.DiOne1 = this.dice_1point),
        (this.bet_allWidthHeight_hash.DiOdd = this.dice_dan),
        (this.bet_allWidthHeight_hash.DiTw56 = this.DiTw56),
        (this.bet_allWidthHeight_hash.DiTw46 = this.DiTw46),
        (this.bet_allWidthHeight_hash.DiTw45 = this.DiTw45),
        (this.bet_allWidthHeight_hash.DiTw36 = this.DiTw36),
        (this.bet_allWidthHeight_hash.DiTw35 = this.DiTw35),
        (this.bet_allWidthHeight_hash.DiTw34 = this.DiTw34),
        (this.bet_allWidthHeight_hash.DiTw26 = this.DiTw26),
        (this.bet_allWidthHeight_hash.DiTw25 = this.DiTw25),
        (this.bet_allWidthHeight_hash.DiTw24 = this.DiTw24),
        (this.bet_allWidthHeight_hash.DiTw23 = this.DiTw23),
        (this.bet_allWidthHeight_hash.DiTw16 = this.DiTw16),
        (this.bet_allWidthHeight_hash.DiTw15 = this.DiTw15),
        (this.bet_allWidthHeight_hash.DiTw14 = this.DiTw14),
        (this.bet_allWidthHeight_hash.DiTw13 = this.DiTw13),
        (this.bet_allWidthHeight_hash.DiTw12 = this.DiTw12),
        (this.bet_allWidthHeight_hash.DiDou6 = this.DiDou6),
        (this.bet_allWidthHeight_hash.DiDou5 = this.DiDou5),
        (this.bet_allWidthHeight_hash.DiDou4 = this.DiDou4),
        (this.bet_allWidthHeight_hash.DiDou3 = this.DiDou3),
        (this.bet_allWidthHeight_hash.DiDou2 = this.DiDou2),
        (this.bet_allWidthHeight_hash.DiDou1 = this.DiDou1),
        (this.gameBetAction = new GameBetAction(
          this,
          [
            this.one_17point,
            this.one_16point,
            this.one_15point,
            this.one_14point,
            this.one_13point,
            this.one_12point,
            this.one_11point,
            this.one_4point,
            this.one_5point,
            this.one_6point,
            this.one_7point,
            this.one_8point,
            this.one_9point,
            this.one_10point,
            this.one_da,
            this.wei_6,
            this.wei_5,
            this.wei_4,
            this.wei_3,
            this.wei_2,
            this.wei_1,
            this.wei_0,
            this.one_xiao,
            this.dice_shuang,
            this.dice_6point,
            this.dice_5point,
            this.dice_4point,
            this.dice_3point,
            this.dice_2point,
            this.dice_1point,
            this.dice_dan,
            this.DiTw56,
            this.DiTw46,
            this.DiTw45,
            this.DiTw36,
            this.DiTw35,
            this.DiTw34,
            this.DiTw26,
            this.DiTw25,
            this.DiTw24,
            this.DiTw23,
            this.DiTw16,
            this.DiTw15,
            this.DiTw14,
            this.DiTw13,
            this.DiTw12,
            this.DiDou6,
            this.DiDou5,
            this.DiDou4,
            this.DiDou3,
            this.DiDou2,
            this.DiDou1,
          ],
          DataManager.curTableState,
          !0,
          this.bet_allWidthHeight_hash,
        )),
        this.updatebetnumgroups(),
        this.onRouteGroupResize(),
        this.betAreaResize();
    }),
    (e.prototype.getBetChildByName = function (t) {
      return this.betChildDict[t];
    }),
    (e.prototype.getCardChildByName = function (t) {
      return null;
    }),
    (e.prototype.checkedOneOption = function (t) {
      (this.item_rect_one.fillColor = 13021586),
        (this.item_rect_two.fillColor = 13619151),
        egret.Tween.get(this.sicbo_bet_wrap).to(
          {
            scrollH: 0,
          },
          1e3,
          egret.Ease.sineInOut,
        ),
        (this.select_zd = !1);
    }),
    (e.prototype.checkedTwoOption = function (t) {
      (this.item_rect_one.fillColor = 13619151),
        (this.item_rect_two.fillColor = 13021586),
        egret.Tween.get(this.sicbo_bet_wrap).to(
          {
            scrollH: this.betgroup.width,
          },
          1e3,
          egret.Ease.sineInOut,
        ),
        (this.select_zd = !0);
    }),
    (e.prototype.onRouteGroupResize = function (t) {
      void 0 === t && (t = null),
        this.roadPanel && this.roadPanel.updata(),
        this.change_size(this.contentGroup, this.viewGroup);
    }),
    (e.prototype.betAreaResize = function () {
      (this.select_zd_one.width = this.betWrap_Scroll.width),
        (this.select_zd_two.width = this.betWrap_Scroll.width);
    }),
    (e.prototype.onTouchReleaseOutside = function (t) {
      this.sicbo_bet_wrap.scrollH < this.betgroup.width / 2
        ? ((this.select_zd = !1),
          egret.Tween.get(this.sicbo_bet_wrap).to(
            {
              scrollH: 0,
            },
            300,
            egret.Ease.sineInOut,
          ))
        : ((this.select_zd = !0),
          egret.Tween.get(this.sicbo_bet_wrap).to(
            {
              scrollH: this.betgroup.width,
            },
            300,
            egret.Ease.sineInOut,
          )),
        this.updatePointPos();
    }),
    (e.prototype.updatePointPos = function () {
      this.select_zd
        ? ((this.item_rect_one.fillColor = 13619151),
          (this.item_rect_two.fillColor = 13021586))
        : ((this.item_rect_one.fillColor = 13021586),
          (this.item_rect_two.fillColor = 13619151));
    }),
    (e.prototype.onVideo = function (t) {
      this.showHideVideo(t);
    }),
    (e.prototype.showHideVideo = function (t) {
      void 0 === t && (t = null),
        this.tsVideo.selected
          ? (DZTimeCountBar.inst.hide(), dzxx.LiveVideo.playvideo())
          : (dzxx.LiveVideo.stopvideo(),
            DZTimeCountBar.inst.show(
              this.videogroup,
              DataManager.getLobbyTableData(this.tableid).lobbyid,
            ));
    }),
    (e.prototype.onMoneyChange = function (t) {
      (this.lblMoney.text = ShareUtils.toMoney2_oo(DataManager.sumAmount)),
        this.gameBetAction.checkBtnRepeat();
    }),
    (e.prototype.langChange = function () {
      (this.lblLimit.text =
        LangUtils.LANG_MAP.INFO_LIMIT +
        ":" +
        GameUtils.getNumberFormat(DataManager.curTable.minlimit) +
        "-" +
        GameUtils.getNumberFormat(DataManager.curTable.maxlimit)),
        (this.lblTitle.text = DataManager.getTableStr(
          DataManager.curTableState.tableid,
        ));
      DataManager.LANG_TYPE == DataManager.LANG_EN;
      (this.tsVideo.yesLabel = this.tsVideo.noLabel = ""),
        this.tsVideo.updateLabel(),
        (this.btnSelectTable.label = LangUtils.LANG_MAP.GAME_SELECT_TABLE),
        DataManager.curTableState && (this.is_wenlu || this.routeBTip()),
        (this.btnRepet.radio_pic_up.source =
          "hxbg_37_" + DataManager.LANG_TYPE + "_png"),
        (this.btnRepet.radio_pic_down.source =
          "hxbg_37_" + DataManager.LANG_TYPE + "_png"),
        (this.btnRepet.radio_pic_disabled.source =
          "hxbg_42_" + DataManager.LANG_TYPE + "_png"),
        (this.btnSure.radio_pic_up.source =
          "hxbg_36_" + DataManager.LANG_TYPE + "_png"),
        (this.btnSure.radio_pic_down.source =
          "hxbg_36_" + DataManager.LANG_TYPE + "_png"),
        (this.btnSure.radio_pic_disabled.source =
          "hxbg_41_" + DataManager.LANG_TYPE + "_png"),
        (this.btnCancel.radio_pic_up.source =
          "hxbg_35_" + DataManager.LANG_TYPE + "_png"),
        (this.btnCancel.radio_pic_down.source =
          "hxbg_35_" + DataManager.LANG_TYPE + "_png"),
        (this.btnCancel.radio_pic_disabled.source =
          "hxbg_40_" + DataManager.LANG_TYPE + "_png"),
        (this.dzg_bjl_lab_2.text = LangUtils.LANG_MAP.dzg_main_50),
        (this.dzg_bjl_lab_3.text = LangUtils.LANG_MAP.dzg_main_51);
      var t = DataManager.curTableState.tableInfo;
      DataManager.getGameNameWithGameStyle(
        DataManager.curTableState.tableInfo.gameType,
        DataManager.curTableState.tableInfo.gamestyle,
      ) + DataManager.getTableStr1(DataManager.curTableState.tableInfo.tableid);
      (this.lblJuNum.text =
        t.shoeSeq.toString() +
        "/" +
        DataManager.curTableState.tableInfo.gameSeq.toString()),
        DataManager.LANG_TYPE == DataManager.LANG_EN ||
          DataManager.LANG_TYPE == DataManager.LANG_KN ||
          DataManager.LANG_TYPE == DataManager.LANG_VL ||
          DataManager.LANG_TYPE == DataManager.LANG_HN ||
          DataManager.LANG_TYPE == DataManager.LANG_JPN ||
          DataManager.LANG_TYPE == DataManager.LANG_KR;
    }),
    (e.prototype.routeBTip = function () {
      var t = this;
      (this.is_wenlu = !0),
        setTimeout(function () {
          t &&
            t.route &&
            ((GameUtils.routeSize = 40),
            t.route.parseDatum(
              DataManager.curTableState.tableInfo.history,
              !1,
              !0,
              !1,
            ),
            t.route.parseDatum(
              DataManager.curTableState.tableInfo.history,
              !1,
              !0,
              !1,
            ));
        }, 1e3);
    }),
    (e.prototype.selectTable = function (t) {}),
    (e.prototype.openDeal = function (t) {
      var e = parseInt(t.point);
      (this.pointList[t.order] = e),
        (this.playerPoint = 0),
        (this.bankerPoint = 0);
      for (var i = 0; i < this.pointList.length; i++)
        i % 2 == 0
          ? (this.playerPoint += this.pointList[i] || 0)
          : (this.bankerPoint += this.pointList[i] || 0);
      var a = this["card_" + t.order];
      if (a) {
        a.removeChildren();
        var n = GameUtils.createBitmapFromSheet(
          "card_" + t.point + "-" + t.color + "_png",
          "card_json",
        );
        n && ((n.width = a.width), (n.height = a.height), a.addChild(n));
      }
    }),
    Object.defineProperty(e.prototype, "bankerPoint", {
      get: function () {
        return this._bankerPoint;
      },
      set: function (t) {
        (this._bankerPoint = t || 0),
          (this.labelBankerPoint.text = this._bankerPoint + "");
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(e.prototype, "playerPoint", {
      get: function () {
        return this._playerPoint;
      },
      set: function (t) {
        (this._playerPoint = t || 0),
          (this.labelPlayerPoint.text = this._playerPoint + "");
      },
      enumerable: !0,
      configurable: !0,
    }),
    (e.prototype.clearCard = function () {}),
    (e.prototype.setNOCOMbuttonState = function () {
      var t,
        e = 0,
        i = this.gameBetAction.state == GameBetAction.STATE_ACCEPT_BET;
      if (this.gameBetAction.curList) {
        if (((e = this.gameBetAction.curList.BANKER), e > 0))
          return void this.setNOCOMEnable(!1);
        if (((e = this.gameBetAction.curList.SS), e > 0))
          return void this.setNOCOMEnable(!1);
      }
      if ((t = this.gameBetAction.joinResponseList)) {
        if (((e = t.BANKER), e > 0)) return void this.setNOCOMEnable(!1);
        if (((e = t.SS), e > 0)) return void this.setNOCOMEnable(!1);
      }
      this.setNOCOMEnable(i && !DataManager.hasTableStates_B_S());
    }),
    (e.prototype.setNOCOMEnable = function (t) {}),
    (e.prototype.onBack = function () {
      var t = DataManager.getLobbyTableData(this.tableid).lobbyid;
      (DataManager.curTableState = null),
        (DataManager.curTable = null),
        (ShareUtils.main.gameView = null),
        this.dispose(),
        ChooseTableView.inst.show(t);
    }),
    (e.prototype.onMenu = function () {
      MenuView.getIns().showhide();
    }),
    (e.prototype.betStart = function (t) {
      var e = t.data[0];
      if (e.tableid == DataManager.curTable.tableid)
        if (0 == e.bettype) {
          if (this.cur_gameSeq == e.gameSeq) return;
          (this.cur_gameSeq = e.gameSeq),
            this.gameBetAction.betStart(e),
            (this.card_back_rect.visible = !1),
            e.countdown > 500 &&
              (this.setResultTip(16243228, "BET_START"),
              dzxx.SoundManager.inst.playBetting(
                dzxx.SoundManager.bettingStart,
              ));
        } else 3 == e.bettype && this.gameBetAction.betStart(e);
    }),
    (e.prototype.betAmount = function (t) {
      DataManager.curTableState.tablePool;
    }),
    (e.prototype.betAmountConfig = function () {
      (this.lblB.text = "0/0"),
        (this.lblP.text = "0/0"),
        (this.lblT.text = "0/0");
    }),
    (e.prototype.initInfo = function (t) {
      void 0 === t && (t = null);
      var e = DataManager.curTableState.tableInfo.history3[0] || 0,
        i = DataManager.curTableState.tableInfo.history3[1] || 0,
        a = DataManager.curTableState.tableInfo.history3[2] || 0,
        n = DataManager.curTableState.tableInfo.history3[3] || 0,
        s = DataManager.curTableState.tableInfo.history3[4] || 0;
      (this.RoteNumBig.text = e + ""),
        (this.RoteNumSmall.text = i + ""),
        (this.RoteNumEven.text = n + ""),
        (this.RoteNumOdd.text = a + ""),
        (this.RoteNumEncircle.text = s + ""),
        "S" == t && (s = a = n = i = e = 0);
      var r = DataManager.curTableState.tableInfo;
      "" == r.tableSeq || void 0 == r.tableSeq || null == r.tableSeq
        ? (this.lblJuNum3.text = "--")
        : (this.lblJuNum3.text =
            DataManager.curTableState.tableInfo.tableSeq.toString());
    }),
    (e.prototype.tableInfo = function (t) {
      if (
        t.data.tableid == DataManager.curTable.tableid &&
        ((this.roadPanel.currType =
          dzxx.SHAIB_ROTE_SHOW_TYPE.SHAIBROTE_SHOW_TYPE_1),
        this.roadPanel.show(DataManager.curTableState.tableInfo.history2),
        this.gameBetAction.tableInfo(DataManager.curTableState.tableInfo),
        this.initInfo(DataManager.curTableState.tableInfo.tablestate),
        "RP" == DataManager.curTableState.tableInfo.tablestate)
      ) {
        var e = new ErrorMessage(-132);
        DataManager.errorMessage(e);
      }
    }),
    (e.prototype.uodataTabInfo = function (t) {
      if ((void 0 === t && (t = !0), DataManager.curTableState)) {
        var e = new RegExp(",", "g"),
          i = void 0,
          a = void 0,
          n = void 0,
          s = DataManager.curTableState.tablePool,
          r = String(s.BANKER).split("/");
        (this.tongjibankertxt.text = r[0] + "/" + r[1]),
          (i = Number(r[0].replace(e, "")));
        var o = String(s.PLAYER).split("/");
        (this.tongjiplayertxt.text = o[0] + "/" + o[1]),
          (a = Number(o[0].replace(e, "")));
        var h = String(s.TILE).split("/");
        (this.tongjitietxt.text = h[0] + "/" + h[1]),
          (n = Number(h[0].replace(e, "")));
        var l = i + a + n,
          g = 160 * (0 == l ? 0 : i / l),
          u = 160 * (0 == l ? 0 : a / l),
          c = 160 * (0 == l ? 0 : n / l);
        (this.preBet_B.visible = 0 == g ? !1 : !0),
          (this.preBet_P.visible = 0 == u ? !1 : !0),
          (this.preBet_T.visible = 0 == c ? !1 : !0),
          egret.Tween.get(this.preBet_B)
            .to(
              {
                width: g,
              },
              300,
            )
            .call(function () {}, this),
          egret.Tween.get(this.preBet_P)
            .to(
              {
                width: u,
              },
              300,
            )
            .call(function () {}, this),
          egret.Tween.get(this.preBet_T)
            .to(
              {
                width: c,
              },
              300,
            )
            .call(function () {}, this);
      } else
        (this.tongjibankertxt.text = ""),
          (this.tongjiplayertxt.text = ""),
          (this.tongjitietxt.text = "");
    }),
    (e.prototype.betResponse = function (t) {
      this.gameBetAction.betResponse(t.data),
        1 == t.data.result
          ? this.setResultTip(16243228, "BET_SUCCESS")
          : 2 == t.data.result
            ? this.setResultTip(16243228, "BET_UNDER_MUCH")
            : -112 == t.data.result
              ? (this.setResultTip(16243228, "BET_UNDER_MUCH"),
                this.gameBetAction.checkBtnSure())
              : -113 == t.data.result
                ? this.setResultTip(16243228, "BET_UNDER_MUCH")
                : -95 == t.data.result
                  ? Alert.tipGame("dzg_game_bjl_30", 16243228)
                  : -96 == t.data.result
                    ? Alert.tipGame("dzg_game_bjl_31", 16243228)
                    : -122 == t.data.result
                      ? this.setResultTip(16243228, "BET_TOO_MUCH")
                      : -123 == t.data.result
                        ? this.setResultTip(
                            16243228,
                            "BET_TOO_MUCH_OF_ALL_TABLE",
                          )
                        : -140 == t.data.result
                          ? Alert.showCaptcha()
                          : (this.setResultTip(16243228, "BET_FAILE"),
                            this.gameBetAction.checkBtnSure());
    }),
    (e.prototype.updatebetnumgroups = function () {
      (this.betnumgroup_one_one.visible = !1),
        (this.betnumgroup_one_two.visible = !1),
        (this.betnumgroup_one_three.visible = !1),
        (this.betnumgroup_one_four.visible = !1),
        (this.betnumgroup_one_five.visible = !1),
        (this.betnumgroup_one_six.visible = !1),
        (this.betnumgroup_one_seven.visible = !1),
        (this.betnumgroup_two_one.visible = !1),
        (this.betnumgroup_two_two.visible = !1),
        (this.betnumgroup_two_three.visible = !1),
        (this.betnumgroup_two_four.visible = !1),
        (this.betnumgroup_two_five.visible = !1),
        (this.betnumgroup_two_six.visible = !1),
        (this.betnumgroup_two_seven.visible = !1),
        (this.betnumgroup_three_zero.visible = !1),
        (this.betnumgroup_three_one.visible = !1),
        (this.betnumgroup_three_two.visible = !1),
        (this.betnumgroup_three_three.visible = !1),
        (this.betnumgroup_three_four.visible = !1),
        (this.betnumgroup_three_five.visible = !1),
        (this.betnumgroup_three_six.visible = !1),
        (this.betnumgroup_three_seven.visible = !1),
        (this.betnumgroup_three_eight.visible = !1),
        (this.betnumgroup_four_one.visible = !1),
        (this.betnumgroup_four_two.visible = !1),
        (this.betnumgroup_four_three.visible = !1),
        (this.betnumgroup_four_four.visible = !1),
        (this.betnumgroup_four_five.visible = !1),
        (this.betnumgroup_four_six.visible = !1),
        (this.betnumgroup_four_seven.visible = !1),
        (this.betnumgroup_four_eight.visible = !1),
        (this.betnumgroup_211.visible = !1),
        (this.betnumgroup_212.visible = !1),
        (this.betnumgroup_213.visible = !1),
        (this.betnumgroup_214.visible = !1),
        (this.betnumgroup_215.visible = !1),
        (this.betnumgroup_221.visible = !1),
        (this.betnumgroup_222.visible = !1),
        (this.betnumgroup_223.visible = !1),
        (this.betnumgroup_224.visible = !1),
        (this.betnumgroup_225.visible = !1),
        (this.betnumgroup_231.visible = !1),
        (this.betnumgroup_232.visible = !1),
        (this.betnumgroup_233.visible = !1),
        (this.betnumgroup_234.visible = !1),
        (this.betnumgroup_235.visible = !1),
        (this.betnumgroup_241.visible = !1),
        (this.betnumgroup_242.visible = !1),
        (this.betnumgroup_243.visible = !1),
        (this.betnumgroup_244.visible = !1),
        (this.betnumgroup_245.visible = !1),
        (this.betnumgroup_246.visible = !1);
      for (var t in this.betChildDict) {
        var e = this.gameBetAction.joinResponseList[t] || 0,
          i = this.gameBetAction.tempbetlist[t] || 0;
        "DiTo17" == t && this.setbetnumgroup(this.betnumgroup_one_one, e, i),
          "DiTo16" == t && this.setbetnumgroup(this.betnumgroup_one_two, e, i),
          "DiTo15" == t &&
            this.setbetnumgroup(this.betnumgroup_one_three, e, i),
          "DiTo14" == t && this.setbetnumgroup(this.betnumgroup_one_four, e, i),
          "DiTo13" == t && this.setbetnumgroup(this.betnumgroup_one_five, e, i),
          "DiTo12" == t && this.setbetnumgroup(this.betnumgroup_one_six, e, i),
          "DiTo11" == t &&
            this.setbetnumgroup(this.betnumgroup_one_seven, e, i),
          "DiTo04" == t && this.setbetnumgroup(this.betnumgroup_two_one, e, i),
          "DiTo05" == t && this.setbetnumgroup(this.betnumgroup_two_two, e, i),
          "DiTo06" == t &&
            this.setbetnumgroup(this.betnumgroup_two_three, e, i),
          "DiTo07" == t && this.setbetnumgroup(this.betnumgroup_two_four, e, i),
          "DiTo08" == t && this.setbetnumgroup(this.betnumgroup_two_five, e, i),
          "DiTo09" == t && this.setbetnumgroup(this.betnumgroup_two_six, e, i),
          "DiTo10" == t &&
            this.setbetnumgroup(this.betnumgroup_two_seven, e, i),
          "DiTri0" == t &&
            this.setbetnumgroup(this.betnumgroup_three_zero, e, i),
          "DiBig" == t && this.setbetnumgroup(this.betnumgroup_three_one, e, i),
          "DiTri6" == t &&
            this.setbetnumgroup(this.betnumgroup_three_two, e, i),
          "DiTri5" == t &&
            this.setbetnumgroup(this.betnumgroup_three_three, e, i),
          "DiTri4" == t &&
            this.setbetnumgroup(this.betnumgroup_three_four, e, i),
          "DiTri3" == t &&
            this.setbetnumgroup(this.betnumgroup_three_five, e, i),
          "DiTri2" == t &&
            this.setbetnumgroup(this.betnumgroup_three_six, e, i),
          "DiTri1" == t &&
            this.setbetnumgroup(this.betnumgroup_three_seven, e, i),
          "DiSm" == t &&
            this.setbetnumgroup(this.betnumgroup_three_eight, e, i),
          "DiEven" == t && this.setbetnumgroup(this.betnumgroup_four_one, e, i),
          "DiOne6" == t && this.setbetnumgroup(this.betnumgroup_four_two, e, i),
          "DiOne5" == t &&
            this.setbetnumgroup(this.betnumgroup_four_three, e, i),
          "DiOne4" == t &&
            this.setbetnumgroup(this.betnumgroup_four_four, e, i),
          "DiOne3" == t &&
            this.setbetnumgroup(this.betnumgroup_four_five, e, i),
          "DiOne2" == t && this.setbetnumgroup(this.betnumgroup_four_six, e, i),
          "DiOne1" == t &&
            this.setbetnumgroup(this.betnumgroup_four_seven, e, i),
          "DiOdd" == t &&
            this.setbetnumgroup(this.betnumgroup_four_eight, e, i),
          "DiTw56" == t && this.setbetnumgroup(this.betnumgroup_211, e, i),
          "DiTw46" == t && this.setbetnumgroup(this.betnumgroup_212, e, i),
          "DiTw45" == t && this.setbetnumgroup(this.betnumgroup_213, e, i),
          "DiTw36" == t && this.setbetnumgroup(this.betnumgroup_214, e, i),
          "DiTw35" == t && this.setbetnumgroup(this.betnumgroup_215, e, i),
          "DiTw34" == t && this.setbetnumgroup(this.betnumgroup_221, e, i),
          "DiTw26" == t && this.setbetnumgroup(this.betnumgroup_222, e, i),
          "DiTw25" == t && this.setbetnumgroup(this.betnumgroup_223, e, i),
          "DiTw24" == t && this.setbetnumgroup(this.betnumgroup_224, e, i),
          "DiTw23" == t && this.setbetnumgroup(this.betnumgroup_225, e, i),
          "DiTw16" == t && this.setbetnumgroup(this.betnumgroup_231, e, i),
          "DiTw15" == t && this.setbetnumgroup(this.betnumgroup_232, e, i),
          "DiTw14" == t && this.setbetnumgroup(this.betnumgroup_233, e, i),
          "DiTw13" == t && this.setbetnumgroup(this.betnumgroup_234, e, i),
          "DiTw12" == t && this.setbetnumgroup(this.betnumgroup_235, e, i),
          "DiDou6" == t && this.setbetnumgroup(this.betnumgroup_241, e, i),
          "DiDou5" == t && this.setbetnumgroup(this.betnumgroup_242, e, i),
          "DiDou4" == t && this.setbetnumgroup(this.betnumgroup_243, e, i),
          "DiDou3" == t && this.setbetnumgroup(this.betnumgroup_244, e, i),
          "DiDou2" == t && this.setbetnumgroup(this.betnumgroup_245, e, i),
          "DiDou1" == t && this.setbetnumgroup(this.betnumgroup_246, e, i);
      }
    }),
    (e.prototype.setbetnumgroup = function (t, e, i) {
      (t.betnum = e),
        (t.tempbetnum = i),
        (t.initbetnum = e),
        (t.betnumvisible = e > 0),
        (t.tempbetnumvisible = i > 0),
        (t.visible = e > 0 || i > 0);
    }),
    (e.prototype.setResultTip = function (t, e) {
      return Alert.tipGame(LangUtils.LANG_MAP[e] || e, t);
    }),
    (e.prototype.betResult = function (t) {
      if (
        t.data.winOptions &&
        0 != t.data.winOptions.length &&
        !(t.data.winOptions.indexOf("NULL") >= 0) &&
        this.gameBetAction.state != GameBetAction.STATE_RESULT &&
        this.gameBetAction.state != GameBetAction.STATE_ACCEPT_BET
      ) {
        var e = t.data.cardresult.split(";");
        (this.dice_result1.source =
          "dicePic_" + this.filterNumToPng(e[0]) + "_png"),
          (this.dice_result2.source =
            "dicePic_" + this.filterNumToPng(e[1]) + "_png"),
          (this.dice_result3.source =
            "dicePic_" + this.filterNumToPng(e[2]) + "_png"),
          (this.dice_result4.source = this.addDiceNum(e)),
          (this.dice_result5.source = this.isBig(e)),
          (this.dice_result6.source = this.isOdd(e)),
          (this.card_back_rect.visible = !0),
          this.gameBetAction.betResult(t.data),
          t.data.winOptions && t.data.winOptions.length > 0;
      }
    }),
    (e.prototype.filterNumToPng = function (t) {
      var e;
      switch (t) {
        case "1":
          e = "one";
          break;
        case "2":
          e = "two";
          break;
        case "3":
          e = "three";
          break;
        case "4":
          e = "four";
          break;
        case "5":
          e = "five";
          break;
        case "6":
          e = "six";
      }
      return e;
    }),
    (e.prototype.addDiceNum = function (t) {
      var e,
        i,
        a = t.every(function (e) {
          return e === t[0];
        });
      return (
        a
          ? (e = "dice_wei_png")
          : ((i = Number(t[0]) + Number(t[1]) + Number(t[2])),
            (e = "diceNum_" + this.filterTotalNum(i) + "_png")),
        e
      );
    }),
    (e.prototype.filterTotalNum = function (t) {
      var e;
      switch (t) {
        case 4:
          e = "four";
          break;
        case 5:
          e = "five";
          break;
        case 6:
          e = "six";
          break;
        case 7:
          e = "seven";
          break;
        case 8:
          e = "eight";
          break;
        case 9:
          e = "nine";
          break;
        case 10:
          e = "ten";
          break;
        case 11:
          e = "eleven";
          break;
        case 12:
          e = "twelve";
          break;
        case 13:
          e = "thirteen";
          break;
        case 14:
          e = "fourteen";
          break;
        case 15:
          e = "fifteen";
          break;
        case 16:
          e = "sixteen";
          break;
        case 17:
          e = "seventeen";
      }
      return e;
    }),
    (e.prototype.isBig = function (t) {
      var e,
        i = Number(t[0]) + Number(t[1]) + Number(t[2]);
      return (e = 11 > i ? "tiny_png" : "big_png");
    }),
    (e.prototype.isOdd = function (t) {
      var e,
        i = Number(t[0]) + Number(t[1]) + Number(t[2]);
      return (e = i % 2 == 0 ? "double_png" : "single_png");
    }),
    (e.prototype.seatBetting = function (t) {
      var e = t.data;
      DataManager.curTable.tableid == e.tableid &&
        DataManager.userid == e.userid &&
        ShareUtils.callLater(
          200,
          function () {
            this.gameBetAction && this.gameBetAction.seatBetting(t.data);
          },
          this,
        );
    }),
    (e.prototype.seatDeal = function (t) {}),
    (e.prototype.showCard = function (t) {
      (t.order < this.seatDealList.length &&
        this.seatDealList[t.order] &&
        ShareUtils.timeByMessageID(t.messageID) <
          ShareUtils.timeByMessageID(this.seatDealList[t.order].messageID)) ||
        ((this.seatDealList[t.order] = t),
        0 == this.timer.currentCount && this.timer.start(),
        t.order < this.timer.currentCount
          ? (this.openDeal(t),
            this.timer.currentCount < this.timer.repeatCount &&
              t.order == this.timer.currentCount - 1 &&
              this.timer.start())
          : this.timer.currentCount > 4 && this.openDeal(t));
    }),
    (e.prototype.playPointSound = function () {
      var t = this;
      dzxx.SoundManager.inst.playDragonTigerPoint(
        dzxx.SoundManager.Dragon_point,
        this.bankerPoint,
      ),
        clearTimeout(this.updateSoundTimeID),
        (this.updateSoundTimeID = setTimeout(function () {
          dzxx.SoundManager.inst.playDragonTigerPoint(
            dzxx.SoundManager.Tiger_point,
            t.playerPoint,
          );
        }, 2e3));
    }),
    (e.prototype.onVideoZoom = function () {
      this.changeZoom(dzxx.LiveVideo.switchZoom());
    }),
    (e.prototype.changeZoom = function (t) {
      t
        ? (this.video_zoom.source = "video_normal_png")
        : (this.video_zoom.source = "video_card_png");
    }),
    (e.prototype.clearData = function (t) {
      this.gameBetAction.pause();
    }),
    (e.prototype.updataRoteType = function () {
      this.route &&
        ((GameUtils.routeSize = 40),
        this.route.changeRoteType(this.routeChangeType));
    }),
    (e.prototype.onShowLimit = function () {
      null == this.gameLimit && (this.gameLimit = new game.GameLimitUI()),
        this.addChild(this.gameLimit),
        this.gameLimit.showUI(DataManager.curTable.gameType);
    }),
    (e.prototype.dispose = function () {
      MessageHandler.leaveTable(this.tableid),
        (this.cur_gameSeq = -1),
        clearTimeout(this.updateSoundTimeID),
        clearTimeout(this.updateSoundTimeID2),
        clearTimeout(this.updateSoundTimeID3),
        dzxx.SoundManager.inst.stopSoundChanel(),
        LangUtils.removeEventListener(this.langChange, this),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.BET_START,
          this.betStart,
          this,
        ),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.BET_RESULT,
          this.betResult,
          this,
        ),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.SEAT_DEAL,
          this.seatDeal,
          this,
        ),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.BET_RESPONSE,
          this.betResponse,
          this,
        ),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.BET_AMOUNT,
          this.betAmount,
          this,
        ),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.TABLE_INFO,
          this.tableInfo,
          this,
        ),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.SEAT_BETTING,
          this.seatBetting,
          this,
        ),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.RESET,
          this.clearData,
          this,
        ),
        EventManager.getIns().removeEventListener(
          DataChangeEvent.User_INFO,
          this.onMoneyChange,
          this,
        ),
        this.btnbackgroup.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onBack,
          this,
        ),
        this.btnmenugroup.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onMenu,
          this,
        ),
        this.tsVideo.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onVideo,
          this,
        ),
        this.btnLimit_fb.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onShowLimit,
          this,
        ),
        this.video_zoom.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onVideoZoom,
          this,
        ),
        SelectTable.getIns().remove(),
        DZTimeCountBar.inst.hide(),
        this.coinsBar.dispose(),
        this.timer && this.timer.reset(),
        this.route && ((this.routeChangeType = 0), this.updataRoteType()),
        this.gameBetAction.dispose(),
        (this.gameBetAction = null),
        (this.coinsBar = null),
        (this.route = null),
        (this.timer = null),
        (this.seatDealList = null),
        (this.pointList = null),
        (this.btnmenugroup = null),
        (this.btnbackgroup = null),
        (this.tongjigroup = null),
        (this.tongjibankertxt = null),
        (this.tongjiplayertxt = null),
        (this.tongjitietxt = null),
        dzxx.LiveVideo.ifStopVideo(),
        this.removeChildren(),
        this.parent && this.parent.removeChild(this);
    }),
    e
  );
})(ViewAbstract);
__reflect(ShaiBaoView.prototype, "ShaiBaoView");
var CountdownCounter = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.saveEndTime = 0),
      (e.autocountdowninterval = 200),
      (e.bg = new egret.Shape()),
      e.addChild(e.bg),
      e
    );
  }
  return (
    __extends(e, t),
    (e.prototype.setTime = function (t, i, a) {
      void 0 === a && (a = !1),
        this.delayer && (this.delayer.reset(), (this.delayer = null)),
        i > t && (t = i);
      var n = (i - 0) / Math.max(1, t),
        s = 360 * n,
        r = e.greenColor;
      return 0 >= n
        ? void this.clearCircle()
        : ((r =
            n > 0.5 ? e.greenColor : n > 0.25 ? e.paleRedColor : e.redColor),
          this.bg &&
            (this.bg.graphics.clear(),
            this.DrawSector(
              this.bg.graphics,
              this.width / 2,
              this.height / 2,
              this.width / 2,
              s,
              270 - s,
              r,
            )),
          void (
            a &&
            (i > 0 && this.stage
              ? (this.delayer = ShareUtils.callLater(
                  this.autocountdowninterval,
                  this.setTime,
                  this,
                  [t, i - this.autocountdowninterval / 1e3, a],
                ))
              : this.delayer && this.delayer.stop())
          ));
    }),
    (e.prototype.DrawSector = function (t, e, i, a, n, s, r) {
      void 0 === e && (e = 200),
        void 0 === i && (i = 200),
        void 0 === a && (a = 100),
        void 0 === n && (n = 27),
        void 0 === s && (s = 270),
        void 0 === r && (r = 16711680),
        t.beginFill(r, 50),
        t.lineStyle(0, r),
        t.moveTo(e, i),
        (n = Math.abs(n) > 360 ? 360 : n);
      var o = Math.ceil(Math.abs(n) / 45),
        h = n / o;
      (h = (h * Math.PI) / 180),
        (s = (s * Math.PI) / 180),
        t.lineTo(e + a * Math.cos(s), i + a * Math.sin(s));
      for (var l = 1; o >= l; l++) {
        s += h;
        var g = s - h / 2,
          u = e + (a / Math.cos(h / 2)) * Math.cos(g),
          c = i + (a / Math.cos(h / 2)) * Math.sin(g),
          d = e + a * Math.cos(s),
          p = i + a * Math.sin(s);
        t.curveTo(u, c, d, p);
      }
      360 != n && t.lineTo(e, i), t.endFill();
    }),
    (e.prototype.clearCircle = function () {
      this.bg && this.bg.graphics.clear();
    }),
    (e.prototype.dispose = function () {
      var t = this;
      this.parent && this.parent.removeChild(this),
        this.delayer && (this.delayer = null),
        this.clearCircle(),
        this.bg && this.bg.parent && this.bg.parent.removeChild(this.bg),
        t.removeChildren(),
        (this.bg = null);
    }),
    (e.greenColor = 445814),
    (e.redColor = 16711680),
    (e.paleRedColor = 16372801),
    e
  );
})(eui.Component);
__reflect(CountdownCounter.prototype, "CountdownCounter");
var game;
!(function (t) {
  var e = (function (t) {
    function e() {
      var e = t.call(this) || this;
      return (
        (e.counttipstxt_bg_dis = 20),
        (e.nCount = 0),
        (e.repetCount = 0),
        (e.lbState_old = "dzg_main_41"),
        (e.t_maxAlltime = 0),
        (e.blue_color = 3589764),
        (e.red_color = 16267834),
        (e.skinName = "resource/skins/GameTimeUI.exml"),
        e
      );
    }
    return (
      __extends(e, t),
      (e.prototype.partAdded = function (e, i) {
        t.prototype.partAdded.call(this, e, i);
      }),
      (e.prototype.childrenCreated = function () {
        t.prototype.childrenCreated.call(this),
          (this.timer = new egret.Timer(1e3)),
          this.timer.addEventListener(
            egret.TimerEvent.TIMER,
            this.onTimer,
            this,
          ),
          (this.mccounter.mask = this.timeMask);
      }),
      (e.prototype.changeLang = function (t) {
        void 0 === t && (t = null),
          DataManager.LANG_TYPE == DataManager.LANG_EN ||
            DataManager.LANG_TYPE == DataManager.LANG_KN ||
            DataManager.LANG_TYPE == DataManager.LANG_VL,
          (this.lbState.text = LangUtils.get(this.lbState_old)),
          this.setCounttipstxtWidth();
      }),
      (e.prototype.startTime = function (t) {
        t > 0
          ? (this.timer.reset(),
            this.timer.start(),
            (this.nCount = t),
            (this.repetCount = 0),
            (this.lbTime.text =
              "" + Math.ceil((this.nCount - egret.getTimer()) / 1e3)),
            (this.t_maxAlltime = Math.ceil(
              (this.nCount - egret.getTimer()) / 1e3,
            )),
            (this.lbState.text = LangUtils.LANG_MAP.dzg_main_40),
            (this.lbState_old = "dzg_main_40"))
          : ((this.lbTime.text = "0"),
            (this.lbState.text = LangUtils.LANG_MAP.dzg_main_41),
            (this.lbState_old = "dzg_main_41"),
            this.clearCircle()),
          DataManager.LANG_TYPE == DataManager.LANG_EN,
          this.setCounttipstxtWidth();
      }),
      (e.prototype.setCounttipstxtWidth = function () {
        (this.lbState_bg.width = this.lbState.width + this.counttipstxt_bg_dis),
          this.lbState_bg.width < 150 && (this.lbState_bg.width = 150);
      }),
      (e.prototype.onTimer = function () {
        var t = Math.ceil((this.nCount - egret.getTimer()) / 1e3);
        10 >= t && t > 0 && this.palyTimeSound(),
          t > 0
            ? ((this.lbTime.text = "" + t),
              this.setMccounter(this.t_maxAlltime, t, !1))
            : ((this.lbTime.text = "0"),
              (this.lbState.text = LangUtils.LANG_MAP.dzg_main_41),
              (this.lbState_old = "dzg_main_41"),
              this.setCounttipstxtWidth(),
              this.timer.stop(),
              this.dispatchEvent(new egret.Event("TimeComplete")),
              this.clearCircle());
      }),
      (e.prototype.palyTimeSound = function () {
        dzxx.SoundManager.inst.playSound(dzxx.SoundManager.time_alert);
      }),
      (e.prototype.setMccounter = function (t, e, i) {}),
      (e.prototype.clearCircle = function () {}),
      (e.prototype.stopTime = function () {
        this.timer.stop(),
          (this.lbTime.text = "0"),
          (this.lbState.text = LangUtils.LANG_MAP.dzg_main_41),
          (this.lbState_old = "dzg_main_41"),
          this.setCounttipstxtWidth(),
          this.clearCircle();
      }),
      (e.prototype.showState = function (t) {
        var e = LangUtils.get(t);
        (this.lbState_old = t),
          (this.lbState.text = e),
          this.setCounttipstxtWidth();
      }),
      e
    );
  })(eui.Component);
  (t.GameTimeUI = e),
    __reflect(e.prototype, "game.GameTimeUI", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(game || (game = {}));
var TimeCountBar = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.idList = []), (e.left = 0), (e.right = 0), (e.bottom = 96), e.init(), e
    );
  }
  return (
    __extends(e, t),
    (e.getIns = function () {
      return e.ins || (e.ins = new e()), e.ins;
    }),
    (e.prototype.init = function () {
      (this.lists = []), (this.gpList = new eui.Group());
      var t = new eui.HorizontalLayout();
      (t.gap = 50),
        (t.paddingLeft = 50),
        (t.paddingRight = 50),
        (this.gpList.layout = t),
        this.createItems(),
        EventManager.getIns().addEventListener(
          DataChangeEvent.TABLE_INFO,
          this.tableInfo,
          this,
        ),
        EventManager.getIns().addEventListener(
          DataChangeEvent.BET_START,
          this.betStart,
          this,
        ),
        (this.viewport = this.gpList);
    }),
    (e.prototype.show = function (t) {
      t.addChild(this);
      for (var e = 0, i = this.lists; e < i.length; e++) {
        var a = i[e];
        a.tableid == DataManager.curTableState.tableid
          ? ((a.touchEnabled = !1), (a.selected = !0))
          : ((a.touchEnabled = !0), (a.selected = !1));
      }
    }),
    (e.prototype.createItems = function () {
      for (
        var t = !1, e = 4, i = 0, a = DataManager.lobbyList;
        i < a.length;
        i++
      ) {
        var n = a[i];
        if (n.gameList && n.lobbyid == DataManager.LOBBY_ID_FLAGSHIP)
          for (var s = 0; s < n.gameList.length && !(t && 0 >= e); s++) {
            var r = new LobbyTableData(n.gameList[s], n.lobbyid);
            if (
              (r.gameType == DataManager.GAME_TYPE_BACCARAT ||
                r.gameType == DataManager.GAME_TYPE_DRAGONTIGER) &&
              r.gameStyle <= 2
            ) {
              if (this.idList && this.idList.length > 0)
                for (var o = 0; o < this.idList.length; o++)
                  if (r.tableid == this.idList[o]) return;
              var h = new TimeCountBarItem(r.tableid);
              (h.name = "table_" + r.tableid),
                this.idList.push(r.tableid),
                this.gpList.addChild(h),
                this.lists.push(h),
                t && e--;
            }
          }
      }
    }),
    (e.prototype.tableInfo = function (t) {
      for (var e = 0, i = this.lists; e < i.length; e++) {
        var a = i[e];
        a.tableid == t.data.tableid && a.tableInfo();
      }
    }),
    (e.prototype.betStart = function (t) {
      for (var e = 0, i = this.lists; e < i.length; e++) {
        var a = i[e];
        a.tableid == t.data[0].tableid && a.update(t.data[0].countdown);
      }
    }),
    (e.prototype.hide = function (t) {
      void 0 === t && (t = null), this.remove();
    }),
    (e.prototype.remove = function () {
      (this.idList = []), this.parent && this.parent.removeChild(this);
    }),
    e
  );
})(eui.Scroller);
__reflect(TimeCountBar.prototype, "TimeCountBar");
var TimeCountBarItem = (function (t) {
  function e(e) {
    var i = t.call(this) || this;
    return (
      (i.timeCount = 0),
      (i.quickClickTime = 0),
      (i.countStopAtTime = 0),
      (i.gamelobby = DataManager.getLobbyTableData(e)),
      (i.tableState = DataManager.getTableStates(e)),
      i.init(),
      i
    );
  }
  return (
    __extends(e, t),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this),
        (this.mcCount.tipsTextEnabled = !1);
    }),
    (e.prototype.init = function () {
      (this.skinName = "resource/skins/TimeCountBarItem_renderer.exml"),
        this.tableInfo(),
        (this.touchChildren = !1),
        LangUtils.addEventListener(this.changeLang, this),
        this.addEventListener(egret.TouchEvent.TOUCH_TAP, this["goto"], this),
        this.tableState && this.update(this.tableState.betTime || 0),
        this.changeLang();
    }),
    (e.prototype.changeLang = function (t) {
      void 0 === t && (t = null),
        this.gamelobby &&
          ((this.txtName.text = LangUtils.LANG_MAP[this.gamelobby.gameType]),
          (this.txtTitle.text = this.gamelobby.tableSeqInt));
    }),
    (e.prototype.update = function (t) {
      this.tableState ||
        (this.tableState = DataManager.getTableStates(this.gamelobby.tableid)),
        (this.timeCount = t),
        (this.countStopAtTime = t + new Date().getTime()),
        EnterFrameRunner.getInstance().addEventListener(
          TimerGameEvent.TICK,
          this.onTickChange,
          this,
        );
    }),
    (e.prototype["goto"] = function (t) {
      var e = new Date().getTime();
      if (!(e - this.quickClickTime < 500)) {
        if (((this.quickClickTime = e), !this.tableState))
          return void Alert.tip(LangUtils.LANG_MAP.LOADING_HISTORY_ERROR);
        if ("RP" == this.tableState.tableInfo.tablestate)
          return void Alert.tip(
            this.txtName.text + " " + LangUtils.LANG_MAP.Maintaining_Table_Card,
          );
        DataManager.curTableState &&
          DataManager.curTableState.hasBet &&
          Alert.tip(LangUtils.LANG_MAP.OP_TIP_1),
          MessageHandler.chooseTable(
            this.tableid,
            this.tableState.tableInfo.gameType,
          );
      }
    }),
    (e.prototype.tableInfo = function () {
      this.tableState ||
        (this.tableState = DataManager.getTableStates(this.gamelobby.tableid)),
        EnterFrameRunner.getInstance().addEventListener(
          TimerGameEvent.TICK,
          this.onTickChange,
          this,
        );
    }),
    (e.prototype.onTickChange = function (t) {
      if ((void 0 === t && (t = null), this.parent)) {
        if (this.stage && this.mcCount) {
          var e = 0;
          this.mcCount &&
            this.tableState &&
            this.tableState.betStart &&
            (e =
              DataManager.getCountMaxTime(
                this.tableState.betStart.shoeSeq,
                this.tableState.betStart.gameSeq,
              ) / 1e3),
            this.mcCount.tick(e, this.countStopAtTime);
        }
      } else
        EnterFrameRunner.getInstance().removeEventListener(
          TimerGameEvent.TICK,
          this.onTickChange,
          this,
        );
    }),
    Object.defineProperty(e.prototype, "tableid", {
      get: function () {
        return this.gamelobby.tableid;
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(e.prototype, "selected", {
      set: function (t) {
        (this.bg.visible = t),
          (this.bg2.visible = !t),
          (this.txtName.textColor = t
            ? DataManager.WHITE_COLOR
            : DataManager.DARKWHITE_COLOR),
          (this.txtTitle.textColor = t
            ? DataManager.WHITE_COLOR
            : DataManager.DARKWHITE_COLOR),
          (this.mcCount.textwhitecolor = t
            ? DataManager.WHITE_COLOR
            : DataManager.DARKWHITE_COLOR);
      },
      enumerable: !0,
      configurable: !0,
    }),
    e
  );
})(eui.Component);
__reflect(TimeCountBarItem.prototype, "TimeCountBarItem");
var ActivityPicItem = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (e.skinName = "resource/eui_skins/ActivityPicItem.exml"), e;
  }
  return (
    __extends(e, t),
    (e.prototype.partAdded = function (e, i) {
      t.prototype.partAdded.call(this, e, i);
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this);
    }),
    (e.prototype.dataChanged = function () {
      (this.mainGroup.width = 100),
        (this.mainGroup.height = 100),
        (this.img.source = this.data.imageurl);
    }),
    e
  );
})(eui.ItemRenderer);
__reflect(ActivityPicItem.prototype, "ActivityPicItem");
var DZUtils = (function () {
  function t() {}
  return (
    (t.xmlread = function (t, e) {
      if (t)
        for (var i in t.children) {
          var a = t.children[i],
            n = e;
          if (a.name == n) return a.children[0].text;
        }
      return null;
    }),
    (t.getQueryString = function (t) {
      var e = new RegExp("(^|&)" + t + "=([^&]*)(&|$)", "i"),
        i = window.location.search.substr(1).match(e);
      return null != i ? decodeURI(i[2]) : null;
    }),
    (t.getWebURL = function () {
      return document.URL.replace(/(.*)\/.*/, "$1");
    }),
    (t.getRootURL = function () {
      return document.URL.replace(/([^\/]*:\/\/)*([^\/]+)*(\/)*.*/, "$1$2");
    }),
    (t.getString = function (t, e) {
      var i = t.split("?")[0],
        a = i.split(e)[1].replace("/", "");
      return a;
    }),
    (t.setPlatform = function (e) {
      "number" == typeof e &&
        (0 == e
          ? (t.sPlatform = DEVICE_APP.BROWSER)
          : (t.sPlatform = DEVICE_APP.APP));
    }),
    (t.loadImageByUrl = function (t, e, i) {
      var a = new egret.ImageLoader();
      (a.crossOrigin = "use-credentials"),
        a.addEventListener(
          egret.Event.COMPLETE,
          function (t) {
            var a = t.currentTarget;
            e && e.apply(i, [a.data]);
          },
          this,
        ),
        a.load(t);
    }),
    (t.sPlatform = 0),
    t
  );
})();
__reflect(DZUtils.prototype, "DZUtils");
var DZXML = (function () {
  function t(t) {
    this.xxx = t;
  }
  return (
    (t.prototype.read = function (t) {
      return DZUtils.xmlread(this.xxx, t);
    }),
    t
  );
})();
__reflect(DZXML.prototype, "DZXML");
var DebugText = (function () {
  function t() {}
  return (
    (t.appendSuccess = function (e) {
      t.append("[成功]" + e);
    }),
    (t.appendError = function (e) {
      t.text("[错误]" + e);
    }),
    (t.appendText = function (e) {
      t.append(e);
    }),
    (t.appendSend = function (e) {
      t.append("[发出]" + e);
    }),
    (t.appendGet = function (e) {
      t.append("[收到]" + e);
    }),
    (t.withObject = function (t, e) {}),
    (t.append = function (t, e, i) {
      void 0 === e && (e = 16776960), void 0 === i && (i = "");
    }),
    (t.text = function (t, e, i) {
      void 0 === e && (e = 16776960), void 0 === i && (i = ""), console.log(t);
    }),
    t
  );
})();
__reflect(DebugText.prototype, "DebugText");
var GameUtils = (function () {
  function t() {}
  return (
    (t.createBitmapByName = function (t) {
      var e = new egret.Bitmap(),
        i = RES.getRes(t);
      return (e.texture = i), e;
    }),
    (t.createBitmapFromSheet = function (t, e) {
      void 0 === e && (e = "gameRes");
      var i = RES.getRes(e),
        a = i.getTexture(t),
        n = new egret.Bitmap();
      return (n.texture = a), n;
    }),
    (t.getTextureFromSheet = function (t, e) {
      void 0 === e && (e = "gameRes");
      var i = RES.getRes(e),
        a = i.getTexture(t);
      return a;
    }),
    (t.getCoin = function (t, e, i, a, n, s) {
      void 0 === e && (e = !0),
        void 0 === i && (i = ""),
        void 0 === a && (a = 1.5),
        void 0 === n && (n = !0),
        void 0 === s && (s = -1);
      var r = new DZCoin();
      return (
        (r.coinurl =
          "DUICoin_" +
          DataManager.getCoinIndexInCoinAmountsByValue(t) +
          "_png"),
        e && (r.coinvalue = -1 == s ? t : s),
        r
      );
    }),
    (t.getNumberFormat = function (t) {
      var e = t + "";
      return (
        t >= 1e6 ? (e = t / 1e6 + "M") : t >= 1e3 && (e = t / 1e3 + "K"), e
      );
    }),
    (t.getCoins = function (e, i, a, n, s) {
      void 0 === i && (i = !0),
        void 0 === a && (a = !0),
        void 0 === n && (n = ""),
        void 0 === s && (s = 1.5);
      var r = DataManager.coinAmounts_all,
        o = [],
        h = e,
        l = r.length - 1;
      for (l; l >= 0; l--) for (; e >= r[l]; ) o.push(r[l]), (e -= r[l]);
      return o.length <= 0 ? null : t.getCoin(o[0], !0, n, s, !1, h);
    }),
    (t.getOppoPoint = function (e, i) {
      return t.pointOppoList[e] ? t.pointOppoList[e][i] : null;
    }),
    (t.getRouteCol = function (e, i) {
      var a = Math.floor((e - i) / t.routeSize);
      return (
        e - a * t.routeSize * t.scaleRoute < i && (a -= 1),
        (t.routeCount = a),
        a
      );
    }),
    (t.scaleRoute = 0),
    (t.routeSize = 40),
    (t.routeCount = 0),
    (t.pointOppoList = [
      null,
      {
        BANKER: "PLAYER",
        PLAYER: "BANKER",
      },
      {
        BANKER: "PLAYER",
        PLAYER: "BANKER",
      },
      {
        RoBig: "RoSm",
        RoSm: "RoBig",
        RoRed: "RoBak",
        RoBak: "RoRed",
        RoOdd: "RoEven",
        RoEven: "RoOdd",
      },
      {
        DiBig: "DiSm",
        DiSm: "DiBig",
        DiOdd: "DiEven",
        DiEven: "DiOdd",
      },
      {
        BANKER: "PLAYER",
        PLAYER: "BANKER",
      },
    ]),
    t
  );
})();
__reflect(GameUtils.prototype, "GameUtils");
var JsonpReq = (function () {
  function t() {}
  return (
    (t.load = function (e, i, a, n) {
      var s = [];
      for (var r in i) s.push(r + "=" + i[r]);
      (t.completeCall["call_" + t._regID] = a.bind(n)),
        t.startLoader(e + (s.length > 0 ? "?" + s.join("&") : ""), t._regID++);
    }),
    (t.startLoader = function (t, e) {
      var i = document.createElement("script");
      (i.src = t + "&callback=JsonpReq.completeCall.call_" + e),
        document.body.appendChild(i);
    }),
    (t._regID = 0),
    (t.completeCall = {}),
    t
  );
})();
__reflect(JsonpReq.prototype, "JsonpReq");
var LangUtils = (function (t) {
  function e() {
    var e = (null !== t && t.apply(this, arguments)) || this;
    return (e.m_isShowWait = !1), e;
  }
  return (
    __extends(e, t),
    (e.getInstance = function () {
      return e.instance || (e.instance = new e()), e.instance;
    }),
    (e.prototype.loadLang = function (t, i, a, n) {
      return (
        void 0 === i && (i = !1),
        void 0 === a && (a = !1),
        void 0 === n && (n = ""),
        __awaiter(this, void 0, void 0, function () {
          return __generator(this, function (s) {
            switch (s.label) {
              case 0:
                return (
                  (e._saveUrl = t),
                  (this.m_isShowWait = i),
                  this.m_isShowWait
                    ? Alert.showWait(e.LANG_MAP.dzg_main_57)
                    : Alert.hideWait(),
                  a ? [4, RES.loadGroup(n)] : [3, 3]
                );
              case 1:
                return s.sent(), [4, RES.getResAsync(t, this.onComplete, this)];
              case 2:
                return s.sent(), [3, 4];
              case 3:
                RES.getResAsync(t, this.onComplete, this), (s.label = 4);
              case 4:
                return [2];
            }
          });
        })
      );
    }),
    (e.prototype.onComplete = function (t) {
      for (
        var i = String(t).replace(/\r/g, ""),
          a = i.split("\n"),
          n = new Array(),
          s = 0;
        s < a.length;
        s++
      ) {
        var r = String(a[s]).split(/^([\w\d_-]+)\s*\=\s*(.*)$/g);
        4 == r.length && (n[r[1]] = r[2]);
      }
      (e.LANG_MAP = n),
        e.instance.dispatchEvent(new egret.Event(e.LANG_CHANGE)),
        this.m_isShowWait && Alert.hideWait();
    }),
    (e.get = function (t) {
      return null == e.LANG_MAP
        ? null
        : null == e.LANG_MAP[t]
          ? null
          : e.LANG_MAP[t];
    }),
    (e.addEventListener = function (t, i) {
      e.getInstance().addEventListener(e.LANG_CHANGE, t, i, !1, 0);
    }),
    (e.removeEventListener = function (t, i) {
      e.getInstance().removeEventListener(e.LANG_CHANGE, t, i, !1);
    }),
    Object.defineProperty(e, "saveUrl", {
      get: function () {
        return e._saveUrl;
      },
      enumerable: !0,
      configurable: !0,
    }),
    (e.getCocosLan = function () {
      var t = DataManager.LANG_TYPE;
      return this.cocosLanMap[t] || this.cocosLanMap.en;
    }),
    (e.LANG_CHANGE = "LANG_CHANGE"),
    (e.cocosParamsMap = {
      "zh-cn": "sc",
      vn: "vl",
      th: "kn",
      kr: "kr",
      jpn: "jpn",
      hn: "hn",
      "zh-tw": "tc",
      en: "en",
    }),
    (e.cocosLanMap = {
      sc: "zh-cn",
      tc: "zh-tw",
      en: "en-us",
      kn: "th-th",
      hn: "hi-in",
      vl: "vi-vn",
      kr: "ko-kr",
    }),
    e
  );
})(egret.EventDispatcher);
__reflect(LangUtils.prototype, "LangUtils");
var MCUtils = (function () {
  function t() {}
  return (
    (t.getMc = function (t, e) {
      var i = RES.getRes(e + "_json"),
        a = RES.getRes(e + "_png"),
        n = new egret.MovieClipDataFactory(i, a),
        s = new egret.MovieClip(n.generateMovieClipData(t));
      return s && s.gotoAndStop(1), s;
    }),
    t
  );
})();
__reflect(MCUtils.prototype, "MCUtils");
var ShareUtils = (function () {
  function t() {}
  return (
    Object.defineProperty(t, "viewGroup", {
      get: function () {
        return t.main.viewGroup;
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(t, "moduleGroup", {
      get: function () {
        return t.main.moduleGroup;
      },
      enumerable: !0,
      configurable: !0,
    }),
    (t.callLater = function (t, e, i, a) {
      void 0 === a && (a = null);
      var n,
        s = new egret.Timer(t, 1);
      return (
        s.addEventListener(
          egret.TimerEvent.TIMER_COMPLETE,
          (n = function (t) {
            s.removeEventListener(egret.TimerEvent.TIMER_COMPLETE, n, this),
              s.stop(),
              (s = null),
              null != a ? e.apply(i, a) : e.apply(i);
          }),
          this,
        ),
        s.start(),
        s
      );
    }),
    (t.setStage = function (e) {
      void 0 === e && (e = null), (t.game_stage = e);
    }),
    (t.center = function (e, i) {
      void 0 === i && (i = null),
        i || (i = t.main),
        (e.x = (i.stageWidth ? i.stageWidth : i.width) / 2 - e.width / 2),
        (e.y = (i.stageHeight ? i.stageHeight : i.height) / 2 - e.height / 2);
    }),
    (t.toMoney_oo = function (t, e) {
      if (
        (void 0 === e && (e = !1),
        0 == parseFloat(t) || "NaN" == parseFloat(t) + "")
      )
        return e ? "0" : "0.00";
      if (parseFloat(t) > -1 && parseFloat(t) < 1) {
        var i = t.toString().split(".");
        return i.length > 1
          ? i[0] + "." + i[1].toString().substr(0, 2)
          : "0.00";
      }
      var a,
        n = t.toString().split("."),
        s = n[0],
        r = parseInt(s);
      n.length > 1
        ? n[1].length > 1
          ? (a = "." + n[1].toString().substr(0, 2))
          : 1 == n[1].toString().length &&
            (a = "." + n[1].toString().substr(0, 1) + "0")
        : (a = ".00");
      var o = 1;
      n = [];
      var h = "";
      if (e && s.length >= 7) {
        h = "M";
        var l = s.length - 6;
        a = "." + s.substr(l, 2);
        for (var g = s.slice(0, l), u = g.length - 1; u >= 0; u--)
          o++ > 3 && (n.unshift(","), (o = 2)), n.unshift(s.charAt(u));
        s = n.join("");
      } else {
        for (var c = s.length - 1; c >= 0; c--)
          o++ > 3 && (r > 0 || (c > 0 && 0 > r)) && (n.push(","), (o = 2)),
            n.push(s.charAt(c));
        s = n.reverse().join("");
      }
      return s + a + h;
    }),
    (t.toMoney2_oo = function (t) {
      if (0 == parseFloat(t) || "NaN" == parseFloat(t) + "") return "0";
      if (parseFloat(t) > -1 && parseFloat(t) < 1) {
        var e = t.toString().split(".");
        return e.length > 1 ? e[0] + "." + e[1].substr(0, 2) : "0";
      }
      var i,
        a = t.toString().split("."),
        n = a[0],
        s = parseInt(n);
      if (a.length > 1)
        if (a[1].length > 1) {
          var r = a[1].substr(1, 1);
          i = "0" == r ? "." + a[1].substr(0, 1) : "." + a[1].substr(0, 2);
        } else 1 == a[1].length && (i = "." + a[1].substr(0, 1));
      else i = "";
      ("00" == a[1] || "0" == a[1]) && (i = "");
      var o = 1;
      a = [];
      for (var h = n.length - 1; h >= 0; h--)
        o++ > 3 && (s > 0 || (h > 0 && 0 > s)) && (a.push(","), (o = 2)),
          a.push(n.charAt(h));
      return (n = a.reverse().join("")), n + i;
    }),
    (t.toMoney = function (t) {
      if (0 == parseInt(t) || "NaN" == parseInt(t) + "") return t + "";
      var e = t.toString().split("."),
        i = e[0],
        a = parseInt(i),
        n = e.length > 1 ? "." + e[1].substr(0, 2) : "";
      (".0" == n || ".00" == n) && (n = "");
      var s = 1;
      e = [];
      for (var r = i.length - 1; r >= 0; r--)
        s++ > 3 && (a > 0 || (r > 0 && 0 > a)) && (e.push(","), (s = 2)),
          e.push(i.charAt(r));
      return (i = e.reverse().join("")), i + n;
    }),
    (t.timeByMessageID = function (t) {
      return parseInt((t + "").substr(0, 13));
    }),
    (t.inWhiteList = function () {
      return 1 == t.inWhite;
    }),
    (t.setInWhiteList = function (e) {
      t.inWhite = e;
    }),
    (t.inWhiteListTry = function () {
      return 1 == t.inWhite || 2 == t.inWhite;
    }),
    (t.isWeiXin = function () {
      var t = navigator.userAgent.toString(),
        e = t.match(/MicroMessenger/i);
      return "MicroMessenger" == e ? !0 : !1;
    }),
    (t.isIOS = function () {
      var t = navigator.userAgent.toLowerCase();
      return t.indexOf("ipad") > -1 || t.indexOf("iphone") > -1;
    }),
    Object.defineProperty(t, "isHengPing", {
      get: function () {
        return window.orientation
          ? 90 == window.orientation || -90 == window.orientation
            ? !0
            : !1
          : window.innerWidth > window.innerHeight
            ? !0
            : !1;
      },
      enumerable: !0,
      configurable: !0,
    }),
    (t.urlAppendVersion = function (t) {
      return RES.getVersionController().getVirtualUrl(t);
    }),
    (t.setGrayFilter = function (e, i) {
      var a,
        n = e.filters;
      for (var s in n)
        if (
          ((a = n[s]), egret.is(a, egret.getQualifiedClassName(t.grayFilter)))
        )
          return i ? void 0 : (n.splice(n.indexOf(a), 1), void (e.filters = n));
      i && (n || (n = []), n && (n.push(t.grayFilter), (e.filters = n)));
    }),
    (t.dropShadow = function (t) {
      return (
        void 0 === t && (t = null),
        t || (t = {}),
        null == t.distance && (t.distance = 3),
        null == t.angle && (t.angle = 45),
        null == t.color && (t.color = 0),
        null == t.alpha && (t.alpha = 1),
        null == t.blurX && (t.blurX = 3),
        null == t.blurY && (t.blurY = 3),
        null == t.strength && (t.strength = 0.4),
        null == t.quality && (t.quality = 1),
        null == t.inner && (t.inner = !1),
        null == t.knockout && (t.knockout = !1),
        null == t.hideObject && (t.hideObject = !1),
        new egret.DropShadowFilter(
          t.distance,
          t.angle,
          t.color,
          t.alpha,
          t.blurX,
          t.blurY,
          t.strength,
          t.quality,
          t.inner,
          t.knockout,
          t.hideObject,
        )
      );
    }),
    (t.scrollHIfNotVisible = function (t, e, i, a, n) {
      var s = t.layout,
        r = e * (s.gap + a),
        o = n,
        h = t.width,
        l = r - h + s.gap + a + s.paddingRight;
      o > r ? (o = r) : l > o && (o = l);
      var g = i * (s.gap + a) - h + s.paddingRight;
      o > g && (o = g),
        (o = Math.max(0, Math.min(o, t.contentWidth - t.width))),
        (t.scrollH = o);
    }),
    (t.scrollVIfNotVisible = function (t, e, i, a, n) {
      var s = t.layout,
        r = e * (s.gap + a),
        o = n,
        h = t.height,
        l = r - h + s.gap + a + s.paddingBottom;
      o > r ? (o = r) : l > o && (o = l);
      var g = i * (s.gap + a) - h + s.paddingBottom;
      o > g && (o = g),
        (o = Math.max(0, Math.min(o, t.contentHeight - t.height))),
        (t.scrollV = o);
    }),
    (t.scrollHToRight = function (t) {
      t.scrollH = Math.max(0, t.contentWidth - t.parent.width);
    }),
    (t.scrollVToBottom = function (t) {
      t.scrollV = Math.max(0, t.contentHeight - t.parent.height);
    }),
    (t.appendHttpIfNoProto = function (t) {
      return 0 == /:\/\//.test(t) && (t = "http://" + t), t;
    }),
    (t.openURL = function (e, i) {
      void 0 === i && (i = 1);
      var a = t.appendParamForAppOpenURL(e, i);
      window.open(a, 0 == i ? "_self" : "_blank");
    }),
    (t.openURL_self = function (e) {
      t.openURL(e, 0);
    }),
    (t.openURL_inApp = function (e) {
      t.openURL(e, 1);
    }),
    (t.openURL_popWin = function (e) {
      t.openURL(e, 2);
    }),
    (t.appendParamForAppOpenURL = function (e, i) {
      if ((void 0 === i && (i = 1), t.htmlvar_inapp)) {
        if ("/" == e.charAt(0)) {
          var a = t.getRootURL();
          (a = a.replace(/\/$/, "")),
            (e = a + e),
            (e = t.appendHttpIfNoProto(e));
        }
        return "dzurl?xopen=" + i + "&url=" + encodeURIComponent(e);
      }
      return e;
    }),
    (t.getRootURL = function () {
      return document.URL.replace(/([^\/]*:\/\/)*([^\/]+)*(\/)*.*/, "$1$2");
    }),
    (t.getHtmlVarVal = function (t) {
      var e = window.location
        .toString()
        .match(new RegExp("[?&]" + t + "=[^&]*"));
      return e && e.length > 0
        ? e[0].replace(new RegExp("[?&]" + t + "="), "")
        : null;
    }),
    Object.defineProperty(t, "htmlvar_inapp", {
      get: function () {
        return "1" == t.getHtmlVarVal(t.htmlVar_nameDict.inapp);
      },
      enumerable: !0,
      configurable: !0,
    }),
    (t.inWhite = -1),
    (t.grayFilter = new egret.ColorMatrixFilter([
      0.5, 0.12, 0.02, 0, 78.18, 0.5, 0.12, 0.02, 0, 78.18, 0.5, 0.12, 0.02, 0,
      78.18, 0, 0, 0, 1, 0,
    ])),
    (t.htmlVar_nameDict = {
      inapp: "inapp",
    }),
    t
  );
})();
__reflect(ShareUtils.prototype, "ShareUtils");
var StringUtils = (function () {
  function t() {}
  return (
    (t.trim = function (t, e) {
      void 0 === e && (e = " \n	\r");
      var i = new RegExp("^[" + e + "]+|[" + e + "]+$", "g");
      return t.replace(i, "");
    }),
    (t.format = function (t, e) {
      var i = {
        "M+": t.getMonth() + 1,
        "d+": t.getDate(),
        "h+": t.getHours(),
        "m+": t.getMinutes(),
        "s+": t.getSeconds(),
        "q+": Math.floor((t.getMonth() + 3) / 3),
        S: t.getMilliseconds(),
      };
      /(y+)/.test(e) &&
        (e = e.replace(
          RegExp.$1,
          (t.getFullYear() + "").substr(4 - RegExp.$1.length),
        ));
      for (var a in i)
        new RegExp("(" + a + ")").test(e) &&
          (e = e.replace(
            RegExp.$1,
            1 == RegExp.$1.length
              ? i[a]
              : ("00" + i[a]).substr(("" + i[a]).length),
          ));
      return e;
    }),
    (t.formatDate = function (t, e) {
      return (
        (t = t.replace(/%y/gi, e.getFullYear() + "")),
        (t =
          e.getMonth() >= 9
            ? t.replace(/%m/gi, e.getMonth() + 1 + "")
            : t.replace(/%m/gi, "0" + (e.getMonth() + 1))),
        (t =
          e.getDate() >= 10
            ? t.replace(/%d/gi, e.getDate() + "")
            : t.replace(/%d/gi, "0" + e.getDate())),
        (t = t.replace(/%h/gi, e.getHours() + "")),
        (t =
          e.getMinutes() < 10
            ? t.replace(/%i/gi, "0" + e.getMinutes())
            : t.replace(/%i/gi, e.getMinutes() + "")),
        (t =
          e.getSeconds() < 10
            ? t.replace(/%s/gi, "0" + e.getSeconds())
            : t.replace(/%s/gi, e.getSeconds() + ""))
      );
    }),
    (t.stringTransstrBYnum = function (t, e) {
      return void 0 === e && (e = 10), t.length > e ? t.slice(0, e) + "..." : t;
    }),
    (t.Encode64String = function (t) {
      var e = new egret.ByteArray();
      e.writeUTFBytes(t);
      var i = egret.Base64Util.encode(e.buffer);
      return e.clear(), (e = null), i;
    }),
    (t.Decode64Strig = function (t) {
      var e = egret.Base64Util.decode(t),
        i = new egret.ByteArray(e),
        a = i.readUTFBytes(i.length);
      return i.clear(), (i = null), a;
    }),
    t
  );
})();
__reflect(StringUtils.prototype, "StringUtils");
var SwitcherPicItem = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (e.skinName = "resource/eui_skins/SwitcherPicItem.exml"), e;
  }
  return (
    __extends(e, t),
    (e.prototype.partAdded = function (e, i) {
      t.prototype.partAdded.call(this, e, i);
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this);
    }),
    (e.prototype.dataChanged = function () {
      (this.mainGroup.width = this.data.width),
        (this.mainGroup.height = this.data.height),
        (this.img.source = this.data.url);
    }),
    e
  );
})(eui.ItemRenderer);
__reflect(SwitcherPicItem.prototype, "SwitcherPicItem");
var SwitcherPicUtil = (function () {
  function t() {
    (this.spriteRect = new eui.Component()),
      (this.totalLen = 3),
      (this.vector = new Array()),
      (this.images = []),
      (this.isdragging = !1);
  }
  return (
    (t.getInstance = function () {
      return t.instance || (t.instance = new t()), t.instance;
    }),
    (t.prototype.setdata = function (t, e, i, a) {
      void 0 === a && (a = "AB_"),
        this.nextmovetimer && this.nextmovetimer.stop(),
        this.imglist && egret.Tween.removeTweens(this.imglist),
        (this.bangroup = t),
        (this.imglist = e),
        (this.totalLen = i),
        this.images.push({
          url: "AB_2_en_png",
          width: t.width,
          height: t.height,
        });
      var n = DataManager.getBannerMessageArr(DataManager.LANG_TYPE);
      if (n.length > 0) {
        (this.totalLen = n.length), (this.images.length = 0);
        for (var s = 0; i > s; s++) {
          var r = n[s];
          window.shared_cdn
            ? this.images.push({
                url: window.shared_cdn + "/" + r.path,
                width: t.width,
                height: t.height,
              })
            : this.images.push({
                url: DZUtils.getRootURL() + "/" + r.path,
                width: t.width,
                height: t.height,
              });
        }
      }
      (e.itemRenderer = SwitcherPicItem),
        (e.dataProvider = new eui.ArrayCollection(this.images)),
        this.bangroup.hasEventListener(egret.TouchEvent.TOUCH_BEGIN) ||
          this.bangroup.addEventListener(
            egret.TouchEvent.TOUCH_BEGIN,
            this.onTouchBegin,
            this,
          ),
        this.spriteRect &&
          this.spriteRect.parent &&
          this.spriteRect.parent.removeChild(this.spriteRect),
        this.bangroup.addChild(this.spriteRect),
        this.graphicsRect(),
        (this.spriteRect.bottom = 20),
        (this.spriteRect.horizontalCenter = 0),
        this.movenext();
    }),
    (t.prototype.movenext = function () {
      this.updatePointPos(),
        (this.nextmovetimer = ShareUtils.callLater(3e3, this.moveBan, this));
    }),
    (t.prototype.moveBan = function () {
      if (this.isdragging || !this.bangroup.stage) return void this.movenext();
      egret.Tween.removeTweens(this.imglist);
      var t = Math.floor(this.imglist.scrollH / this.bangroup.width);
      t++, t >= this.totalLen && (t = 0);
      var e = this.bangroup.width * t;
      egret.Tween.get(this.imglist)
        .to(
          {
            scrollH: e,
          },
          1e3,
          egret.Ease.sineInOut,
        )
        .call(this.movenext, this);
    }),
    (t.prototype.onTouchBegin = function (t) {
      ShareUtils.game_stage.addEventListener(
        egret.TouchEvent.TOUCH_END,
        this.onTouchReleaseOutside,
        this,
      ),
        ShareUtils.game_stage.addEventListener(
          egret.TouchEvent.TOUCH_RELEASE_OUTSIDE,
          this.onTouchReleaseOutside,
          this,
        ),
        (this.isdragging = !0);
    }),
    (t.prototype.onTouchReleaseOutside = function (t) {
      this.finishDragBan();
    }),
    (t.prototype.finishDragBan = function () {
      ShareUtils.game_stage.removeEventListener(
        egret.TouchEvent.TOUCH_END,
        this.onTouchReleaseOutside,
        this,
      ),
        ShareUtils.game_stage.removeEventListener(
          egret.TouchEvent.TOUCH_RELEASE_OUTSIDE,
          this.onTouchReleaseOutside,
          this,
        ),
        (this.isdragging = !1),
        this.updatePointPos();
    }),
    (t.prototype.updatePointPos = function () {
      this.imglist &&
        this.totalLen > 1 &&
        this.yellowCirlre &&
        (this.yellowCirlre.x = Math.max(
          0,
          this.vector[0].x +
            30 * Math.floor(this.imglist.scrollH / this.bangroup.width),
        ));
    }),
    (t.prototype.graphicsRect = function () {
      if (1 != this.totalLen) {
        (this.vector.length = 0), this.spriteRect.removeChildren();
        var t = 0;
        for (t = 0; t < this.totalLen; t++) {
          var e = new egret.Sprite();
          e.graphics.beginFill(16777215, 1),
            e.graphics.drawCircle(0, 0, 8),
            e.graphics.endFill(),
            (e.x = 30 * t),
            (e.name = "Btn_" + t),
            this.vector.push(e),
            this.spriteRect.addChild(e);
        }
        (this.spriteRect.width = 16 * this.vector.length),
          this.yellowCirlre ||
            ((this.yellowCirlre = new egret.Sprite()),
            this.yellowCirlre.graphics.beginFill(16776960, 1),
            this.yellowCirlre.graphics.drawCircle(0, 0, 8),
            this.yellowCirlre.graphics.endFill()),
          this.spriteRect.addChild(this.yellowCirlre);
      }
    }),
    t
  );
})();
__reflect(SwitcherPicUtil.prototype, "SwitcherPicUtil");
var TimerUtils;
!(function (t) {
  function e() {
    return i(new Date().getTime());
  }
  function i(t) {
    return 1 != a ? (t - n) * a + s : t - n + s;
  }
  var a = 1,
    n = new Date().getTime(),
    s = new Date().getTime();
  new Date().getTime();
  t.getTime = e;
})(TimerUtils || (TimerUtils = {}));
var TweenMax = (function (t) {
  function e(e) {
    var i = t.call(this, 400) || this;
    return (
      (i.target = e),
      i.addEventListener(egret.TimerEvent.TIMER, i.onTimer, i),
      i
    );
  }
  return (
    __extends(e, t),
    (e.prototype.onTimer = function (t) {
      this.target.alpha = 1 == this.target.alpha ? 0 : 1;
    }),
    (e.to = function (t) {
      var i = new e(t);
      return i.start(), i;
    }),
    (e.prototype.kill = function () {
      this.removeEventListener(egret.TimerEvent.TIMER, this.onTimer, this),
        this.stop(),
        (this.target = null);
    }),
    e
  );
})(egret.Timer);
__reflect(TweenMax.prototype, "TweenMax");
var sound;
!(function (t) {
  var e = (function (t) {
    function e() {
      var e = t.call(this) || this;
      return (e._currBg = ""), e;
    }
    return (
      __extends(e, t),
      (e.prototype.stop = function () {
        this._currSoundChannel && this._currSoundChannel.stop(),
          (this._currSoundChannel = null),
          (this._currSound = null),
          (this._currBg = "");
      }),
      (e.prototype.play = function (t) {
        if (this._currBg != t) {
          this.stop(), (this._currBg = t);
          var e = this.getSound(t);
          e && this.playSound(e);
        }
      }),
      (e.prototype.playSound = function (t) {
        this._currSound = t;
        try {
          (this._currSoundChannel = this._currSound.play(0)),
            (this._currSoundChannel.volume = this._volume);
        } catch (e) {}
      }),
      (e.prototype.setVolume = function (t) {
        (this._volume = t),
          this._currSoundChannel &&
            (this._currSoundChannel.volume = this._volume);
      }),
      (e.prototype.loadedPlay = function (t) {
        this._currBg == t && this.playSound(RES.getRes(t));
      }),
      (e.prototype.checkCanClear = function (t) {
        return this._currBg != t;
      }),
      e
    );
  })(t.BaseSound);
  (t.SoundBg = e), __reflect(e.prototype, "sound.SoundBg");
})(sound || (sound = {}));
var sound;
!(function (t) {
  var e = (function (t) {
    function e() {
      return t.call(this) || this;
    }
    return (
      __extends(e, t),
      (e.prototype.play = function (t) {
        var e = this.getSound(t);
        e && ((e.type = egret.Sound.EFFECT), this.playSound(e));
      }),
      (e.prototype.playSound = function (t) {
        try {
          var e = t.play(0, 1);
          e.volume = this._volume;
        } catch (i) {}
      }),
      (e.prototype.setVolume = function (t) {
        this._volume = t;
      }),
      (e.prototype.loadedPlay = function (t) {
        this.playSound(RES.getRes(t));
      }),
      e
    );
  })(t.BaseSound);
  (t.SoundEffects = e), __reflect(e.prototype, "sound.SoundEffects");
})(sound || (sound = {}));
var sound;
!(function (t) {
  var e = (function (e) {
    function i() {
      var i = e.call(this) || this;
      return (
        (i.isBgPlaying = !1),
        (i.bgOn = !0),
        (i.effectOn = !0),
        (i.bgVolume = 0.4),
        (i.effectVolume = 0.5),
        (i.bg = new t.SoundBg()),
        i.bg.setVolume(i.bgVolume),
        (i.effect = new t.SoundEffects()),
        i.effect.setVolume(i.effectVolume),
        i
      );
    }
    return (
      __extends(i, e),
      (i.getSoundType = function () {
        switch (DataManager.LANG_TYPE) {
          case DataManager.LANG_SC:
            return i.SOUND_SC;
          case DataManager.LANG_TC:
            return i.SOUND_TC;
          case DataManager.LANG_EN:
            return i.SOUND_EN;
        }
        return i.SOUND_SC;
      }),
      (i.prototype.playEffect = function (e) {
        if (this.effectOn) {
          var i = e + t.SoundManager.getSoundType() + t.SoundManager.soundType;
          this.effect.play(i);
        }
      }),
      (i.prototype.playEffectNOlang = function (t) {
        this.effectOn && this.effect.play(t);
      }),
      (i.prototype.playBankerPlayerPoint = function (e, i) {
        if (this.effectOn) {
          var a =
            e + i + t.SoundManager.getSoundType() + t.SoundManager.soundType;
          this.effect.play(a);
        }
      }),
      (i.prototype.playDragonTigerPoint = function (t) {
        this.effectOn && this.effect.play(t);
      }),
      (i.getDragonTigerSoundPoint = function (e, i) {
        var a;
        if (!(0 >= i || i > 13))
          return (
            (a =
              1 == i
                ? e + "hasAce" + t.SoundManager.getSoundType()
                : 11 == i
                  ? e + "hasJack" + t.SoundManager.getSoundType()
                  : 12 == i
                    ? e + "hasQueen" + t.SoundManager.getSoundType()
                    : 13 == i
                      ? e + "hasKing" + t.SoundManager.getSoundType()
                      : e + i + "points" + t.SoundManager.getSoundType()),
            (a += t.SoundManager.soundType)
          );
      }),
      (i.prototype.playBg = function (t) {
        (this.currBg = t),
          this.bgOn && ((this.isBgPlaying = !0), this.bg.play(t));
      }),
      (i.prototype.stopBg = function () {
        (this.isBgPlaying = !1), this.bg.stop();
      }),
      (i.prototype.setEffectOn = function (t) {
        this.effectOn = t;
      }),
      (i.prototype.setBgOn = function (t) {
        (this.bgOn = t),
          this.bgOn ? this.currBg && this.playBg(this.currBg) : this.stopBg();
      }),
      (i.prototype.getBgOn = function () {
        return this.bgOn;
      }),
      (i.prototype.setBgVolume = function (t) {
        (t = Math.min(t, 1)),
          (t = Math.max(t, 0)),
          (this.bgVolume = t),
          this.bg.setVolume(this.bgVolume);
      }),
      (i.prototype.getBgVolume = function () {
        return this.bgVolume;
      }),
      (i.prototype.setEffectVolume = function (t) {
        (t = Math.min(t, 1)),
          (t = Math.max(t, 0)),
          (this.effectVolume = t),
          this.effect.setVolume(this.effectVolume);
      }),
      (i.prototype.getEffectVolume = function () {
        return this.effectVolume;
      }),
      (i.CLEAR_TIME = 18e4),
      (i.Dragon_point = "Dragon"),
      (i.Tiger_point = "Tiger"),
      (i.Dragon_win = "DragonWin"),
      (i.Tiger_win = "TigerWin"),
      (i.Tile_win = "TileDTWin"),
      (i.win_type = "_M_mp3"),
      (i.SOUND_SC = "_M"),
      (i.SOUND_TC = "_M"),
      (i.SOUND_EN = "_E"),
      (i.soundType = "_mp3"),
      i
    );
  })(t.BaseClass);
  (t.SoundManager = e), __reflect(e.prototype, "sound.SoundManager");
})(sound || (sound = {}));
var dzxx;
!(function (t) {
  var e = (function () {
    function t(t) {
      var e = this;
      (this.fix_timeoutDoBGSizeID = -1),
        (this.mcenterBGImg = document.getElementById(t)),
        (this.mcenterBGImg.onload = function () {
          e.onMCenterBGImgLoaded();
        });
    }
    return (
      (t.prototype.onMCenterBGImgLoaded = function () {
        var t = this;
        if (!Main.currentStageFocusTargetIsTextField) {
          var e = window.innerWidth,
            i = window.innerHeight,
            a = e,
            n = i;
          if (!window.dz_isScaleBG) {
            var s = Math.max(1, this.mcenterBGImg.naturalWidth),
              r = Math.max(1, this.mcenterBGImg.naturalHeight),
              o = Math.min(e / s, i / r);
            (a = o * this.mcenterBGImg.naturalWidth),
              (n = o * this.mcenterBGImg.naturalHeight);
          }
          var h = a + "px",
            l = n + "px";
          (this.mcenterBGImg.style.width = h),
            (this.mcenterBGImg.style.height = l),
            (this.mcenterBGImg.style.paddingLeft = (e - a) / 2 + "px"),
            (this.mcenterBGImg.style.paddingTop = (i - n) / 2 + "px"),
            clearTimeout(this.fix_timeoutDoBGSizeID),
            (this.fix_timeoutDoBGSizeID = setTimeout(function () {
              t.onMCenterBGImgLoaded();
            }, 2e3));
        }
      }),
      (t.prototype.updateBG = function () {
        var e = (ShareUtils.isHengPing, window.dz_isShowShuPingBG, "");
        (e = ShareUtils.urlAppendVersion(t.img_bg_login_shuping)),
          this.mcenterBGImg.src != e && (this.mcenterBGImg.src = e),
          this.onMCenterBGImgLoaded();
      }),
      (t.prototype.onResize = function () {
        this.updateBG();
      }),
      (t.img_bg_login_shuping = "h_bg_png"),
      t
    );
  })();
  (t.AppBG = e), __reflect(e.prototype, "dzxx.AppBG");
})(dzxx || (dzxx = {}));
var ApplyHandleMessage = (function (t) {
  function e(e, i, a, n, s) {
    void 0 === e && (e = 0),
      void 0 === i && (i = 0),
      void 0 === a && (a = null),
      void 0 === n && (n = 0),
      void 0 === s && (s = 0);
    var r = t.call(this) || this;
    return (
      (r.iType = MessageUtils.APPLY_HANDLE_MESSAGE),
      (r.tableid = e),
      (r.userid = i),
      (r.showname = a),
      (r.optype = n),
      (r.result = s),
      (r.lMessageID = r.createMessageId()),
      r
    );
  }
  return (
    __extends(e, t),
    (e.prototype.bytesToMessage = function (t) {
      var e;
      (this.tableid = MessageUtils.readLong(t)),
        (this.userid = MessageUtils.readLong(t)),
        (e = t.readInt()),
        (this.showname = t.readUTFBytes(e)),
        (this.optype = t.readByte()),
        (this.result = t.readInt()),
        (this.lMessageID = MessageUtils.readLong(t));
    }),
    (e.prototype.messageToBytes = function () {
      var t = new egret.ByteArray();
      t.writeInt(this.iType), t.writeInt(0);
      var e = 8;
      return (
        MessageUtils.writeLong(t, this.tableid),
        (e = t.length),
        MessageUtils.writeLong(t, this.userid),
        (e = t.length),
        t.writeInt(0),
        null != this.showname &&
          this.showname.length > 0 &&
          t.writeUTFBytes(this.showname),
        MessageUtils.replaceInt(t, e, t.length - e - 4),
        (e = t.length),
        t.writeByte(this.optype),
        (e = t.length),
        t.writeInt(this.result),
        (e = t.length),
        MessageUtils.writeLong(t, this.lMessageID),
        MessageUtils.replaceInt(t, 4, t.length - 8),
        t
      );
    }),
    (e.prototype.toString = function () {
      return (
        "ApplyHandleMessage<tableid:" +
        this.tableid +
        ", userid:" +
        this.userid +
        ", showname:" +
        this.showname +
        ", optype:" +
        this.optype +
        ", result:" +
        this.result +
        ">"
      );
    }),
    (e.EVENT_NAME = "APPLY_HANDLE_MESSAGE"),
    e
  );
})(TableMessage);
__reflect(ApplyHandleMessage.prototype, "ApplyHandleMessage");
var dzxx;
!(function (t) {
  var e = (function () {
    function t(t, e) {
      void 0 === t && (t = null),
        void 0 === e && (e = 0),
        (this.currid = 0),
        (this.key = null),
        (this.amount = 0),
        (this.isSBanker = 0),
        (this.key = t),
        (this.currid = e);
    }
    return t;
  })();
  (t.BetAmount = e), __reflect(e.prototype, "dzxx.BetAmount");
})(dzxx || (dzxx = {}));
var CoinBGAnim = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.skinName = "resource/eui_skins/CoinBGAnim.exml"),
      e.addEventListener(egret.Event.ADDED_TO_STAGE, e.onAdded, e),
      e.addEventListener(egret.Event.REMOVED_FROM_STAGE, e.onRemoved, e),
      e
    );
  }
  return (
    __extends(e, t),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this),
        this.rotateTween.addEventListener(
          egret.Event.COMPLETE,
          this.onPlayOK,
          this,
        );
    }),
    (e.prototype.onAdded = function (t) {
      this.rotateTween.play();
    }),
    (e.prototype.onRemoved = function (t) {
      this.rotateTween.stop();
    }),
    (e.prototype.onPlayOK = function (t) {
      this.stage && this.rotateTween.play(0);
    }),
    e
  );
})(eui.Component);
__reflect(CoinBGAnim.prototype, "CoinBGAnim");
var CountClock = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (
      (e.timeTextEnabled = !0),
      (e.tipsTextEnabled = !0),
      (e.timeTextSize = 28),
      (e.textredcolor = 16267834),
      (e.textwhitecolor = 3589764),
      (e.countMiwhitecolor = 16777215),
      (e.timeTextColor = 16185078),
      (e.tipsTextSize = 18),
      (e.tipsTextColor = 16185078),
      (e.tipsText = ""),
      (e.txtGroupTop = 0),
      (e.countStopAtTime = 0),
      (e.maxTime = 0),
      (e.cirvisible = !0),
      (e.bgvisible = !0),
      (e.cirFilters = []),
      (e.redFilter = new egret.ColorMatrixFilter([
        1.97, 0.3, -0.82, 0, -190.2, -0.33, 1.6, 0.18, 0, -190.2, 0.44, -0.89,
        1.9, 0, -190.2, 0, 0, 0, 1, 0,
      ])),
      (e._time = 0),
      e
    );
  }
  return (
    __extends(e, t),
    (e.prototype.partAdded = function (e, i) {
      t.prototype.partAdded.call(this, e, i);
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this), this.showTime(0);
    }),
    Object.defineProperty(e.prototype, "time", {
      get: function () {
        return this._time;
      },
      set: function (t) {
        (this._time = t),
          this.mccounter && this.mccounter.setTime(this.maxTime, t, !0);
      },
      enumerable: !0,
      configurable: !0,
    }),
    Object.defineProperty(e.prototype, "isCirRed", {
      set: function (t) {
        this.cirFilters = t ? [this.redFilter] : null;
      },
      enumerable: !0,
      configurable: !0,
    }),
    (e.prototype.showTime = function (t) {
      this.countStopAtTime = t;
      var e = 0;
      0 == t || (e = Math.ceil((t - new Date().getTime()) / 1e3)),
        (e = Math.max(0, e)),
        10 >= e && e > 0
          ? ((this.timeTextColor = this.textredcolor), (this.isCirRed = !0))
          : ((this.timeTextColor = this.textwhitecolor), (this.isCirRed = !1)),
        e >= 1
          ? (this.time = e)
          : ((this.timeTextColor = this.textredcolor),
            (this.isCirRed = !0),
            (this.time = 0));
    }),
    (e.prototype.tick = function (t, e) {
      (this.maxTime = t), this.showTime(e);
    }),
    (e.prototype.dispose = function () {
      this.mccounter.dispose(),
        (this.mccounter = null),
        (this.txtTime = null),
        (this.tipstxt = null),
        (this.textredcolor = null),
        (this.textwhitecolor = null),
        (this.countMiwhitecolor = null),
        (this.timeTextColor = null),
        (this.tipsTextSize = null),
        (this.tipsTextColor = null),
        (this.tipsText = null),
        (this.txtGroupTop = null),
        (this.countStopAtTime = null),
        (this.maxTime = null),
        (this.cirvisible = null),
        (this.bgvisible = null),
        this.cirFilters && (this.cirFilters.length = 0),
        (this.cirFilters = null),
        (this.redFilter = null);
    }),
    e
  );
})(eui.Component);
__reflect(CountClock.prototype, "CountClock", [
  "eui.UIComponent",
  "egret.DisplayObject",
]);
var DZButton = (function (t) {
  function e() {
    return t.call(this) || this;
  }
  return (
    __extends(e, t),
    Object.defineProperty(e.prototype, "touchEnabled", {
      get: function () {
        return egret.superGetter(e, this, "touchEnabled");
      },
      set: function (t) {
        var i = this;
        this.skin &&
          this.skin.states &&
          this.skin.states.every(function (e, a, n) {
            return "disabled" == e.name && t
              ? ((i.currentState = "up"), !1)
              : "up" != e.name || t
                ? !0
                : ((i.currentState = "disabled"), !1);
          }, this),
          egret.superSetter(e, this, "touchEnabled", t),
          ShareUtils.setGrayFilter(this, !t);
      },
      enumerable: !0,
      configurable: !0,
    }),
    e
  );
})(eui.Button);
__reflect(DZButton.prototype, "DZButton");
var DZHSlider = (function (t) {
  function e() {
    return t.call(this) || this;
  }
  return (
    __extends(e, t),
    (e.prototype.dispose = function () {
      this.thumb && (this.thumb = null);
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this);
    }),
    (e.prototype.onTouchThumbBegin = function () {}),
    (e.prototype.onTouchThumbEnd = function () {}),
    (e.prototype.onTapThumb = function () {}),
    (e.prototype.updateSkinDisplayList = function () {
      t.prototype.updateSkinDisplayList.call(this),
        (this.trackHighlight.width += 40);
    }),
    e
  );
})(eui.HSlider);
__reflect(DZHSlider.prototype, "DZHSlider");
var DZTextInput = (function (t) {
  function e() {
    return t.call(this) || this;
  }
  return (
    __extends(e, t),
    (e.prototype.partAdded = function (e, i) {
      t.prototype.partAdded.call(this, e, i);
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this),
        this.cleargroup &&
          ButtonAction.addtap(this.cleargroup, this.onClear, this);
    }),
    (e.prototype.onClear = function (t) {
      this.text = "";
    }),
    (e.prototype.dispose = function () {
      this.parent && this.parent.removeChild(this),
        this.cleargroup &&
          (ButtonAction.removetap(this.cleargroup, this.onClear, this),
          (this.cleargroup = null)),
        this.removeChildren();
    }),
    e
  );
})(eui.TextInput);
__reflect(DZTextInput.prototype, "DZTextInput", [
  "eui.UIComponent",
  "egret.DisplayObject",
]);
var DZToggleSwitch = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (e.yesLabel = "ON"), (e.noLabel = "OFF"), e;
  }
  return (
    __extends(e, t),
    Object.defineProperty(e.prototype, "touchEnabled", {
      set: function (t) {
        egret.superSetter(e, this, "touchEnabled", t),
          ShareUtils.setGrayFilter(this, !t);
      },
      enumerable: !0,
      configurable: !0,
    }),
    (e.prototype.updateLabel = function () {
      this.yesLab && (this.yesLab.text = LangUtils.LANG_MAP.GAME_NOCOM_NO),
        this.NoLab && (this.NoLab.text = LangUtils.LANG_MAP.BACCARAT_NOCOMM);
    }),
    e
  );
})(eui.ToggleSwitch);
__reflect(DZToggleSwitch.prototype, "DZToggleSwitch");
var dzxx;
!(function (t) {
  var e = (function () {
    function e() {}
    return (
      (e.ifStopVideo = function () {
        t.NodeVideo.ifStopVideo();
      }),
      (e.playvideo = function () {
        t.NodeVideo.inst.playvideo();
      }),
      (e.stopvideo = function () {
        t.NodeVideo.inst.stopvideo();
      }),
      (e.refresh = function (e) {
        void 0 === e && (e = null), t.NodeVideo.inst.refresh(e);
      }),
      (e.ifResize = function () {
        t.NodeVideo.ifResize();
      }),
      (e.flv_load = function (e) {
        void 0 === e && (e = null), t.NodeVideo.inst.flv_load(e);
      }),
      (e.getLine = function () {
        return t.NodeVideo.inst.getIndex();
      }),
      (e.switchZoom = function () {
        return t.NodeVideo.inst.switchZoom();
      }),
      (e.getZoom = function () {
        return t.NodeVideo.inst.getZoom();
      }),
      (e.lunpanZoom = function (e) {
        return void 0 === e && (e = !0), t.NodeVideo.inst.lunpanZoom(!0);
      }),
      e
    );
  })();
  (t.LiveVideo = e), __reflect(e.prototype, "dzxx.LiveVideo");
})(dzxx || (dzxx = {}));
var dzxx;
!(function (t) {
  var e = (function () {
    function e() {
      (this.index = 0),
        (this.lastStrength = 1),
        (this.errorStart = -1),
        (this.duotaiZoom = !1),
        (this.zoom = !1),
        (this.videoType = 0),
        (this.lunpanBet = !0);
    }
    return (
      Object.defineProperty(e, "inst", {
        get: function () {
          return (
            t.NodeVideo._inst ||
              ((t.NodeVideo._inst = new t.NodeVideo()),
              t.NodeVideo._inst.init()),
            t.NodeVideo._inst
          );
        },
        enumerable: !0,
        configurable: !0,
      }),
      (e.prototype.init = function () {
        window.addEventListener("message", function (t) {
          if (t.data) {
            "st,N" == t.data && (e._inst.errorStart = -2);
            var i = e._inst.lastStrength;
            if (
              ("sig,4" == t.data && (i = 4),
              "sig,3" == t.data && (i = 3),
              "sig,2" == t.data && (i = 2),
              "sig,1" == t.data && (i = 1),
              e._inst.lastStrength != i &&
                ((e._inst.lastStrength = i),
                EventManager.getIns().dispatchEventWith(
                  "VIDEO_SIGNAL_STRENGTH",
                  !1,
                  i,
                )),
              "st,E" == t.data)
            ) {
              if (-2 == e._inst.errorStart)
                return e._inst.errorStart++, void e._inst.refresh();
              if (-1 == e._inst.errorStart) e._inst.errorStart = e._inst.index;
              else if (e._inst.errorStart == e._inst.index) return;
              e._inst.index++,
                e._inst.refresh(),
                EventManager.getIns().dispatchEventWith(
                  "VIDEO_LINE",
                  !1,
                  e._inst.index,
                );
            }
          }
        }),
          window.shared_cdn
            ? (this.flvUrl = window.shared_cdn + "/player/?url=")
            : (this.flvUrl = DZUtils.getRootURL() + "/player/?url="),
          window.default_flv_domain &&
            (this.flvUrl = window.default_flv_domain + "/player/?url=");
      }),
      (e.ifStopVideo = function () {
        t.NodeVideo._inst && t.NodeVideo._inst.stopvideo();
      }),
      (e.ifResize = function () {
        t.NodeVideo._inst && t.NodeVideo._inst.resize();
      }),
      (e.prototype.flv_load = function (t) {
        if ((void 0 === t && (t = null), null == t)) {
          if (!DataManager.curTable) return;
          this.load(DataManager.curTable.videoline);
        } else t && this.load(t.videoline);
      }),
      (e.prototype.switchZoom = function () {
        return DataManager.is_goto_duotai
          ? ((this.duotaiZoom = !this.duotaiZoom),
            this.resize(),
            this.duotaiZoom)
          : ((this.zoom = !this.zoom), this.resize(), this.zoom);
      }),
      (e.prototype.lunpanZoom = function (t) {
        (this.lunpanBet = t),
          this.zoom ||
            (t
              ? this.change_size(900, 500, 0, -31)
              : this.change_size(1296, 720, -210, -35));
      }),
      (e.prototype.getZoom = function () {
        return DataManager.is_goto_duotai ? this.duotaiZoom : this.zoom;
      }),
      (e.prototype.getIndex = function () {
        return this.index;
      }),
      (e.prototype.refresh = function (t) {
        void 0 === t && (t = null),
          null != t && (this.index = t),
          this.load(this.lastUrl);
      }),
      (e.prototype.playvideo = function () {
        var t;
        DataManager.curTable &&
          ((t = DataManager.curTable.videoline),
          DataManager.curTable.videoline.indexOf("h2") > 0
            ? (this.videoType = 2)
            : DataManager.curTable.videoline.indexOf("hr") > 0
              ? (this.videoType = 1)
              : (this.videoType = 0),
          this.load(t));
      }),
      (e.prototype.load = function (t) {
        if (DataManager.videoaddresses) {
          if (
            (DataManager.videoaddresses.length <= this.index &&
              (this.index = 0),
            0 == t.indexOf("http"))
          ) {
            var e = t.substring(9).indexOf("/") + 9,
              i = t.substring(0, e);
            if (((t = t.substring(e)), t != this.lastUrl))
              for (var a = 0; a < DataManager.videoaddresses.length; a++)
                DataManager.videoaddresses[a] == i && (this.index = a);
          }
          var n = this.index;
          (this.lastUrl = t), this.play(DataManager.videoaddresses[n] + t);
        } else (this.index = 0), (this.lastUrl = t), this.play(t);
        this.resize();
      }),
      (e.prototype.stopvideo = function () {
        var t = document.getElementById("divVideo");
        t.innerHTML = "";
      }),
      (e.prototype.resize = function () {
        if (DataManager.is_goto_duotai)
          this.duotaiZoom
            ? this.change_size(1400, 1300, -300, -550)
            : this.change_size(900, 450, -70, 76);
        else if (this.zoom)
          switch (this.videoType) {
            case 2:
              this.change_size(2200, 1300, -730, -520);
              break;
            case 1:
              this.change_size(1296, 720, -210, -35);
              break;
            default:
              DataManager.GAME_TYPE_NIUNIU == DataManager.curTable.gameType
                ? this.change_size(2e3, 1200, -625, -520)
                : DataManager.GAME_TYPE_SICBO == DataManager.curTable.gameType
                  ? this.lastUrl.indexOf("/wa/") >= 0
                    ? this.change_size(1280, 720, -150, -150)
                    : this.change_size(1296, 720, -440, -55)
                  : this.lastUrl.indexOf("/ge/") >= 0
                    ? this.change_size(2250, 1350, -730, -450)
                    : this.change_size(2e3, 1200, -640, -480);
          }
        else
          switch (this.videoType) {
            case 2:
              this.change_size(980, 620, -115, -20);
              break;
            case 1:
              this.lunpanBet
                ? this.change_size(900, 500, 0, -31)
                : this.change_size(1296, 720, -210, -35);
              break;
            default:
              DataManager.GAME_TYPE_SICBO == DataManager.curTable.gameType
                ? this.lastUrl.indexOf("/wa/") >= 0
                  ? this.change_size(980, 520, -40, 0)
                  : this.change_size(980, 620, -140, 0)
                : this.lastUrl.indexOf("/ge/") >= 0
                  ? this.change_size(990, 594, -120, 20)
                  : this.change_size(900, 540, -75, 0);
          }
      }),
      (e.prototype.play = function (t) {
        DataManager.curTable &&
          (DataManager.is_goto_duotai
            ? this.start(t, "900", "488")
            : this.start(t, "854", "480"));
      }),
      (e.prototype.start = function (t, e, i) {
        if ((this.stopvideo(), null != t && "" != t)) {
          var a = document.getElementById("divVideo");
          a.innerHTML = "";
          var n = document.createElement("iframe");
          n.setAttribute("src", this.flvUrl + t),
            (n.style.width = "100%"),
            (n.style.height = "100%"),
            (n.style.border = "0"),
            a.appendChild(n);
        }
      }),
      (e.prototype.change_size = function (t, e, i, a) {
        var n = window.innerWidth,
          s = window.innerHeight,
          r = n / 750,
          o = s / 1334,
          h = 1280,
          l = 720,
          g = t / h,
          u = e / l;
        (g *= r), (u *= o);
        var c = document.getElementById("divVideo");
        if (c) {
          var d = -(l - l * u) / 2,
            p = -(h - h * g) / 2,
            _ = i * r,
            b = a * o;
          (_ += p),
            (b += d),
            (c.style.position = "absolute"),
            (c.style["z-index"] = "-1"),
            (c.style.width = "1280px"),
            (c.style.height = "720px"),
            (c.style.transform = "scale3d(" + g + "," + u + ",1)"),
            (c.style.left = _ + "px"),
            (c.style.top = b + "px");
        }
      }),
      e
    );
  })();
  (t.NodeVideo = e), __reflect(e.prototype, "dzxx.NodeVideo");
})(dzxx || (dzxx = {}));
var dzxx;
!(function (t) {
  var e = (function (e) {
    function i() {
      var t = e.call(this) || this;
      return (t.tipskey = ""), (t.percentWidth = t.percentHeight = 100), t;
    }
    return (
      __extends(i, e),
      Object.defineProperty(i, "inst", {
        get: function () {
          return (
            t.PwdUI._inst || (t.PwdUI._inst = new t.PwdUI()), t.PwdUI._inst
          );
        },
        enumerable: !0,
        configurable: !0,
      }),
      (i.prototype.partAdded = function (t, i) {
        e.prototype.partAdded.call(this, t, i);
      }),
      (i.prototype.childrenCreated = function () {
        e.prototype.childrenCreated.call(this),
          ButtonAction.addtap(this.btnbackgroup, this.onBack, this),
          ButtonAction.addtap(this.btnmenugroup, this.onMenu, this),
          ButtonAction.addtap(this.okbtn, this.onOK, this),
          LangUtils.addEventListener(this.changelang, this),
          this.changelang();
      }),
      (i.prototype.changelang = function () {
        (this.lblTitle.text = LangUtils.get("ChangePwdView_txtTitle")),
          (this.oldinput.prompt = LangUtils.get("ChangePwdView_txtOldPwd")),
          (this.newinput.prompt = LangUtils.get("ChangePwdView_txtNewPwd1")),
          (this.newinput2.prompt = LangUtils.get("ChangePwdView_txtNewPwd2")),
          (this.okbtn.radio_pic_up.source =
            "blue_button_1" + DataManager.LANG_TYPE + "_png"),
          (this.okbtn.radio_pic_down.source =
            "blue_button_1" + DataManager.LANG_TYPE + "_png"),
          (this.okbtn.radio_pic_disabled.source =
            "blue_button_1" + DataManager.LANG_TYPE + "_png"),
          this.updatetips();
      }),
      (i.prototype.updatetips = function () {
        this.tipstxt.text = this.tipskey ? LangUtils.get(this.tipskey) : "";
      }),
      (i.prototype.onBack = function () {
        this.dispose();
      }),
      (i.prototype.onMenu = function () {
        MenuView.getIns().showhide();
      }),
      (i.prototype.onOK = function () {
        var t = this,
          e = this.oldinput.text,
          i = this.newinput.text,
          a = this.newinput2.text,
          n = DataManager.MIN_PASS_LEN,
          s = DataManager.MAX_PASS_LEN;
        (this.tipskey = null),
          (i.length < n || a.length < n) &&
            (this.tipskey = "ChangePwdView_txtError_len6"),
          i.length > s || a.length > s
            ? (this.tipskey = "ChangePwdView_txtError_length")
            : i != a
              ? (this.tipskey = "ChangePwdView_txtError_error")
              : /\d/.test(i)
                ? /\D/.test(i) || (this.tipskey = "ChangePwdView_txtError_123")
                : (this.tipskey = "ChangePwdView_txtError_abc"),
          this.updatetips(),
          this.tipskey ||
            HttpPostHandle.pfsend(
              DataManager.PWD_API,
              {
                oldpass: hex_md5(e).toUpperCase(),
                newPass: hex_md5(i).toUpperCase(),
                userName: DataManager.showName,
                type: 3,
                action: "guestureChange",
              },
              function (e) {
                var i = (new DZXML(e), e.children[0].children[0]);
                "0" == i.text
                  ? ((t.oldinput.text = ""),
                    (t.newinput.text = ""),
                    (t.newinput2.text = ""),
                    (t.tipskey = null),
                    t.updatetips(),
                    Alert.show(LangUtils.get("ChangePwdView_SUCCESS")))
                  : "-4" == i.text
                    ? Alert.show("旧密码错误")
                    : Alert.show("网络错误");
              },
              this,
            );
      }),
      (i.prototype.show = function () {
        ShareUtils.main.viewGroup.addChild(this);
      }),
      (i.prototype.dispose = function () {
        (i._inst = null),
          this.parent && this.parent.removeChild(this),
          ButtonAction.removetap(this.btnbackgroup, this.onBack, this),
          ButtonAction.removetap(this.btnmenugroup, this.onMenu, this),
          ButtonAction.removetap(this.okbtn, this.onOK, this),
          LangUtils.removeEventListener(this.changelang, this),
          (this.btnbackgroup = null),
          (this.btnmenugroup = null),
          (this.okbtn = null),
          (this.tipstxt = null),
          (this.oldinput = null),
          (this.newinput = null),
          (this.newinput2 = null),
          this.removeChildren();
      }),
      i
    );
  })(eui.Component);
  (t.PwdUI = e),
    __reflect(e.prototype, "dzxx.PwdUI", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(dzxx || (dzxx = {}));
var dzxx;
!(function (t) {
  var e = (function () {
    function e() {
      (this.soundDict = {}),
        (this.bgmusicEnabled = !0),
        (this.effectsoundEnabled = !0),
        (this.temp_bgmusicEnabled = !0),
        (this.fadeInBGMusicEnabled = !0),
        (this._bgMusicVolume = 1),
        (this._effectVolume = 1),
        (this.soundChanelHash = {});
      try {
        this.enableBGMusic(
          "0" !=
            window.localStorage.getItem(
              t.SoundManager.bgMusicSoundEnabledStorageKey,
            ),
        );
      } catch (e) {}
      try {
        this.enableEffectSound(
          "0" !=
            window.localStorage.getItem(
              t.SoundManager.effectSoundEnabledStorageKey,
            ),
        );
      } catch (e) {}
    }
    return (
      Object.defineProperty(e, "inst", {
        get: function () {
          return e._inst || (e._inst = new e()), e._inst;
        },
        enumerable: !0,
        configurable: !0,
      }),
      (e.onTouchInit = function () {
        i.onTouchInit();
      }),
      (e.prototype.getSoundType = function () {
        switch (DataManager.LANG_TYPE) {
          case DataManager.LANG_SC:
            return e.SOUND_SC;
          case DataManager.LANG_TC:
            return e.SOUND_TC;
          case DataManager.LANG_EN:
            return e.SOUND_EN;
        }
        return e.SOUND_EN;
      }),
      (e.prototype.clearSoundDict = function () {
        for (var t in this.soundDict) delete this.soundDict[t];
      }),
      (e.prototype.getSoundObj = function (t) {
        return this.soundDict[t];
      }),
      Object.defineProperty(e.prototype, "bgSoundObj", {
        get: function () {
          return this.getSoundObj(e.sound_bgmusic);
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(e.prototype, "clickSoundObj", {
        get: function () {
          return this.getSoundObj(e.sound_click);
        },
        enumerable: !0,
        configurable: !0,
      }),
      (e.prototype.enableBGMusic = function (e) {
        this.bgmusicEnabled = this.temp_bgmusicEnabled = e;
        try {
          window.localStorage.setItem(
            t.SoundManager.bgMusicSoundEnabledStorageKey,
            e ? "1" : "0",
          );
        } catch (i) {}
        this.bgSoundObj && (this.bgSoundObj.enabled = e),
          e ? this.playBGMusic(!0) : this.stopBGMusic(!1);
      }),
      (e.prototype.enableEffectSound = function (e) {
        this.effectsoundEnabled = e;
        try {
          window.localStorage.setItem(
            t.SoundManager.effectSoundEnabledStorageKey,
            e ? "1" : "0",
          );
        } catch (i) {}
        this.clickSoundObj && (this.clickSoundObj.enabled = e),
          e || this.stopSoundChanel();
      }),
      (e.prototype.playBGMusic = function (i) {
        void 0 === i && (i = !0), (this.fadeInBGMusicEnabled = i);
        var a = this.bgSoundObj;
        a
          ? i
            ? a.fadeIn()
            : a.play()
          : (t.SoundLoadObj.canh5audio ||
              ShareUtils.game_stage.addEventListener(
                egret.TouchEvent.TOUCH_BEGIN,
                this.onStageTouchTryPlayMusic,
                this,
              ),
            (a = this.loadSound(e.sound_bgmusic))),
          (a.loopTime = 0),
          (this.bgMusicVolume = this._bgMusicVolume),
          (a.enabled = this.bgmusicEnabled);
      }),
      (e.prototype.onStageTouchTryPlayMusic = function () {
        var t = this.bgSoundObj;
        t &&
          (i.canh5audio || t.isLoaded) &&
          (ShareUtils.game_stage.removeEventListener(
            egret.TouchEvent.TOUCH_BEGIN,
            this.onStageTouchTryPlayMusic,
            this,
          ),
          DataManager.showName && this.playBGMusic(this.fadeInBGMusicEnabled));
      }),
      (e.prototype.stopBGMusic = function (t) {
        void 0 === t && (t = !0);
        var e = this.bgSoundObj;
        e && (t ? e.fadeOut() : e.stop());
      }),
      Object.defineProperty(e.prototype, "bgMusicVolume", {
        get: function () {
          return this._bgMusicVolume;
        },
        set: function (t) {
          this._bgMusicVolume = t;
          var e = this.bgSoundObj;
          e && (e.vol = t);
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(e.prototype, "effectVolume", {
        get: function () {
          return this._effectVolume;
        },
        set: function (t) {
          this._effectVolume = t;
          var e = this.clickSoundObj;
          e && (e.vol = t);
        },
        enumerable: !0,
        configurable: !0,
      }),
      (e.prototype.addClickEffect = function (t) {
        t.addEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.onTapPlaySoundEff,
          this,
        );
      }),
      (e.prototype.onTapPlaySoundEff = function (t) {
        this.playClickEffect();
      }),
      (e.prototype.loadSound = function (t) {
        "" != DataManager.RES_HTTP && (t = DataManager.RES_HTTP + t);
        var e = this.getSoundObj(t);
        return e || (e = this.soundDict[t] = new i(t)), e;
      }),
      (e.prototype.loadBGMusic = function () {
        this.loadSound(e.sound_bgmusic);
      }),
      (e.prototype.loadClickSound = function () {
        this.loadSound(e.sound_click);
      }),
      (e.prototype.playClickEffect = function () {
        var t = this.clickSoundObj;
        t
          ? ((t.enabled = this.effectsoundEnabled),
            t.play(),
            (this.effectVolume = this._effectVolume))
          : this.loadSound(e.sound_click);
      }),
      (e.prototype.playSound = function (e) {
        var i = this.loadSound(e);
        (i.enabled = t.SoundManager.inst.effectsoundEnabled), i.play();
      }),
      (e.prototype.playBetting = function (t) {
        if (this.effectsoundEnabled) {
          var i = t + this.getSoundType() + e.soundType;
          this.playSoundChanel(i);
        }
      }),
      (e.prototype.playBankerPlayerPoint = function (t, i) {
        if (this.effectsoundEnabled) {
          var a = t + i + this.getSoundType() + e.soundType;
          this.playSoundChanel(a);
        }
      }),
      (e.prototype.playBankerPlayerDrawcard = function (t) {
        if (this.effectsoundEnabled) {
          var i = t + this.getSoundType() + e.soundType;
          this.playSoundChanel(i);
        }
      }),
      (e.prototype.playBankerPlayerWin = function (t) {
        if (this.effectsoundEnabled) {
          var i = t + this.getSoundType() + e.soundType;
          this.playSoundChanel(i);
        }
      }),
      (e.prototype.playDragonTigerPoint = function (t, i) {
        if (this.effectsoundEnabled) {
          var a;
          0 >= i ||
            i > 13 ||
            ((a =
              1 == i
                ? t + "hasAce" + this.getSoundType() + e.soundType
                : 11 == i
                  ? t + "hasJack" + this.getSoundType() + e.soundType
                  : 12 == i
                    ? t + "hasQueen" + this.getSoundType() + e.soundType
                    : 13 == i
                      ? t + "hasKing" + this.getSoundType() + e.soundType
                      : t + i + "points" + this.getSoundType() + e.soundType),
            this.playSoundChanel(a));
        }
      }),
      (e.prototype.playDragonTigerWin = function (t) {
        if (this.effectsoundEnabled) {
          var i = t + this.getSoundType() + e.soundType;
          this.playSoundChanel(i);
        }
      }),
      (e.prototype.playSoundChanel = function (i) {
        var a = this.loadSound(i);
        (a.enabled = t.SoundManager.inst.effectsoundEnabled),
          (a.loopTime = 1),
          (a.vol = e.chanel_vol),
          a.play(),
          (this.soundChanelHash[i] = a);
      }),
      (e.prototype.stopSoundChanel = function () {
        for (var t in this.soundChanelHash) {
          var e = this.soundChanelHash[t];
          e.stop();
        }
        this.soundChanelHash = {};
      }),
      (e.timeAlertall = 10),
      (e.sound_bgmusic = "resource/sounds/common/bgmusic.mp3"),
      (e.sound_click = "resource/sounds/common/click.mp3"),
      (e.Click_CoinBtn = "resource/sounds/sounds/ClickCoinBtn.mp3"),
      (e.Bet_success = "resource/sounds/sounds/BetSuccess.mp3"),
      (e.Win_Game = "resource/sounds/sounds/WinGame.mp3"),
      (e.time_alert = "resource/sounds/sounds/TimerAlert.mp3"),
      (e.soundType = ".mp3"),
      (e.bettingStart = "resource/sounds/sounds/bettingStarted"),
      (e.bettingStop = "resource/sounds/sounds/bettingStopped"),
      (e.Banker_point = "resource/sounds/BankerPlayer/sounds/Banker"),
      (e.Player_point = "resource/sounds/BankerPlayer/sounds/Player"),
      (e.Banker_drawcard =
        "resource/sounds/BankerPlayer/sounds/Bankerdrawcard"),
      (e.Player_drawcard =
        "resource/sounds/BankerPlayer/sounds/Playerdrawcard"),
      (e.Banker_win = "resource/sounds/BankerPlayer/sounds/BankerWin"),
      (e.Player_win = "resource/sounds/BankerPlayer/sounds/PlayerWin"),
      (e.DragonTiger = "resource/sounds/DragonTiger/sounds/DragonTiger"),
      (e.Dragon_point = "resource/sounds/DragonTiger/sounds/Dragon"),
      (e.Tiger_point = "resource/sounds/DragonTiger/sounds/Tiger"),
      (e.Dragon_win = "resource/sounds/DragonTiger/sounds/DragonWin"),
      (e.Tiger_win = "resource/sounds/DragonTiger/sounds/TigerWin"),
      (e.Tile_win = "resource/sounds/DragonTiger/sounds/TileWin"),
      (e.chanel_vol = 1),
      (e.SOUND_SC = "_M"),
      (e.SOUND_TC = "_M"),
      (e.SOUND_EN = "_E"),
      (e.bgMusicSoundEnabledStorageKey = "dzxx.SoundManager_bgMusicEnabled"),
      (e.effectSoundEnabledStorageKey = "dzxx.SoundManager_effectEnabled"),
      e
    );
  })();
  (t.SoundManager = e), __reflect(e.prototype, "dzxx.SoundManager");
  var i = (function () {
    function t(t) {
      (this.loopTime = 1),
        (this.looptimeout = 1e4),
        (this.isLoaded = !1),
        (this.isPlaying = !1),
        (this.looptimeoutid = 0),
        (this.lastvol = 0),
        (this._vol = 1),
        (this._enabled = !0),
        t && this.load(t);
    }
    return (
      Object.defineProperty(t, "canh5audio", {
        get: function () {
          return null != window.Audio;
        },
        enumerable: !0,
        configurable: !0,
      }),
      (t.onTouchInit = function () {
        if (t.canh5audio)
          for (; t.allaudios.length < t.audiolen; ) {
            var e = document.createElement("audio");
            (e.onerror = function (t) {
              DebugText.appendText("audio.onerror: " + t);
            }),
              t.allaudios.push(e),
              t.freeaudios.push(e);
            var i = t.allaudios.length - 1;
            (e.src = "resource/sounds/common/gq_point_" + i + ".mp3"), e.play();
          }
      }),
      (t.addtofree = function (e) {
        var i = t.freeaudios.indexOf(e);
        -1 == i && t.freeaudios.push(e);
      }),
      (t.prototype.load = function (e) {
        (this.url = e),
          t.canh5audio ||
            this.sound ||
            ((this.sound = new egret.Sound()),
            this.sound.addEventListener(
              egret.Event.COMPLETE,
              this.onLoaded,
              this,
            ),
            this.sound.load(e));
      }),
      (t.prototype.onLoaded = function () {
        this.sound.removeEventListener(
          egret.Event.COMPLETE,
          this.onLoaded,
          this,
        ),
          (this.isLoaded = !0);
      }),
      (t.prototype.play = function () {
        var e = this;
        if (t.canh5audio) {
          if (
            (clearTimeout(this.looptimeoutid),
            this.audio || (this.audio = t.freeaudios.shift()),
            this.audio)
          ) {
            try {
              this.audio.src = this.url;
            } catch (i) {}
            this.audio.src = this.url;
            var a = this.audio.play();
            a &&
              a["catch"] &&
              a["catch"](function (t) {
                DebugText.appendText("audio err catch: " + t);
              }),
              (this.isPlaying = !0),
              this.loopTime <= 0
                ? (this.audio.onended = function () {
                    e.stop(),
                      (e.looptimeoutid = setTimeout(function () {
                        e.play();
                      }, e.looptimeout));
                  })
                : t.addtofree(this.audio),
              (this.enabled = this._enabled);
          }
        } else
          this.isLoaded &&
            (this.channel
              ? egret.Tween.removeTweens(this.channel)
              : ((this.isPlaying = !0),
                (this.channel = this.sound.play(0, this.loopTime)),
                this.loopTime > 0 &&
                  this.channel.addEventListener(
                    egret.Event.SOUND_COMPLETE,
                    this.onOver,
                    this,
                  )),
            (this.channel.volume = this._vol),
            (this.lastvol = this._vol),
            (this.enabled = this._enabled));
      }),
      (t.prototype.onOver = function () {
        this.stop();
      }),
      (t.prototype.fadeIn = function () {
        var e = this;
        return t.canh5audio
          ? void this.play()
          : (this.channel || this.play(),
            void (
              this.channel &&
              (egret.Tween.removeTweens(this.channel),
              this._enabled &&
                ((this.channel.volume = Math.min(
                  this.channel.volume,
                  this.lastvol,
                )),
                egret.Tween.get(this.channel, {
                  onChange: this.onFadeVolUpdate,
                  onChangeObj: this,
                })
                  .to(
                    {
                      volume: this._vol,
                    },
                    3e3,
                  )
                  .call(function () {
                    e.onFadeInOK();
                  })))
            ));
      }),
      (t.prototype.onFadeVolUpdate = function () {
        this.channel && (this.lastvol = this.channel.volume);
      }),
      (t.prototype.onFadeInOK = function () {}),
      (t.prototype.fadeOut = function () {
        var e = this;
        return t.canh5audio
          ? void this.stop()
          : void (
              this.channel &&
              (egret.Tween.removeTweens(this.channel),
              this._enabled &&
                ((this.channel.volume = Math.min(
                  this.channel.volume,
                  this.lastvol,
                )),
                egret.Tween.get(this.channel, {
                  onChange: this.onFadeVolUpdate,
                  onChangeObj: this,
                })
                  .to(
                    {
                      volume: 0,
                    },
                    3e3,
                  )
                  .call(function () {
                    e.onFadeOutOK();
                  })))
            );
      }),
      (t.prototype.onFadeOutOK = function () {
        this.stop();
      }),
      (t.prototype.stop = function () {
        if (t.canh5audio) {
          if ((clearTimeout(this.looptimeoutid), this.audio)) {
            try {
              this.audio.pause();
            } catch (e) {}
            this.loopTime > 0 && (this.audio = null);
          }
          return void (this.isPlaying = !1);
        }
        this.channel &&
          (this.isPlaying && (this.channel.stop(), (this.isPlaying = !1)),
          egret.Tween.removeTweens(this.channel),
          this.channel.removeEventListener(
            egret.Event.SOUND_COMPLETE,
            this.onOver,
            this,
          ),
          (this.channel = null)),
          (this.lastvol = 0);
      }),
      Object.defineProperty(t.prototype, "vol", {
        get: function () {
          return this._vol;
        },
        set: function (t) {
          (this._vol = t),
            (this.channel || this.audio) && (this.enabled = this._enabled);
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(t.prototype, "enabled", {
        get: function () {
          return this._enabled;
        },
        set: function (t) {
          (this._enabled = t),
            this.channel &&
              (this.channel.volume = t && Main.isOnActivity ? this._vol : 0),
            this.audio &&
              (this.audio.volume = t && Main.isOnActivity ? this._vol : 0),
            t || this.stop();
        },
        enumerable: !0,
        configurable: !0,
      }),
      (t.allaudios = []),
      (t.freeaudios = []),
      (t.audiolen = 10),
      t
    );
  })();
  (t.SoundLoadObj = i), __reflect(i.prototype, "dzxx.SoundLoadObj");
})(dzxx || (dzxx = {}));
var dzxx;
!(function (t) {
  var e = (function (t) {
    function e() {
      var e = t.call(this) || this;
      return (e.line = 1), (e.source = 0), e;
    }
    return (
      __extends(e, t),
      (e.prototype.partAdded = function (e, i) {
        t.prototype.partAdded.call(this, e, i);
      }),
      (e.prototype.childrenCreated = function () {
        t.prototype.childrenCreated.call(this),
          this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.clicked, this);
      }),
      (e.prototype.$onRemoveFromStage = function () {
        t.prototype.$onRemoveFromStage.call(this), this.childrenRemoved();
      }),
      (e.prototype.childrenRemoved = function () {
        this.removeEventListener(
          egret.TouchEvent.TOUCH_TAP,
          this.clicked,
          this,
        );
      }),
      Object.defineProperty(e.prototype, "index", {
        set: function (t) {
          (this.source = t), (this.line = t + 1);
        },
        enumerable: !0,
        configurable: !0,
      }),
      (e.prototype.clicked = function () {
        EventManager.getIns().dispatchEventWith("VIDEO_LINE", !1, this.source);
      }),
      e
    );
  })(eui.Component);
  (t.VideoLine = e),
    __reflect(e.prototype, "dzxx.VideoLine", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(dzxx || (dzxx = {}));
var dzxx;
!(function (t) {
  var e = (function (e) {
    function i() {
      var t = e.call(this) || this;
      return (t.arr = []), t;
    }
    return (
      __extends(i, e),
      (i.prototype.partAdded = function (t, i) {
        e.prototype.partAdded.call(this, t, i);
      }),
      (i.prototype.childrenCreated = function () {
        e.prototype.childrenCreated.call(this), this.init();
      }),
      (i.prototype.$onRemoveFromStage = function () {
        e.prototype.$onRemoveFromStage.call(this),
          this.video_refresh.removeEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onVideoRefresh,
            this,
          ),
          EventManager.getIns().removeEventListener(
            "VIDEO_SIGNAL_STRENGTH",
            this.onVideoStrengthChanged,
            this,
          ),
          EventManager.getIns().removeEventListener(
            "VIDEO_LINE",
            this.changeLine,
            this,
          );
      }),
      (i.prototype.onVideoStrengthChanged = function (t) {
        this.video_signal.source = "line_signal_" + t.data + "_png";
      }),
      (i.prototype.changeLine = function (e) {
        if (this.lastLine != e.data)
          for (var i = 0; i < this.arr.length; i++)
            e.data == i
              ? ((this.lastLine = i),
                t.LiveVideo.refresh(i),
                (this.arr[i].currentState = "disabled"))
              : (this.arr[i].currentState = "normal");
      }),
      (i.prototype.onVideoRefresh = function () {
        t.LiveVideo.refresh();
      }),
      (i.prototype.init = function () {
        if (
          (this.video_refresh.addEventListener(
            egret.TouchEvent.TOUCH_TAP,
            this.onVideoRefresh,
            this,
          ),
          EventManager.getIns().addEventListener(
            "VIDEO_SIGNAL_STRENGTH",
            this.onVideoStrengthChanged,
            this,
          ),
          EventManager.getIns().addEventListener(
            "VIDEO_LINE",
            this.changeLine,
            this,
          ),
          this.video_line_group.removeChildren(),
          this.arr.length > 0)
        )
          for (var e = 0; e < this.arr.length; e++)
            this.arr[e].childrenRemoved();
        this.arr = [];
        var i = 1;
        DataManager.videoaddresses && (i = DataManager.videoaddresses.length);
        for (var e = 0; i > e; e++) {
          var a = new t.VideoLine();
          t.LiveVideo.getLine() == e
            ? ((this.lastLine = e), (a.currentState = "disabled"))
            : (a.currentState = "normal"),
            (a.index = e),
            this.arr.push(a),
            this.video_line_group.addChild(a);
        }
      }),
      i
    );
  })(eui.Component);
  (t.VideoSwitchLine = e),
    __reflect(e.prototype, "dzxx.VideoSwitchLine", [
      "eui.UIComponent",
      "egret.DisplayObject",
    ]);
})(dzxx || (dzxx = {}));
var dzxx;
!(function (t) {
  var e = (function () {
    function t(t, e) {
      if (1 > t || 1 > e)
        throw new Error(
          "Conversion error: string contains codepoint outside of byte range",
        );
      (this.m_w = t),
        (this.m_h = e),
        (this.m_a = []),
        (this.m_a.length = this.m_w * this.m_h),
        this.fill(null);
    }
    return (
      Object.defineProperty(t.prototype, "mapWidth", {
        get: function () {
          return this.m_w;
        },
        set: function (t) {
          this.resize(t, this.m_h);
        },
        enumerable: !0,
        configurable: !0,
      }),
      Object.defineProperty(t.prototype, "mapHeight", {
        get: function () {
          return this.m_h;
        },
        set: function (t) {
          this.resize(this.m_w, t);
        },
        enumerable: !0,
        configurable: !0,
      }),
      (t.prototype.getData = function (t, e) {
        return this.m_a[e * this.m_w + t];
      }),
      (t.prototype.setData = function (t, e, i) {
        this.m_a[e * this.m_w + t] = i;
      }),
      (t.prototype.getRow = function (t) {
        if (0 > t || t > this.m_h) throw new Error("查询的行超出索引");
        var e = t * this.m_w;
        return this.m_a.slice(e, e + this.m_w);
      }),
      (t.prototype.setRow = function (t, e) {
        if (0 > t || t > this.m_h) throw new Error("修改的行超出索引");
        for (var i = t * this.m_w, a = 0; a < this.m_w; )
          (this.m_a[i + a] = e[a]), ++a;
      }),
      (t.prototype.getCol = function (t) {
        if (0 > t || t > this.m_w) throw new Error("查询的列超出索引");
        for (var e = [], i = 0; i < this.m_h; )
          (e[i] = this.m_a[i * this.m_w + t]), ++i;
        return e;
      }),
      (t.prototype.setCol = function (t, e) {
        if (0 > t || t > this.m_h) throw new Error("修改的列超出索引");
        for (var i = 0; i < this.m_h; )
          (this.m_a[i * this.m_w + t] = e[i]), ++i;
      }),
      (t.prototype.shiftLeft = function () {
        if (1 != this.m_w)
          for (var t, e = 0, i = this.m_w - 1; e < this.m_h; ++e)
            (t = e * this.m_w + i),
              this.m_a.splice(t, 0, this.m_a.splice(t - i, 1));
      }),
      (t.prototype.shiftRight = function () {
        if (1 != this.m_w)
          for (var t, e = 0, i = this.m_w - 1; e < this.m_h; ++e)
            (t = e * this.m_w + i),
              this.m_a.splice(t - i, 0, this.m_a.splice(t, 1));
      }),
      (t.prototype.shiftUp = function () {
        1 != this.m_h &&
          ((this.m_a = this.m_a.concat(this.m_a.slice(0, this.m_w))),
          this.m_a.splice(0, this.m_w));
      }),
      (t.prototype.shiftDown = function () {
        if (1 != this.m_h) {
          var t = (this.m_h - 1) * this.m_w;
          (this.m_a = this.m_a.slice(t, t + this.m_w).concat(this.m_a)),
            this.m_a.splice(this.m_h * this.m_w, this.m_w);
        }
      }),
      (t.prototype.appendRow = function (t) {
        (t.length = this.m_w), (this.m_a = this.m_a.concat(t)), ++this.m_h;
      }),
      (t.prototype.prependRow = function (t) {
        (t.length = this.m_w), (this.m_a = t.concat(this.m_a)), ++this.m_h;
      }),
      (t.prototype.appendCol = function (t) {
        t.length = this.m_h;
        for (var e = 0; e < this.m_h; ++e)
          this.m_a.splice(e * this.m_w + this.m_w + e, 0, t[e]);
        ++this.m_w;
      }),
      (t.prototype.prependCol = function (t) {
        t.length = this.m_h;
        for (var e = 0; e < this.m_h; ++e)
          this.m_a.splice(e * this.m_w + e, 0, t[e]);
        ++this.m_w;
      }),
      (t.prototype.transpose = function () {
        for (var t = this.m_a.concat(), e = 0, i = 0; i < this.m_h; ++i) {
          for (; e < this.m_w; ++e)
            this.m_a[e * this.m_w + i] = t[i * this.m_w + e];
          e = 0;
        }
      }),
      (t.prototype.getArray = function () {
        return this.m_a;
      }),
      (t.prototype.contains = function (t) {
        for (var e = this.size(), i = 0; e > i; ++i)
          if (this.m_a[i] === t) return !0;
        return !1;
      }),
      (t.prototype.clear = function () {
        (this.m_a = []), (this.m_a.length = this.size());
      }),
      (t.prototype.getIterator = function () {
        return new i(this);
      }),
      (t.prototype.size = function () {
        return this.m_w * this.m_h;
      }),
      (t.prototype.isEmpty = function () {
        return !1;
      }),
      (t.prototype.toArray = function () {
        var t = this.m_a.concat(),
          e = this.size();
        return t.length > e && (t.length = e), t;
      }),
      (t.prototype.toString = function () {
        return (
          "[Map2D, width=" + this.mapWidth + ", height=" + this.mapHeight + "]"
        );
      }),
      (t.prototype.dump = function () {
        for (var t, e, i = "TdMap2D\n{", a = 0, n = 0; n < this.m_h; ++n) {
          for (i += "\n	", t = n * this.m_w; a < this.m_w; ++a)
            (e = this.m_a[t + a]), (i += "[" + (void 0 != e ? e : "?") + "]");
          a = 0;
        }
        return (i += "\n}");
      }),
      (t.prototype.fill = function (t) {
        var e = this.m_w * this.m_h,
          i = 0;
        if (t instanceof Object)
          for (; e > i; ) (this.m_a[i] = Object.create(t.prototype)), ++i;
        else for (; e > i; ) (this.m_a[i] = t), ++i;
      }),
      (t.prototype.resize = function (t, e) {
        if (1 > t || 1 > e) throw new Error("TdMap2D大小不正确");
        var i = this.m_a.concat();
        (this.m_a.length = 0), (this.m_a.length = t * e);
        for (
          var a,
            n,
            s = t < this.m_w ? t : this.m_w,
            r = e < this.m_h ? e : this.m_h,
            o = 0,
            h = 0;
          r > h;
          ++h
        ) {
          for (a = h * t, n = h * this.m_w; s > o; ++o)
            this.m_a[a + o] = i[n + o];
          o = 0;
        }
        (this.m_w = t), (this.m_h = e);
      }),
      t
    );
  })();
  (t.Map2D = e), __reflect(e.prototype, "dzxx.Map2D", ["dzxx.Collection"]);
  var i = (function () {
    function t(t) {
      (this.m_a2 = t), (this.m_xCursor = this.m_yCursor = 0);
    }
    return (
      Object.defineProperty(t.prototype, "data", {
        get: function () {
          return this.m_a2.getData(this.m_xCursor, this.m_yCursor);
        },
        set: function (t) {
          this.m_a2.setData(this.m_xCursor, this.m_yCursor, t);
        },
        enumerable: !0,
        configurable: !0,
      }),
      (t.prototype.start = function () {
        this.m_xCursor = this.m_yCursor = 0;
      }),
      (t.prototype.hasNext = function () {
        return (
          this.m_yCursor * this.m_a2.mapWidth + this.m_xCursor <
          this.m_a2.size()
        );
      }),
      (t.prototype.next = function () {
        var t = this.data;
        return (
          ++this.m_xCursor == this.m_a2.mapWidth &&
            (this.m_yCursor++, (this.m_xCursor = 0)),
          t
        );
      }),
      t
    );
  })();
  (t.Map2DIterator = i),
    __reflect(i.prototype, "dzxx.Map2DIterator", ["dzxx.Iterator"]);
})(dzxx || (dzxx = {}));
var MiPaiArrowEffect = (function (t) {
  function e() {
    var e = t.call(this) || this;
    return (e._playing = !1), e;
  }
  return (
    __extends(e, t),
    (e.prototype.partAdded = function (e, i) {
      t.prototype.partAdded.call(this, e, i);
    }),
    (e.prototype.childrenCreated = function () {
      t.prototype.childrenCreated.call(this), (this.playing = this._playing);
    }),
    (e.prototype.onplayok = function () {
      this.stage && this.main.play(0);
    }),
    Object.defineProperty(e.prototype, "playing", {
      get: function () {
        return this._playing;
      },
      set: function (t) {
        (this._playing = t),
          this.main &&
            (this.main.removeEventListener(
              egret.Event.COMPLETE,
              this.onplayok,
              this,
            ),
            this.main.stop(),
            t &&
              (this.main.addEventListener(
                egret.Event.COMPLETE,
                this.onplayok,
                this,
              ),
              this.main.play(0)));
      },
      enumerable: !0,
      configurable: !0,
    }),
    e
  );
})(eui.Component);
__reflect(MiPaiArrowEffect.prototype, "MiPaiArrowEffect", [
  "eui.UIComponent",
  "egret.DisplayObject",
]);
